#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Proj_HomingProjectile

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Proj_ItemTemplate_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass Proj_HomingProjectile.Proj_HomingProjectile_C
// 0x0018 (0x0738 - 0x0720)
class AProj_HomingProjectile_C final : public AProj_ItemTemplate_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0720(0x0008)(Transient, DuplicateTransient)
	class UStaticMeshComponent*                   SM_HuntingSpirits_Export_v2;                       // 0x0728(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 Actor;                                             // 0x0730(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_Proj_HomingProjectile(int32 EntryPoint);
	void DestroyWhenLockOnDies(class AOrionChar* DeadChar, class AController* Killer, class AActor* DamageCauser);
	void OnCloned(class AActor* InNewInstigator, class AActor* InNewSourceActor, class AOrionProjectile* SourceProjectile, class UOrionProjectileMovementComponent* SourceMovementComponent);
	void OnHitActor(const struct FHitResult& Hit);
	void OnNetSync_SetNewTarget(class AActor* NewTargetActor, const struct FVector& NewSourceLocation, const struct FVector& NewTargetLocation, int32 UserStateID);
	void OnShutdown();
	void ReceiveBeginPlay();
	void UserConstructionScript();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"Proj_HomingProjectile_C">();
	}
	static class AProj_HomingProjectile_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AProj_HomingProjectile_C>();
	}
};
static_assert(alignof(AProj_HomingProjectile_C) == 0x000008, "Wrong alignment on AProj_HomingProjectile_C");
static_assert(sizeof(AProj_HomingProjectile_C) == 0x000738, "Wrong size on AProj_HomingProjectile_C");
static_assert(offsetof(AProj_HomingProjectile_C, UberGraphFrame) == 0x000720, "Member 'AProj_HomingProjectile_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(AProj_HomingProjectile_C, SM_HuntingSpirits_Export_v2) == 0x000728, "Member 'AProj_HomingProjectile_C::SM_HuntingSpirits_Export_v2' has a wrong offset!");
static_assert(offsetof(AProj_HomingProjectile_C, Actor) == 0x000730, "Member 'AProj_HomingProjectile_C::Actor' has a wrong offset!");

}

