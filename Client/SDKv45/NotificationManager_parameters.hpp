#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: NotificationManager

#include "Basic.hpp"

#include "OrionGame_structs.hpp"


namespace SDK::Params
{

// Function NotificationManager.NotificationManager_C.ExecuteUbergraph_NotificationManager
// 0x0020 (0x0020 - 0x0000)
struct NotificationManager_C_ExecuteUbergraph_NotificationManager final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UNotificationContext*                   CallFunc_GetContext_ReturnValue;                   // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(const struct FOrionNotification& Notification)> K2Node_CreateDelegate_OutputDelegate;              // 0x0010(0x0010)(ZeroConstructor, NoDestructor)
};
static_assert(alignof(NotificationManager_C_ExecuteUbergraph_NotificationManager) == 0x000008, "Wrong alignment on NotificationManager_C_ExecuteUbergraph_NotificationManager");
static_assert(sizeof(NotificationManager_C_ExecuteUbergraph_NotificationManager) == 0x000020, "Wrong size on NotificationManager_C_ExecuteUbergraph_NotificationManager");
static_assert(offsetof(NotificationManager_C_ExecuteUbergraph_NotificationManager, EntryPoint) == 0x000000, "Member 'NotificationManager_C_ExecuteUbergraph_NotificationManager::EntryPoint' has a wrong offset!");
static_assert(offsetof(NotificationManager_C_ExecuteUbergraph_NotificationManager, CallFunc_GetContext_ReturnValue) == 0x000008, "Member 'NotificationManager_C_ExecuteUbergraph_NotificationManager::CallFunc_GetContext_ReturnValue' has a wrong offset!");
static_assert(offsetof(NotificationManager_C_ExecuteUbergraph_NotificationManager, K2Node_CreateDelegate_OutputDelegate) == 0x000010, "Member 'NotificationManager_C_ExecuteUbergraph_NotificationManager::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");

// Function NotificationManager.NotificationManager_C.Construct New Notification
// 0x01A0 (0x01A0 - 0x0000)
struct NotificationManager_C_Construct_New_Notification final
{
public:
	struct FOrionNotification                     Notification_Data;                                 // 0x0000(0x0180)(BlueprintVisible, BlueprintReadOnly, Parm)
	class UNotification_C*                        New_Notification;                                  // 0x0180(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x0188(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UNotification_C*                        CallFunc_Create_ReturnValue;                       // 0x0190(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(NotificationManager_C_Construct_New_Notification) == 0x000010, "Wrong alignment on NotificationManager_C_Construct_New_Notification");
static_assert(sizeof(NotificationManager_C_Construct_New_Notification) == 0x0001A0, "Wrong size on NotificationManager_C_Construct_New_Notification");
static_assert(offsetof(NotificationManager_C_Construct_New_Notification, Notification_Data) == 0x000000, "Member 'NotificationManager_C_Construct_New_Notification::Notification_Data' has a wrong offset!");
static_assert(offsetof(NotificationManager_C_Construct_New_Notification, New_Notification) == 0x000180, "Member 'NotificationManager_C_Construct_New_Notification::New_Notification' has a wrong offset!");
static_assert(offsetof(NotificationManager_C_Construct_New_Notification, CallFunc_GetOwningPlayer_ReturnValue) == 0x000188, "Member 'NotificationManager_C_Construct_New_Notification::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(NotificationManager_C_Construct_New_Notification, CallFunc_Create_ReturnValue) == 0x000190, "Member 'NotificationManager_C_Construct_New_Notification::CallFunc_Create_ReturnValue' has a wrong offset!");

// Function NotificationManager.NotificationManager_C.Remove Dead Notification
// 0x01C0 (0x01C0 - 0x0000)
struct NotificationManager_C_Remove_Dead_Notification final
{
public:
	struct FOrionNotification                     Notification;                                      // 0x0000(0x0180)(BlueprintVisible, BlueprintReadOnly, Parm)
	class UNotification_C*                        Old_Notification;                                  // 0x0180(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UNotification_C* Widget)> K2Node_CreateDelegate_OutputDelegate;              // 0x0188(0x0010)(ZeroConstructor, NoDestructor)
	class UUserWidget*                            CallFunc_FindUserWidget_ReturnValue;               // 0x0198(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x01A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1A1[0x7];                                      // 0x01A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UNotification_C*                        K2Node_DynamicCast_AsNotification;                 // 0x01A8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x01B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(NotificationManager_C_Remove_Dead_Notification) == 0x000010, "Wrong alignment on NotificationManager_C_Remove_Dead_Notification");
static_assert(sizeof(NotificationManager_C_Remove_Dead_Notification) == 0x0001C0, "Wrong size on NotificationManager_C_Remove_Dead_Notification");
static_assert(offsetof(NotificationManager_C_Remove_Dead_Notification, Notification) == 0x000000, "Member 'NotificationManager_C_Remove_Dead_Notification::Notification' has a wrong offset!");
static_assert(offsetof(NotificationManager_C_Remove_Dead_Notification, Old_Notification) == 0x000180, "Member 'NotificationManager_C_Remove_Dead_Notification::Old_Notification' has a wrong offset!");
static_assert(offsetof(NotificationManager_C_Remove_Dead_Notification, K2Node_CreateDelegate_OutputDelegate) == 0x000188, "Member 'NotificationManager_C_Remove_Dead_Notification::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(NotificationManager_C_Remove_Dead_Notification, CallFunc_FindUserWidget_ReturnValue) == 0x000198, "Member 'NotificationManager_C_Remove_Dead_Notification::CallFunc_FindUserWidget_ReturnValue' has a wrong offset!");
static_assert(offsetof(NotificationManager_C_Remove_Dead_Notification, CallFunc_IsValid_ReturnValue) == 0x0001A0, "Member 'NotificationManager_C_Remove_Dead_Notification::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(NotificationManager_C_Remove_Dead_Notification, K2Node_DynamicCast_AsNotification) == 0x0001A8, "Member 'NotificationManager_C_Remove_Dead_Notification::K2Node_DynamicCast_AsNotification' has a wrong offset!");
static_assert(offsetof(NotificationManager_C_Remove_Dead_Notification, K2Node_DynamicCast_bSuccess) == 0x0001B0, "Member 'NotificationManager_C_Remove_Dead_Notification::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function NotificationManager.NotificationManager_C.Notification Exit Finished
// 0x0008 (0x0008 - 0x0000)
struct NotificationManager_C_Notification_Exit_Finished final
{
public:
	class UNotification_C*                        Widget;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(NotificationManager_C_Notification_Exit_Finished) == 0x000008, "Wrong alignment on NotificationManager_C_Notification_Exit_Finished");
static_assert(sizeof(NotificationManager_C_Notification_Exit_Finished) == 0x000008, "Wrong size on NotificationManager_C_Notification_Exit_Finished");
static_assert(offsetof(NotificationManager_C_Notification_Exit_Finished, Widget) == 0x000000, "Member 'NotificationManager_C_Notification_Exit_Finished::Widget' has a wrong offset!");

// Function NotificationManager.NotificationManager_C.Set Display State
// 0x0038 (0x0038 - 0x0000)
struct NotificationManager_C_Set_Display_State final
{
public:
	bool                                          bCanShowNotifications;                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(const struct FOrionNotification& Notification)> K2Node_CreateDelegate_OutputDelegate;              // 0x0008(0x0010)(ZeroConstructor, NoDestructor)
	class UNotificationContext*                   CallFunc_GetContext_ReturnValue;                   // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_BoolBool_ReturnValue;            // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_22[0x6];                                       // 0x0022(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UNotificationContext*                   CallFunc_GetContext_ReturnValue2;                  // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue2;                     // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(NotificationManager_C_Set_Display_State) == 0x000008, "Wrong alignment on NotificationManager_C_Set_Display_State");
static_assert(sizeof(NotificationManager_C_Set_Display_State) == 0x000038, "Wrong size on NotificationManager_C_Set_Display_State");
static_assert(offsetof(NotificationManager_C_Set_Display_State, bCanShowNotifications) == 0x000000, "Member 'NotificationManager_C_Set_Display_State::bCanShowNotifications' has a wrong offset!");
static_assert(offsetof(NotificationManager_C_Set_Display_State, K2Node_CreateDelegate_OutputDelegate) == 0x000008, "Member 'NotificationManager_C_Set_Display_State::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(NotificationManager_C_Set_Display_State, CallFunc_GetContext_ReturnValue) == 0x000018, "Member 'NotificationManager_C_Set_Display_State::CallFunc_GetContext_ReturnValue' has a wrong offset!");
static_assert(offsetof(NotificationManager_C_Set_Display_State, CallFunc_NotEqual_BoolBool_ReturnValue) == 0x000020, "Member 'NotificationManager_C_Set_Display_State::CallFunc_NotEqual_BoolBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(NotificationManager_C_Set_Display_State, CallFunc_IsValid_ReturnValue) == 0x000021, "Member 'NotificationManager_C_Set_Display_State::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(NotificationManager_C_Set_Display_State, CallFunc_GetContext_ReturnValue2) == 0x000028, "Member 'NotificationManager_C_Set_Display_State::CallFunc_GetContext_ReturnValue2' has a wrong offset!");
static_assert(offsetof(NotificationManager_C_Set_Display_State, CallFunc_IsValid_ReturnValue2) == 0x000030, "Member 'NotificationManager_C_Set_Display_State::CallFunc_IsValid_ReturnValue2' has a wrong offset!");

}

