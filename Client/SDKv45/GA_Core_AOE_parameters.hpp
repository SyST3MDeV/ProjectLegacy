#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GA_Core_AOE

#include "Basic.hpp"

#include "GameplayAbilities_structs.hpp"
#include "GameplayTags_structs.hpp"


namespace SDK::Params
{

// Function GA_Core_AOE.GA_Core_AOE_C.ExecuteUbergraph_GA_Core_AOE
// 0x0078 (0x0078 - 0x0000)
struct GA_Core_AOE_C_ExecuteUbergraph_GA_Core_AOE final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_CommitAbility_ReturnValue;             // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(struct FGameplayAbilityTargetDataHandle& Targets)> K2Node_CreateDelegate_OutputDelegate;              // 0x0008(0x0010)(ZeroConstructor, NoDestructor)
	struct FGameplayAbilityTargetDataHandle       K2Node_CustomEvent_Targets;                        // 0x0018(0x0020)(ConstParm)
	struct FGameplayAbilityTargetDataHandle       Temp_struct_Variable;                              // 0x0038(0x0020)()
	class UOrionAbilityTask_WaitTowerTargetAcquired* CallFunc_WaitTowerTargetAcquired_ReturnValue;      // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_61[0x7];                                       // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FActiveGameplayEffectHandle>    CallFunc_BP_ApplyGameplayEffectToTarget_ReturnValue; // 0x0068(0x0010)(ZeroConstructor, ReferenceParm)
};
static_assert(alignof(GA_Core_AOE_C_ExecuteUbergraph_GA_Core_AOE) == 0x000008, "Wrong alignment on GA_Core_AOE_C_ExecuteUbergraph_GA_Core_AOE");
static_assert(sizeof(GA_Core_AOE_C_ExecuteUbergraph_GA_Core_AOE) == 0x000078, "Wrong size on GA_Core_AOE_C_ExecuteUbergraph_GA_Core_AOE");
static_assert(offsetof(GA_Core_AOE_C_ExecuteUbergraph_GA_Core_AOE, EntryPoint) == 0x000000, "Member 'GA_Core_AOE_C_ExecuteUbergraph_GA_Core_AOE::EntryPoint' has a wrong offset!");
static_assert(offsetof(GA_Core_AOE_C_ExecuteUbergraph_GA_Core_AOE, CallFunc_K2_CommitAbility_ReturnValue) == 0x000004, "Member 'GA_Core_AOE_C_ExecuteUbergraph_GA_Core_AOE::CallFunc_K2_CommitAbility_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Core_AOE_C_ExecuteUbergraph_GA_Core_AOE, K2Node_CreateDelegate_OutputDelegate) == 0x000008, "Member 'GA_Core_AOE_C_ExecuteUbergraph_GA_Core_AOE::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(GA_Core_AOE_C_ExecuteUbergraph_GA_Core_AOE, K2Node_CustomEvent_Targets) == 0x000018, "Member 'GA_Core_AOE_C_ExecuteUbergraph_GA_Core_AOE::K2Node_CustomEvent_Targets' has a wrong offset!");
static_assert(offsetof(GA_Core_AOE_C_ExecuteUbergraph_GA_Core_AOE, Temp_struct_Variable) == 0x000038, "Member 'GA_Core_AOE_C_ExecuteUbergraph_GA_Core_AOE::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(GA_Core_AOE_C_ExecuteUbergraph_GA_Core_AOE, CallFunc_WaitTowerTargetAcquired_ReturnValue) == 0x000058, "Member 'GA_Core_AOE_C_ExecuteUbergraph_GA_Core_AOE::CallFunc_WaitTowerTargetAcquired_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Core_AOE_C_ExecuteUbergraph_GA_Core_AOE, CallFunc_IsValid_ReturnValue) == 0x000060, "Member 'GA_Core_AOE_C_ExecuteUbergraph_GA_Core_AOE::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Core_AOE_C_ExecuteUbergraph_GA_Core_AOE, CallFunc_BP_ApplyGameplayEffectToTarget_ReturnValue) == 0x000068, "Member 'GA_Core_AOE_C_ExecuteUbergraph_GA_Core_AOE::CallFunc_BP_ApplyGameplayEffectToTarget_ReturnValue' has a wrong offset!");

// Function GA_Core_AOE.GA_Core_AOE_C.FireProjectile_6555388B4A7770C78460C99981717FD7
// 0x0020 (0x0020 - 0x0000)
struct GA_Core_AOE_C_FireProjectile_6555388B4A7770C78460C99981717FD7 final
{
public:
	struct FGameplayAbilityTargetDataHandle       Targets;                                           // 0x0000(0x0020)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(GA_Core_AOE_C_FireProjectile_6555388B4A7770C78460C99981717FD7) == 0x000008, "Wrong alignment on GA_Core_AOE_C_FireProjectile_6555388B4A7770C78460C99981717FD7");
static_assert(sizeof(GA_Core_AOE_C_FireProjectile_6555388B4A7770C78460C99981717FD7) == 0x000020, "Wrong size on GA_Core_AOE_C_FireProjectile_6555388B4A7770C78460C99981717FD7");
static_assert(offsetof(GA_Core_AOE_C_FireProjectile_6555388B4A7770C78460C99981717FD7, Targets) == 0x000000, "Member 'GA_Core_AOE_C_FireProjectile_6555388B4A7770C78460C99981717FD7::Targets' has a wrong offset!");

// Function GA_Core_AOE.GA_Core_AOE_C.K2_CanActivateAbility
// 0x0068 (0x0068 - 0x0000)
struct GA_Core_AOE_C_K2_CanActivateAbility final
{
public:
	struct FGameplayAbilityActorInfo              ActorInfo;                                         // 0x0000(0x0040)(BlueprintVisible, BlueprintReadOnly, Parm, ContainsInstancedReference)
	struct FGameplayTagContainer                  RelevantTags;                                      // 0x0040(0x0020)(Parm, OutParm)
	bool                                          ReturnValue;                                       // 0x0060(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(GA_Core_AOE_C_K2_CanActivateAbility) == 0x000008, "Wrong alignment on GA_Core_AOE_C_K2_CanActivateAbility");
static_assert(sizeof(GA_Core_AOE_C_K2_CanActivateAbility) == 0x000068, "Wrong size on GA_Core_AOE_C_K2_CanActivateAbility");
static_assert(offsetof(GA_Core_AOE_C_K2_CanActivateAbility, ActorInfo) == 0x000000, "Member 'GA_Core_AOE_C_K2_CanActivateAbility::ActorInfo' has a wrong offset!");
static_assert(offsetof(GA_Core_AOE_C_K2_CanActivateAbility, RelevantTags) == 0x000040, "Member 'GA_Core_AOE_C_K2_CanActivateAbility::RelevantTags' has a wrong offset!");
static_assert(offsetof(GA_Core_AOE_C_K2_CanActivateAbility, ReturnValue) == 0x000060, "Member 'GA_Core_AOE_C_K2_CanActivateAbility::ReturnValue' has a wrong offset!");

}

