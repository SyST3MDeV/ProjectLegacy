#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_GSM_BaseMOBA

#include "Basic.hpp"

#include "OrionGame_structs.hpp"
#include "GameplayAbilities_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function BP_GSM_BaseMOBA.BP_GSM_BaseMOBA_C.HeroHasRecalled_Dispatch__DelegateSignature
// 0x0001 (0x0001 - 0x0000)
struct BP_GSM_BaseMOBA_C_HeroHasRecalled_Dispatch__DelegateSignature final
{
public:
	EOrionTeam                                    HeroTeam;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GSM_BaseMOBA_C_HeroHasRecalled_Dispatch__DelegateSignature) == 0x000001, "Wrong alignment on BP_GSM_BaseMOBA_C_HeroHasRecalled_Dispatch__DelegateSignature");
static_assert(sizeof(BP_GSM_BaseMOBA_C_HeroHasRecalled_Dispatch__DelegateSignature) == 0x000001, "Wrong size on BP_GSM_BaseMOBA_C_HeroHasRecalled_Dispatch__DelegateSignature");
static_assert(offsetof(BP_GSM_BaseMOBA_C_HeroHasRecalled_Dispatch__DelegateSignature, HeroTeam) == 0x000000, "Member 'BP_GSM_BaseMOBA_C_HeroHasRecalled_Dispatch__DelegateSignature::HeroTeam' has a wrong offset!");

// Function BP_GSM_BaseMOBA.BP_GSM_BaseMOBA_C.TriggerVictoryEvent__DelegateSignature
// 0x0001 (0x0001 - 0x0000)
struct BP_GSM_BaseMOBA_C_TriggerVictoryEvent__DelegateSignature final
{
public:
	EOrionTeam                                    WinningTeam;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GSM_BaseMOBA_C_TriggerVictoryEvent__DelegateSignature) == 0x000001, "Wrong alignment on BP_GSM_BaseMOBA_C_TriggerVictoryEvent__DelegateSignature");
static_assert(sizeof(BP_GSM_BaseMOBA_C_TriggerVictoryEvent__DelegateSignature) == 0x000001, "Wrong size on BP_GSM_BaseMOBA_C_TriggerVictoryEvent__DelegateSignature");
static_assert(offsetof(BP_GSM_BaseMOBA_C_TriggerVictoryEvent__DelegateSignature, WinningTeam) == 0x000000, "Member 'BP_GSM_BaseMOBA_C_TriggerVictoryEvent__DelegateSignature::WinningTeam' has a wrong offset!");

// Function BP_GSM_BaseMOBA.BP_GSM_BaseMOBA_C.DecoyWasCreated_Dispatch__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct BP_GSM_BaseMOBA_C_DecoyWasCreated_Dispatch__DelegateSignature final
{
public:
	class AActor*                                 TargetableActor;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GSM_BaseMOBA_C_DecoyWasCreated_Dispatch__DelegateSignature) == 0x000008, "Wrong alignment on BP_GSM_BaseMOBA_C_DecoyWasCreated_Dispatch__DelegateSignature");
static_assert(sizeof(BP_GSM_BaseMOBA_C_DecoyWasCreated_Dispatch__DelegateSignature) == 0x000008, "Wrong size on BP_GSM_BaseMOBA_C_DecoyWasCreated_Dispatch__DelegateSignature");
static_assert(offsetof(BP_GSM_BaseMOBA_C_DecoyWasCreated_Dispatch__DelegateSignature, TargetableActor) == 0x000000, "Member 'BP_GSM_BaseMOBA_C_DecoyWasCreated_Dispatch__DelegateSignature::TargetableActor' has a wrong offset!");

// Function BP_GSM_BaseMOBA.BP_GSM_BaseMOBA_C.HeroHasSpawned_Dispatch__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct BP_GSM_BaseMOBA_C_HeroHasSpawned_Dispatch__DelegateSignature final
{
public:
	class AActor*                                 SpawnedHero;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GSM_BaseMOBA_C_HeroHasSpawned_Dispatch__DelegateSignature) == 0x000008, "Wrong alignment on BP_GSM_BaseMOBA_C_HeroHasSpawned_Dispatch__DelegateSignature");
static_assert(sizeof(BP_GSM_BaseMOBA_C_HeroHasSpawned_Dispatch__DelegateSignature) == 0x000008, "Wrong size on BP_GSM_BaseMOBA_C_HeroHasSpawned_Dispatch__DelegateSignature");
static_assert(offsetof(BP_GSM_BaseMOBA_C_HeroHasSpawned_Dispatch__DelegateSignature, SpawnedHero) == 0x000000, "Member 'BP_GSM_BaseMOBA_C_HeroHasSpawned_Dispatch__DelegateSignature::SpawnedHero' has a wrong offset!");

// Function BP_GSM_BaseMOBA.BP_GSM_BaseMOBA_C.HeroHasDied_Dispatch__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct BP_GSM_BaseMOBA_C_HeroHasDied_Dispatch__DelegateSignature final
{
public:
	class AActor*                                 DeadHero;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 Killer;                                            // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GSM_BaseMOBA_C_HeroHasDied_Dispatch__DelegateSignature) == 0x000008, "Wrong alignment on BP_GSM_BaseMOBA_C_HeroHasDied_Dispatch__DelegateSignature");
static_assert(sizeof(BP_GSM_BaseMOBA_C_HeroHasDied_Dispatch__DelegateSignature) == 0x000010, "Wrong size on BP_GSM_BaseMOBA_C_HeroHasDied_Dispatch__DelegateSignature");
static_assert(offsetof(BP_GSM_BaseMOBA_C_HeroHasDied_Dispatch__DelegateSignature, DeadHero) == 0x000000, "Member 'BP_GSM_BaseMOBA_C_HeroHasDied_Dispatch__DelegateSignature::DeadHero' has a wrong offset!");
static_assert(offsetof(BP_GSM_BaseMOBA_C_HeroHasDied_Dispatch__DelegateSignature, Killer) == 0x000008, "Member 'BP_GSM_BaseMOBA_C_HeroHasDied_Dispatch__DelegateSignature::Killer' has a wrong offset!");

// Function BP_GSM_BaseMOBA.BP_GSM_BaseMOBA_C.PrimeHelixKilled_Dispatch__DelegateSignature
// 0x0001 (0x0001 - 0x0000)
struct BP_GSM_BaseMOBA_C_PrimeHelixKilled_Dispatch__DelegateSignature final
{
public:
	EOrionTeam                                    TeamNum;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GSM_BaseMOBA_C_PrimeHelixKilled_Dispatch__DelegateSignature) == 0x000001, "Wrong alignment on BP_GSM_BaseMOBA_C_PrimeHelixKilled_Dispatch__DelegateSignature");
static_assert(sizeof(BP_GSM_BaseMOBA_C_PrimeHelixKilled_Dispatch__DelegateSignature) == 0x000001, "Wrong size on BP_GSM_BaseMOBA_C_PrimeHelixKilled_Dispatch__DelegateSignature");
static_assert(offsetof(BP_GSM_BaseMOBA_C_PrimeHelixKilled_Dispatch__DelegateSignature, TeamNum) == 0x000000, "Member 'BP_GSM_BaseMOBA_C_PrimeHelixKilled_Dispatch__DelegateSignature::TeamNum' has a wrong offset!");

// Function BP_GSM_BaseMOBA.BP_GSM_BaseMOBA_C.ExecuteUbergraph_BP_GSM_BaseMOBA
// 0x0128 (0x0128 - 0x0000)
struct BP_GSM_BaseMOBA_C_ExecuteUbergraph_BP_GSM_BaseMOBA final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0008(0x0010)(ZeroConstructor, NoDestructor)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EOrionTeam                                    K2Node_CustomEvent_HeroTeam;                       // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EOrionTeam                                    K2Node_CustomEvent_WinningTeamNum;                 // 0x001D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1E[0x2];                                       // 0x001E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AOrionDamageableObjective_Base*         CallFunc_Array_Get_Item;                           // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue2;                     // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate2;             // 0x0038(0x0010)(ZeroConstructor, NoDestructor)
	struct FActiveGameplayEffectHandle            CallFunc_BP_ApplyGameplayEffectToSelf_ReturnValue; // 0x0048(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0050(0x0008)(NoDestructor)
	class UMatchmakingContext*                    CallFunc_GetContext_ReturnValue;                   // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetCurrentPlaylistId_ReturnValue;         // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_64[0x4];                                       // 0x0064(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAudioComponent*                        CallFunc_SpawnSound2D_ReturnValue;                 // 0x0068(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_71[0x7];                                       // 0x0071(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAudioComponent*                        CallFunc_SpawnSound2D_ReturnValue2;                // 0x0078(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable2;                    // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue3;                     // 0x0084(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_85[0x3];                                       // 0x0085(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class APlayerState*>                   CallFunc_GetHumanControlledPlayerStates_PlayerStateArray; // 0x0088(0x0010)(ZeroConstructor, ReferenceParm)
	class APlayerState*                           CallFunc_Array_Get_Item2;                          // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue2;                // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue4;                     // 0x00A4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A5[0x3];                                       // 0x00A5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AOrionPlayerState_Game*                 K2Node_DynamicCast_AsOrion_Player_State_Game;      // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B1[0x7];                                       // 0x00B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAbilitySystemComponent*                CallFunc_GetAbilitySystemComponent_ReturnValue;    // 0x00B8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AOrionPlayerController_Game*            CallFunc_GetLocalPlayerController_Game_ReturnValue; // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FActiveGameplayEffectHandle            CallFunc_BP_ApplyGameplayEffectToSelf_ReturnValue2; // 0x00C8(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue5;                     // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EOrionTeam                                    CallFunc_GetTeamNum_ReturnValue;                   // 0x00D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D2[0x2];                                       // 0x00D2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Conv_ByteToFloat_ReturnValue;             // 0x00D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EOrionTeam                                    CallFunc_GetWinningTeam_ReturnValue;               // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D9[0x3];                                       // 0x00D9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Conv_ByteToFloat_ReturnValue2;            // 0x00DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue6;                     // 0x00E1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x00E2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue7;                     // 0x00E3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue8;                     // 0x00E4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue9;                     // 0x00E5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E6[0x2];                                       // 0x00E6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00EC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_ED[0x3];                                       // 0x00ED(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F4[0x4];                                       // 0x00F4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAudioComponent*                        CallFunc_SpawnSound2D_ReturnValue3;                // 0x00F8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAudioComponent*                        CallFunc_SpawnSound2D_ReturnValue4;                // 0x0100(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable2;                   // 0x0108(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_10C[0x4];                                      // 0x010C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate3;             // 0x0110(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue2;                 // 0x0120(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_121[0x3];                                      // 0x0121(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue2;                  // 0x0124(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GSM_BaseMOBA_C_ExecuteUbergraph_BP_GSM_BaseMOBA) == 0x000008, "Wrong alignment on BP_GSM_BaseMOBA_C_ExecuteUbergraph_BP_GSM_BaseMOBA");
static_assert(sizeof(BP_GSM_BaseMOBA_C_ExecuteUbergraph_BP_GSM_BaseMOBA) == 0x000128, "Wrong size on BP_GSM_BaseMOBA_C_ExecuteUbergraph_BP_GSM_BaseMOBA");
static_assert(offsetof(BP_GSM_BaseMOBA_C_ExecuteUbergraph_BP_GSM_BaseMOBA, EntryPoint) == 0x000000, "Member 'BP_GSM_BaseMOBA_C_ExecuteUbergraph_BP_GSM_BaseMOBA::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_GSM_BaseMOBA_C_ExecuteUbergraph_BP_GSM_BaseMOBA, CallFunc_IsValid_ReturnValue) == 0x000004, "Member 'BP_GSM_BaseMOBA_C_ExecuteUbergraph_BP_GSM_BaseMOBA::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GSM_BaseMOBA_C_ExecuteUbergraph_BP_GSM_BaseMOBA, K2Node_CreateDelegate_OutputDelegate) == 0x000008, "Member 'BP_GSM_BaseMOBA_C_ExecuteUbergraph_BP_GSM_BaseMOBA::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_GSM_BaseMOBA_C_ExecuteUbergraph_BP_GSM_BaseMOBA, CallFunc_Array_Length_ReturnValue) == 0x000018, "Member 'BP_GSM_BaseMOBA_C_ExecuteUbergraph_BP_GSM_BaseMOBA::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GSM_BaseMOBA_C_ExecuteUbergraph_BP_GSM_BaseMOBA, K2Node_CustomEvent_HeroTeam) == 0x00001C, "Member 'BP_GSM_BaseMOBA_C_ExecuteUbergraph_BP_GSM_BaseMOBA::K2Node_CustomEvent_HeroTeam' has a wrong offset!");
static_assert(offsetof(BP_GSM_BaseMOBA_C_ExecuteUbergraph_BP_GSM_BaseMOBA, K2Node_CustomEvent_WinningTeamNum) == 0x00001D, "Member 'BP_GSM_BaseMOBA_C_ExecuteUbergraph_BP_GSM_BaseMOBA::K2Node_CustomEvent_WinningTeamNum' has a wrong offset!");
static_assert(offsetof(BP_GSM_BaseMOBA_C_ExecuteUbergraph_BP_GSM_BaseMOBA, Temp_int_Array_Index_Variable) == 0x000020, "Member 'BP_GSM_BaseMOBA_C_ExecuteUbergraph_BP_GSM_BaseMOBA::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_GSM_BaseMOBA_C_ExecuteUbergraph_BP_GSM_BaseMOBA, CallFunc_Array_Get_Item) == 0x000028, "Member 'BP_GSM_BaseMOBA_C_ExecuteUbergraph_BP_GSM_BaseMOBA::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_GSM_BaseMOBA_C_ExecuteUbergraph_BP_GSM_BaseMOBA, CallFunc_IsValid_ReturnValue2) == 0x000030, "Member 'BP_GSM_BaseMOBA_C_ExecuteUbergraph_BP_GSM_BaseMOBA::CallFunc_IsValid_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_GSM_BaseMOBA_C_ExecuteUbergraph_BP_GSM_BaseMOBA, K2Node_CreateDelegate_OutputDelegate2) == 0x000038, "Member 'BP_GSM_BaseMOBA_C_ExecuteUbergraph_BP_GSM_BaseMOBA::K2Node_CreateDelegate_OutputDelegate2' has a wrong offset!");
static_assert(offsetof(BP_GSM_BaseMOBA_C_ExecuteUbergraph_BP_GSM_BaseMOBA, CallFunc_BP_ApplyGameplayEffectToSelf_ReturnValue) == 0x000048, "Member 'BP_GSM_BaseMOBA_C_ExecuteUbergraph_BP_GSM_BaseMOBA::CallFunc_BP_ApplyGameplayEffectToSelf_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GSM_BaseMOBA_C_ExecuteUbergraph_BP_GSM_BaseMOBA, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000050, "Member 'BP_GSM_BaseMOBA_C_ExecuteUbergraph_BP_GSM_BaseMOBA::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GSM_BaseMOBA_C_ExecuteUbergraph_BP_GSM_BaseMOBA, CallFunc_GetContext_ReturnValue) == 0x000058, "Member 'BP_GSM_BaseMOBA_C_ExecuteUbergraph_BP_GSM_BaseMOBA::CallFunc_GetContext_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GSM_BaseMOBA_C_ExecuteUbergraph_BP_GSM_BaseMOBA, CallFunc_GetCurrentPlaylistId_ReturnValue) == 0x000060, "Member 'BP_GSM_BaseMOBA_C_ExecuteUbergraph_BP_GSM_BaseMOBA::CallFunc_GetCurrentPlaylistId_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GSM_BaseMOBA_C_ExecuteUbergraph_BP_GSM_BaseMOBA, CallFunc_SpawnSound2D_ReturnValue) == 0x000068, "Member 'BP_GSM_BaseMOBA_C_ExecuteUbergraph_BP_GSM_BaseMOBA::CallFunc_SpawnSound2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GSM_BaseMOBA_C_ExecuteUbergraph_BP_GSM_BaseMOBA, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000070, "Member 'BP_GSM_BaseMOBA_C_ExecuteUbergraph_BP_GSM_BaseMOBA::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GSM_BaseMOBA_C_ExecuteUbergraph_BP_GSM_BaseMOBA, CallFunc_SpawnSound2D_ReturnValue2) == 0x000078, "Member 'BP_GSM_BaseMOBA_C_ExecuteUbergraph_BP_GSM_BaseMOBA::CallFunc_SpawnSound2D_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_GSM_BaseMOBA_C_ExecuteUbergraph_BP_GSM_BaseMOBA, Temp_int_Array_Index_Variable2) == 0x000080, "Member 'BP_GSM_BaseMOBA_C_ExecuteUbergraph_BP_GSM_BaseMOBA::Temp_int_Array_Index_Variable2' has a wrong offset!");
static_assert(offsetof(BP_GSM_BaseMOBA_C_ExecuteUbergraph_BP_GSM_BaseMOBA, CallFunc_IsValid_ReturnValue3) == 0x000084, "Member 'BP_GSM_BaseMOBA_C_ExecuteUbergraph_BP_GSM_BaseMOBA::CallFunc_IsValid_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_GSM_BaseMOBA_C_ExecuteUbergraph_BP_GSM_BaseMOBA, CallFunc_GetHumanControlledPlayerStates_PlayerStateArray) == 0x000088, "Member 'BP_GSM_BaseMOBA_C_ExecuteUbergraph_BP_GSM_BaseMOBA::CallFunc_GetHumanControlledPlayerStates_PlayerStateArray' has a wrong offset!");
static_assert(offsetof(BP_GSM_BaseMOBA_C_ExecuteUbergraph_BP_GSM_BaseMOBA, CallFunc_Array_Get_Item2) == 0x000098, "Member 'BP_GSM_BaseMOBA_C_ExecuteUbergraph_BP_GSM_BaseMOBA::CallFunc_Array_Get_Item2' has a wrong offset!");
static_assert(offsetof(BP_GSM_BaseMOBA_C_ExecuteUbergraph_BP_GSM_BaseMOBA, CallFunc_Array_Length_ReturnValue2) == 0x0000A0, "Member 'BP_GSM_BaseMOBA_C_ExecuteUbergraph_BP_GSM_BaseMOBA::CallFunc_Array_Length_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_GSM_BaseMOBA_C_ExecuteUbergraph_BP_GSM_BaseMOBA, CallFunc_IsValid_ReturnValue4) == 0x0000A4, "Member 'BP_GSM_BaseMOBA_C_ExecuteUbergraph_BP_GSM_BaseMOBA::CallFunc_IsValid_ReturnValue4' has a wrong offset!");
static_assert(offsetof(BP_GSM_BaseMOBA_C_ExecuteUbergraph_BP_GSM_BaseMOBA, K2Node_DynamicCast_AsOrion_Player_State_Game) == 0x0000A8, "Member 'BP_GSM_BaseMOBA_C_ExecuteUbergraph_BP_GSM_BaseMOBA::K2Node_DynamicCast_AsOrion_Player_State_Game' has a wrong offset!");
static_assert(offsetof(BP_GSM_BaseMOBA_C_ExecuteUbergraph_BP_GSM_BaseMOBA, K2Node_DynamicCast_bSuccess) == 0x0000B0, "Member 'BP_GSM_BaseMOBA_C_ExecuteUbergraph_BP_GSM_BaseMOBA::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_GSM_BaseMOBA_C_ExecuteUbergraph_BP_GSM_BaseMOBA, CallFunc_GetAbilitySystemComponent_ReturnValue) == 0x0000B8, "Member 'BP_GSM_BaseMOBA_C_ExecuteUbergraph_BP_GSM_BaseMOBA::CallFunc_GetAbilitySystemComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GSM_BaseMOBA_C_ExecuteUbergraph_BP_GSM_BaseMOBA, CallFunc_GetLocalPlayerController_Game_ReturnValue) == 0x0000C0, "Member 'BP_GSM_BaseMOBA_C_ExecuteUbergraph_BP_GSM_BaseMOBA::CallFunc_GetLocalPlayerController_Game_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GSM_BaseMOBA_C_ExecuteUbergraph_BP_GSM_BaseMOBA, CallFunc_BP_ApplyGameplayEffectToSelf_ReturnValue2) == 0x0000C8, "Member 'BP_GSM_BaseMOBA_C_ExecuteUbergraph_BP_GSM_BaseMOBA::CallFunc_BP_ApplyGameplayEffectToSelf_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_GSM_BaseMOBA_C_ExecuteUbergraph_BP_GSM_BaseMOBA, CallFunc_IsValid_ReturnValue5) == 0x0000D0, "Member 'BP_GSM_BaseMOBA_C_ExecuteUbergraph_BP_GSM_BaseMOBA::CallFunc_IsValid_ReturnValue5' has a wrong offset!");
static_assert(offsetof(BP_GSM_BaseMOBA_C_ExecuteUbergraph_BP_GSM_BaseMOBA, CallFunc_GetTeamNum_ReturnValue) == 0x0000D1, "Member 'BP_GSM_BaseMOBA_C_ExecuteUbergraph_BP_GSM_BaseMOBA::CallFunc_GetTeamNum_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GSM_BaseMOBA_C_ExecuteUbergraph_BP_GSM_BaseMOBA, CallFunc_Conv_ByteToFloat_ReturnValue) == 0x0000D4, "Member 'BP_GSM_BaseMOBA_C_ExecuteUbergraph_BP_GSM_BaseMOBA::CallFunc_Conv_ByteToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GSM_BaseMOBA_C_ExecuteUbergraph_BP_GSM_BaseMOBA, CallFunc_GetWinningTeam_ReturnValue) == 0x0000D8, "Member 'BP_GSM_BaseMOBA_C_ExecuteUbergraph_BP_GSM_BaseMOBA::CallFunc_GetWinningTeam_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GSM_BaseMOBA_C_ExecuteUbergraph_BP_GSM_BaseMOBA, CallFunc_Conv_ByteToFloat_ReturnValue2) == 0x0000DC, "Member 'BP_GSM_BaseMOBA_C_ExecuteUbergraph_BP_GSM_BaseMOBA::CallFunc_Conv_ByteToFloat_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_GSM_BaseMOBA_C_ExecuteUbergraph_BP_GSM_BaseMOBA, CallFunc_Less_FloatFloat_ReturnValue) == 0x0000E0, "Member 'BP_GSM_BaseMOBA_C_ExecuteUbergraph_BP_GSM_BaseMOBA::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GSM_BaseMOBA_C_ExecuteUbergraph_BP_GSM_BaseMOBA, CallFunc_IsValid_ReturnValue6) == 0x0000E1, "Member 'BP_GSM_BaseMOBA_C_ExecuteUbergraph_BP_GSM_BaseMOBA::CallFunc_IsValid_ReturnValue6' has a wrong offset!");
static_assert(offsetof(BP_GSM_BaseMOBA_C_ExecuteUbergraph_BP_GSM_BaseMOBA, CallFunc_Greater_FloatFloat_ReturnValue) == 0x0000E2, "Member 'BP_GSM_BaseMOBA_C_ExecuteUbergraph_BP_GSM_BaseMOBA::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GSM_BaseMOBA_C_ExecuteUbergraph_BP_GSM_BaseMOBA, CallFunc_IsValid_ReturnValue7) == 0x0000E3, "Member 'BP_GSM_BaseMOBA_C_ExecuteUbergraph_BP_GSM_BaseMOBA::CallFunc_IsValid_ReturnValue7' has a wrong offset!");
static_assert(offsetof(BP_GSM_BaseMOBA_C_ExecuteUbergraph_BP_GSM_BaseMOBA, CallFunc_IsValid_ReturnValue8) == 0x0000E4, "Member 'BP_GSM_BaseMOBA_C_ExecuteUbergraph_BP_GSM_BaseMOBA::CallFunc_IsValid_ReturnValue8' has a wrong offset!");
static_assert(offsetof(BP_GSM_BaseMOBA_C_ExecuteUbergraph_BP_GSM_BaseMOBA, CallFunc_IsValid_ReturnValue9) == 0x0000E5, "Member 'BP_GSM_BaseMOBA_C_ExecuteUbergraph_BP_GSM_BaseMOBA::CallFunc_IsValid_ReturnValue9' has a wrong offset!");
static_assert(offsetof(BP_GSM_BaseMOBA_C_ExecuteUbergraph_BP_GSM_BaseMOBA, Temp_int_Loop_Counter_Variable) == 0x0000E8, "Member 'BP_GSM_BaseMOBA_C_ExecuteUbergraph_BP_GSM_BaseMOBA::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_GSM_BaseMOBA_C_ExecuteUbergraph_BP_GSM_BaseMOBA, CallFunc_Less_IntInt_ReturnValue) == 0x0000EC, "Member 'BP_GSM_BaseMOBA_C_ExecuteUbergraph_BP_GSM_BaseMOBA::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GSM_BaseMOBA_C_ExecuteUbergraph_BP_GSM_BaseMOBA, CallFunc_Add_IntInt_ReturnValue) == 0x0000F0, "Member 'BP_GSM_BaseMOBA_C_ExecuteUbergraph_BP_GSM_BaseMOBA::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GSM_BaseMOBA_C_ExecuteUbergraph_BP_GSM_BaseMOBA, CallFunc_SpawnSound2D_ReturnValue3) == 0x0000F8, "Member 'BP_GSM_BaseMOBA_C_ExecuteUbergraph_BP_GSM_BaseMOBA::CallFunc_SpawnSound2D_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_GSM_BaseMOBA_C_ExecuteUbergraph_BP_GSM_BaseMOBA, CallFunc_SpawnSound2D_ReturnValue4) == 0x000100, "Member 'BP_GSM_BaseMOBA_C_ExecuteUbergraph_BP_GSM_BaseMOBA::CallFunc_SpawnSound2D_ReturnValue4' has a wrong offset!");
static_assert(offsetof(BP_GSM_BaseMOBA_C_ExecuteUbergraph_BP_GSM_BaseMOBA, Temp_int_Loop_Counter_Variable2) == 0x000108, "Member 'BP_GSM_BaseMOBA_C_ExecuteUbergraph_BP_GSM_BaseMOBA::Temp_int_Loop_Counter_Variable2' has a wrong offset!");
static_assert(offsetof(BP_GSM_BaseMOBA_C_ExecuteUbergraph_BP_GSM_BaseMOBA, K2Node_CreateDelegate_OutputDelegate3) == 0x000110, "Member 'BP_GSM_BaseMOBA_C_ExecuteUbergraph_BP_GSM_BaseMOBA::K2Node_CreateDelegate_OutputDelegate3' has a wrong offset!");
static_assert(offsetof(BP_GSM_BaseMOBA_C_ExecuteUbergraph_BP_GSM_BaseMOBA, CallFunc_Less_IntInt_ReturnValue2) == 0x000120, "Member 'BP_GSM_BaseMOBA_C_ExecuteUbergraph_BP_GSM_BaseMOBA::CallFunc_Less_IntInt_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_GSM_BaseMOBA_C_ExecuteUbergraph_BP_GSM_BaseMOBA, CallFunc_Add_IntInt_ReturnValue2) == 0x000124, "Member 'BP_GSM_BaseMOBA_C_ExecuteUbergraph_BP_GSM_BaseMOBA::CallFunc_Add_IntInt_ReturnValue2' has a wrong offset!");

// Function BP_GSM_BaseMOBA.BP_GSM_BaseMOBA_C.PlayEndMatchSequence
// 0x0001 (0x0001 - 0x0000)
struct BP_GSM_BaseMOBA_C_PlayEndMatchSequence final
{
public:
	EOrionTeam                                    WinningTeamNum_0;                                  // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GSM_BaseMOBA_C_PlayEndMatchSequence) == 0x000001, "Wrong alignment on BP_GSM_BaseMOBA_C_PlayEndMatchSequence");
static_assert(sizeof(BP_GSM_BaseMOBA_C_PlayEndMatchSequence) == 0x000001, "Wrong size on BP_GSM_BaseMOBA_C_PlayEndMatchSequence");
static_assert(offsetof(BP_GSM_BaseMOBA_C_PlayEndMatchSequence, WinningTeamNum_0) == 0x000000, "Member 'BP_GSM_BaseMOBA_C_PlayEndMatchSequence::WinningTeamNum_0' has a wrong offset!");

// Function BP_GSM_BaseMOBA.BP_GSM_BaseMOBA_C.HeroHasRecalled
// 0x0001 (0x0001 - 0x0000)
struct BP_GSM_BaseMOBA_C_HeroHasRecalled final
{
public:
	EOrionTeam                                    HeroTeam;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GSM_BaseMOBA_C_HeroHasRecalled) == 0x000001, "Wrong alignment on BP_GSM_BaseMOBA_C_HeroHasRecalled");
static_assert(sizeof(BP_GSM_BaseMOBA_C_HeroHasRecalled) == 0x000001, "Wrong size on BP_GSM_BaseMOBA_C_HeroHasRecalled");
static_assert(offsetof(BP_GSM_BaseMOBA_C_HeroHasRecalled, HeroTeam) == 0x000000, "Member 'BP_GSM_BaseMOBA_C_HeroHasRecalled::HeroTeam' has a wrong offset!");

// Function BP_GSM_BaseMOBA.BP_GSM_BaseMOBA_C.Register Team Objective
// 0x0010 (0x0010 - 0x0000)
struct BP_GSM_BaseMOBA_C_Register_Team_Objective final
{
public:
	class AOrionDamageableObjective_Base*         InObjective;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EOrionTeam                                    CallFunc_GetTeamNum_ReturnValue;                   // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue2;     // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_GSM_BaseMOBA_C_Register_Team_Objective) == 0x000008, "Wrong alignment on BP_GSM_BaseMOBA_C_Register_Team_Objective");
static_assert(sizeof(BP_GSM_BaseMOBA_C_Register_Team_Objective) == 0x000010, "Wrong size on BP_GSM_BaseMOBA_C_Register_Team_Objective");
static_assert(offsetof(BP_GSM_BaseMOBA_C_Register_Team_Objective, InObjective) == 0x000000, "Member 'BP_GSM_BaseMOBA_C_Register_Team_Objective::InObjective' has a wrong offset!");
static_assert(offsetof(BP_GSM_BaseMOBA_C_Register_Team_Objective, CallFunc_GetTeamNum_ReturnValue) == 0x000008, "Member 'BP_GSM_BaseMOBA_C_Register_Team_Objective::CallFunc_GetTeamNum_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GSM_BaseMOBA_C_Register_Team_Objective, K2Node_SwitchEnum_CmpSuccess) == 0x000009, "Member 'BP_GSM_BaseMOBA_C_Register_Team_Objective::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_GSM_BaseMOBA_C_Register_Team_Objective, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x00000A, "Member 'BP_GSM_BaseMOBA_C_Register_Team_Objective::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GSM_BaseMOBA_C_Register_Team_Objective, CallFunc_EqualEqual_ObjectObject_ReturnValue2) == 0x00000B, "Member 'BP_GSM_BaseMOBA_C_Register_Team_Objective::CallFunc_EqualEqual_ObjectObject_ReturnValue2' has a wrong offset!");

// Function BP_GSM_BaseMOBA.BP_GSM_BaseMOBA_C.GetWinningTeamNum
// 0x0010 (0x0010 - 0x0000)
struct BP_GSM_BaseMOBA_C_GetWinningTeamNum final
{
public:
	EOrionTeam                                    WinningTeam;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EOrionTeam                                    TeamThatWon;                                       // 0x0001(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue2;                     // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_GetHealth_ReturnValue;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetHealth_ReturnValue2;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue2;          // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_GSM_BaseMOBA_C_GetWinningTeamNum) == 0x000004, "Wrong alignment on BP_GSM_BaseMOBA_C_GetWinningTeamNum");
static_assert(sizeof(BP_GSM_BaseMOBA_C_GetWinningTeamNum) == 0x000010, "Wrong size on BP_GSM_BaseMOBA_C_GetWinningTeamNum");
static_assert(offsetof(BP_GSM_BaseMOBA_C_GetWinningTeamNum, WinningTeam) == 0x000000, "Member 'BP_GSM_BaseMOBA_C_GetWinningTeamNum::WinningTeam' has a wrong offset!");
static_assert(offsetof(BP_GSM_BaseMOBA_C_GetWinningTeamNum, TeamThatWon) == 0x000001, "Member 'BP_GSM_BaseMOBA_C_GetWinningTeamNum::TeamThatWon' has a wrong offset!");
static_assert(offsetof(BP_GSM_BaseMOBA_C_GetWinningTeamNum, CallFunc_IsValid_ReturnValue) == 0x000002, "Member 'BP_GSM_BaseMOBA_C_GetWinningTeamNum::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GSM_BaseMOBA_C_GetWinningTeamNum, CallFunc_IsValid_ReturnValue2) == 0x000003, "Member 'BP_GSM_BaseMOBA_C_GetWinningTeamNum::CallFunc_IsValid_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_GSM_BaseMOBA_C_GetWinningTeamNum, CallFunc_GetHealth_ReturnValue) == 0x000004, "Member 'BP_GSM_BaseMOBA_C_GetWinningTeamNum::CallFunc_GetHealth_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GSM_BaseMOBA_C_GetWinningTeamNum, CallFunc_GetHealth_ReturnValue2) == 0x000008, "Member 'BP_GSM_BaseMOBA_C_GetWinningTeamNum::CallFunc_GetHealth_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_GSM_BaseMOBA_C_GetWinningTeamNum, CallFunc_Greater_FloatFloat_ReturnValue) == 0x00000C, "Member 'BP_GSM_BaseMOBA_C_GetWinningTeamNum::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GSM_BaseMOBA_C_GetWinningTeamNum, CallFunc_Greater_FloatFloat_ReturnValue2) == 0x00000D, "Member 'BP_GSM_BaseMOBA_C_GetWinningTeamNum::CallFunc_Greater_FloatFloat_ReturnValue2' has a wrong offset!");

// Function BP_GSM_BaseMOBA.BP_GSM_BaseMOBA_C.IsMatchOver
// 0x0010 (0x0010 - 0x0000)
struct BP_GSM_BaseMOBA_C_IsMatchOver final
{
public:
	bool                                          GameOver;                                          // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          GameOver_;                                         // 0x0001(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue2;                     // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_GetHealth_ReturnValue;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetHealth_ReturnValue2;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue2;          // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_GSM_BaseMOBA_C_IsMatchOver) == 0x000004, "Wrong alignment on BP_GSM_BaseMOBA_C_IsMatchOver");
static_assert(sizeof(BP_GSM_BaseMOBA_C_IsMatchOver) == 0x000010, "Wrong size on BP_GSM_BaseMOBA_C_IsMatchOver");
static_assert(offsetof(BP_GSM_BaseMOBA_C_IsMatchOver, GameOver) == 0x000000, "Member 'BP_GSM_BaseMOBA_C_IsMatchOver::GameOver' has a wrong offset!");
static_assert(offsetof(BP_GSM_BaseMOBA_C_IsMatchOver, GameOver_) == 0x000001, "Member 'BP_GSM_BaseMOBA_C_IsMatchOver::GameOver_' has a wrong offset!");
static_assert(offsetof(BP_GSM_BaseMOBA_C_IsMatchOver, CallFunc_IsValid_ReturnValue) == 0x000002, "Member 'BP_GSM_BaseMOBA_C_IsMatchOver::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GSM_BaseMOBA_C_IsMatchOver, CallFunc_IsValid_ReturnValue2) == 0x000003, "Member 'BP_GSM_BaseMOBA_C_IsMatchOver::CallFunc_IsValid_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_GSM_BaseMOBA_C_IsMatchOver, CallFunc_GetHealth_ReturnValue) == 0x000004, "Member 'BP_GSM_BaseMOBA_C_IsMatchOver::CallFunc_GetHealth_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GSM_BaseMOBA_C_IsMatchOver, CallFunc_GetHealth_ReturnValue2) == 0x000008, "Member 'BP_GSM_BaseMOBA_C_IsMatchOver::CallFunc_GetHealth_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_GSM_BaseMOBA_C_IsMatchOver, CallFunc_Greater_FloatFloat_ReturnValue) == 0x00000C, "Member 'BP_GSM_BaseMOBA_C_IsMatchOver::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GSM_BaseMOBA_C_IsMatchOver, CallFunc_Greater_FloatFloat_ReturnValue2) == 0x00000D, "Member 'BP_GSM_BaseMOBA_C_IsMatchOver::CallFunc_Greater_FloatFloat_ReturnValue2' has a wrong offset!");

// Function BP_GSM_BaseMOBA.BP_GSM_BaseMOBA_C.RegisterTeamTowers
// 0x0040 (0x0040 - 0x0000)
struct BP_GSM_BaseMOBA_C_RegisterTeamTowers final
{
public:
	class AOrionDamageableObjective_Base*         NewParam;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetDisplayName_ReturnValue;               // 0x0008(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0020(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue2;               // 0x0030(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GSM_BaseMOBA_C_RegisterTeamTowers) == 0x000008, "Wrong alignment on BP_GSM_BaseMOBA_C_RegisterTeamTowers");
static_assert(sizeof(BP_GSM_BaseMOBA_C_RegisterTeamTowers) == 0x000040, "Wrong size on BP_GSM_BaseMOBA_C_RegisterTeamTowers");
static_assert(offsetof(BP_GSM_BaseMOBA_C_RegisterTeamTowers, NewParam) == 0x000000, "Member 'BP_GSM_BaseMOBA_C_RegisterTeamTowers::NewParam' has a wrong offset!");
static_assert(offsetof(BP_GSM_BaseMOBA_C_RegisterTeamTowers, CallFunc_GetDisplayName_ReturnValue) == 0x000008, "Member 'BP_GSM_BaseMOBA_C_RegisterTeamTowers::CallFunc_GetDisplayName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GSM_BaseMOBA_C_RegisterTeamTowers, CallFunc_Array_Add_ReturnValue) == 0x000018, "Member 'BP_GSM_BaseMOBA_C_RegisterTeamTowers::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GSM_BaseMOBA_C_RegisterTeamTowers, CallFunc_Concat_StrStr_ReturnValue) == 0x000020, "Member 'BP_GSM_BaseMOBA_C_RegisterTeamTowers::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GSM_BaseMOBA_C_RegisterTeamTowers, CallFunc_Concat_StrStr_ReturnValue2) == 0x000030, "Member 'BP_GSM_BaseMOBA_C_RegisterTeamTowers::CallFunc_Concat_StrStr_ReturnValue2' has a wrong offset!");

// Function BP_GSM_BaseMOBA.BP_GSM_BaseMOBA_C.ForceDestroyCore
// 0x0038 (0x0038 - 0x0000)
struct BP_GSM_BaseMOBA_C_ForceDestroyCore final
{
public:
	EOrionTeam                                    TeamNum;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EOrionTeam                                    Temp_byte_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 Temp_object_Variable;                              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 Temp_object_Variable2;                             // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 Temp_object_Variable3;                             // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_Select_Default;                             // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAbilitySystemComponent*                CallFunc_GetAbilitySystemComponent_ReturnValue;    // 0x0028(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FActiveGameplayEffectHandle            CallFunc_BP_ApplyGameplayEffectToSelf_ReturnValue; // 0x0030(0x0008)(NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GSM_BaseMOBA_C_ForceDestroyCore) == 0x000008, "Wrong alignment on BP_GSM_BaseMOBA_C_ForceDestroyCore");
static_assert(sizeof(BP_GSM_BaseMOBA_C_ForceDestroyCore) == 0x000038, "Wrong size on BP_GSM_BaseMOBA_C_ForceDestroyCore");
static_assert(offsetof(BP_GSM_BaseMOBA_C_ForceDestroyCore, TeamNum) == 0x000000, "Member 'BP_GSM_BaseMOBA_C_ForceDestroyCore::TeamNum' has a wrong offset!");
static_assert(offsetof(BP_GSM_BaseMOBA_C_ForceDestroyCore, Temp_byte_Variable) == 0x000001, "Member 'BP_GSM_BaseMOBA_C_ForceDestroyCore::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_GSM_BaseMOBA_C_ForceDestroyCore, Temp_object_Variable) == 0x000008, "Member 'BP_GSM_BaseMOBA_C_ForceDestroyCore::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(BP_GSM_BaseMOBA_C_ForceDestroyCore, Temp_object_Variable2) == 0x000010, "Member 'BP_GSM_BaseMOBA_C_ForceDestroyCore::Temp_object_Variable2' has a wrong offset!");
static_assert(offsetof(BP_GSM_BaseMOBA_C_ForceDestroyCore, Temp_object_Variable3) == 0x000018, "Member 'BP_GSM_BaseMOBA_C_ForceDestroyCore::Temp_object_Variable3' has a wrong offset!");
static_assert(offsetof(BP_GSM_BaseMOBA_C_ForceDestroyCore, K2Node_Select_Default) == 0x000020, "Member 'BP_GSM_BaseMOBA_C_ForceDestroyCore::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_GSM_BaseMOBA_C_ForceDestroyCore, CallFunc_GetAbilitySystemComponent_ReturnValue) == 0x000028, "Member 'BP_GSM_BaseMOBA_C_ForceDestroyCore::CallFunc_GetAbilitySystemComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GSM_BaseMOBA_C_ForceDestroyCore, CallFunc_BP_ApplyGameplayEffectToSelf_ReturnValue) == 0x000030, "Member 'BP_GSM_BaseMOBA_C_ForceDestroyCore::CallFunc_BP_ApplyGameplayEffectToSelf_ReturnValue' has a wrong offset!");

}

