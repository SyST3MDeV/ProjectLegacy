#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GlowingRarityText

#include "Basic.hpp"

#include "OrionGame_structs.hpp"


namespace SDK::Params
{

// Function GlowingRarityText.GlowingRarityText_C.ExecuteUbergraph_GlowingRarityText
// 0x0008 (0x0008 - 0x0000)
struct GlowingRarityText_C_ExecuteUbergraph_GlowingRarityText final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EOrionItemRarity                              K2Node_Event_ItemRarity;                           // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bHideGlowingText;                     // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(GlowingRarityText_C_ExecuteUbergraph_GlowingRarityText) == 0x000004, "Wrong alignment on GlowingRarityText_C_ExecuteUbergraph_GlowingRarityText");
static_assert(sizeof(GlowingRarityText_C_ExecuteUbergraph_GlowingRarityText) == 0x000008, "Wrong size on GlowingRarityText_C_ExecuteUbergraph_GlowingRarityText");
static_assert(offsetof(GlowingRarityText_C_ExecuteUbergraph_GlowingRarityText, EntryPoint) == 0x000000, "Member 'GlowingRarityText_C_ExecuteUbergraph_GlowingRarityText::EntryPoint' has a wrong offset!");
static_assert(offsetof(GlowingRarityText_C_ExecuteUbergraph_GlowingRarityText, K2Node_Event_ItemRarity) == 0x000004, "Member 'GlowingRarityText_C_ExecuteUbergraph_GlowingRarityText::K2Node_Event_ItemRarity' has a wrong offset!");
static_assert(offsetof(GlowingRarityText_C_ExecuteUbergraph_GlowingRarityText, K2Node_Event_bHideGlowingText) == 0x000005, "Member 'GlowingRarityText_C_ExecuteUbergraph_GlowingRarityText::K2Node_Event_bHideGlowingText' has a wrong offset!");
static_assert(offsetof(GlowingRarityText_C_ExecuteUbergraph_GlowingRarityText, K2Node_Event_IsDesignTime) == 0x000006, "Member 'GlowingRarityText_C_ExecuteUbergraph_GlowingRarityText::K2Node_Event_IsDesignTime' has a wrong offset!");

// Function GlowingRarityText.GlowingRarityText_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct GlowingRarityText_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(GlowingRarityText_C_PreConstruct) == 0x000001, "Wrong alignment on GlowingRarityText_C_PreConstruct");
static_assert(sizeof(GlowingRarityText_C_PreConstruct) == 0x000001, "Wrong size on GlowingRarityText_C_PreConstruct");
static_assert(offsetof(GlowingRarityText_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'GlowingRarityText_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function GlowingRarityText.GlowingRarityText_C.SetRarityBP
// 0x0002 (0x0002 - 0x0000)
struct GlowingRarityText_C_SetRarityBP final
{
public:
	EOrionItemRarity                              ItemRarity;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bHideGlowingText;                                  // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(GlowingRarityText_C_SetRarityBP) == 0x000001, "Wrong alignment on GlowingRarityText_C_SetRarityBP");
static_assert(sizeof(GlowingRarityText_C_SetRarityBP) == 0x000002, "Wrong size on GlowingRarityText_C_SetRarityBP");
static_assert(offsetof(GlowingRarityText_C_SetRarityBP, ItemRarity) == 0x000000, "Member 'GlowingRarityText_C_SetRarityBP::ItemRarity' has a wrong offset!");
static_assert(offsetof(GlowingRarityText_C_SetRarityBP, bHideGlowingText) == 0x000001, "Member 'GlowingRarityText_C_SetRarityBP::bHideGlowingText' has a wrong offset!");

// Function GlowingRarityText.GlowingRarityText_C.SetRarityValue
// 0x0003 (0x0003 - 0x0000)
struct GlowingRarityText_C_SetRarityValue final
{
public:
	EOrionItemRarity                              ItemRarity;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          HideGlowingText;                                   // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(GlowingRarityText_C_SetRarityValue) == 0x000001, "Wrong alignment on GlowingRarityText_C_SetRarityValue");
static_assert(sizeof(GlowingRarityText_C_SetRarityValue) == 0x000003, "Wrong size on GlowingRarityText_C_SetRarityValue");
static_assert(offsetof(GlowingRarityText_C_SetRarityValue, ItemRarity) == 0x000000, "Member 'GlowingRarityText_C_SetRarityValue::ItemRarity' has a wrong offset!");
static_assert(offsetof(GlowingRarityText_C_SetRarityValue, HideGlowingText) == 0x000001, "Member 'GlowingRarityText_C_SetRarityValue::HideGlowingText' has a wrong offset!");
static_assert(offsetof(GlowingRarityText_C_SetRarityValue, K2Node_SwitchEnum_CmpSuccess) == 0x000002, "Member 'GlowingRarityText_C_SetRarityValue::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

}

