#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: RewardWidget

#include "Basic.hpp"

#include "RewardWidget_classes.hpp"
#include "RewardWidget_parameters.hpp"


namespace SDK
{

// Function RewardWidget.RewardWidget_C.ExecuteUbergraph_RewardWidget
// (HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void URewardWidget_C::ExecuteUbergraph_RewardWidget(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RewardWidget_C", "ExecuteUbergraph_RewardWidget");

	Params::RewardWidget_C_ExecuteUbergraph_RewardWidget Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function RewardWidget.RewardWidget_C.PreConstruct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// bool                                    IsDesignTime                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void URewardWidget_C::PreConstruct(bool IsDesignTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RewardWidget_C", "PreConstruct");

	Params::RewardWidget_C_PreConstruct Parms{};

	Parms.IsDesignTime = IsDesignTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function RewardWidget.RewardWidget_C.OnVaultFlourish
// (Event, Public, BlueprintEvent)

void URewardWidget_C::OnVaultFlourish()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RewardWidget_C", "OnVaultFlourish");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RewardWidget.RewardWidget_C.OnVaultFlash
// (Event, Public, BlueprintEvent)
// Parameters:
// int32                                   RoundsRemaining                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void URewardWidget_C::OnVaultFlash(int32 RoundsRemaining)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RewardWidget_C", "OnVaultFlash");

	Params::RewardWidget_C_OnVaultFlash Parms{};

	Parms.RoundsRemaining = RoundsRemaining;

	UObject::ProcessEvent(Func, &Parms);
}


// Function RewardWidget.RewardWidget_C.OnMouseEnter
// (BlueprintCosmetic, Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// struct FGeometry                        MyGeometry                                             (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
// struct FPointerEvent                    MouseEvent                                             (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void URewardWidget_C::OnMouseEnter(const struct FGeometry& MyGeometry, const struct FPointerEvent& MouseEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RewardWidget_C", "OnMouseEnter");

	Params::RewardWidget_C_OnMouseEnter Parms{};

	Parms.MyGeometry = std::move(MyGeometry);
	Parms.MouseEvent = std::move(MouseEvent);

	UObject::ProcessEvent(Func, &Parms);
}


// Function RewardWidget.RewardWidget_C.OnMouseLeave
// (BlueprintCosmetic, Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// struct FPointerEvent                    MouseEvent                                             (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void URewardWidget_C::OnMouseLeave(const struct FPointerEvent& MouseEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RewardWidget_C", "OnMouseLeave");

	Params::RewardWidget_C_OnMouseLeave Parms{};

	Parms.MouseEvent = std::move(MouseEvent);

	UObject::ProcessEvent(Func, &Parms);
}


// Function RewardWidget.RewardWidget_C.OnActiveStateSet
// (Event, Protected, BlueprintEvent)
// Parameters:
// EOrionRewardWidgetState                 State                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void URewardWidget_C::OnActiveStateSet(EOrionRewardWidgetState State)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RewardWidget_C", "OnActiveStateSet");

	Params::RewardWidget_C_OnActiveStateSet Parms{};

	Parms.State = State;

	UObject::ProcessEvent(Func, &Parms);
}


// Function RewardWidget.RewardWidget_C.OnDataSet
// (Event, Protected, BlueprintEvent)
// Parameters:
// EOrionItemRarity                        ItemRarity                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// EOrionItemType                          ItemType                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void URewardWidget_C::OnDataSet(EOrionItemRarity ItemRarity, EOrionItemType ItemType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RewardWidget_C", "OnDataSet");

	Params::RewardWidget_C_OnDataSet Parms{};

	Parms.ItemRarity = ItemRarity;
	Parms.ItemType = ItemType;

	UObject::ProcessEvent(Func, &Parms);
}


// Function RewardWidget.RewardWidget_C.Fanfare Out
// (Public, BlueprintCallable, BlueprintEvent)

void URewardWidget_C::Fanfare_Out()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RewardWidget_C", "Fanfare Out");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RewardWidget.RewardWidget_C.Fanfare In
// (Public, BlueprintCallable, BlueprintEvent)

void URewardWidget_C::Fanfare_In()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RewardWidget_C", "Fanfare In");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RewardWidget.RewardWidget_C.Generic Fadout
// (Public, BlueprintCallable, BlueprintEvent)

void URewardWidget_C::Generic_Fadout()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RewardWidget_C", "Generic Fadout");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RewardWidget.RewardWidget_C.Generic FadeIn
// (Public, BlueprintCallable, BlueprintEvent)

void URewardWidget_C::Generic_FadeIn_0()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RewardWidget_C", "Generic FadeIn");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RewardWidget.RewardWidget_C.Postgame Fanfare
// (Public, BlueprintCallable, BlueprintEvent)

void URewardWidget_C::Postgame_Fanfare()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RewardWidget_C", "Postgame Fanfare");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RewardWidget.RewardWidget_C.Default Complete
// (Public, BlueprintCallable, BlueprintEvent)

void URewardWidget_C::Default_Complete()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RewardWidget_C", "Default Complete");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RewardWidget.RewardWidget_C.Bonus Quest Complete
// (Public, BlueprintCallable, BlueprintEvent)

void URewardWidget_C::Bonus_Quest_Complete()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RewardWidget_C", "Bonus Quest Complete");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RewardWidget.RewardWidget_C.Fanfare-To-Complete
// (Public, BlueprintCallable, BlueprintEvent)

void URewardWidget_C::FanfareMinusToMinusComplete()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RewardWidget_C", "Fanfare-To-Complete");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RewardWidget.RewardWidget_C.PostGame Summary
// (Public, BlueprintCallable, BlueprintEvent)

void URewardWidget_C::PostGame_Summary()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RewardWidget_C", "PostGame Summary");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RewardWidget.RewardWidget_C.Fanfare Remain Visible
// (Public, BlueprintCallable, BlueprintEvent)

void URewardWidget_C::Fanfare_Remain_Visible()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RewardWidget_C", "Fanfare Remain Visible");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RewardWidget.RewardWidget_C.Fanfare Collapse
// (Public, BlueprintCallable, BlueprintEvent)

void URewardWidget_C::Fanfare_Collapse()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RewardWidget_C", "Fanfare Collapse");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RewardWidget.RewardWidget_C.Get Type Switcher Index
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// EOrionItemType                          Type                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Index_0                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void URewardWidget_C::Get_Type_Switcher_Index(EOrionItemType Type, int32* Index_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RewardWidget_C", "Get Type Switcher Index");

	Params::RewardWidget_C_Get_Type_Switcher_Index Parms{};

	Parms.Type = Type;

	UObject::ProcessEvent(Func, &Parms);

	if (Index_0 != nullptr)
		*Index_0 = Parms.Index_0;
}

}

