#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GA_Card_UnholyGaze

#include "Basic.hpp"

#include "GameplayAbilities_structs.hpp"


namespace SDK::Params
{

// Function GA_Card_UnholyGaze.GA_Card_UnholyGaze_C.ExecuteUbergraph_GA_Card_UnholyGaze
// 0x0200 (0x0200 - 0x0000)
struct GA_Card_UnholyGaze_C_ExecuteUbergraph_GA_Card_UnholyGaze final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayAbilityTargetDataHandle       K2Node_CustomEvent_Targets3;                       // 0x0008(0x0020)(ConstParm)
	TDelegate<void(struct FGameplayAbilityTargetDataHandle& Targets)> K2Node_CreateDelegate_OutputDelegate;              // 0x0028(0x0010)(ZeroConstructor, NoDestructor)
	struct FGameplayAbilityTargetDataHandle       Temp_struct_Variable;                              // 0x0038(0x0020)()
	class UOrionAbilityTask_StartTargeting*       CallFunc_StartTargeting_ReturnValue;               // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_61[0x7];                                       // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(struct FGameplayAbilityTargetDataHandle& Targets)> K2Node_CreateDelegate_OutputDelegate2;             // 0x0068(0x0010)(ZeroConstructor, NoDestructor)
	struct FGameplayAbilityTargetDataHandle       K2Node_CustomEvent_Targets2;                       // 0x0078(0x0020)(ConstParm)
	struct FGameplayAbilityTargetDataHandle       K2Node_CustomEvent_Targets;                        // 0x0098(0x0020)(ConstParm)
	TDelegate<void(struct FGameplayAbilityTargetDataHandle& Targets)> K2Node_CreateDelegate_OutputDelegate3;             // 0x00B8(0x0010)(ZeroConstructor, NoDestructor)
	struct FGameplayAbilityTargetDataHandle       Temp_struct_Variable2;                             // 0x00C8(0x0020)()
	class UOrionAbilityTask_StartTargeting*       CallFunc_StartTargeting_ReturnValue2;              // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue2;                     // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_F1[0x7];                                       // 0x00F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate4;             // 0x00F8(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate5;             // 0x0108(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate6;             // 0x0118(0x0010)(ZeroConstructor, NoDestructor)
	class UAbilityTask_StartAbilityState*         CallFunc_StartAbilityState_ReturnValue;            // 0x0128(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue3;                     // 0x0130(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_131[0x7];                                      // 0x0131(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayAbilityTargetDataHandle       K2Node_CustomEvent_Targets4;                       // 0x0138(0x0020)(ConstParm)
	bool                                          CallFunc_K2_CommitAbilityCooldown_ReturnValue;     // 0x0158(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_159[0x7];                                      // 0x0159(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(struct FGameplayAbilityTargetDataHandle& Targets)> K2Node_CreateDelegate_OutputDelegate7;             // 0x0160(0x0010)(ZeroConstructor, NoDestructor)
	int32                                         CallFunc_GetAbilityLevel_ReturnValue;              // 0x0170(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetAbilityLevel_ReturnValue2;             // 0x0174(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FActiveGameplayEffectHandle>    CallFunc_BP_ApplyGameplayEffectToTarget_ReturnValue; // 0x0178(0x0010)(ZeroConstructor, ReferenceParm)
	bool                                          CallFunc_K2_CommitAbilityCost_ReturnValue;         // 0x0188(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_189[0x7];                                      // 0x0189(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FActiveGameplayEffectHandle>    CallFunc_BP_ApplyGameplayEffectToTarget_ReturnValue2; // 0x0190(0x0010)(ZeroConstructor, ReferenceParm)
	int32                                         CallFunc_GetAbilityLevel_ReturnValue3;             // 0x01A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x01A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetValueAtLevel_ReturnValue;              // 0x01A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1AC[0x4];                                      // 0x01AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAbilityTask_WaitDelay*                 CallFunc_WaitDelay_ReturnValue;                    // 0x01B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayAbilityActorInfo              CallFunc_GetActorInfo_ReturnValue;                 // 0x01B8(0x0040)(ContainsInstancedReference)
	bool                                          CallFunc_IsValid_ReturnValue4;                     // 0x01F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(GA_Card_UnholyGaze_C_ExecuteUbergraph_GA_Card_UnholyGaze) == 0x000008, "Wrong alignment on GA_Card_UnholyGaze_C_ExecuteUbergraph_GA_Card_UnholyGaze");
static_assert(sizeof(GA_Card_UnholyGaze_C_ExecuteUbergraph_GA_Card_UnholyGaze) == 0x000200, "Wrong size on GA_Card_UnholyGaze_C_ExecuteUbergraph_GA_Card_UnholyGaze");
static_assert(offsetof(GA_Card_UnholyGaze_C_ExecuteUbergraph_GA_Card_UnholyGaze, EntryPoint) == 0x000000, "Member 'GA_Card_UnholyGaze_C_ExecuteUbergraph_GA_Card_UnholyGaze::EntryPoint' has a wrong offset!");
static_assert(offsetof(GA_Card_UnholyGaze_C_ExecuteUbergraph_GA_Card_UnholyGaze, K2Node_CustomEvent_Targets3) == 0x000008, "Member 'GA_Card_UnholyGaze_C_ExecuteUbergraph_GA_Card_UnholyGaze::K2Node_CustomEvent_Targets3' has a wrong offset!");
static_assert(offsetof(GA_Card_UnholyGaze_C_ExecuteUbergraph_GA_Card_UnholyGaze, K2Node_CreateDelegate_OutputDelegate) == 0x000028, "Member 'GA_Card_UnholyGaze_C_ExecuteUbergraph_GA_Card_UnholyGaze::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(GA_Card_UnholyGaze_C_ExecuteUbergraph_GA_Card_UnholyGaze, Temp_struct_Variable) == 0x000038, "Member 'GA_Card_UnholyGaze_C_ExecuteUbergraph_GA_Card_UnholyGaze::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(GA_Card_UnholyGaze_C_ExecuteUbergraph_GA_Card_UnholyGaze, CallFunc_StartTargeting_ReturnValue) == 0x000058, "Member 'GA_Card_UnholyGaze_C_ExecuteUbergraph_GA_Card_UnholyGaze::CallFunc_StartTargeting_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Card_UnholyGaze_C_ExecuteUbergraph_GA_Card_UnholyGaze, CallFunc_IsValid_ReturnValue) == 0x000060, "Member 'GA_Card_UnholyGaze_C_ExecuteUbergraph_GA_Card_UnholyGaze::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Card_UnholyGaze_C_ExecuteUbergraph_GA_Card_UnholyGaze, K2Node_CreateDelegate_OutputDelegate2) == 0x000068, "Member 'GA_Card_UnholyGaze_C_ExecuteUbergraph_GA_Card_UnholyGaze::K2Node_CreateDelegate_OutputDelegate2' has a wrong offset!");
static_assert(offsetof(GA_Card_UnholyGaze_C_ExecuteUbergraph_GA_Card_UnholyGaze, K2Node_CustomEvent_Targets2) == 0x000078, "Member 'GA_Card_UnholyGaze_C_ExecuteUbergraph_GA_Card_UnholyGaze::K2Node_CustomEvent_Targets2' has a wrong offset!");
static_assert(offsetof(GA_Card_UnholyGaze_C_ExecuteUbergraph_GA_Card_UnholyGaze, K2Node_CustomEvent_Targets) == 0x000098, "Member 'GA_Card_UnholyGaze_C_ExecuteUbergraph_GA_Card_UnholyGaze::K2Node_CustomEvent_Targets' has a wrong offset!");
static_assert(offsetof(GA_Card_UnholyGaze_C_ExecuteUbergraph_GA_Card_UnholyGaze, K2Node_CreateDelegate_OutputDelegate3) == 0x0000B8, "Member 'GA_Card_UnholyGaze_C_ExecuteUbergraph_GA_Card_UnholyGaze::K2Node_CreateDelegate_OutputDelegate3' has a wrong offset!");
static_assert(offsetof(GA_Card_UnholyGaze_C_ExecuteUbergraph_GA_Card_UnholyGaze, Temp_struct_Variable2) == 0x0000C8, "Member 'GA_Card_UnholyGaze_C_ExecuteUbergraph_GA_Card_UnholyGaze::Temp_struct_Variable2' has a wrong offset!");
static_assert(offsetof(GA_Card_UnholyGaze_C_ExecuteUbergraph_GA_Card_UnholyGaze, CallFunc_StartTargeting_ReturnValue2) == 0x0000E8, "Member 'GA_Card_UnholyGaze_C_ExecuteUbergraph_GA_Card_UnholyGaze::CallFunc_StartTargeting_ReturnValue2' has a wrong offset!");
static_assert(offsetof(GA_Card_UnholyGaze_C_ExecuteUbergraph_GA_Card_UnholyGaze, CallFunc_IsValid_ReturnValue2) == 0x0000F0, "Member 'GA_Card_UnholyGaze_C_ExecuteUbergraph_GA_Card_UnholyGaze::CallFunc_IsValid_ReturnValue2' has a wrong offset!");
static_assert(offsetof(GA_Card_UnholyGaze_C_ExecuteUbergraph_GA_Card_UnholyGaze, K2Node_CreateDelegate_OutputDelegate4) == 0x0000F8, "Member 'GA_Card_UnholyGaze_C_ExecuteUbergraph_GA_Card_UnholyGaze::K2Node_CreateDelegate_OutputDelegate4' has a wrong offset!");
static_assert(offsetof(GA_Card_UnholyGaze_C_ExecuteUbergraph_GA_Card_UnholyGaze, K2Node_CreateDelegate_OutputDelegate5) == 0x000108, "Member 'GA_Card_UnholyGaze_C_ExecuteUbergraph_GA_Card_UnholyGaze::K2Node_CreateDelegate_OutputDelegate5' has a wrong offset!");
static_assert(offsetof(GA_Card_UnholyGaze_C_ExecuteUbergraph_GA_Card_UnholyGaze, K2Node_CreateDelegate_OutputDelegate6) == 0x000118, "Member 'GA_Card_UnholyGaze_C_ExecuteUbergraph_GA_Card_UnholyGaze::K2Node_CreateDelegate_OutputDelegate6' has a wrong offset!");
static_assert(offsetof(GA_Card_UnholyGaze_C_ExecuteUbergraph_GA_Card_UnholyGaze, CallFunc_StartAbilityState_ReturnValue) == 0x000128, "Member 'GA_Card_UnholyGaze_C_ExecuteUbergraph_GA_Card_UnholyGaze::CallFunc_StartAbilityState_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Card_UnholyGaze_C_ExecuteUbergraph_GA_Card_UnholyGaze, CallFunc_IsValid_ReturnValue3) == 0x000130, "Member 'GA_Card_UnholyGaze_C_ExecuteUbergraph_GA_Card_UnholyGaze::CallFunc_IsValid_ReturnValue3' has a wrong offset!");
static_assert(offsetof(GA_Card_UnholyGaze_C_ExecuteUbergraph_GA_Card_UnholyGaze, K2Node_CustomEvent_Targets4) == 0x000138, "Member 'GA_Card_UnholyGaze_C_ExecuteUbergraph_GA_Card_UnholyGaze::K2Node_CustomEvent_Targets4' has a wrong offset!");
static_assert(offsetof(GA_Card_UnholyGaze_C_ExecuteUbergraph_GA_Card_UnholyGaze, CallFunc_K2_CommitAbilityCooldown_ReturnValue) == 0x000158, "Member 'GA_Card_UnholyGaze_C_ExecuteUbergraph_GA_Card_UnholyGaze::CallFunc_K2_CommitAbilityCooldown_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Card_UnholyGaze_C_ExecuteUbergraph_GA_Card_UnholyGaze, K2Node_CreateDelegate_OutputDelegate7) == 0x000160, "Member 'GA_Card_UnholyGaze_C_ExecuteUbergraph_GA_Card_UnholyGaze::K2Node_CreateDelegate_OutputDelegate7' has a wrong offset!");
static_assert(offsetof(GA_Card_UnholyGaze_C_ExecuteUbergraph_GA_Card_UnholyGaze, CallFunc_GetAbilityLevel_ReturnValue) == 0x000170, "Member 'GA_Card_UnholyGaze_C_ExecuteUbergraph_GA_Card_UnholyGaze::CallFunc_GetAbilityLevel_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Card_UnholyGaze_C_ExecuteUbergraph_GA_Card_UnholyGaze, CallFunc_GetAbilityLevel_ReturnValue2) == 0x000174, "Member 'GA_Card_UnholyGaze_C_ExecuteUbergraph_GA_Card_UnholyGaze::CallFunc_GetAbilityLevel_ReturnValue2' has a wrong offset!");
static_assert(offsetof(GA_Card_UnholyGaze_C_ExecuteUbergraph_GA_Card_UnholyGaze, CallFunc_BP_ApplyGameplayEffectToTarget_ReturnValue) == 0x000178, "Member 'GA_Card_UnholyGaze_C_ExecuteUbergraph_GA_Card_UnholyGaze::CallFunc_BP_ApplyGameplayEffectToTarget_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Card_UnholyGaze_C_ExecuteUbergraph_GA_Card_UnholyGaze, CallFunc_K2_CommitAbilityCost_ReturnValue) == 0x000188, "Member 'GA_Card_UnholyGaze_C_ExecuteUbergraph_GA_Card_UnholyGaze::CallFunc_K2_CommitAbilityCost_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Card_UnholyGaze_C_ExecuteUbergraph_GA_Card_UnholyGaze, CallFunc_BP_ApplyGameplayEffectToTarget_ReturnValue2) == 0x000190, "Member 'GA_Card_UnholyGaze_C_ExecuteUbergraph_GA_Card_UnholyGaze::CallFunc_BP_ApplyGameplayEffectToTarget_ReturnValue2' has a wrong offset!");
static_assert(offsetof(GA_Card_UnholyGaze_C_ExecuteUbergraph_GA_Card_UnholyGaze, CallFunc_GetAbilityLevel_ReturnValue3) == 0x0001A0, "Member 'GA_Card_UnholyGaze_C_ExecuteUbergraph_GA_Card_UnholyGaze::CallFunc_GetAbilityLevel_ReturnValue3' has a wrong offset!");
static_assert(offsetof(GA_Card_UnholyGaze_C_ExecuteUbergraph_GA_Card_UnholyGaze, CallFunc_Conv_IntToFloat_ReturnValue) == 0x0001A4, "Member 'GA_Card_UnholyGaze_C_ExecuteUbergraph_GA_Card_UnholyGaze::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Card_UnholyGaze_C_ExecuteUbergraph_GA_Card_UnholyGaze, CallFunc_GetValueAtLevel_ReturnValue) == 0x0001A8, "Member 'GA_Card_UnholyGaze_C_ExecuteUbergraph_GA_Card_UnholyGaze::CallFunc_GetValueAtLevel_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Card_UnholyGaze_C_ExecuteUbergraph_GA_Card_UnholyGaze, CallFunc_WaitDelay_ReturnValue) == 0x0001B0, "Member 'GA_Card_UnholyGaze_C_ExecuteUbergraph_GA_Card_UnholyGaze::CallFunc_WaitDelay_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Card_UnholyGaze_C_ExecuteUbergraph_GA_Card_UnholyGaze, CallFunc_GetActorInfo_ReturnValue) == 0x0001B8, "Member 'GA_Card_UnholyGaze_C_ExecuteUbergraph_GA_Card_UnholyGaze::CallFunc_GetActorInfo_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Card_UnholyGaze_C_ExecuteUbergraph_GA_Card_UnholyGaze, CallFunc_IsValid_ReturnValue4) == 0x0001F8, "Member 'GA_Card_UnholyGaze_C_ExecuteUbergraph_GA_Card_UnholyGaze::CallFunc_IsValid_ReturnValue4' has a wrong offset!");

// Function GA_Card_UnholyGaze.GA_Card_UnholyGaze_C.Cancelled_9450A0414E06BC32F08CB8B81E836276
// 0x0020 (0x0020 - 0x0000)
struct GA_Card_UnholyGaze_C_Cancelled_9450A0414E06BC32F08CB8B81E836276 final
{
public:
	struct FGameplayAbilityTargetDataHandle       Targets;                                           // 0x0000(0x0020)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(GA_Card_UnholyGaze_C_Cancelled_9450A0414E06BC32F08CB8B81E836276) == 0x000008, "Wrong alignment on GA_Card_UnholyGaze_C_Cancelled_9450A0414E06BC32F08CB8B81E836276");
static_assert(sizeof(GA_Card_UnholyGaze_C_Cancelled_9450A0414E06BC32F08CB8B81E836276) == 0x000020, "Wrong size on GA_Card_UnholyGaze_C_Cancelled_9450A0414E06BC32F08CB8B81E836276");
static_assert(offsetof(GA_Card_UnholyGaze_C_Cancelled_9450A0414E06BC32F08CB8B81E836276, Targets) == 0x000000, "Member 'GA_Card_UnholyGaze_C_Cancelled_9450A0414E06BC32F08CB8B81E836276::Targets' has a wrong offset!");

// Function GA_Card_UnholyGaze.GA_Card_UnholyGaze_C.Cancelled_E21DA3FC445E8473C5508C84C17BD469
// 0x0020 (0x0020 - 0x0000)
struct GA_Card_UnholyGaze_C_Cancelled_E21DA3FC445E8473C5508C84C17BD469 final
{
public:
	struct FGameplayAbilityTargetDataHandle       Targets;                                           // 0x0000(0x0020)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(GA_Card_UnholyGaze_C_Cancelled_E21DA3FC445E8473C5508C84C17BD469) == 0x000008, "Wrong alignment on GA_Card_UnholyGaze_C_Cancelled_E21DA3FC445E8473C5508C84C17BD469");
static_assert(sizeof(GA_Card_UnholyGaze_C_Cancelled_E21DA3FC445E8473C5508C84C17BD469) == 0x000020, "Wrong size on GA_Card_UnholyGaze_C_Cancelled_E21DA3FC445E8473C5508C84C17BD469");
static_assert(offsetof(GA_Card_UnholyGaze_C_Cancelled_E21DA3FC445E8473C5508C84C17BD469, Targets) == 0x000000, "Member 'GA_Card_UnholyGaze_C_Cancelled_E21DA3FC445E8473C5508C84C17BD469::Targets' has a wrong offset!");

// Function GA_Card_UnholyGaze.GA_Card_UnholyGaze_C.Confirmed_9450A0414E06BC32F08CB8B81E836276
// 0x0020 (0x0020 - 0x0000)
struct GA_Card_UnholyGaze_C_Confirmed_9450A0414E06BC32F08CB8B81E836276 final
{
public:
	struct FGameplayAbilityTargetDataHandle       Targets;                                           // 0x0000(0x0020)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(GA_Card_UnholyGaze_C_Confirmed_9450A0414E06BC32F08CB8B81E836276) == 0x000008, "Wrong alignment on GA_Card_UnholyGaze_C_Confirmed_9450A0414E06BC32F08CB8B81E836276");
static_assert(sizeof(GA_Card_UnholyGaze_C_Confirmed_9450A0414E06BC32F08CB8B81E836276) == 0x000020, "Wrong size on GA_Card_UnholyGaze_C_Confirmed_9450A0414E06BC32F08CB8B81E836276");
static_assert(offsetof(GA_Card_UnholyGaze_C_Confirmed_9450A0414E06BC32F08CB8B81E836276, Targets) == 0x000000, "Member 'GA_Card_UnholyGaze_C_Confirmed_9450A0414E06BC32F08CB8B81E836276::Targets' has a wrong offset!");

// Function GA_Card_UnholyGaze.GA_Card_UnholyGaze_C.Confirmed_E21DA3FC445E8473C5508C84C17BD469
// 0x0020 (0x0020 - 0x0000)
struct GA_Card_UnholyGaze_C_Confirmed_E21DA3FC445E8473C5508C84C17BD469 final
{
public:
	struct FGameplayAbilityTargetDataHandle       Targets;                                           // 0x0000(0x0020)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(GA_Card_UnholyGaze_C_Confirmed_E21DA3FC445E8473C5508C84C17BD469) == 0x000008, "Wrong alignment on GA_Card_UnholyGaze_C_Confirmed_E21DA3FC445E8473C5508C84C17BD469");
static_assert(sizeof(GA_Card_UnholyGaze_C_Confirmed_E21DA3FC445E8473C5508C84C17BD469) == 0x000020, "Wrong size on GA_Card_UnholyGaze_C_Confirmed_E21DA3FC445E8473C5508C84C17BD469");
static_assert(offsetof(GA_Card_UnholyGaze_C_Confirmed_E21DA3FC445E8473C5508C84C17BD469, Targets) == 0x000000, "Member 'GA_Card_UnholyGaze_C_Confirmed_E21DA3FC445E8473C5508C84C17BD469::Targets' has a wrong offset!");

}

