#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Proj_Card_VisionLaser

#include "Basic.hpp"

#include "Proj_Card_VisionLaser_classes.hpp"
#include "Proj_Card_VisionLaser_parameters.hpp"


namespace SDK
{

// Function Proj_Card_VisionLaser.Proj_Card_VisionLaser_C.ExecuteUbergraph_Proj_Card_VisionLaser
// (HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AProj_Card_VisionLaser_C::ExecuteUbergraph_Proj_Card_VisionLaser(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Proj_Card_VisionLaser_C", "ExecuteUbergraph_Proj_Card_VisionLaser");

	Params::Proj_Card_VisionLaser_C_ExecuteUbergraph_Proj_Card_VisionLaser Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Proj_Card_VisionLaser.Proj_Card_VisionLaser_C.OnStop
// (Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// struct FHitResult                       Hit                                                    (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)

void AProj_Card_VisionLaser_C::OnStop(const struct FHitResult& Hit)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Proj_Card_VisionLaser_C", "OnStop");

	Params::Proj_Card_VisionLaser_C_OnStop Parms{};

	Parms.Hit = std::move(Hit);

	UObject::ProcessEvent(Func, &Parms);
}


// Function Proj_Card_VisionLaser.Proj_Card_VisionLaser_C.UserConstructionScript
// (Event, Public, BlueprintCallable, BlueprintEvent)

void AProj_Card_VisionLaser_C::UserConstructionScript()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Proj_Card_VisionLaser_C", "UserConstructionScript");

	UObject::ProcessEvent(Func, nullptr);
}

}

