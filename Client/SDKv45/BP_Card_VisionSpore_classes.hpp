#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Card_VisionSpore

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "OrionGame_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_Card_VisionSpore.BP_Card_VisionSpore_C
// 0x0078 (0x05A0 - 0x0528)
class ABP_Card_VisionSpore_C final : public AOrionDamageableActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0528(0x0008)(Transient, DuplicateTransient)
	class UOrionDecalComponent*                   OrionDecal;                                        // 0x0530(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               P_card_visionsporeeye;                             // 0x0538(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               P_VisionSporeFX_Stage_01;                          // 0x0540(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 Venus_RMB_plant;                                   // 0x0548(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USphereComponent*                       SightRange;                                        // 0x0550(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UOrionGameplayVolumeComponent*          OrionGameplayVolume;                               // 0x0558(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         Timeline_1_Pulse_DD04B3AF44CA2650C08532AA5E98B813; // 0x0560(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            Timeline_1__Direction_DD04B3AF44CA2650C08532AA5E98B813; // 0x0564(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_565[0x3];                                      // 0x0565(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     Timeline_1;                                        // 0x0568(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Timeline_0_FlowerScale_2125C0434C0C8947A6DCE4AC41DC513B; // 0x0570(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            Timeline_0__Direction_2125C0434C0C8947A6DCE4AC41DC513B; // 0x057C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_57D[0x3];                                      // 0x057D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     Timeline_0;                                        // 0x0580(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Radius;                                            // 0x0588(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         RadiusIncreaseFrequency;                           // 0x058C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         MaxRadius;                                         // 0x0590(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_594[0x4];                                      // 0x0594(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               Decal_MID;                                         // 0x0598(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_Card_VisionSpore(int32 EntryPoint);
	void ReceiveBeginPlay();
	void RadiusIncrease();
	void Timeline_1__UpdateFunc();
	void Timeline_1__FinishedFunc();
	void Timeline_0__UpdateFunc();
	void Timeline_0__FinishedFunc();
	void UserConstructionScript();
	TArray<class UMeshComponent*> GetHighlightableMeshes();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_Card_VisionSpore_C">();
	}
	static class ABP_Card_VisionSpore_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_Card_VisionSpore_C>();
	}
};
static_assert(alignof(ABP_Card_VisionSpore_C) == 0x000008, "Wrong alignment on ABP_Card_VisionSpore_C");
static_assert(sizeof(ABP_Card_VisionSpore_C) == 0x0005A0, "Wrong size on ABP_Card_VisionSpore_C");
static_assert(offsetof(ABP_Card_VisionSpore_C, UberGraphFrame) == 0x000528, "Member 'ABP_Card_VisionSpore_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_Card_VisionSpore_C, OrionDecal) == 0x000530, "Member 'ABP_Card_VisionSpore_C::OrionDecal' has a wrong offset!");
static_assert(offsetof(ABP_Card_VisionSpore_C, P_card_visionsporeeye) == 0x000538, "Member 'ABP_Card_VisionSpore_C::P_card_visionsporeeye' has a wrong offset!");
static_assert(offsetof(ABP_Card_VisionSpore_C, P_VisionSporeFX_Stage_01) == 0x000540, "Member 'ABP_Card_VisionSpore_C::P_VisionSporeFX_Stage_01' has a wrong offset!");
static_assert(offsetof(ABP_Card_VisionSpore_C, Venus_RMB_plant) == 0x000548, "Member 'ABP_Card_VisionSpore_C::Venus_RMB_plant' has a wrong offset!");
static_assert(offsetof(ABP_Card_VisionSpore_C, SightRange) == 0x000550, "Member 'ABP_Card_VisionSpore_C::SightRange' has a wrong offset!");
static_assert(offsetof(ABP_Card_VisionSpore_C, OrionGameplayVolume) == 0x000558, "Member 'ABP_Card_VisionSpore_C::OrionGameplayVolume' has a wrong offset!");
static_assert(offsetof(ABP_Card_VisionSpore_C, Timeline_1_Pulse_DD04B3AF44CA2650C08532AA5E98B813) == 0x000560, "Member 'ABP_Card_VisionSpore_C::Timeline_1_Pulse_DD04B3AF44CA2650C08532AA5E98B813' has a wrong offset!");
static_assert(offsetof(ABP_Card_VisionSpore_C, Timeline_1__Direction_DD04B3AF44CA2650C08532AA5E98B813) == 0x000564, "Member 'ABP_Card_VisionSpore_C::Timeline_1__Direction_DD04B3AF44CA2650C08532AA5E98B813' has a wrong offset!");
static_assert(offsetof(ABP_Card_VisionSpore_C, Timeline_1) == 0x000568, "Member 'ABP_Card_VisionSpore_C::Timeline_1' has a wrong offset!");
static_assert(offsetof(ABP_Card_VisionSpore_C, Timeline_0_FlowerScale_2125C0434C0C8947A6DCE4AC41DC513B) == 0x000570, "Member 'ABP_Card_VisionSpore_C::Timeline_0_FlowerScale_2125C0434C0C8947A6DCE4AC41DC513B' has a wrong offset!");
static_assert(offsetof(ABP_Card_VisionSpore_C, Timeline_0__Direction_2125C0434C0C8947A6DCE4AC41DC513B) == 0x00057C, "Member 'ABP_Card_VisionSpore_C::Timeline_0__Direction_2125C0434C0C8947A6DCE4AC41DC513B' has a wrong offset!");
static_assert(offsetof(ABP_Card_VisionSpore_C, Timeline_0) == 0x000580, "Member 'ABP_Card_VisionSpore_C::Timeline_0' has a wrong offset!");
static_assert(offsetof(ABP_Card_VisionSpore_C, Radius) == 0x000588, "Member 'ABP_Card_VisionSpore_C::Radius' has a wrong offset!");
static_assert(offsetof(ABP_Card_VisionSpore_C, RadiusIncreaseFrequency) == 0x00058C, "Member 'ABP_Card_VisionSpore_C::RadiusIncreaseFrequency' has a wrong offset!");
static_assert(offsetof(ABP_Card_VisionSpore_C, MaxRadius) == 0x000590, "Member 'ABP_Card_VisionSpore_C::MaxRadius' has a wrong offset!");
static_assert(offsetof(ABP_Card_VisionSpore_C, Decal_MID) == 0x000598, "Member 'ABP_Card_VisionSpore_C::Decal_MID' has a wrong offset!");

}

