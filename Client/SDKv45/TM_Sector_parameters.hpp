#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: TM_Sector

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function TM_Sector.TM_Sector_C.ExecuteUbergraph_TM_Sector
// 0x00D8 (0x00D8 - 0x0000)
struct TM_Sector_C_ExecuteUbergraph_TM_Sector final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_AngleHorizontal;                      // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_RadiusMin;                            // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_RadiusMax;                            // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_HeightMin;                            // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_HeightMax;                            // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Abs_ReturnValue;                          // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_NormalizeToRange_ReturnValue;             // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue2;              // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0030(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue2;           // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue3;           // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue2;                  // 0x0044(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetRelativeLocation_SweepHitResult;    // 0x0050(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(TM_Sector_C_ExecuteUbergraph_TM_Sector) == 0x000008, "Wrong alignment on TM_Sector_C_ExecuteUbergraph_TM_Sector");
static_assert(sizeof(TM_Sector_C_ExecuteUbergraph_TM_Sector) == 0x0000D8, "Wrong size on TM_Sector_C_ExecuteUbergraph_TM_Sector");
static_assert(offsetof(TM_Sector_C_ExecuteUbergraph_TM_Sector, EntryPoint) == 0x000000, "Member 'TM_Sector_C_ExecuteUbergraph_TM_Sector::EntryPoint' has a wrong offset!");
static_assert(offsetof(TM_Sector_C_ExecuteUbergraph_TM_Sector, K2Node_Event_AngleHorizontal) == 0x000004, "Member 'TM_Sector_C_ExecuteUbergraph_TM_Sector::K2Node_Event_AngleHorizontal' has a wrong offset!");
static_assert(offsetof(TM_Sector_C_ExecuteUbergraph_TM_Sector, K2Node_Event_RadiusMin) == 0x000008, "Member 'TM_Sector_C_ExecuteUbergraph_TM_Sector::K2Node_Event_RadiusMin' has a wrong offset!");
static_assert(offsetof(TM_Sector_C_ExecuteUbergraph_TM_Sector, K2Node_Event_RadiusMax) == 0x00000C, "Member 'TM_Sector_C_ExecuteUbergraph_TM_Sector::K2Node_Event_RadiusMax' has a wrong offset!");
static_assert(offsetof(TM_Sector_C_ExecuteUbergraph_TM_Sector, K2Node_Event_HeightMin) == 0x000010, "Member 'TM_Sector_C_ExecuteUbergraph_TM_Sector::K2Node_Event_HeightMin' has a wrong offset!");
static_assert(offsetof(TM_Sector_C_ExecuteUbergraph_TM_Sector, K2Node_Event_HeightMax) == 0x000014, "Member 'TM_Sector_C_ExecuteUbergraph_TM_Sector::K2Node_Event_HeightMax' has a wrong offset!");
static_assert(offsetof(TM_Sector_C_ExecuteUbergraph_TM_Sector, CallFunc_Add_FloatFloat_ReturnValue) == 0x000018, "Member 'TM_Sector_C_ExecuteUbergraph_TM_Sector::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(TM_Sector_C_ExecuteUbergraph_TM_Sector, CallFunc_Abs_ReturnValue) == 0x00001C, "Member 'TM_Sector_C_ExecuteUbergraph_TM_Sector::CallFunc_Abs_ReturnValue' has a wrong offset!");
static_assert(offsetof(TM_Sector_C_ExecuteUbergraph_TM_Sector, CallFunc_NormalizeToRange_ReturnValue) == 0x000020, "Member 'TM_Sector_C_ExecuteUbergraph_TM_Sector::CallFunc_NormalizeToRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(TM_Sector_C_ExecuteUbergraph_TM_Sector, CallFunc_Add_FloatFloat_ReturnValue2) == 0x000024, "Member 'TM_Sector_C_ExecuteUbergraph_TM_Sector::CallFunc_Add_FloatFloat_ReturnValue2' has a wrong offset!");
static_assert(offsetof(TM_Sector_C_ExecuteUbergraph_TM_Sector, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000028, "Member 'TM_Sector_C_ExecuteUbergraph_TM_Sector::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(TM_Sector_C_ExecuteUbergraph_TM_Sector, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x00002C, "Member 'TM_Sector_C_ExecuteUbergraph_TM_Sector::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(TM_Sector_C_ExecuteUbergraph_TM_Sector, CallFunc_MakeVector_ReturnValue) == 0x000030, "Member 'TM_Sector_C_ExecuteUbergraph_TM_Sector::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(TM_Sector_C_ExecuteUbergraph_TM_Sector, CallFunc_Divide_FloatFloat_ReturnValue2) == 0x00003C, "Member 'TM_Sector_C_ExecuteUbergraph_TM_Sector::CallFunc_Divide_FloatFloat_ReturnValue2' has a wrong offset!");
static_assert(offsetof(TM_Sector_C_ExecuteUbergraph_TM_Sector, CallFunc_Divide_FloatFloat_ReturnValue3) == 0x000040, "Member 'TM_Sector_C_ExecuteUbergraph_TM_Sector::CallFunc_Divide_FloatFloat_ReturnValue3' has a wrong offset!");
static_assert(offsetof(TM_Sector_C_ExecuteUbergraph_TM_Sector, CallFunc_MakeVector_ReturnValue2) == 0x000044, "Member 'TM_Sector_C_ExecuteUbergraph_TM_Sector::CallFunc_MakeVector_ReturnValue2' has a wrong offset!");
static_assert(offsetof(TM_Sector_C_ExecuteUbergraph_TM_Sector, CallFunc_K2_SetRelativeLocation_SweepHitResult) == 0x000050, "Member 'TM_Sector_C_ExecuteUbergraph_TM_Sector::CallFunc_K2_SetRelativeLocation_SweepHitResult' has a wrong offset!");

// Function TM_Sector.TM_Sector_C.OnFacetSectorBuilt
// 0x0014 (0x0014 - 0x0000)
struct TM_Sector_C_OnFacetSectorBuilt final
{
public:
	float                                         AngleHorizontal;                                   // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         RadiusMin;                                         // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         RadiusMax;                                         // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         HeightMin;                                         // 0x000C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         HeightMax;                                         // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TM_Sector_C_OnFacetSectorBuilt) == 0x000004, "Wrong alignment on TM_Sector_C_OnFacetSectorBuilt");
static_assert(sizeof(TM_Sector_C_OnFacetSectorBuilt) == 0x000014, "Wrong size on TM_Sector_C_OnFacetSectorBuilt");
static_assert(offsetof(TM_Sector_C_OnFacetSectorBuilt, AngleHorizontal) == 0x000000, "Member 'TM_Sector_C_OnFacetSectorBuilt::AngleHorizontal' has a wrong offset!");
static_assert(offsetof(TM_Sector_C_OnFacetSectorBuilt, RadiusMin) == 0x000004, "Member 'TM_Sector_C_OnFacetSectorBuilt::RadiusMin' has a wrong offset!");
static_assert(offsetof(TM_Sector_C_OnFacetSectorBuilt, RadiusMax) == 0x000008, "Member 'TM_Sector_C_OnFacetSectorBuilt::RadiusMax' has a wrong offset!");
static_assert(offsetof(TM_Sector_C_OnFacetSectorBuilt, HeightMin) == 0x00000C, "Member 'TM_Sector_C_OnFacetSectorBuilt::HeightMin' has a wrong offset!");
static_assert(offsetof(TM_Sector_C_OnFacetSectorBuilt, HeightMax) == 0x000010, "Member 'TM_Sector_C_OnFacetSectorBuilt::HeightMax' has a wrong offset!");

// Function TM_Sector.TM_Sector_C.UserConstructionScript
// 0x0018 (0x0018 - 0x0000)
struct TM_Sector_C_UserConstructionScript final
{
public:
	struct FLinearColor                           CallFunc_GetVectorParameterValue_ReturnValue;      // 0x0000(0x0010)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue; // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TM_Sector_C_UserConstructionScript) == 0x000008, "Wrong alignment on TM_Sector_C_UserConstructionScript");
static_assert(sizeof(TM_Sector_C_UserConstructionScript) == 0x000018, "Wrong size on TM_Sector_C_UserConstructionScript");
static_assert(offsetof(TM_Sector_C_UserConstructionScript, CallFunc_GetVectorParameterValue_ReturnValue) == 0x000000, "Member 'TM_Sector_C_UserConstructionScript::CallFunc_GetVectorParameterValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(TM_Sector_C_UserConstructionScript, CallFunc_CreateDynamicMaterialInstance_ReturnValue) == 0x000010, "Member 'TM_Sector_C_UserConstructionScript::CallFunc_CreateDynamicMaterialInstance_ReturnValue' has a wrong offset!");

}

