#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GA_Card_OverhealingShields

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "GameplayAbilities_structs.hpp"
#include "OrionGame_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass GA_Card_OverhealingShields.GA_Card_OverhealingShields_C
// 0x0090 (0x0C00 - 0x0B70)
class UGA_Card_OverhealingShields_C final : public UOrionAbility
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0B70(0x0008)(Transient, DuplicateTransient)
	struct FGameplayTagRequirements               Source_Tag;                                        // 0x0B78(0x0040)(Edit, BlueprintVisible, DisableEditOnInstance)
	float                                         PercentOfMaxHealthToCapShieldAt;                   // 0x0BB8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         MaxShieldValue;                                    // 0x0BBC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         PreviousShieldValue;                               // 0x0BC0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ShieldsToApply;                                    // 0x0BC4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FScalableFloat                         PercentOfMaxHealth_Value;                          // 0x0BC8(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FActiveGameplayEffectHandle            ActiveGE;                                          // 0x0BF0(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_GA_Card_OverhealingShields(int32 EntryPoint);
	void ApplyShieldsBasedOnHealing(float ShieldsToApply_0);
	void AddShieldForRegen();
	void K2_ActivateAbility();
	void OnApplied_9C7A653D4E9BEE35410E4B8D8A1E57EF(class AActor* Source, const struct FGameplayEffectSpecHandle& SpecHandle, const struct FActiveGameplayEffectHandle& ActiveHandle);
	void OnStateEnded_B4F8765249E08A777C8BDDB3A62EB099();
	void OnStateInterrupted_B4F8765249E08A777C8BDDB3A62EB099();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"GA_Card_OverhealingShields_C">();
	}
	static class UGA_Card_OverhealingShields_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGA_Card_OverhealingShields_C>();
	}
};
static_assert(alignof(UGA_Card_OverhealingShields_C) == 0x000010, "Wrong alignment on UGA_Card_OverhealingShields_C");
static_assert(sizeof(UGA_Card_OverhealingShields_C) == 0x000C00, "Wrong size on UGA_Card_OverhealingShields_C");
static_assert(offsetof(UGA_Card_OverhealingShields_C, UberGraphFrame) == 0x000B70, "Member 'UGA_Card_OverhealingShields_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UGA_Card_OverhealingShields_C, Source_Tag) == 0x000B78, "Member 'UGA_Card_OverhealingShields_C::Source_Tag' has a wrong offset!");
static_assert(offsetof(UGA_Card_OverhealingShields_C, PercentOfMaxHealthToCapShieldAt) == 0x000BB8, "Member 'UGA_Card_OverhealingShields_C::PercentOfMaxHealthToCapShieldAt' has a wrong offset!");
static_assert(offsetof(UGA_Card_OverhealingShields_C, MaxShieldValue) == 0x000BBC, "Member 'UGA_Card_OverhealingShields_C::MaxShieldValue' has a wrong offset!");
static_assert(offsetof(UGA_Card_OverhealingShields_C, PreviousShieldValue) == 0x000BC0, "Member 'UGA_Card_OverhealingShields_C::PreviousShieldValue' has a wrong offset!");
static_assert(offsetof(UGA_Card_OverhealingShields_C, ShieldsToApply) == 0x000BC4, "Member 'UGA_Card_OverhealingShields_C::ShieldsToApply' has a wrong offset!");
static_assert(offsetof(UGA_Card_OverhealingShields_C, PercentOfMaxHealth_Value) == 0x000BC8, "Member 'UGA_Card_OverhealingShields_C::PercentOfMaxHealth_Value' has a wrong offset!");
static_assert(offsetof(UGA_Card_OverhealingShields_C, ActiveGE) == 0x000BF0, "Member 'UGA_Card_OverhealingShields_C::ActiveGE' has a wrong offset!");

}

