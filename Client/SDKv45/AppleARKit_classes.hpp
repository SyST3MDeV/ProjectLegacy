#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: AppleARKit

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "CoreUObject_classes.hpp"
#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "AppleARKit_structs.hpp"


namespace SDK
{

// Class AppleARKit.AppleARKitAnchor
// 0x0068 (0x0090 - 0x0028)
class UAppleARKitAnchor : public UObject
{
public:
	struct FGuid                                  Identifier;                                        // 0x0028(0x0010)(IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_38[0x58];                                      // 0x0038(0x0058)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	struct FTransform GetTransform() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"AppleARKitAnchor">();
	}
	static class UAppleARKitAnchor* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAppleARKitAnchor>();
	}
};
static_assert(alignof(UAppleARKitAnchor) == 0x000008, "Wrong alignment on UAppleARKitAnchor");
static_assert(sizeof(UAppleARKitAnchor) == 0x000090, "Wrong size on UAppleARKitAnchor");
static_assert(offsetof(UAppleARKitAnchor, Identifier) == 0x000028, "Member 'UAppleARKitAnchor::Identifier' has a wrong offset!");

// Class AppleARKit.AppleARKitBlueprintLibrary
// 0x0000 (0x0028 - 0x0028)
class UAppleARKitBlueprintLibrary final : public UBlueprintFunctionLibrary
{
public:
	static bool GetCurrentFrame(class UObject* WorldContextObject, struct FAppleARKitFrame* OutCurrentFrame);
	static bool HitTestAtScreenPosition_TrackingSpace(class UObject* WorldContextObject, const struct FVector2D& ScreenPosition, EAppleARKitHitTestResultType Types, TArray<struct FAppleARKitHitTestResult>* OutResults);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"AppleARKitBlueprintLibrary">();
	}
	static class UAppleARKitBlueprintLibrary* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAppleARKitBlueprintLibrary>();
	}
};
static_assert(alignof(UAppleARKitBlueprintLibrary) == 0x000008, "Wrong alignment on UAppleARKitBlueprintLibrary");
static_assert(sizeof(UAppleARKitBlueprintLibrary) == 0x000028, "Wrong size on UAppleARKitBlueprintLibrary");

// Class AppleARKit.AppleARKitPlaneAnchor
// 0x0020 (0x00B0 - 0x0090)
class UAppleARKitPlaneAnchor final : public UAppleARKitAnchor
{
public:
	uint8                                         Pad_90[0x20];                                      // 0x0090(0x0020)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	struct FVector GetCenter() const;
	struct FVector GetExtent() const;
	struct FTransform GetTransformToCenter() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"AppleARKitPlaneAnchor">();
	}
	static class UAppleARKitPlaneAnchor* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAppleARKitPlaneAnchor>();
	}
};
static_assert(alignof(UAppleARKitPlaneAnchor) == 0x000008, "Wrong alignment on UAppleARKitPlaneAnchor");
static_assert(sizeof(UAppleARKitPlaneAnchor) == 0x0000B0, "Wrong size on UAppleARKitPlaneAnchor");

// Class AppleARKit.ARKitCameraOverlayMaterialLoader
// 0x0008 (0x0030 - 0x0028)
class UARKitCameraOverlayMaterialLoader final : public UObject
{
public:
	class UMaterialInterface*                     DefaultCameraOverlayMaterial;                      // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ARKitCameraOverlayMaterialLoader">();
	}
	static class UARKitCameraOverlayMaterialLoader* GetDefaultObj()
	{
		return GetDefaultObjImpl<UARKitCameraOverlayMaterialLoader>();
	}
};
static_assert(alignof(UARKitCameraOverlayMaterialLoader) == 0x000008, "Wrong alignment on UARKitCameraOverlayMaterialLoader");
static_assert(sizeof(UARKitCameraOverlayMaterialLoader) == 0x000030, "Wrong size on UARKitCameraOverlayMaterialLoader");
static_assert(offsetof(UARKitCameraOverlayMaterialLoader, DefaultCameraOverlayMaterial) == 0x000028, "Member 'UARKitCameraOverlayMaterialLoader::DefaultCameraOverlayMaterial' has a wrong offset!");

// Class AppleARKit.MaterialExpressionARKitPassthroughCamera
// 0x0038 (0x0098 - 0x0060)
class UMaterialExpressionARKitPassthroughCamera final : public UMaterialExpression
{
public:
	struct FExpressionInput                       Coordinates;                                       // 0x0060(0x0030)(NoDestructor, NativeAccessSpecifierPublic)
	uint32                                        ConstCoordinate;                                   // 0x0090(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EARKitTextureType                             TextureType;                                       // 0x0094(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_95[0x3];                                       // 0x0095(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"MaterialExpressionARKitPassthroughCamera">();
	}
	static class UMaterialExpressionARKitPassthroughCamera* GetDefaultObj()
	{
		return GetDefaultObjImpl<UMaterialExpressionARKitPassthroughCamera>();
	}
};
static_assert(alignof(UMaterialExpressionARKitPassthroughCamera) == 0x000008, "Wrong alignment on UMaterialExpressionARKitPassthroughCamera");
static_assert(sizeof(UMaterialExpressionARKitPassthroughCamera) == 0x000098, "Wrong size on UMaterialExpressionARKitPassthroughCamera");
static_assert(offsetof(UMaterialExpressionARKitPassthroughCamera, Coordinates) == 0x000060, "Member 'UMaterialExpressionARKitPassthroughCamera::Coordinates' has a wrong offset!");
static_assert(offsetof(UMaterialExpressionARKitPassthroughCamera, ConstCoordinate) == 0x000090, "Member 'UMaterialExpressionARKitPassthroughCamera::ConstCoordinate' has a wrong offset!");
static_assert(offsetof(UMaterialExpressionARKitPassthroughCamera, TextureType) == 0x000094, "Member 'UMaterialExpressionARKitPassthroughCamera::TextureType' has a wrong offset!");

}

