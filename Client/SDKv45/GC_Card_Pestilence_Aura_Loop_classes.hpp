#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GC_Card_Pestilence_Aura_Loop

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "GC_Item_Aura_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass GC_Card_Pestilence_Aura_Loop.GC_Card_Pestilence_Aura_Loop_C
// 0x0010 (0x08C0 - 0x08B0)
class AGC_Card_Pestilence_Aura_Loop_C final : public AGC_Item_Aura_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_GC_Card_Pestilence_Aura_Loop_C;     // 0x08B0(0x0008)(Transient, DuplicateTransient)
	class UOrionDecalComponent*                   Decal_0;                                           // 0x08B8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_GC_Card_Pestilence_Aura_Loop(int32 EntryPoint);
	void K2_OnRemove(class AActor* MyTarget, const struct FGameplayCueParameters& Parameters, class UParticleSystemComponent* RemovalParticleSystem, const TArray<class UParticleSystemComponent*>& AdditionalParticleSystems, class UNiagaraComponent* RemovalNiagaraParticleSystem, const TArray<class UNiagaraComponent*>& AdditionalNiagaraParticleSystems);
	void K2_WhileActive(class AActor* MyTarget, const struct FGameplayCueParameters& Parameters, class UParticleSystemComponent* LoopingParticleSystem, const TArray<class UParticleSystemComponent*>& AdditionalParticleSystem, class UNiagaraComponent* LoopingNiagaraParticleSystem, const TArray<class UNiagaraComponent*>& AdditionalNiagaraParticleSystems);
	void UserConstructionScript();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"GC_Card_Pestilence_Aura_Loop_C">();
	}
	static class AGC_Card_Pestilence_Aura_Loop_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AGC_Card_Pestilence_Aura_Loop_C>();
	}
};
static_assert(alignof(AGC_Card_Pestilence_Aura_Loop_C) == 0x000010, "Wrong alignment on AGC_Card_Pestilence_Aura_Loop_C");
static_assert(sizeof(AGC_Card_Pestilence_Aura_Loop_C) == 0x0008C0, "Wrong size on AGC_Card_Pestilence_Aura_Loop_C");
static_assert(offsetof(AGC_Card_Pestilence_Aura_Loop_C, UberGraphFrame_GC_Card_Pestilence_Aura_Loop_C) == 0x0008B0, "Member 'AGC_Card_Pestilence_Aura_Loop_C::UberGraphFrame_GC_Card_Pestilence_Aura_Loop_C' has a wrong offset!");
static_assert(offsetof(AGC_Card_Pestilence_Aura_Loop_C, Decal_0) == 0x0008B8, "Member 'AGC_Card_Pestilence_Aura_Loop_C::Decal_0' has a wrong offset!");

}

