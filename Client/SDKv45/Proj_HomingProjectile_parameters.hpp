#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Proj_HomingProjectile

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function Proj_HomingProjectile.Proj_HomingProjectile_C.ExecuteUbergraph_Proj_HomingProjectile
// 0x0130 (0x0130 - 0x0000)
struct Proj_HomingProjectile_C_ExecuteUbergraph_Proj_HomingProjectile final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             K2Node_Event_Hit;                                  // 0x0008(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_91[0x7];                                       // 0x0091(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_Event_InNewInstigator;                      // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_Event_InNewSourceActor;                     // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AOrionProjectile*                       K2Node_Event_SourceProjectile;                     // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UOrionProjectileMovementComponent*      K2Node_Event_SourceMovementComponent;              // 0x00B0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_Event_NewTargetActor;                       // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_Event_NewSourceLocation;                    // 0x00C0(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_Event_NewTargetLocation;                    // 0x00CC(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_UserStateID;                          // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_DC[0x4];                                       // 0x00DC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_GetInstigator_ReturnValue;                // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue2;                     // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x00E9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_EA[0x6];                                       // 0x00EA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AOrionChar*                             K2Node_DynamicCast_AsOrion_Char;                   // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_F9[0x7];                                       // 0x00F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AOrionChar*                             K2Node_CustomEvent_DeadChar;                       // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AController*                            K2Node_CustomEvent_Killer;                         // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_CustomEvent_DamageCauser;                   // 0x0110(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class AOrionChar* DeadChar, class AController* Killer, class AActor* DamageCauser)> K2Node_CreateDelegate_OutputDelegate;              // 0x0118(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue3;                     // 0x0128(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Proj_HomingProjectile_C_ExecuteUbergraph_Proj_HomingProjectile) == 0x000008, "Wrong alignment on Proj_HomingProjectile_C_ExecuteUbergraph_Proj_HomingProjectile");
static_assert(sizeof(Proj_HomingProjectile_C_ExecuteUbergraph_Proj_HomingProjectile) == 0x000130, "Wrong size on Proj_HomingProjectile_C_ExecuteUbergraph_Proj_HomingProjectile");
static_assert(offsetof(Proj_HomingProjectile_C_ExecuteUbergraph_Proj_HomingProjectile, EntryPoint) == 0x000000, "Member 'Proj_HomingProjectile_C_ExecuteUbergraph_Proj_HomingProjectile::EntryPoint' has a wrong offset!");
static_assert(offsetof(Proj_HomingProjectile_C_ExecuteUbergraph_Proj_HomingProjectile, K2Node_Event_Hit) == 0x000008, "Member 'Proj_HomingProjectile_C_ExecuteUbergraph_Proj_HomingProjectile::K2Node_Event_Hit' has a wrong offset!");
static_assert(offsetof(Proj_HomingProjectile_C_ExecuteUbergraph_Proj_HomingProjectile, CallFunc_IsValid_ReturnValue) == 0x000090, "Member 'Proj_HomingProjectile_C_ExecuteUbergraph_Proj_HomingProjectile::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Proj_HomingProjectile_C_ExecuteUbergraph_Proj_HomingProjectile, K2Node_Event_InNewInstigator) == 0x000098, "Member 'Proj_HomingProjectile_C_ExecuteUbergraph_Proj_HomingProjectile::K2Node_Event_InNewInstigator' has a wrong offset!");
static_assert(offsetof(Proj_HomingProjectile_C_ExecuteUbergraph_Proj_HomingProjectile, K2Node_Event_InNewSourceActor) == 0x0000A0, "Member 'Proj_HomingProjectile_C_ExecuteUbergraph_Proj_HomingProjectile::K2Node_Event_InNewSourceActor' has a wrong offset!");
static_assert(offsetof(Proj_HomingProjectile_C_ExecuteUbergraph_Proj_HomingProjectile, K2Node_Event_SourceProjectile) == 0x0000A8, "Member 'Proj_HomingProjectile_C_ExecuteUbergraph_Proj_HomingProjectile::K2Node_Event_SourceProjectile' has a wrong offset!");
static_assert(offsetof(Proj_HomingProjectile_C_ExecuteUbergraph_Proj_HomingProjectile, K2Node_Event_SourceMovementComponent) == 0x0000B0, "Member 'Proj_HomingProjectile_C_ExecuteUbergraph_Proj_HomingProjectile::K2Node_Event_SourceMovementComponent' has a wrong offset!");
static_assert(offsetof(Proj_HomingProjectile_C_ExecuteUbergraph_Proj_HomingProjectile, K2Node_Event_NewTargetActor) == 0x0000B8, "Member 'Proj_HomingProjectile_C_ExecuteUbergraph_Proj_HomingProjectile::K2Node_Event_NewTargetActor' has a wrong offset!");
static_assert(offsetof(Proj_HomingProjectile_C_ExecuteUbergraph_Proj_HomingProjectile, K2Node_Event_NewSourceLocation) == 0x0000C0, "Member 'Proj_HomingProjectile_C_ExecuteUbergraph_Proj_HomingProjectile::K2Node_Event_NewSourceLocation' has a wrong offset!");
static_assert(offsetof(Proj_HomingProjectile_C_ExecuteUbergraph_Proj_HomingProjectile, K2Node_Event_NewTargetLocation) == 0x0000CC, "Member 'Proj_HomingProjectile_C_ExecuteUbergraph_Proj_HomingProjectile::K2Node_Event_NewTargetLocation' has a wrong offset!");
static_assert(offsetof(Proj_HomingProjectile_C_ExecuteUbergraph_Proj_HomingProjectile, K2Node_Event_UserStateID) == 0x0000D8, "Member 'Proj_HomingProjectile_C_ExecuteUbergraph_Proj_HomingProjectile::K2Node_Event_UserStateID' has a wrong offset!");
static_assert(offsetof(Proj_HomingProjectile_C_ExecuteUbergraph_Proj_HomingProjectile, CallFunc_GetInstigator_ReturnValue) == 0x0000E0, "Member 'Proj_HomingProjectile_C_ExecuteUbergraph_Proj_HomingProjectile::CallFunc_GetInstigator_ReturnValue' has a wrong offset!");
static_assert(offsetof(Proj_HomingProjectile_C_ExecuteUbergraph_Proj_HomingProjectile, CallFunc_IsValid_ReturnValue2) == 0x0000E8, "Member 'Proj_HomingProjectile_C_ExecuteUbergraph_Proj_HomingProjectile::CallFunc_IsValid_ReturnValue2' has a wrong offset!");
static_assert(offsetof(Proj_HomingProjectile_C_ExecuteUbergraph_Proj_HomingProjectile, CallFunc_HasAuthority_ReturnValue) == 0x0000E9, "Member 'Proj_HomingProjectile_C_ExecuteUbergraph_Proj_HomingProjectile::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(Proj_HomingProjectile_C_ExecuteUbergraph_Proj_HomingProjectile, K2Node_DynamicCast_AsOrion_Char) == 0x0000F0, "Member 'Proj_HomingProjectile_C_ExecuteUbergraph_Proj_HomingProjectile::K2Node_DynamicCast_AsOrion_Char' has a wrong offset!");
static_assert(offsetof(Proj_HomingProjectile_C_ExecuteUbergraph_Proj_HomingProjectile, K2Node_DynamicCast_bSuccess) == 0x0000F8, "Member 'Proj_HomingProjectile_C_ExecuteUbergraph_Proj_HomingProjectile::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Proj_HomingProjectile_C_ExecuteUbergraph_Proj_HomingProjectile, K2Node_CustomEvent_DeadChar) == 0x000100, "Member 'Proj_HomingProjectile_C_ExecuteUbergraph_Proj_HomingProjectile::K2Node_CustomEvent_DeadChar' has a wrong offset!");
static_assert(offsetof(Proj_HomingProjectile_C_ExecuteUbergraph_Proj_HomingProjectile, K2Node_CustomEvent_Killer) == 0x000108, "Member 'Proj_HomingProjectile_C_ExecuteUbergraph_Proj_HomingProjectile::K2Node_CustomEvent_Killer' has a wrong offset!");
static_assert(offsetof(Proj_HomingProjectile_C_ExecuteUbergraph_Proj_HomingProjectile, K2Node_CustomEvent_DamageCauser) == 0x000110, "Member 'Proj_HomingProjectile_C_ExecuteUbergraph_Proj_HomingProjectile::K2Node_CustomEvent_DamageCauser' has a wrong offset!");
static_assert(offsetof(Proj_HomingProjectile_C_ExecuteUbergraph_Proj_HomingProjectile, K2Node_CreateDelegate_OutputDelegate) == 0x000118, "Member 'Proj_HomingProjectile_C_ExecuteUbergraph_Proj_HomingProjectile::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(Proj_HomingProjectile_C_ExecuteUbergraph_Proj_HomingProjectile, CallFunc_IsValid_ReturnValue3) == 0x000128, "Member 'Proj_HomingProjectile_C_ExecuteUbergraph_Proj_HomingProjectile::CallFunc_IsValid_ReturnValue3' has a wrong offset!");

// Function Proj_HomingProjectile.Proj_HomingProjectile_C.DestroyWhenLockOnDies
// 0x0018 (0x0018 - 0x0000)
struct Proj_HomingProjectile_C_DestroyWhenLockOnDies final
{
public:
	class AOrionChar*                             DeadChar;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AController*                            Killer;                                            // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 DamageCauser;                                      // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Proj_HomingProjectile_C_DestroyWhenLockOnDies) == 0x000008, "Wrong alignment on Proj_HomingProjectile_C_DestroyWhenLockOnDies");
static_assert(sizeof(Proj_HomingProjectile_C_DestroyWhenLockOnDies) == 0x000018, "Wrong size on Proj_HomingProjectile_C_DestroyWhenLockOnDies");
static_assert(offsetof(Proj_HomingProjectile_C_DestroyWhenLockOnDies, DeadChar) == 0x000000, "Member 'Proj_HomingProjectile_C_DestroyWhenLockOnDies::DeadChar' has a wrong offset!");
static_assert(offsetof(Proj_HomingProjectile_C_DestroyWhenLockOnDies, Killer) == 0x000008, "Member 'Proj_HomingProjectile_C_DestroyWhenLockOnDies::Killer' has a wrong offset!");
static_assert(offsetof(Proj_HomingProjectile_C_DestroyWhenLockOnDies, DamageCauser) == 0x000010, "Member 'Proj_HomingProjectile_C_DestroyWhenLockOnDies::DamageCauser' has a wrong offset!");

// Function Proj_HomingProjectile.Proj_HomingProjectile_C.OnCloned
// 0x0020 (0x0020 - 0x0000)
struct Proj_HomingProjectile_C_OnCloned final
{
public:
	class AActor*                                 InNewInstigator;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 InNewSourceActor;                                  // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AOrionProjectile*                       SourceProjectile;                                  // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UOrionProjectileMovementComponent*      SourceMovementComponent;                           // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Proj_HomingProjectile_C_OnCloned) == 0x000008, "Wrong alignment on Proj_HomingProjectile_C_OnCloned");
static_assert(sizeof(Proj_HomingProjectile_C_OnCloned) == 0x000020, "Wrong size on Proj_HomingProjectile_C_OnCloned");
static_assert(offsetof(Proj_HomingProjectile_C_OnCloned, InNewInstigator) == 0x000000, "Member 'Proj_HomingProjectile_C_OnCloned::InNewInstigator' has a wrong offset!");
static_assert(offsetof(Proj_HomingProjectile_C_OnCloned, InNewSourceActor) == 0x000008, "Member 'Proj_HomingProjectile_C_OnCloned::InNewSourceActor' has a wrong offset!");
static_assert(offsetof(Proj_HomingProjectile_C_OnCloned, SourceProjectile) == 0x000010, "Member 'Proj_HomingProjectile_C_OnCloned::SourceProjectile' has a wrong offset!");
static_assert(offsetof(Proj_HomingProjectile_C_OnCloned, SourceMovementComponent) == 0x000018, "Member 'Proj_HomingProjectile_C_OnCloned::SourceMovementComponent' has a wrong offset!");

// Function Proj_HomingProjectile.Proj_HomingProjectile_C.OnHitActor
// 0x0088 (0x0088 - 0x0000)
struct Proj_HomingProjectile_C_OnHitActor final
{
public:
	struct FHitResult                             Hit;                                               // 0x0000(0x0088)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(Proj_HomingProjectile_C_OnHitActor) == 0x000008, "Wrong alignment on Proj_HomingProjectile_C_OnHitActor");
static_assert(sizeof(Proj_HomingProjectile_C_OnHitActor) == 0x000088, "Wrong size on Proj_HomingProjectile_C_OnHitActor");
static_assert(offsetof(Proj_HomingProjectile_C_OnHitActor, Hit) == 0x000000, "Member 'Proj_HomingProjectile_C_OnHitActor::Hit' has a wrong offset!");

// Function Proj_HomingProjectile.Proj_HomingProjectile_C.OnNetSync_SetNewTarget
// 0x0028 (0x0028 - 0x0000)
struct Proj_HomingProjectile_C_OnNetSync_SetNewTarget final
{
public:
	class AActor*                                 NewTargetActor;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                NewSourceLocation;                                 // 0x0008(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                NewTargetLocation;                                 // 0x0014(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         UserStateID;                                       // 0x0020(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Proj_HomingProjectile_C_OnNetSync_SetNewTarget) == 0x000008, "Wrong alignment on Proj_HomingProjectile_C_OnNetSync_SetNewTarget");
static_assert(sizeof(Proj_HomingProjectile_C_OnNetSync_SetNewTarget) == 0x000028, "Wrong size on Proj_HomingProjectile_C_OnNetSync_SetNewTarget");
static_assert(offsetof(Proj_HomingProjectile_C_OnNetSync_SetNewTarget, NewTargetActor) == 0x000000, "Member 'Proj_HomingProjectile_C_OnNetSync_SetNewTarget::NewTargetActor' has a wrong offset!");
static_assert(offsetof(Proj_HomingProjectile_C_OnNetSync_SetNewTarget, NewSourceLocation) == 0x000008, "Member 'Proj_HomingProjectile_C_OnNetSync_SetNewTarget::NewSourceLocation' has a wrong offset!");
static_assert(offsetof(Proj_HomingProjectile_C_OnNetSync_SetNewTarget, NewTargetLocation) == 0x000014, "Member 'Proj_HomingProjectile_C_OnNetSync_SetNewTarget::NewTargetLocation' has a wrong offset!");
static_assert(offsetof(Proj_HomingProjectile_C_OnNetSync_SetNewTarget, UserStateID) == 0x000020, "Member 'Proj_HomingProjectile_C_OnNetSync_SetNewTarget::UserStateID' has a wrong offset!");

}

