#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GC_Hero_LastHit_Objective

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "GameplayAbilities_structs.hpp"


namespace SDK::Params
{

// Function GC_Hero_LastHit_Objective.GC_Hero_LastHit_Objective_C.OnBurst
// 0x0120 (0x0120 - 0x0000)
struct GC_Hero_LastHit_Objective_C_OnBurst final
{
public:
	class AActor*                                 MyTarget;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayCueParameters                 Parameters;                                        // 0x0008(0x00B8)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
	class UParticleSystemComponent*               BurstParticleSystem;                               // 0x00C0(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UParticleSystemComponent*>       AdditionalParticleSystems;                         // 0x00C8(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm)
	class UCameraShake*                           BurstCameraShakeInstance;                          // 0x00D8(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ADecalActor*                            BurstDecalInstance;                                // 0x00E0(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UNiagaraComponent*                      BurstNiagaraParticleSystem;                        // 0x00E8(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UNiagaraComponent*>              AdditionalNiagaraParticleSystems;                  // 0x00F0(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm)
	bool                                          CallFunc_IsLocallyControlledPlayer_ReturnValue;    // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0101(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_102[0x2];                                      // 0x0102(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0104(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               CallFunc_SpawnEmitterAtLocation_ReturnValue;       // 0x0110(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAudioComponent*                        CallFunc_SpawnSoundAtLocation_ReturnValue;         // 0x0118(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GC_Hero_LastHit_Objective_C_OnBurst) == 0x000008, "Wrong alignment on GC_Hero_LastHit_Objective_C_OnBurst");
static_assert(sizeof(GC_Hero_LastHit_Objective_C_OnBurst) == 0x000120, "Wrong size on GC_Hero_LastHit_Objective_C_OnBurst");
static_assert(offsetof(GC_Hero_LastHit_Objective_C_OnBurst, MyTarget) == 0x000000, "Member 'GC_Hero_LastHit_Objective_C_OnBurst::MyTarget' has a wrong offset!");
static_assert(offsetof(GC_Hero_LastHit_Objective_C_OnBurst, Parameters) == 0x000008, "Member 'GC_Hero_LastHit_Objective_C_OnBurst::Parameters' has a wrong offset!");
static_assert(offsetof(GC_Hero_LastHit_Objective_C_OnBurst, BurstParticleSystem) == 0x0000C0, "Member 'GC_Hero_LastHit_Objective_C_OnBurst::BurstParticleSystem' has a wrong offset!");
static_assert(offsetof(GC_Hero_LastHit_Objective_C_OnBurst, AdditionalParticleSystems) == 0x0000C8, "Member 'GC_Hero_LastHit_Objective_C_OnBurst::AdditionalParticleSystems' has a wrong offset!");
static_assert(offsetof(GC_Hero_LastHit_Objective_C_OnBurst, BurstCameraShakeInstance) == 0x0000D8, "Member 'GC_Hero_LastHit_Objective_C_OnBurst::BurstCameraShakeInstance' has a wrong offset!");
static_assert(offsetof(GC_Hero_LastHit_Objective_C_OnBurst, BurstDecalInstance) == 0x0000E0, "Member 'GC_Hero_LastHit_Objective_C_OnBurst::BurstDecalInstance' has a wrong offset!");
static_assert(offsetof(GC_Hero_LastHit_Objective_C_OnBurst, BurstNiagaraParticleSystem) == 0x0000E8, "Member 'GC_Hero_LastHit_Objective_C_OnBurst::BurstNiagaraParticleSystem' has a wrong offset!");
static_assert(offsetof(GC_Hero_LastHit_Objective_C_OnBurst, AdditionalNiagaraParticleSystems) == 0x0000F0, "Member 'GC_Hero_LastHit_Objective_C_OnBurst::AdditionalNiagaraParticleSystems' has a wrong offset!");
static_assert(offsetof(GC_Hero_LastHit_Objective_C_OnBurst, CallFunc_IsLocallyControlledPlayer_ReturnValue) == 0x000100, "Member 'GC_Hero_LastHit_Objective_C_OnBurst::CallFunc_IsLocallyControlledPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(GC_Hero_LastHit_Objective_C_OnBurst, CallFunc_IsValid_ReturnValue) == 0x000101, "Member 'GC_Hero_LastHit_Objective_C_OnBurst::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(GC_Hero_LastHit_Objective_C_OnBurst, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000104, "Member 'GC_Hero_LastHit_Objective_C_OnBurst::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(GC_Hero_LastHit_Objective_C_OnBurst, CallFunc_SpawnEmitterAtLocation_ReturnValue) == 0x000110, "Member 'GC_Hero_LastHit_Objective_C_OnBurst::CallFunc_SpawnEmitterAtLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(GC_Hero_LastHit_Objective_C_OnBurst, CallFunc_SpawnSoundAtLocation_ReturnValue) == 0x000118, "Member 'GC_Hero_LastHit_Objective_C_OnBurst::CallFunc_SpawnSoundAtLocation_ReturnValue' has a wrong offset!");

}

