#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GA_Card_Blink_CD

#include "Basic.hpp"

#include "OrionGame_structs.hpp"
#include "GameplayAbilities_structs.hpp"


namespace SDK::Params
{

// Function GA_Card_Blink_CD.GA_Card_Blink_CD_C.ExecuteUbergraph_GA_Card_Blink_CD
// 0x00C8 (0x00C8 - 0x0000)
struct GA_Card_Blink_CD_C_ExecuteUbergraph_GA_Card_Blink_CD final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAbilitySystemComponent*                K2Node_CustomEvent_AuxillaryASC;                   // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FQualifierContextDamage                K2Node_CustomEvent_DamageInfo;                     // 0x0010(0x0028)(NoDestructor)
	struct FGameplayEffectSpecHandle              K2Node_CustomEvent_SpecHandle;                     // 0x0038(0x0018)()
	TDelegate<void(class UAbilitySystemComponent* AuxillaryASC, const struct FQualifierContextDamage& DamageInfo, const struct FGameplayEffectSpecHandle& SpecHandle)> K2Node_CreateDelegate_OutputDelegate;              // 0x0050(0x0010)(ZeroConstructor, NoDestructor)
	struct FGameplayEffectSpecHandle              Temp_struct_Variable;                              // 0x0060(0x0018)()
	struct FQualifierContextDamage                Temp_struct_Variable2;                             // 0x0078(0x0028)(NoDestructor)
	class UAbilitySystemComponent*                Temp_object_Variable;                              // 0x00A0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetAbilityLevel_ReturnValue;              // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FActiveGameplayEffectHandle            CallFunc_BP_ApplyGameplayEffectToOwner_ReturnValue; // 0x00AC(0x0008)(NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B4[0x4];                                       // 0x00B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UOrionAbilityTask_WaitDamage*           CallFunc_WaitDamageTaken_ReturnValue;              // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(GA_Card_Blink_CD_C_ExecuteUbergraph_GA_Card_Blink_CD) == 0x000008, "Wrong alignment on GA_Card_Blink_CD_C_ExecuteUbergraph_GA_Card_Blink_CD");
static_assert(sizeof(GA_Card_Blink_CD_C_ExecuteUbergraph_GA_Card_Blink_CD) == 0x0000C8, "Wrong size on GA_Card_Blink_CD_C_ExecuteUbergraph_GA_Card_Blink_CD");
static_assert(offsetof(GA_Card_Blink_CD_C_ExecuteUbergraph_GA_Card_Blink_CD, EntryPoint) == 0x000000, "Member 'GA_Card_Blink_CD_C_ExecuteUbergraph_GA_Card_Blink_CD::EntryPoint' has a wrong offset!");
static_assert(offsetof(GA_Card_Blink_CD_C_ExecuteUbergraph_GA_Card_Blink_CD, K2Node_CustomEvent_AuxillaryASC) == 0x000008, "Member 'GA_Card_Blink_CD_C_ExecuteUbergraph_GA_Card_Blink_CD::K2Node_CustomEvent_AuxillaryASC' has a wrong offset!");
static_assert(offsetof(GA_Card_Blink_CD_C_ExecuteUbergraph_GA_Card_Blink_CD, K2Node_CustomEvent_DamageInfo) == 0x000010, "Member 'GA_Card_Blink_CD_C_ExecuteUbergraph_GA_Card_Blink_CD::K2Node_CustomEvent_DamageInfo' has a wrong offset!");
static_assert(offsetof(GA_Card_Blink_CD_C_ExecuteUbergraph_GA_Card_Blink_CD, K2Node_CustomEvent_SpecHandle) == 0x000038, "Member 'GA_Card_Blink_CD_C_ExecuteUbergraph_GA_Card_Blink_CD::K2Node_CustomEvent_SpecHandle' has a wrong offset!");
static_assert(offsetof(GA_Card_Blink_CD_C_ExecuteUbergraph_GA_Card_Blink_CD, K2Node_CreateDelegate_OutputDelegate) == 0x000050, "Member 'GA_Card_Blink_CD_C_ExecuteUbergraph_GA_Card_Blink_CD::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(GA_Card_Blink_CD_C_ExecuteUbergraph_GA_Card_Blink_CD, Temp_struct_Variable) == 0x000060, "Member 'GA_Card_Blink_CD_C_ExecuteUbergraph_GA_Card_Blink_CD::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(GA_Card_Blink_CD_C_ExecuteUbergraph_GA_Card_Blink_CD, Temp_struct_Variable2) == 0x000078, "Member 'GA_Card_Blink_CD_C_ExecuteUbergraph_GA_Card_Blink_CD::Temp_struct_Variable2' has a wrong offset!");
static_assert(offsetof(GA_Card_Blink_CD_C_ExecuteUbergraph_GA_Card_Blink_CD, Temp_object_Variable) == 0x0000A0, "Member 'GA_Card_Blink_CD_C_ExecuteUbergraph_GA_Card_Blink_CD::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(GA_Card_Blink_CD_C_ExecuteUbergraph_GA_Card_Blink_CD, CallFunc_GetAbilityLevel_ReturnValue) == 0x0000A8, "Member 'GA_Card_Blink_CD_C_ExecuteUbergraph_GA_Card_Blink_CD::CallFunc_GetAbilityLevel_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Card_Blink_CD_C_ExecuteUbergraph_GA_Card_Blink_CD, CallFunc_BP_ApplyGameplayEffectToOwner_ReturnValue) == 0x0000AC, "Member 'GA_Card_Blink_CD_C_ExecuteUbergraph_GA_Card_Blink_CD::CallFunc_BP_ApplyGameplayEffectToOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Card_Blink_CD_C_ExecuteUbergraph_GA_Card_Blink_CD, CallFunc_WaitDamageTaken_ReturnValue) == 0x0000B8, "Member 'GA_Card_Blink_CD_C_ExecuteUbergraph_GA_Card_Blink_CD::CallFunc_WaitDamageTaken_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Card_Blink_CD_C_ExecuteUbergraph_GA_Card_Blink_CD, CallFunc_IsValid_ReturnValue) == 0x0000C0, "Member 'GA_Card_Blink_CD_C_ExecuteUbergraph_GA_Card_Blink_CD::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function GA_Card_Blink_CD.GA_Card_Blink_CD_C.OnDamage_AB0EBC97451544BD67D023855E8CB7D3
// 0x0048 (0x0048 - 0x0000)
struct GA_Card_Blink_CD_C_OnDamage_AB0EBC97451544BD67D023855E8CB7D3 final
{
public:
	class UAbilitySystemComponent*                AuxillaryASC;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FQualifierContextDamage                DamageInfo;                                        // 0x0008(0x0028)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	struct FGameplayEffectSpecHandle              SpecHandle;                                        // 0x0030(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(GA_Card_Blink_CD_C_OnDamage_AB0EBC97451544BD67D023855E8CB7D3) == 0x000008, "Wrong alignment on GA_Card_Blink_CD_C_OnDamage_AB0EBC97451544BD67D023855E8CB7D3");
static_assert(sizeof(GA_Card_Blink_CD_C_OnDamage_AB0EBC97451544BD67D023855E8CB7D3) == 0x000048, "Wrong size on GA_Card_Blink_CD_C_OnDamage_AB0EBC97451544BD67D023855E8CB7D3");
static_assert(offsetof(GA_Card_Blink_CD_C_OnDamage_AB0EBC97451544BD67D023855E8CB7D3, AuxillaryASC) == 0x000000, "Member 'GA_Card_Blink_CD_C_OnDamage_AB0EBC97451544BD67D023855E8CB7D3::AuxillaryASC' has a wrong offset!");
static_assert(offsetof(GA_Card_Blink_CD_C_OnDamage_AB0EBC97451544BD67D023855E8CB7D3, DamageInfo) == 0x000008, "Member 'GA_Card_Blink_CD_C_OnDamage_AB0EBC97451544BD67D023855E8CB7D3::DamageInfo' has a wrong offset!");
static_assert(offsetof(GA_Card_Blink_CD_C_OnDamage_AB0EBC97451544BD67D023855E8CB7D3, SpecHandle) == 0x000030, "Member 'GA_Card_Blink_CD_C_OnDamage_AB0EBC97451544BD67D023855E8CB7D3::SpecHandle' has a wrong offset!");

}

