#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BTDecorator_IsOnNavmesh

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function BTDecorator_IsOnNavmesh.BTDecorator_IsOnNavmesh_C.PerformConditionCheckAI
// 0x0030 (0x0030 - 0x0000)
struct BTDecorator_IsOnNavmesh_C_PerformConditionCheckAI final
{
public:
	class AAIController*                          OwnerController;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  ControlledPawn;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0014(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_ProjectPointToNavigation_ProjectedLocation; // 0x0020(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_ProjectPointToNavigation_ReturnValue;  // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BTDecorator_IsOnNavmesh_C_PerformConditionCheckAI) == 0x000008, "Wrong alignment on BTDecorator_IsOnNavmesh_C_PerformConditionCheckAI");
static_assert(sizeof(BTDecorator_IsOnNavmesh_C_PerformConditionCheckAI) == 0x000030, "Wrong size on BTDecorator_IsOnNavmesh_C_PerformConditionCheckAI");
static_assert(offsetof(BTDecorator_IsOnNavmesh_C_PerformConditionCheckAI, OwnerController) == 0x000000, "Member 'BTDecorator_IsOnNavmesh_C_PerformConditionCheckAI::OwnerController' has a wrong offset!");
static_assert(offsetof(BTDecorator_IsOnNavmesh_C_PerformConditionCheckAI, ControlledPawn) == 0x000008, "Member 'BTDecorator_IsOnNavmesh_C_PerformConditionCheckAI::ControlledPawn' has a wrong offset!");
static_assert(offsetof(BTDecorator_IsOnNavmesh_C_PerformConditionCheckAI, ReturnValue) == 0x000010, "Member 'BTDecorator_IsOnNavmesh_C_PerformConditionCheckAI::ReturnValue' has a wrong offset!");
static_assert(offsetof(BTDecorator_IsOnNavmesh_C_PerformConditionCheckAI, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000014, "Member 'BTDecorator_IsOnNavmesh_C_PerformConditionCheckAI::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTDecorator_IsOnNavmesh_C_PerformConditionCheckAI, CallFunc_K2_ProjectPointToNavigation_ProjectedLocation) == 0x000020, "Member 'BTDecorator_IsOnNavmesh_C_PerformConditionCheckAI::CallFunc_K2_ProjectPointToNavigation_ProjectedLocation' has a wrong offset!");
static_assert(offsetof(BTDecorator_IsOnNavmesh_C_PerformConditionCheckAI, CallFunc_K2_ProjectPointToNavigation_ReturnValue) == 0x00002C, "Member 'BTDecorator_IsOnNavmesh_C_PerformConditionCheckAI::CallFunc_K2_ProjectPointToNavigation_ReturnValue' has a wrong offset!");

}

