#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GC_ItemsInWorld

#include "Basic.hpp"

#include "OrionGame_structs.hpp"
#include "OrionGame_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass GC_ItemsInWorld.GC_ItemsInWorld_C
// 0x0050 (0x09C0 - 0x0970)
class AGC_ItemsInWorld_C final : public AOrionGameplayCue_ItemizationOverHead
{
public:
	class UParticleSystemComponent*               P_Card_Activate;                                   // 0x0970(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UActorSequenceComponent*                GemEndActivation;                                  // 0x0978(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UActorSequenceComponent*                GemStartActivation;                                // 0x0980(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UActorSequenceComponent*                GemEquipped;                                       // 0x0988(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UActorSequenceComponent*                CardCombusted;                                     // 0x0990(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UActorSequenceComponent*                CardConsumed;                                      // 0x0998(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UActorSequenceComponent*                CardEndActivation;                                 // 0x09A0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UActorSequenceComponent*                CardStartActivation;                               // 0x09A8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UActorSequenceComponent*                CardEquipped;                                      // 0x09B0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)

public:
	void UserConstructionScript();
	class UActorSequencePlayer* GetSequencerForCardInteraction(EOrionItemState SequencerType);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"GC_ItemsInWorld_C">();
	}
	static class AGC_ItemsInWorld_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AGC_ItemsInWorld_C>();
	}
};
static_assert(alignof(AGC_ItemsInWorld_C) == 0x000010, "Wrong alignment on AGC_ItemsInWorld_C");
static_assert(sizeof(AGC_ItemsInWorld_C) == 0x0009C0, "Wrong size on AGC_ItemsInWorld_C");
static_assert(offsetof(AGC_ItemsInWorld_C, P_Card_Activate) == 0x000970, "Member 'AGC_ItemsInWorld_C::P_Card_Activate' has a wrong offset!");
static_assert(offsetof(AGC_ItemsInWorld_C, GemEndActivation) == 0x000978, "Member 'AGC_ItemsInWorld_C::GemEndActivation' has a wrong offset!");
static_assert(offsetof(AGC_ItemsInWorld_C, GemStartActivation) == 0x000980, "Member 'AGC_ItemsInWorld_C::GemStartActivation' has a wrong offset!");
static_assert(offsetof(AGC_ItemsInWorld_C, GemEquipped) == 0x000988, "Member 'AGC_ItemsInWorld_C::GemEquipped' has a wrong offset!");
static_assert(offsetof(AGC_ItemsInWorld_C, CardCombusted) == 0x000990, "Member 'AGC_ItemsInWorld_C::CardCombusted' has a wrong offset!");
static_assert(offsetof(AGC_ItemsInWorld_C, CardConsumed) == 0x000998, "Member 'AGC_ItemsInWorld_C::CardConsumed' has a wrong offset!");
static_assert(offsetof(AGC_ItemsInWorld_C, CardEndActivation) == 0x0009A0, "Member 'AGC_ItemsInWorld_C::CardEndActivation' has a wrong offset!");
static_assert(offsetof(AGC_ItemsInWorld_C, CardStartActivation) == 0x0009A8, "Member 'AGC_ItemsInWorld_C::CardStartActivation' has a wrong offset!");
static_assert(offsetof(AGC_ItemsInWorld_C, CardEquipped) == 0x0009B0, "Member 'AGC_ItemsInWorld_C::CardEquipped' has a wrong offset!");

}

