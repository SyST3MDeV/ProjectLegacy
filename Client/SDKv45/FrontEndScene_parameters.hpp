#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: FrontEndScene

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "GameplayTags_structs.hpp"


namespace SDK::Params
{

// Function FrontEndScene.FrontEndScene_C.ExecuteUbergraph_FrontEndScene
// 0x0050 (0x0050 - 0x0000)
struct FrontEndScene_C_ExecuteUbergraph_FrontEndScene final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameUserSettings*                      CallFunc_GetGameUserSettings_ReturnValue;          // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0010(0x0010)(ZeroConstructor, NoDestructor)
	int32                                         CallFunc_GetShadowQuality_ReturnValue;             // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EEndPlayReason                                K2Node_Event_EndPlayReason;                        // 0x0025(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_26[0x2];                                       // 0x0026(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTagContainer                  K2Node_Event_TagsToHandle;                         // 0x0028(0x0020)()
	bool                                          GameplayTagsK2Node_SwitchGameplayTagContainer_CmpSuccess; // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(FrontEndScene_C_ExecuteUbergraph_FrontEndScene) == 0x000008, "Wrong alignment on FrontEndScene_C_ExecuteUbergraph_FrontEndScene");
static_assert(sizeof(FrontEndScene_C_ExecuteUbergraph_FrontEndScene) == 0x000050, "Wrong size on FrontEndScene_C_ExecuteUbergraph_FrontEndScene");
static_assert(offsetof(FrontEndScene_C_ExecuteUbergraph_FrontEndScene, EntryPoint) == 0x000000, "Member 'FrontEndScene_C_ExecuteUbergraph_FrontEndScene::EntryPoint' has a wrong offset!");
static_assert(offsetof(FrontEndScene_C_ExecuteUbergraph_FrontEndScene, CallFunc_GetGameUserSettings_ReturnValue) == 0x000008, "Member 'FrontEndScene_C_ExecuteUbergraph_FrontEndScene::CallFunc_GetGameUserSettings_ReturnValue' has a wrong offset!");
static_assert(offsetof(FrontEndScene_C_ExecuteUbergraph_FrontEndScene, K2Node_CreateDelegate_OutputDelegate) == 0x000010, "Member 'FrontEndScene_C_ExecuteUbergraph_FrontEndScene::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(FrontEndScene_C_ExecuteUbergraph_FrontEndScene, CallFunc_GetShadowQuality_ReturnValue) == 0x000020, "Member 'FrontEndScene_C_ExecuteUbergraph_FrontEndScene::CallFunc_GetShadowQuality_ReturnValue' has a wrong offset!");
static_assert(offsetof(FrontEndScene_C_ExecuteUbergraph_FrontEndScene, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000024, "Member 'FrontEndScene_C_ExecuteUbergraph_FrontEndScene::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(FrontEndScene_C_ExecuteUbergraph_FrontEndScene, K2Node_Event_EndPlayReason) == 0x000025, "Member 'FrontEndScene_C_ExecuteUbergraph_FrontEndScene::K2Node_Event_EndPlayReason' has a wrong offset!");
static_assert(offsetof(FrontEndScene_C_ExecuteUbergraph_FrontEndScene, K2Node_Event_TagsToHandle) == 0x000028, "Member 'FrontEndScene_C_ExecuteUbergraph_FrontEndScene::K2Node_Event_TagsToHandle' has a wrong offset!");
static_assert(offsetof(FrontEndScene_C_ExecuteUbergraph_FrontEndScene, GameplayTagsK2Node_SwitchGameplayTagContainer_CmpSuccess) == 0x000048, "Member 'FrontEndScene_C_ExecuteUbergraph_FrontEndScene::GameplayTagsK2Node_SwitchGameplayTagContainer_CmpSuccess' has a wrong offset!");

// Function FrontEndScene.FrontEndScene_C.HandleRotationalContent
// 0x0020 (0x0020 - 0x0000)
struct FrontEndScene_C_HandleRotationalContent final
{
public:
	struct FGameplayTagContainer                  TagsToHandle;                                      // 0x0000(0x0020)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(FrontEndScene_C_HandleRotationalContent) == 0x000008, "Wrong alignment on FrontEndScene_C_HandleRotationalContent");
static_assert(sizeof(FrontEndScene_C_HandleRotationalContent) == 0x000020, "Wrong size on FrontEndScene_C_HandleRotationalContent");
static_assert(offsetof(FrontEndScene_C_HandleRotationalContent, TagsToHandle) == 0x000000, "Member 'FrontEndScene_C_HandleRotationalContent::TagsToHandle' has a wrong offset!");

// Function FrontEndScene.FrontEndScene_C.ReceiveEndPlay
// 0x0001 (0x0001 - 0x0000)
struct FrontEndScene_C_ReceiveEndPlay final
{
public:
	EEndPlayReason                                EndPlayReason;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(FrontEndScene_C_ReceiveEndPlay) == 0x000001, "Wrong alignment on FrontEndScene_C_ReceiveEndPlay");
static_assert(sizeof(FrontEndScene_C_ReceiveEndPlay) == 0x000001, "Wrong size on FrontEndScene_C_ReceiveEndPlay");
static_assert(offsetof(FrontEndScene_C_ReceiveEndPlay, EndPlayReason) == 0x000000, "Member 'FrontEndScene_C_ReceiveEndPlay::EndPlayReason' has a wrong offset!");

}

