#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: InitialPreload_Root

#include "Basic.hpp"

#include "OrionGame_structs.hpp"
#include "UMG_structs.hpp"
#include "Hotfix_structs.hpp"


namespace SDK::Params
{

// Function InitialPreload_Root.InitialPreload_Root_C.ExecuteUbergraph_InitialPreload_Root
// 0x0098 (0x0098 - 0x0000)
struct InitialPreload_Root_C_ExecuteUbergraph_InitialPreload_Root final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_NumDownloaded;                        // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_TotalFiles;                           // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_NumBytes;                             // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_TotalBytes;                           // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Conv_IntToFloat_ReturnValue2;             // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_AsPercent_Float_ReturnValue;              // 0x0028(0x0018)()
	EUpdateState                                  CallFunc_GetUpdateState_ReturnValue;               // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_42[0x6];                                       // 0x0042(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_MakeLiteralName_ReturnValue;              // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UOrionUIManagerWidget*                  CallFunc_GetUIManagerWidget_ReturnValue;           // 0x0050(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EOrionUIState                                 CallFunc_GetCurrentUIState_ReturnValue;            // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5A[0x6];                                       // 0x005A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsLoadingScreenVisible_ReturnValue;       // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_69[0x7];                                       // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameModeBase*                          CallFunc_GetGameMode_ReturnValue;                  // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AOrionGameMode_Main*                    K2Node_DynamicCast_AsOrion_Game_Mode_Main;         // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_81[0x7];                                       // 0x0081(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMenuContext*                           CallFunc_GetContext_ReturnValue;                   // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EUpdateState                                  K2Node_Event_NewState;                             // 0x0091(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0092(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0093(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(InitialPreload_Root_C_ExecuteUbergraph_InitialPreload_Root) == 0x000008, "Wrong alignment on InitialPreload_Root_C_ExecuteUbergraph_InitialPreload_Root");
static_assert(sizeof(InitialPreload_Root_C_ExecuteUbergraph_InitialPreload_Root) == 0x000098, "Wrong size on InitialPreload_Root_C_ExecuteUbergraph_InitialPreload_Root");
static_assert(offsetof(InitialPreload_Root_C_ExecuteUbergraph_InitialPreload_Root, EntryPoint) == 0x000000, "Member 'InitialPreload_Root_C_ExecuteUbergraph_InitialPreload_Root::EntryPoint' has a wrong offset!");
static_assert(offsetof(InitialPreload_Root_C_ExecuteUbergraph_InitialPreload_Root, K2Node_Event_NumDownloaded) == 0x000004, "Member 'InitialPreload_Root_C_ExecuteUbergraph_InitialPreload_Root::K2Node_Event_NumDownloaded' has a wrong offset!");
static_assert(offsetof(InitialPreload_Root_C_ExecuteUbergraph_InitialPreload_Root, K2Node_Event_TotalFiles) == 0x000008, "Member 'InitialPreload_Root_C_ExecuteUbergraph_InitialPreload_Root::K2Node_Event_TotalFiles' has a wrong offset!");
static_assert(offsetof(InitialPreload_Root_C_ExecuteUbergraph_InitialPreload_Root, K2Node_Event_NumBytes) == 0x00000C, "Member 'InitialPreload_Root_C_ExecuteUbergraph_InitialPreload_Root::K2Node_Event_NumBytes' has a wrong offset!");
static_assert(offsetof(InitialPreload_Root_C_ExecuteUbergraph_InitialPreload_Root, K2Node_Event_TotalBytes) == 0x000010, "Member 'InitialPreload_Root_C_ExecuteUbergraph_InitialPreload_Root::K2Node_Event_TotalBytes' has a wrong offset!");
static_assert(offsetof(InitialPreload_Root_C_ExecuteUbergraph_InitialPreload_Root, CallFunc_Conv_IntToFloat_ReturnValue) == 0x000014, "Member 'InitialPreload_Root_C_ExecuteUbergraph_InitialPreload_Root::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(InitialPreload_Root_C_ExecuteUbergraph_InitialPreload_Root, CallFunc_Greater_IntInt_ReturnValue) == 0x000018, "Member 'InitialPreload_Root_C_ExecuteUbergraph_InitialPreload_Root::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(InitialPreload_Root_C_ExecuteUbergraph_InitialPreload_Root, CallFunc_Conv_IntToFloat_ReturnValue2) == 0x00001C, "Member 'InitialPreload_Root_C_ExecuteUbergraph_InitialPreload_Root::CallFunc_Conv_IntToFloat_ReturnValue2' has a wrong offset!");
static_assert(offsetof(InitialPreload_Root_C_ExecuteUbergraph_InitialPreload_Root, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000020, "Member 'InitialPreload_Root_C_ExecuteUbergraph_InitialPreload_Root::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(InitialPreload_Root_C_ExecuteUbergraph_InitialPreload_Root, CallFunc_AsPercent_Float_ReturnValue) == 0x000028, "Member 'InitialPreload_Root_C_ExecuteUbergraph_InitialPreload_Root::CallFunc_AsPercent_Float_ReturnValue' has a wrong offset!");
static_assert(offsetof(InitialPreload_Root_C_ExecuteUbergraph_InitialPreload_Root, CallFunc_GetUpdateState_ReturnValue) == 0x000040, "Member 'InitialPreload_Root_C_ExecuteUbergraph_InitialPreload_Root::CallFunc_GetUpdateState_ReturnValue' has a wrong offset!");
static_assert(offsetof(InitialPreload_Root_C_ExecuteUbergraph_InitialPreload_Root, K2Node_SwitchEnum_CmpSuccess) == 0x000041, "Member 'InitialPreload_Root_C_ExecuteUbergraph_InitialPreload_Root::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(InitialPreload_Root_C_ExecuteUbergraph_InitialPreload_Root, CallFunc_MakeLiteralName_ReturnValue) == 0x000048, "Member 'InitialPreload_Root_C_ExecuteUbergraph_InitialPreload_Root::CallFunc_MakeLiteralName_ReturnValue' has a wrong offset!");
static_assert(offsetof(InitialPreload_Root_C_ExecuteUbergraph_InitialPreload_Root, CallFunc_GetUIManagerWidget_ReturnValue) == 0x000050, "Member 'InitialPreload_Root_C_ExecuteUbergraph_InitialPreload_Root::CallFunc_GetUIManagerWidget_ReturnValue' has a wrong offset!");
static_assert(offsetof(InitialPreload_Root_C_ExecuteUbergraph_InitialPreload_Root, CallFunc_GetCurrentUIState_ReturnValue) == 0x000058, "Member 'InitialPreload_Root_C_ExecuteUbergraph_InitialPreload_Root::CallFunc_GetCurrentUIState_ReturnValue' has a wrong offset!");
static_assert(offsetof(InitialPreload_Root_C_ExecuteUbergraph_InitialPreload_Root, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000059, "Member 'InitialPreload_Root_C_ExecuteUbergraph_InitialPreload_Root::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(InitialPreload_Root_C_ExecuteUbergraph_InitialPreload_Root, CallFunc_GetOwningPlayer_ReturnValue) == 0x000060, "Member 'InitialPreload_Root_C_ExecuteUbergraph_InitialPreload_Root::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(InitialPreload_Root_C_ExecuteUbergraph_InitialPreload_Root, CallFunc_IsLoadingScreenVisible_ReturnValue) == 0x000068, "Member 'InitialPreload_Root_C_ExecuteUbergraph_InitialPreload_Root::CallFunc_IsLoadingScreenVisible_ReturnValue' has a wrong offset!");
static_assert(offsetof(InitialPreload_Root_C_ExecuteUbergraph_InitialPreload_Root, CallFunc_GetGameMode_ReturnValue) == 0x000070, "Member 'InitialPreload_Root_C_ExecuteUbergraph_InitialPreload_Root::CallFunc_GetGameMode_ReturnValue' has a wrong offset!");
static_assert(offsetof(InitialPreload_Root_C_ExecuteUbergraph_InitialPreload_Root, K2Node_DynamicCast_AsOrion_Game_Mode_Main) == 0x000078, "Member 'InitialPreload_Root_C_ExecuteUbergraph_InitialPreload_Root::K2Node_DynamicCast_AsOrion_Game_Mode_Main' has a wrong offset!");
static_assert(offsetof(InitialPreload_Root_C_ExecuteUbergraph_InitialPreload_Root, K2Node_DynamicCast_bSuccess) == 0x000080, "Member 'InitialPreload_Root_C_ExecuteUbergraph_InitialPreload_Root::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(InitialPreload_Root_C_ExecuteUbergraph_InitialPreload_Root, CallFunc_GetContext_ReturnValue) == 0x000088, "Member 'InitialPreload_Root_C_ExecuteUbergraph_InitialPreload_Root::CallFunc_GetContext_ReturnValue' has a wrong offset!");
static_assert(offsetof(InitialPreload_Root_C_ExecuteUbergraph_InitialPreload_Root, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000090, "Member 'InitialPreload_Root_C_ExecuteUbergraph_InitialPreload_Root::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(InitialPreload_Root_C_ExecuteUbergraph_InitialPreload_Root, K2Node_Event_NewState) == 0x000091, "Member 'InitialPreload_Root_C_ExecuteUbergraph_InitialPreload_Root::K2Node_Event_NewState' has a wrong offset!");
static_assert(offsetof(InitialPreload_Root_C_ExecuteUbergraph_InitialPreload_Root, CallFunc_Not_PreBool_ReturnValue) == 0x000092, "Member 'InitialPreload_Root_C_ExecuteUbergraph_InitialPreload_Root::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(InitialPreload_Root_C_ExecuteUbergraph_InitialPreload_Root, CallFunc_BooleanAND_ReturnValue) == 0x000093, "Member 'InitialPreload_Root_C_ExecuteUbergraph_InitialPreload_Root::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function InitialPreload_Root.InitialPreload_Root_C.OnUpdateStateChange
// 0x0001 (0x0001 - 0x0000)
struct InitialPreload_Root_C_OnUpdateStateChange final
{
public:
	EUpdateState                                  NewState;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(InitialPreload_Root_C_OnUpdateStateChange) == 0x000001, "Wrong alignment on InitialPreload_Root_C_OnUpdateStateChange");
static_assert(sizeof(InitialPreload_Root_C_OnUpdateStateChange) == 0x000001, "Wrong size on InitialPreload_Root_C_OnUpdateStateChange");
static_assert(offsetof(InitialPreload_Root_C_OnUpdateStateChange, NewState) == 0x000000, "Member 'InitialPreload_Root_C_OnUpdateStateChange::NewState' has a wrong offset!");

// Function InitialPreload_Root.InitialPreload_Root_C.OnUpdateHotfixProgress
// 0x0010 (0x0010 - 0x0000)
struct InitialPreload_Root_C_OnUpdateHotfixProgress final
{
public:
	int32                                         NumDownloaded;                                     // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         TotalFiles;                                        // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         NumBytes;                                          // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         TotalBytes;                                        // 0x000C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(InitialPreload_Root_C_OnUpdateHotfixProgress) == 0x000004, "Wrong alignment on InitialPreload_Root_C_OnUpdateHotfixProgress");
static_assert(sizeof(InitialPreload_Root_C_OnUpdateHotfixProgress) == 0x000010, "Wrong size on InitialPreload_Root_C_OnUpdateHotfixProgress");
static_assert(offsetof(InitialPreload_Root_C_OnUpdateHotfixProgress, NumDownloaded) == 0x000000, "Member 'InitialPreload_Root_C_OnUpdateHotfixProgress::NumDownloaded' has a wrong offset!");
static_assert(offsetof(InitialPreload_Root_C_OnUpdateHotfixProgress, TotalFiles) == 0x000004, "Member 'InitialPreload_Root_C_OnUpdateHotfixProgress::TotalFiles' has a wrong offset!");
static_assert(offsetof(InitialPreload_Root_C_OnUpdateHotfixProgress, NumBytes) == 0x000008, "Member 'InitialPreload_Root_C_OnUpdateHotfixProgress::NumBytes' has a wrong offset!");
static_assert(offsetof(InitialPreload_Root_C_OnUpdateHotfixProgress, TotalBytes) == 0x00000C, "Member 'InitialPreload_Root_C_OnUpdateHotfixProgress::TotalBytes' has a wrong offset!");

// Function InitialPreload_Root.InitialPreload_Root_C.Toggle Loading Progress Display
// 0x0005 (0x0005 - 0x0000)
struct InitialPreload_Root_C_Toggle_Loading_Progress_Display final
{
public:
	bool                                          Show;                                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable2;                               // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(InitialPreload_Root_C_Toggle_Loading_Progress_Display) == 0x000001, "Wrong alignment on InitialPreload_Root_C_Toggle_Loading_Progress_Display");
static_assert(sizeof(InitialPreload_Root_C_Toggle_Loading_Progress_Display) == 0x000005, "Wrong size on InitialPreload_Root_C_Toggle_Loading_Progress_Display");
static_assert(offsetof(InitialPreload_Root_C_Toggle_Loading_Progress_Display, Show) == 0x000000, "Member 'InitialPreload_Root_C_Toggle_Loading_Progress_Display::Show' has a wrong offset!");
static_assert(offsetof(InitialPreload_Root_C_Toggle_Loading_Progress_Display, Temp_bool_Variable) == 0x000001, "Member 'InitialPreload_Root_C_Toggle_Loading_Progress_Display::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(InitialPreload_Root_C_Toggle_Loading_Progress_Display, Temp_byte_Variable) == 0x000002, "Member 'InitialPreload_Root_C_Toggle_Loading_Progress_Display::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(InitialPreload_Root_C_Toggle_Loading_Progress_Display, Temp_byte_Variable2) == 0x000003, "Member 'InitialPreload_Root_C_Toggle_Loading_Progress_Display::Temp_byte_Variable2' has a wrong offset!");
static_assert(offsetof(InitialPreload_Root_C_Toggle_Loading_Progress_Display, K2Node_Select_Default) == 0x000004, "Member 'InitialPreload_Root_C_Toggle_Loading_Progress_Display::K2Node_Select_Default' has a wrong offset!");

// Function InitialPreload_Root.InitialPreload_Root_C.OnReturnToTitleClosed
// 0x0008 (0x0008 - 0x0000)
struct InitialPreload_Root_C_OnReturnToTitleClosed final
{
public:
	class UMcpContext*                            CallFunc_GetContext_ReturnValue;                   // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(InitialPreload_Root_C_OnReturnToTitleClosed) == 0x000008, "Wrong alignment on InitialPreload_Root_C_OnReturnToTitleClosed");
static_assert(sizeof(InitialPreload_Root_C_OnReturnToTitleClosed) == 0x000008, "Wrong size on InitialPreload_Root_C_OnReturnToTitleClosed");
static_assert(offsetof(InitialPreload_Root_C_OnReturnToTitleClosed, CallFunc_GetContext_ReturnValue) == 0x000000, "Member 'InitialPreload_Root_C_OnReturnToTitleClosed::CallFunc_GetContext_ReturnValue' has a wrong offset!");

// Function InitialPreload_Root.InitialPreload_Root_C.DisplayReturnToTitle
// 0x0028 (0x0028 - 0x0000)
struct InitialPreload_Root_C_DisplayReturnToTitle final
{
public:
	EReturnToMainMenuReason                       Reason;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0008(0x0010)(ZeroConstructor, NoDestructor)
	class UMenuContext*                           CallFunc_GetContext_ReturnValue;                   // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ReturnToTitleDueToRequiredUpdate_ReturnValue; // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(InitialPreload_Root_C_DisplayReturnToTitle) == 0x000008, "Wrong alignment on InitialPreload_Root_C_DisplayReturnToTitle");
static_assert(sizeof(InitialPreload_Root_C_DisplayReturnToTitle) == 0x000028, "Wrong size on InitialPreload_Root_C_DisplayReturnToTitle");
static_assert(offsetof(InitialPreload_Root_C_DisplayReturnToTitle, Reason) == 0x000000, "Member 'InitialPreload_Root_C_DisplayReturnToTitle::Reason' has a wrong offset!");
static_assert(offsetof(InitialPreload_Root_C_DisplayReturnToTitle, K2Node_CreateDelegate_OutputDelegate) == 0x000008, "Member 'InitialPreload_Root_C_DisplayReturnToTitle::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(InitialPreload_Root_C_DisplayReturnToTitle, CallFunc_GetContext_ReturnValue) == 0x000018, "Member 'InitialPreload_Root_C_DisplayReturnToTitle::CallFunc_GetContext_ReturnValue' has a wrong offset!");
static_assert(offsetof(InitialPreload_Root_C_DisplayReturnToTitle, CallFunc_ReturnToTitleDueToRequiredUpdate_ReturnValue) == 0x000020, "Member 'InitialPreload_Root_C_DisplayReturnToTitle::CallFunc_ReturnToTitleDueToRequiredUpdate_ReturnValue' has a wrong offset!");

// Function InitialPreload_Root.InitialPreload_Root_C.IsReadyForNextState
// 0x0003 (0x0003 - 0x0000)
struct InitialPreload_Root_C_IsReadyForNextState final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsReadyForNextState_ReturnValue;          // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(InitialPreload_Root_C_IsReadyForNextState) == 0x000001, "Wrong alignment on InitialPreload_Root_C_IsReadyForNextState");
static_assert(sizeof(InitialPreload_Root_C_IsReadyForNextState) == 0x000003, "Wrong size on InitialPreload_Root_C_IsReadyForNextState");
static_assert(offsetof(InitialPreload_Root_C_IsReadyForNextState, ReturnValue) == 0x000000, "Member 'InitialPreload_Root_C_IsReadyForNextState::ReturnValue' has a wrong offset!");
static_assert(offsetof(InitialPreload_Root_C_IsReadyForNextState, CallFunc_IsReadyForNextState_ReturnValue) == 0x000001, "Member 'InitialPreload_Root_C_IsReadyForNextState::CallFunc_IsReadyForNextState_ReturnValue' has a wrong offset!");
static_assert(offsetof(InitialPreload_Root_C_IsReadyForNextState, CallFunc_BooleanAND_ReturnValue) == 0x000002, "Member 'InitialPreload_Root_C_IsReadyForNextState::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

}

