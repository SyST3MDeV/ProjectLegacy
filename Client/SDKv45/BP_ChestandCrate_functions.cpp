#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_ChestandCrate

#include "Basic.hpp"

#include "BP_ChestandCrate_classes.hpp"
#include "BP_ChestandCrate_parameters.hpp"


namespace SDK
{

// Function BP_ChestandCrate.BP_ChestandCrate_C.ExecuteUbergraph_BP_ChestandCrate
// (HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_ChestandCrate_C::ExecuteUbergraph_BP_ChestandCrate(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ChestandCrate_C", "ExecuteUbergraph_BP_ChestandCrate");

	Params::BP_ChestandCrate_C_ExecuteUbergraph_BP_ChestandCrate Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ChestandCrate.BP_ChestandCrate_C.Stop Subtle Camera Rumble
// (BlueprintCallable, BlueprintEvent)

void ABP_ChestandCrate_C::Stop_Subtle_Camera_Rumble()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ChestandCrate_C", "Stop Subtle Camera Rumble");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ChestandCrate.BP_ChestandCrate_C.Begin Subtle Camera Rumble
// (BlueprintCallable, BlueprintEvent)

void ABP_ChestandCrate_C::Begin_Subtle_Camera_Rumble()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ChestandCrate_C", "Begin Subtle Camera Rumble");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ChestandCrate.BP_ChestandCrate_C.KeyTurnShake
// (BlueprintCallable, BlueprintEvent)

void ABP_ChestandCrate_C::KeyTurnShake()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ChestandCrate_C", "KeyTurnShake");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ChestandCrate.BP_ChestandCrate_C.KeyEnterShake
// (BlueprintCallable, BlueprintEvent)

void ABP_ChestandCrate_C::KeyEnterShake()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ChestandCrate_C", "KeyEnterShake");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ChestandCrate.BP_ChestandCrate_C.OpenShake
// (BlueprintCallable, BlueprintEvent)

void ABP_ChestandCrate_C::OpenShake()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ChestandCrate_C", "OpenShake");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ChestandCrate.BP_ChestandCrate_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void ABP_ChestandCrate_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ChestandCrate_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ChestandCrate.BP_ChestandCrate_C.Reset
// (BlueprintCallable, BlueprintEvent)

void ABP_ChestandCrate_C::Reset()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ChestandCrate_C", "Reset");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ChestandCrate.BP_ChestandCrate_C.OpenChest
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// EOrionItemRarity                        Rarity                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_ChestandCrate_C::OpenChest(EOrionItemRarity Rarity)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ChestandCrate_C", "OpenChest");

	Params::BP_ChestandCrate_C_OpenChest Parms{};

	Parms.Rarity = Rarity;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ChestandCrate.BP_ChestandCrate_C.InsertKey
// (BlueprintCallable, BlueprintEvent)

void ABP_ChestandCrate_C::InsertKey()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ChestandCrate_C", "InsertKey");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ChestandCrate.BP_ChestandCrate_C.UserConstructionScript
// (Event, Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_ChestandCrate_C::UserConstructionScript()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ChestandCrate_C", "UserConstructionScript");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ChestandCrate.BP_ChestandCrate_C.SetFXAndAnimsByRarity
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// EOrionItemRarity                        Item_Rarity                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UAnimMontage*                     Open_Montage                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_ChestandCrate_C::SetFXAndAnimsByRarity(EOrionItemRarity Item_Rarity, class UAnimMontage** Open_Montage)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ChestandCrate_C", "SetFXAndAnimsByRarity");

	Params::BP_ChestandCrate_C_SetFXAndAnimsByRarity Parms{};

	Parms.Item_Rarity = Item_Rarity;

	UObject::ProcessEvent(Func, &Parms);

	if (Open_Montage != nullptr)
		*Open_Montage = Parms.Open_Montage;
}


// Function BP_ChestandCrate.BP_ChestandCrate_C.ResetColorValuesToDefault
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_ChestandCrate_C::ResetColorValuesToDefault()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ChestandCrate_C", "ResetColorValuesToDefault");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ChestandCrate.BP_ChestandCrate_C.GetFXColorForCurrentRarity
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FLinearColor                     OutputColor                                            (Parm, OutParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_ChestandCrate_C::GetFXColorForCurrentRarity(struct FLinearColor* OutputColor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ChestandCrate_C", "GetFXColorForCurrentRarity");

	Params::BP_ChestandCrate_C_GetFXColorForCurrentRarity Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (OutputColor != nullptr)
		*OutputColor = std::move(Parms.OutputColor);
}

}

