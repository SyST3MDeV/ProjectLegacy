#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: OrionGameplayFunctions

#include "Basic.hpp"

#include "OrionGameplayFunctions_classes.hpp"
#include "OrionGameplayFunctions_parameters.hpp"


namespace SDK
{

// Function OrionGameplayFunctions.OrionGameplayFunctions_C.LaunchOnDeath
// (Static, Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FGameplayCueParameters           GameplayCueParameters                                  (BlueprintVisible, BlueprintReadOnly, Parm, ContainsInstancedReference)
// class AOrionChar*                       OrionChar                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   LaunchMagnitudeMin                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   LaunchMagnitudeMax                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   RawDamageRangeMin                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   RawDamageRangeMax                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    LaunchOnDeath_0                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UOrionGameplayFunctions_C::LaunchOnDeath(const struct FGameplayCueParameters& GameplayCueParameters, class AOrionChar* OrionChar, float LaunchMagnitudeMin, float LaunchMagnitudeMax, float RawDamageRangeMin, float RawDamageRangeMax, bool LaunchOnDeath_0, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("OrionGameplayFunctions_C", "LaunchOnDeath");

	Params::OrionGameplayFunctions_C_LaunchOnDeath Parms{};

	Parms.GameplayCueParameters = std::move(GameplayCueParameters);
	Parms.OrionChar = OrionChar;
	Parms.LaunchMagnitudeMin = LaunchMagnitudeMin;
	Parms.LaunchMagnitudeMax = LaunchMagnitudeMax;
	Parms.RawDamageRangeMin = RawDamageRangeMin;
	Parms.RawDamageRangeMax = RawDamageRangeMax;
	Parms.LaunchOnDeath_0 = LaunchOnDeath_0;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);
}


// Function OrionGameplayFunctions.OrionGameplayFunctions_C.ExplodeOnDeath
// (Static, Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FGameplayCueParameters           GameplayCueParameters                                  (BlueprintVisible, BlueprintReadOnly, Parm, ContainsInstancedReference)
// class AOrionChar*                       OrionChar                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   ExplodeMagnitudeMin                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   ExplodeMagnitudeMax                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   RawDamageRangeMin                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   RawDamageRangeMax                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ExplodeOnDeath_0                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UOrionGameplayFunctions_C::ExplodeOnDeath(const struct FGameplayCueParameters& GameplayCueParameters, class AOrionChar* OrionChar, float ExplodeMagnitudeMin, float ExplodeMagnitudeMax, float RawDamageRangeMin, float RawDamageRangeMax, bool ExplodeOnDeath_0, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("OrionGameplayFunctions_C", "ExplodeOnDeath");

	Params::OrionGameplayFunctions_C_ExplodeOnDeath Parms{};

	Parms.GameplayCueParameters = std::move(GameplayCueParameters);
	Parms.OrionChar = OrionChar;
	Parms.ExplodeMagnitudeMin = ExplodeMagnitudeMin;
	Parms.ExplodeMagnitudeMax = ExplodeMagnitudeMax;
	Parms.RawDamageRangeMin = RawDamageRangeMin;
	Parms.RawDamageRangeMax = RawDamageRangeMax;
	Parms.ExplodeOnDeath_0 = ExplodeOnDeath_0;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);
}


// Function OrionGameplayFunctions.OrionGameplayFunctions_C.SelectMontageFromPlayRate
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UOrionAbility*                    Target                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UAnimMontage*                     FastAnim                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   FastTotalAnimTime                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UAnimMontage*                     MedAnim                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   MedTotalAnimTime                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UAnimMontage*                     SlowAnim                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   SlowTotalAnimTime                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UAnimMontage*                     Anim                                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   PlayRate                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UOrionGameplayFunctions_C::SelectMontageFromPlayRate(class UOrionAbility* Target, class UAnimMontage* FastAnim, float FastTotalAnimTime, class UAnimMontage* MedAnim, float MedTotalAnimTime, class UAnimMontage* SlowAnim, float SlowTotalAnimTime, class UObject* __WorldContext, class UAnimMontage** Anim, float* PlayRate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("OrionGameplayFunctions_C", "SelectMontageFromPlayRate");

	Params::OrionGameplayFunctions_C_SelectMontageFromPlayRate Parms{};

	Parms.Target = Target;
	Parms.FastAnim = FastAnim;
	Parms.FastTotalAnimTime = FastTotalAnimTime;
	Parms.MedAnim = MedAnim;
	Parms.MedTotalAnimTime = MedTotalAnimTime;
	Parms.SlowAnim = SlowAnim;
	Parms.SlowTotalAnimTime = SlowTotalAnimTime;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (Anim != nullptr)
		*Anim = Parms.Anim;

	if (PlayRate != nullptr)
		*PlayRate = Parms.PlayRate;
}


// Function OrionGameplayFunctions.OrionGameplayFunctions_C.GetCleaveDamageTargets
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FGameplayAbilityTargetDataHandle Targets                                                (BlueprintVisible, BlueprintReadOnly, Parm)
// class AActor*                           ExcludeTarget                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TArray<class AActor*>                   CleaveActors                                           (Parm, OutParm, ZeroConstructor)

void UOrionGameplayFunctions_C::GetCleaveDamageTargets(const struct FGameplayAbilityTargetDataHandle& Targets, class AActor* ExcludeTarget, class UObject* __WorldContext, TArray<class AActor*>* CleaveActors)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("OrionGameplayFunctions_C", "GetCleaveDamageTargets");

	Params::OrionGameplayFunctions_C_GetCleaveDamageTargets Parms{};

	Parms.Targets = std::move(Targets);
	Parms.ExcludeTarget = ExcludeTarget;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (CleaveActors != nullptr)
		*CleaveActors = std::move(Parms.CleaveActors);
}


// Function OrionGameplayFunctions.OrionGameplayFunctions_C.GetRecallCastTime
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AOrionCharHero*                   HeroActor                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    WithPrimeHelixCheck                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   CastTime                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UOrionGameplayFunctions_C::GetRecallCastTime(class AOrionCharHero* HeroActor, bool WithPrimeHelixCheck, class UObject* __WorldContext, float* CastTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("OrionGameplayFunctions_C", "GetRecallCastTime");

	Params::OrionGameplayFunctions_C_GetRecallCastTime Parms{};

	Parms.HeroActor = HeroActor;
	Parms.WithPrimeHelixCheck = WithPrimeHelixCheck;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (CastTime != nullptr)
		*CastTime = Parms.CastTime;
}

}

