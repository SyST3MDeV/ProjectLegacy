#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Planet

#include "Basic.hpp"

#include "Struct_MoonMaterial_structs.hpp"
#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "CoreUObject_structs.hpp"
#include "Enum_HeroHomeWorld_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_Planet.BP_Planet_C
// 0x00E0 (0x03F8 - 0x0318)
class ABP_Planet_C final : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0318(0x0008)(Transient, DuplicateTransient)
	class UStaticMeshComponent*                   SM_Planet;                                         // 0x0320(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x0328(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         Timeline_0_Opacity_C561F648406399FB986C7F8F71ACD6FE; // 0x0330(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            Timeline_0__Direction_C561F648406399FB986C7F8F71ACD6FE; // 0x0334(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_335[0x3];                                      // 0x0335(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     Timeline_0;                                        // 0x0338(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     MaterialPlanet;                                    // 0x0340(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     MaterialAtmosphere;                                // 0x0348(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               MID_Planet;                                        // 0x0350(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               MID_Atmosphere;                                    // 0x0358(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ADirectionalLight*                      DirectionalLight;                                  // 0x0360(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               NewVar_0;                                          // 0x0368(0x000C)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor)
	bool                                          IgnoreMIC;                                         // 0x0374(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_375[0x3];                                      // 0x0375(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FStruct_MoonMaterial                   MoonStruct;                                        // 0x0378(0x0040)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	struct FVector                                Omeda_Scale;                                       // 0x03B8(0x000C)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Zechin_Scale;                                      // 0x03C4(0x000C)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Letha_Scale;                                       // 0x03D0(0x000C)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                OmedaOffset;                                       // 0x03DC(0x000C)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                StartingLocation;                                  // 0x03E8(0x000C)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_Planet(int32 EntryPoint);
	void ReceiveBeginPlay();
	void Refresh_MoonMat(Enum_HeroHomeWorld Moon);
	void Timeline_0__ChangeMat__EventFunc();
	void Timeline_0__CreatMat__EventFunc();
	void Timeline_0__FinishedFunc();
	void Timeline_0__UpdateFunc();
	void UserConstructionScript();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_Planet_C">();
	}
	static class ABP_Planet_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_Planet_C>();
	}
};
static_assert(alignof(ABP_Planet_C) == 0x000008, "Wrong alignment on ABP_Planet_C");
static_assert(sizeof(ABP_Planet_C) == 0x0003F8, "Wrong size on ABP_Planet_C");
static_assert(offsetof(ABP_Planet_C, UberGraphFrame) == 0x000318, "Member 'ABP_Planet_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_Planet_C, SM_Planet) == 0x000320, "Member 'ABP_Planet_C::SM_Planet' has a wrong offset!");
static_assert(offsetof(ABP_Planet_C, DefaultSceneRoot) == 0x000328, "Member 'ABP_Planet_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(ABP_Planet_C, Timeline_0_Opacity_C561F648406399FB986C7F8F71ACD6FE) == 0x000330, "Member 'ABP_Planet_C::Timeline_0_Opacity_C561F648406399FB986C7F8F71ACD6FE' has a wrong offset!");
static_assert(offsetof(ABP_Planet_C, Timeline_0__Direction_C561F648406399FB986C7F8F71ACD6FE) == 0x000334, "Member 'ABP_Planet_C::Timeline_0__Direction_C561F648406399FB986C7F8F71ACD6FE' has a wrong offset!");
static_assert(offsetof(ABP_Planet_C, Timeline_0) == 0x000338, "Member 'ABP_Planet_C::Timeline_0' has a wrong offset!");
static_assert(offsetof(ABP_Planet_C, MaterialPlanet) == 0x000340, "Member 'ABP_Planet_C::MaterialPlanet' has a wrong offset!");
static_assert(offsetof(ABP_Planet_C, MaterialAtmosphere) == 0x000348, "Member 'ABP_Planet_C::MaterialAtmosphere' has a wrong offset!");
static_assert(offsetof(ABP_Planet_C, MID_Planet) == 0x000350, "Member 'ABP_Planet_C::MID_Planet' has a wrong offset!");
static_assert(offsetof(ABP_Planet_C, MID_Atmosphere) == 0x000358, "Member 'ABP_Planet_C::MID_Atmosphere' has a wrong offset!");
static_assert(offsetof(ABP_Planet_C, DirectionalLight) == 0x000360, "Member 'ABP_Planet_C::DirectionalLight' has a wrong offset!");
static_assert(offsetof(ABP_Planet_C, NewVar_0) == 0x000368, "Member 'ABP_Planet_C::NewVar_0' has a wrong offset!");
static_assert(offsetof(ABP_Planet_C, IgnoreMIC) == 0x000374, "Member 'ABP_Planet_C::IgnoreMIC' has a wrong offset!");
static_assert(offsetof(ABP_Planet_C, MoonStruct) == 0x000378, "Member 'ABP_Planet_C::MoonStruct' has a wrong offset!");
static_assert(offsetof(ABP_Planet_C, Omeda_Scale) == 0x0003B8, "Member 'ABP_Planet_C::Omeda_Scale' has a wrong offset!");
static_assert(offsetof(ABP_Planet_C, Zechin_Scale) == 0x0003C4, "Member 'ABP_Planet_C::Zechin_Scale' has a wrong offset!");
static_assert(offsetof(ABP_Planet_C, Letha_Scale) == 0x0003D0, "Member 'ABP_Planet_C::Letha_Scale' has a wrong offset!");
static_assert(offsetof(ABP_Planet_C, OmedaOffset) == 0x0003DC, "Member 'ABP_Planet_C::OmedaOffset' has a wrong offset!");
static_assert(offsetof(ABP_Planet_C, StartingLocation) == 0x0003E8, "Member 'ABP_Planet_C::StartingLocation' has a wrong offset!");

}

