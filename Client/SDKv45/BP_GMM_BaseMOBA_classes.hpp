#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_GMM_BaseMOBA

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "OrionGame_structs.hpp"
#include "OrionGame_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_GMM_BaseMOBA.BP_GMM_BaseMOBA_C
// 0x0078 (0x0E68 - 0x0DF0)
class ABP_GMM_BaseMOBA_C final : public AOrionGameMode_MOBA
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0DF0(0x0008)(Transient, DuplicateTransient)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x0DF8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	bool                                          FirstKillHasHappened;                              // 0x0E00(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          AllDead;                                           // 0x0E01(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E02[0x2];                                      // 0x0E02(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         TowerFirstLevelUp;                                 // 0x0E04(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	UMulticastDelegateProperty_                   PrimeHelixPickedUp;                                // 0x0E08(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	UMulticastDelegateProperty_                   PrimeHelixDropped;                                 // 0x0E18(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	UMulticastDelegateProperty_                   PrimeHelixDestroyed;                               // 0x0E28(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	UMulticastDelegateProperty_                   PlayerKilled;                                      // 0x0E38(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	float                                         Three0secDelay;                                    // 0x0E48(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         MinMultiKillCount;                                 // 0x0E4C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         MaxMultiKillCount;                                 // 0x0E50(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DelayBeforeEnemyKilledVO;                          // 0x0E54(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         KillStreakShutdownValue;                           // 0x0E58(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         KillStreakStarts;                                  // 0x0E5C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         BotBuffColumn;                                     // 0x0E60(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void PrimeHelixPickedUp__DelegateSignature(class AOrionChar* Carrier);
	void PrimeHelixDropped__DelegateSignature(class AOrionChar* Dropper);
	void PrimeHelixDestroyed__DelegateSignature();
	void PlayerKilled__DelegateSignature();
	void ExecuteUbergraph_BP_GMM_BaseMOBA(int32 EntryPoint);
	void ReceivePlayerKillStreakShutdown(class AController* Victim, class AController* Killer, int32 KillStreakCount);
	void OnMatchEnded_Bind();
	void CheckMultiOrStreak(class AController* Killer, int32 MultiKillCount, int32 KillStreakCount);
	void ForceMatchWinCondition(EOrionTeam TeamNum);
	void CheckAce(class AController* Killer, class AController* KilledPlayer);
	void CheckFirstBlood(class AController* Killer, class AController* KilledPlayer, class APawn* KilledPawn);
	void OnMatchStarted_Bind();
	void ReceivePlayerKilled(class AController* Killer, class AController* KilledPlayer, class APawn* KilledPawn, int32 MultiKillCount, int32 KillStreakCount);
	void ReceiveBeginPlay();
	void UserConstructionScript();
	void IsMatchTimeBased();
	bool IsMatchObjectiveCompleted();
	EOrionTeam GetWinningTeamNum();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_GMM_BaseMOBA_C">();
	}
	static class ABP_GMM_BaseMOBA_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_GMM_BaseMOBA_C>();
	}
};
static_assert(alignof(ABP_GMM_BaseMOBA_C) == 0x000008, "Wrong alignment on ABP_GMM_BaseMOBA_C");
static_assert(sizeof(ABP_GMM_BaseMOBA_C) == 0x000E68, "Wrong size on ABP_GMM_BaseMOBA_C");
static_assert(offsetof(ABP_GMM_BaseMOBA_C, UberGraphFrame) == 0x000DF0, "Member 'ABP_GMM_BaseMOBA_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_GMM_BaseMOBA_C, DefaultSceneRoot) == 0x000DF8, "Member 'ABP_GMM_BaseMOBA_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(ABP_GMM_BaseMOBA_C, FirstKillHasHappened) == 0x000E00, "Member 'ABP_GMM_BaseMOBA_C::FirstKillHasHappened' has a wrong offset!");
static_assert(offsetof(ABP_GMM_BaseMOBA_C, AllDead) == 0x000E01, "Member 'ABP_GMM_BaseMOBA_C::AllDead' has a wrong offset!");
static_assert(offsetof(ABP_GMM_BaseMOBA_C, TowerFirstLevelUp) == 0x000E04, "Member 'ABP_GMM_BaseMOBA_C::TowerFirstLevelUp' has a wrong offset!");
static_assert(offsetof(ABP_GMM_BaseMOBA_C, PrimeHelixPickedUp) == 0x000E08, "Member 'ABP_GMM_BaseMOBA_C::PrimeHelixPickedUp' has a wrong offset!");
static_assert(offsetof(ABP_GMM_BaseMOBA_C, PrimeHelixDropped) == 0x000E18, "Member 'ABP_GMM_BaseMOBA_C::PrimeHelixDropped' has a wrong offset!");
static_assert(offsetof(ABP_GMM_BaseMOBA_C, PrimeHelixDestroyed) == 0x000E28, "Member 'ABP_GMM_BaseMOBA_C::PrimeHelixDestroyed' has a wrong offset!");
static_assert(offsetof(ABP_GMM_BaseMOBA_C, PlayerKilled) == 0x000E38, "Member 'ABP_GMM_BaseMOBA_C::PlayerKilled' has a wrong offset!");
static_assert(offsetof(ABP_GMM_BaseMOBA_C, Three0secDelay) == 0x000E48, "Member 'ABP_GMM_BaseMOBA_C::Three0secDelay' has a wrong offset!");
static_assert(offsetof(ABP_GMM_BaseMOBA_C, MinMultiKillCount) == 0x000E4C, "Member 'ABP_GMM_BaseMOBA_C::MinMultiKillCount' has a wrong offset!");
static_assert(offsetof(ABP_GMM_BaseMOBA_C, MaxMultiKillCount) == 0x000E50, "Member 'ABP_GMM_BaseMOBA_C::MaxMultiKillCount' has a wrong offset!");
static_assert(offsetof(ABP_GMM_BaseMOBA_C, DelayBeforeEnemyKilledVO) == 0x000E54, "Member 'ABP_GMM_BaseMOBA_C::DelayBeforeEnemyKilledVO' has a wrong offset!");
static_assert(offsetof(ABP_GMM_BaseMOBA_C, KillStreakShutdownValue) == 0x000E58, "Member 'ABP_GMM_BaseMOBA_C::KillStreakShutdownValue' has a wrong offset!");
static_assert(offsetof(ABP_GMM_BaseMOBA_C, KillStreakStarts) == 0x000E5C, "Member 'ABP_GMM_BaseMOBA_C::KillStreakStarts' has a wrong offset!");
static_assert(offsetof(ABP_GMM_BaseMOBA_C, BotBuffColumn) == 0x000E60, "Member 'ABP_GMM_BaseMOBA_C::BotBuffColumn' has a wrong offset!");

}

