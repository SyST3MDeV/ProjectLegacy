#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_OrionVisionWard

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "GameplayTags_structs.hpp"
#include "OrionGame_structs.hpp"
#include "OrionGame_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_OrionVisionWard.BP_OrionVisionWard_C
// 0x0118 (0x06C0 - 0x05A8)
class ABP_OrionVisionWard_C : public AOrionVisionWard
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x05A8(0x0008)(Transient, DuplicateTransient)
	class UParticleSystemComponent*               P_Ward_Active;                                     // 0x05B0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UDecalComponent*                        Decal;                                             // 0x05B8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Glowing_Eye_default;                               // 0x05C0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Spike_Ward_Default;                                // 0x05C8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Sphere;                                            // 0x05D0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               P_Ward_Spotted;                                    // 0x05D8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 WardMesh;                                          // 0x05E0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UArrowComponent*                        Arrow;                                             // 0x05E8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USphereComponent*                       SightRange;                                        // 0x05F0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UCapsuleComponent*                      Capsule;                                           // 0x05F8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         Timeline_0_RezInEye_430D08AB429573A8AD8ED090CC98D6C0; // 0x0600(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Timeline_0_RezIn_430D08AB429573A8AD8ED090CC98D6C0; // 0x0604(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Timeline_0_Pulse_430D08AB429573A8AD8ED090CC98D6C0; // 0x0608(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            Timeline_0__Direction_430D08AB429573A8AD8ED090CC98D6C0; // 0x060C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_60D[0x3];                                      // 0x060D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     Timeline_0;                                        // 0x0610(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     M_Range;                                           // 0x0618(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               DMI_Range;                                         // 0x0620(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               DMI_Ward;                                          // 0x0628(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Damage_Number_Pops;                                // 0x0630(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         MinCoinsToSpawn;                                   // 0x0638(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           WardColor;                                         // 0x063C(0x0010)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	uint8                                         Pad_64C[0x4];                                      // 0x064C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           ShadowPlaneTag;                                    // 0x0650(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	bool                                          SawInShadowPlane;                                  // 0x0658(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_659[0x3];                                      // 0x0659(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         ShadowPlaneCoolDown;                               // 0x065C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTagContainer                  ShadowPlaneTagContainer;                           // 0x0660(0x0020)(Edit, BlueprintVisible, DisableEditOnInstance)
	class UClass*                                 GE_Ward_Stealth;                                   // 0x0680(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     M_WardShimmer;                                     // 0x0688(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     M_Ward;                                            // 0x0690(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   WardGlow;                                          // 0x0698(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   TeamColor;                                         // 0x06A0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               DecalMID;                                          // 0x06A8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               EyeMID;                                            // 0x06B0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 GE_DamageReduction;                                // 0x06B8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_OrionVisionWard(int32 EntryPoint);
	void RemoveShadowPlaneMaterials();
	void ApplyShadowPlaneMaterials();
	void ReceiveBeginPlay();
	void OnDeath();
	void OnTeamChanged(EOrionTeam NewTeamIdx);
	void Timeline_0__UpdateFunc();
	void Timeline_0__FinishedFunc();
	void UserConstructionScript();
	void SetupColors(EOrionTeam TeamNum_0);
	void GetAimTargetSensingLocation(struct FVector* AimPosition);
	void GetTargetingLocation(struct FVector* OutPosition);
	struct FVector GetNumberPopLocation(const struct FVector& HitLocation);
	TArray<class UMeshComponent*> GetHighlightableMeshes();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_OrionVisionWard_C">();
	}
	static class ABP_OrionVisionWard_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_OrionVisionWard_C>();
	}
};
static_assert(alignof(ABP_OrionVisionWard_C) == 0x000008, "Wrong alignment on ABP_OrionVisionWard_C");
static_assert(sizeof(ABP_OrionVisionWard_C) == 0x0006C0, "Wrong size on ABP_OrionVisionWard_C");
static_assert(offsetof(ABP_OrionVisionWard_C, UberGraphFrame) == 0x0005A8, "Member 'ABP_OrionVisionWard_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_OrionVisionWard_C, P_Ward_Active) == 0x0005B0, "Member 'ABP_OrionVisionWard_C::P_Ward_Active' has a wrong offset!");
static_assert(offsetof(ABP_OrionVisionWard_C, Decal) == 0x0005B8, "Member 'ABP_OrionVisionWard_C::Decal' has a wrong offset!");
static_assert(offsetof(ABP_OrionVisionWard_C, Glowing_Eye_default) == 0x0005C0, "Member 'ABP_OrionVisionWard_C::Glowing_Eye_default' has a wrong offset!");
static_assert(offsetof(ABP_OrionVisionWard_C, Spike_Ward_Default) == 0x0005C8, "Member 'ABP_OrionVisionWard_C::Spike_Ward_Default' has a wrong offset!");
static_assert(offsetof(ABP_OrionVisionWard_C, Sphere) == 0x0005D0, "Member 'ABP_OrionVisionWard_C::Sphere' has a wrong offset!");
static_assert(offsetof(ABP_OrionVisionWard_C, P_Ward_Spotted) == 0x0005D8, "Member 'ABP_OrionVisionWard_C::P_Ward_Spotted' has a wrong offset!");
static_assert(offsetof(ABP_OrionVisionWard_C, WardMesh) == 0x0005E0, "Member 'ABP_OrionVisionWard_C::WardMesh' has a wrong offset!");
static_assert(offsetof(ABP_OrionVisionWard_C, Arrow) == 0x0005E8, "Member 'ABP_OrionVisionWard_C::Arrow' has a wrong offset!");
static_assert(offsetof(ABP_OrionVisionWard_C, SightRange) == 0x0005F0, "Member 'ABP_OrionVisionWard_C::SightRange' has a wrong offset!");
static_assert(offsetof(ABP_OrionVisionWard_C, Capsule) == 0x0005F8, "Member 'ABP_OrionVisionWard_C::Capsule' has a wrong offset!");
static_assert(offsetof(ABP_OrionVisionWard_C, Timeline_0_RezInEye_430D08AB429573A8AD8ED090CC98D6C0) == 0x000600, "Member 'ABP_OrionVisionWard_C::Timeline_0_RezInEye_430D08AB429573A8AD8ED090CC98D6C0' has a wrong offset!");
static_assert(offsetof(ABP_OrionVisionWard_C, Timeline_0_RezIn_430D08AB429573A8AD8ED090CC98D6C0) == 0x000604, "Member 'ABP_OrionVisionWard_C::Timeline_0_RezIn_430D08AB429573A8AD8ED090CC98D6C0' has a wrong offset!");
static_assert(offsetof(ABP_OrionVisionWard_C, Timeline_0_Pulse_430D08AB429573A8AD8ED090CC98D6C0) == 0x000608, "Member 'ABP_OrionVisionWard_C::Timeline_0_Pulse_430D08AB429573A8AD8ED090CC98D6C0' has a wrong offset!");
static_assert(offsetof(ABP_OrionVisionWard_C, Timeline_0__Direction_430D08AB429573A8AD8ED090CC98D6C0) == 0x00060C, "Member 'ABP_OrionVisionWard_C::Timeline_0__Direction_430D08AB429573A8AD8ED090CC98D6C0' has a wrong offset!");
static_assert(offsetof(ABP_OrionVisionWard_C, Timeline_0) == 0x000610, "Member 'ABP_OrionVisionWard_C::Timeline_0' has a wrong offset!");
static_assert(offsetof(ABP_OrionVisionWard_C, M_Range) == 0x000618, "Member 'ABP_OrionVisionWard_C::M_Range' has a wrong offset!");
static_assert(offsetof(ABP_OrionVisionWard_C, DMI_Range) == 0x000620, "Member 'ABP_OrionVisionWard_C::DMI_Range' has a wrong offset!");
static_assert(offsetof(ABP_OrionVisionWard_C, DMI_Ward) == 0x000628, "Member 'ABP_OrionVisionWard_C::DMI_Ward' has a wrong offset!");
static_assert(offsetof(ABP_OrionVisionWard_C, Damage_Number_Pops) == 0x000630, "Member 'ABP_OrionVisionWard_C::Damage_Number_Pops' has a wrong offset!");
static_assert(offsetof(ABP_OrionVisionWard_C, MinCoinsToSpawn) == 0x000638, "Member 'ABP_OrionVisionWard_C::MinCoinsToSpawn' has a wrong offset!");
static_assert(offsetof(ABP_OrionVisionWard_C, WardColor) == 0x00063C, "Member 'ABP_OrionVisionWard_C::WardColor' has a wrong offset!");
static_assert(offsetof(ABP_OrionVisionWard_C, ShadowPlaneTag) == 0x000650, "Member 'ABP_OrionVisionWard_C::ShadowPlaneTag' has a wrong offset!");
static_assert(offsetof(ABP_OrionVisionWard_C, SawInShadowPlane) == 0x000658, "Member 'ABP_OrionVisionWard_C::SawInShadowPlane' has a wrong offset!");
static_assert(offsetof(ABP_OrionVisionWard_C, ShadowPlaneCoolDown) == 0x00065C, "Member 'ABP_OrionVisionWard_C::ShadowPlaneCoolDown' has a wrong offset!");
static_assert(offsetof(ABP_OrionVisionWard_C, ShadowPlaneTagContainer) == 0x000660, "Member 'ABP_OrionVisionWard_C::ShadowPlaneTagContainer' has a wrong offset!");
static_assert(offsetof(ABP_OrionVisionWard_C, GE_Ward_Stealth) == 0x000680, "Member 'ABP_OrionVisionWard_C::GE_Ward_Stealth' has a wrong offset!");
static_assert(offsetof(ABP_OrionVisionWard_C, M_WardShimmer) == 0x000688, "Member 'ABP_OrionVisionWard_C::M_WardShimmer' has a wrong offset!");
static_assert(offsetof(ABP_OrionVisionWard_C, M_Ward) == 0x000690, "Member 'ABP_OrionVisionWard_C::M_Ward' has a wrong offset!");
static_assert(offsetof(ABP_OrionVisionWard_C, WardGlow) == 0x000698, "Member 'ABP_OrionVisionWard_C::WardGlow' has a wrong offset!");
static_assert(offsetof(ABP_OrionVisionWard_C, TeamColor) == 0x0006A0, "Member 'ABP_OrionVisionWard_C::TeamColor' has a wrong offset!");
static_assert(offsetof(ABP_OrionVisionWard_C, DecalMID) == 0x0006A8, "Member 'ABP_OrionVisionWard_C::DecalMID' has a wrong offset!");
static_assert(offsetof(ABP_OrionVisionWard_C, EyeMID) == 0x0006B0, "Member 'ABP_OrionVisionWard_C::EyeMID' has a wrong offset!");
static_assert(offsetof(ABP_OrionVisionWard_C, GE_DamageReduction) == 0x0006B8, "Member 'ABP_OrionVisionWard_C::GE_DamageReduction' has a wrong offset!");

}

