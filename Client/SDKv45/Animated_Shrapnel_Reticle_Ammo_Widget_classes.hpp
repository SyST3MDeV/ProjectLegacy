#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Animated_Shrapnel_Reticle_Ammo_Widget

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "OrionGame_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass Animated_Shrapnel_Reticle_Ammo_Widget.Animated_Shrapnel_Reticle_Ammo_Widget_C
// 0x0078 (0x02B8 - 0x0240)
class UAnimated_Shrapnel_Reticle_Ammo_Widget_C final : public UOrionUserWidget_Reticle
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0240(0x0008)(Transient, DuplicateTransient)
	class UWidgetAnimation*                       TimeOutFin;                                        // 0x0248(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWidgetAnimation*                       TimeOutFlash;                                      // 0x0250(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWidgetAnimation*                       PulseAmmo;                                         // 0x0258(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWidgetAnimation*                       Targeting;                                         // 0x0260(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWidgetAnimation*                       SuccessfulHit;                                     // 0x0268(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UProgressBar*                           AmmoBar;                                           // 0x0270(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 CooldownRing;                                      // 0x0278(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 HitX;                                              // 0x0280(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 TargetingRing;                                     // 0x0288(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	float                                         AmmoValue;                                         // 0x0290(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Buffed;                                            // 0x0294(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_295[0x3];                                      // 0x0295(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           BuffedColor;                                       // 0x0298(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           DefaultColor;                                      // 0x02A8(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_Animated_Shrapnel_Reticle_Ammo_Widget(int32 EntryPoint);
	void Construct();
	void TimeOutFinish();
	void Timeout();
	void BuffStart();
	void SetAmmoAmount(float AmmoValue_0, bool Buffed_0);
	float GetPercentAmmoFill();
	struct FLinearColor Get_AmmoBar_FillColorAndOpacity();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"Animated_Shrapnel_Reticle_Ammo_Widget_C">();
	}
	static class UAnimated_Shrapnel_Reticle_Ammo_Widget_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAnimated_Shrapnel_Reticle_Ammo_Widget_C>();
	}
};
static_assert(alignof(UAnimated_Shrapnel_Reticle_Ammo_Widget_C) == 0x000008, "Wrong alignment on UAnimated_Shrapnel_Reticle_Ammo_Widget_C");
static_assert(sizeof(UAnimated_Shrapnel_Reticle_Ammo_Widget_C) == 0x0002B8, "Wrong size on UAnimated_Shrapnel_Reticle_Ammo_Widget_C");
static_assert(offsetof(UAnimated_Shrapnel_Reticle_Ammo_Widget_C, UberGraphFrame) == 0x000240, "Member 'UAnimated_Shrapnel_Reticle_Ammo_Widget_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UAnimated_Shrapnel_Reticle_Ammo_Widget_C, TimeOutFin) == 0x000248, "Member 'UAnimated_Shrapnel_Reticle_Ammo_Widget_C::TimeOutFin' has a wrong offset!");
static_assert(offsetof(UAnimated_Shrapnel_Reticle_Ammo_Widget_C, TimeOutFlash) == 0x000250, "Member 'UAnimated_Shrapnel_Reticle_Ammo_Widget_C::TimeOutFlash' has a wrong offset!");
static_assert(offsetof(UAnimated_Shrapnel_Reticle_Ammo_Widget_C, PulseAmmo) == 0x000258, "Member 'UAnimated_Shrapnel_Reticle_Ammo_Widget_C::PulseAmmo' has a wrong offset!");
static_assert(offsetof(UAnimated_Shrapnel_Reticle_Ammo_Widget_C, Targeting) == 0x000260, "Member 'UAnimated_Shrapnel_Reticle_Ammo_Widget_C::Targeting' has a wrong offset!");
static_assert(offsetof(UAnimated_Shrapnel_Reticle_Ammo_Widget_C, SuccessfulHit) == 0x000268, "Member 'UAnimated_Shrapnel_Reticle_Ammo_Widget_C::SuccessfulHit' has a wrong offset!");
static_assert(offsetof(UAnimated_Shrapnel_Reticle_Ammo_Widget_C, AmmoBar) == 0x000270, "Member 'UAnimated_Shrapnel_Reticle_Ammo_Widget_C::AmmoBar' has a wrong offset!");
static_assert(offsetof(UAnimated_Shrapnel_Reticle_Ammo_Widget_C, CooldownRing) == 0x000278, "Member 'UAnimated_Shrapnel_Reticle_Ammo_Widget_C::CooldownRing' has a wrong offset!");
static_assert(offsetof(UAnimated_Shrapnel_Reticle_Ammo_Widget_C, HitX) == 0x000280, "Member 'UAnimated_Shrapnel_Reticle_Ammo_Widget_C::HitX' has a wrong offset!");
static_assert(offsetof(UAnimated_Shrapnel_Reticle_Ammo_Widget_C, TargetingRing) == 0x000288, "Member 'UAnimated_Shrapnel_Reticle_Ammo_Widget_C::TargetingRing' has a wrong offset!");
static_assert(offsetof(UAnimated_Shrapnel_Reticle_Ammo_Widget_C, AmmoValue) == 0x000290, "Member 'UAnimated_Shrapnel_Reticle_Ammo_Widget_C::AmmoValue' has a wrong offset!");
static_assert(offsetof(UAnimated_Shrapnel_Reticle_Ammo_Widget_C, Buffed) == 0x000294, "Member 'UAnimated_Shrapnel_Reticle_Ammo_Widget_C::Buffed' has a wrong offset!");
static_assert(offsetof(UAnimated_Shrapnel_Reticle_Ammo_Widget_C, BuffedColor) == 0x000298, "Member 'UAnimated_Shrapnel_Reticle_Ammo_Widget_C::BuffedColor' has a wrong offset!");
static_assert(offsetof(UAnimated_Shrapnel_Reticle_Ammo_Widget_C, DefaultColor) == 0x0002A8, "Member 'UAnimated_Shrapnel_Reticle_Ammo_Widget_C::DefaultColor' has a wrong offset!");

}

