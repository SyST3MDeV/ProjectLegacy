#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Proj_Card_VisionLaser

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "OrionGame_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass Proj_Card_VisionLaser.Proj_Card_VisionLaser_C
// 0x0020 (0x0730 - 0x0710)
class AProj_Card_VisionLaser_C final : public AOrionProjectile
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0710(0x0008)(Transient, DuplicateTransient)
	class UPrimitiveComponent*                    ComponentToShare;                                  // 0x0718(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               NewVar_0;                                          // 0x0720(0x000C)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void ExecuteUbergraph_Proj_Card_VisionLaser(int32 EntryPoint);
	void OnStop(const struct FHitResult& Hit);
	void UserConstructionScript();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"Proj_Card_VisionLaser_C">();
	}
	static class AProj_Card_VisionLaser_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AProj_Card_VisionLaser_C>();
	}
};
static_assert(alignof(AProj_Card_VisionLaser_C) == 0x000008, "Wrong alignment on AProj_Card_VisionLaser_C");
static_assert(sizeof(AProj_Card_VisionLaser_C) == 0x000730, "Wrong size on AProj_Card_VisionLaser_C");
static_assert(offsetof(AProj_Card_VisionLaser_C, UberGraphFrame) == 0x000710, "Member 'AProj_Card_VisionLaser_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(AProj_Card_VisionLaser_C, ComponentToShare) == 0x000718, "Member 'AProj_Card_VisionLaser_C::ComponentToShare' has a wrong offset!");
static_assert(offsetof(AProj_Card_VisionLaser_C, NewVar_0) == 0x000720, "Member 'AProj_Card_VisionLaser_C::NewVar_0' has a wrong offset!");

}

