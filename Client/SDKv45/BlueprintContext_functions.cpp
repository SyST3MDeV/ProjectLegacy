#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BlueprintContext

#include "Basic.hpp"

#include "BlueprintContext_classes.hpp"
#include "BlueprintContext_parameters.hpp"


namespace SDK
{

// Function BlueprintContext.AnalogCursorContext.DisableAnalogCursor
// (Final, Native, Public, BlueprintCallable)

void UAnalogCursorContext::DisableAnalogCursor()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AnalogCursorContext", "DisableAnalogCursor");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BlueprintContext.AnalogCursorContext.EnableAnalogCursor
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bEnableParallax                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAnalogCursorContext::EnableAnalogCursor(bool bEnableParallax)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AnalogCursorContext", "EnableAnalogCursor");

	Params::AnalogCursorContext_EnableAnalogCursor Parms{};

	Parms.bEnableParallax = bEnableParallax;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// DelegateFunction BlueprintContext.AnalogCursorContext.OnAnalogCursorEnabledToggle__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// bool                                    bIsEnabled                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAnalogCursorContext::OnAnalogCursorEnabledToggle__DelegateSignature(bool bIsEnabled)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AnalogCursorContext", "OnAnalogCursorEnabledToggle__DelegateSignature");

	Params::AnalogCursorContext_OnAnalogCursorEnabledToggle__DelegateSignature Parms{};

	Parms.bIsEnabled = bIsEnabled;

	UObject::ProcessEvent(Func, &Parms);
}


// DelegateFunction BlueprintContext.AnalogCursorContext.OnAnalogCursorHovered__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// bool                                    bIsHovering                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAnalogCursorContext::OnAnalogCursorHovered__DelegateSignature(bool bIsHovering)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AnalogCursorContext", "OnAnalogCursorHovered__DelegateSignature");

	Params::AnalogCursorContext_OnAnalogCursorHovered__DelegateSignature Parms{};

	Parms.bIsHovering = bIsHovering;

	UObject::ProcessEvent(Func, &Parms);
}


// DelegateFunction BlueprintContext.AnalogCursorContext.OnAnalogCursorToggle__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// bool                                    UsingAnalog                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAnalogCursorContext::OnAnalogCursorToggle__DelegateSignature(bool UsingAnalog)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AnalogCursorContext", "OnAnalogCursorToggle__DelegateSignature");

	Params::AnalogCursorContext_OnAnalogCursorToggle__DelegateSignature Parms{};

	Parms.UsingAnalog = UsingAnalog;

	UObject::ProcessEvent(Func, &Parms);
}


// DelegateFunction BlueprintContext.AnalogCursorContext.OnFaceButtonClick__DelegateSignature
// (MulticastDelegate, Public, Delegate)

void UAnalogCursorContext::OnFaceButtonClick__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AnalogCursorContext", "OnFaceButtonClick__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BlueprintContext.AnalogCursorContext.SetControllingAnalogStick
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EOrionAnalogStick                       NewAnalogStick                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAnalogCursorContext::SetControllingAnalogStick(EOrionAnalogStick NewAnalogStick)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AnalogCursorContext", "SetControllingAnalogStick");

	Params::AnalogCursorContext_SetControllingAnalogStick Parms{};

	Parms.NewAnalogStick = NewAnalogStick;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BlueprintContext.AnalogCursorContext.SetIsListeningForGestures
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bNewlyListening                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAnalogCursorContext::SetIsListeningForGestures(bool bNewlyListening)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AnalogCursorContext", "SetIsListeningForGestures");

	Params::AnalogCursorContext_SetIsListeningForGestures Parms{};

	Parms.bNewlyListening = bNewlyListening;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BlueprintContext.AnalogCursorContext.SetNormalizedPosition
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector2D                        NewRelativePosition                                    (Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAnalogCursorContext::SetNormalizedPosition(const struct FVector2D& NewRelativePosition)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AnalogCursorContext", "SetNormalizedPosition");

	Params::AnalogCursorContext_SetNormalizedPosition Parms{};

	Parms.NewRelativePosition = std::move(NewRelativePosition);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BlueprintContext.AnalogCursorContext.GetAnalogStickValues
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FVector2D                        ReturnValue                                            (Parm, OutParm, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector2D UAnalogCursorContext::GetAnalogStickValues() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AnalogCursorContext", "GetAnalogStickValues");

	Params::AnalogCursorContext_GetAnalogStickValues Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BlueprintContext.AnalogCursorContext.GetCurrentPosition
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FVector2D                        ReturnValue                                            (Parm, OutParm, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector2D UAnalogCursorContext::GetCurrentPosition() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AnalogCursorContext", "GetCurrentPosition");

	Params::AnalogCursorContext_GetCurrentPosition Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BlueprintContext.AnalogCursorContext.GetDirectionFromVector
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FVector2D                        Vector                                                 (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EOrionGestureDirection                  ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EOrionGestureDirection UAnalogCursorContext::GetDirectionFromVector(const struct FVector2D& Vector) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AnalogCursorContext", "GetDirectionFromVector");

	Params::AnalogCursorContext_GetDirectionFromVector Parms{};

	Parms.Vector = std::move(Vector);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BlueprintContext.AnalogCursorContext.GetGestureInfo
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EOrionGestureDirection                  Direction0                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EOrionGestureDirection                  Direction1                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAnalogCursorContext::GetGestureInfo(EOrionGestureDirection* Direction0, EOrionGestureDirection* Direction1) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AnalogCursorContext", "GetGestureInfo");

	Params::AnalogCursorContext_GetGestureInfo Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (Direction0 != nullptr)
		*Direction0 = Parms.Direction0;

	if (Direction1 != nullptr)
		*Direction1 = Parms.Direction1;
}


// Function BlueprintContext.AnalogCursorContext.GetHoveredWidgetName
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FName                             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FName UAnalogCursorContext::GetHoveredWidgetName() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AnalogCursorContext", "GetHoveredWidgetName");

	Params::AnalogCursorContext_GetHoveredWidgetName Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BlueprintContext.AnalogCursorContext.GetIsInFastMode
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UAnalogCursorContext::GetIsInFastMode() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AnalogCursorContext", "GetIsInFastMode");

	Params::AnalogCursorContext_GetIsInFastMode Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BlueprintContext.AnalogCursorContext.GetIsUsingGamePad
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UAnalogCursorContext::GetIsUsingGamePad() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AnalogCursorContext", "GetIsUsingGamePad");

	Params::AnalogCursorContext_GetIsUsingGamePad Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BlueprintContext.AnalogCursorContext.GetLastCursorDirection
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FVector2D                        ReturnValue                                            (Parm, OutParm, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector2D UAnalogCursorContext::GetLastCursorDirection() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AnalogCursorContext", "GetLastCursorDirection");

	Params::AnalogCursorContext_GetLastCursorDirection Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BlueprintContext.AnalogCursorContext.GetNormalizedPosition
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FVector2D                        ReturnValue                                            (Parm, OutParm, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector2D UAnalogCursorContext::GetNormalizedPosition() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AnalogCursorContext", "GetNormalizedPosition");

	Params::AnalogCursorContext_GetNormalizedPosition Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BlueprintContext.AnalogCursorContext.GetRadius
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UAnalogCursorContext::GetRadius() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AnalogCursorContext", "GetRadius");

	Params::AnalogCursorContext_GetRadius Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BlueprintContext.AnalogCursorContext.GetRightTriggerValue
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UAnalogCursorContext::GetRightTriggerValue() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AnalogCursorContext", "GetRightTriggerValue");

	Params::AnalogCursorContext_GetRightTriggerValue Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BlueprintContext.AnalogCursorContext.GetVelocity
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FVector2D                        ReturnValue                                            (Parm, OutParm, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector2D UAnalogCursorContext::GetVelocity() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AnalogCursorContext", "GetVelocity");

	Params::AnalogCursorContext_GetVelocity Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BlueprintContext.AnalogCursorContext.IsDelegateToggleBound
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UAnalogCursorContext::IsDelegateToggleBound() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AnalogCursorContext", "IsDelegateToggleBound");

	Params::AnalogCursorContext_IsDelegateToggleBound Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BlueprintContext.AnalogCursorContext.IsHovering
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UAnalogCursorContext::IsHovering() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AnalogCursorContext", "IsHovering");

	Params::AnalogCursorContext_IsHovering Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BlueprintContext.AnalogCursorContext.IsUsingAnalogCursor
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UAnalogCursorContext::IsUsingAnalogCursor() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AnalogCursorContext", "IsUsingAnalogCursor");

	Params::AnalogCursorContext_IsUsingAnalogCursor Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BlueprintContext.ArcadeContext.ClearScore
// (Final, Native, Public, BlueprintCallable)

void UArcadeContext::ClearScore()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ArcadeContext", "ClearScore");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BlueprintContext.ArcadeContext.StartCountdown
// (Final, Native, Public, BlueprintCallable)

void UArcadeContext::StartCountdown()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ArcadeContext", "StartCountdown");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BlueprintContext.ArcadeContext.GetCurrentRoundIndex
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UArcadeContext::GetCurrentRoundIndex() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ArcadeContext", "GetCurrentRoundIndex");

	Params::ArcadeContext_GetCurrentRoundIndex Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BlueprintContext.ArcadeContext.GetCurrentRoundTime
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UArcadeContext::GetCurrentRoundTime() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ArcadeContext", "GetCurrentRoundTime");

	Params::ArcadeContext_GetCurrentRoundTime Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BlueprintContext.ArcadeContext.GetRoundState
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FArcadeRoundState                ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)

struct FArcadeRoundState UArcadeContext::GetRoundState() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ArcadeContext", "GetRoundState");

	Params::ArcadeContext_GetRoundState Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BlueprintContext.ArcadeContext.GetVictoryPoints
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UArcadeContext::GetVictoryPoints() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ArcadeContext", "GetVictoryPoints");

	Params::ArcadeContext_GetVictoryPoints Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BlueprintContext.ArcadeContext.InOvertime
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UArcadeContext::InOvertime() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ArcadeContext", "InOvertime");

	Params::ArcadeContext_InOvertime Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BlueprintContext.ArcadeContext.IsInArcade
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UArcadeContext::IsInArcade() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ArcadeContext", "IsInArcade");

	Params::ArcadeContext_IsInArcade Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BlueprintContext.AutomationContext.ActivateAbilityForPawn
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AOrionChar*                       InChar                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EOrionAbilityBinding                    InputID                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bPressed                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAutomationContext::ActivateAbilityForPawn(class AOrionChar* InChar, const EOrionAbilityBinding InputID, const bool bPressed)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AutomationContext", "ActivateAbilityForPawn");

	Params::AutomationContext_ActivateAbilityForPawn Parms{};

	Parms.InChar = InChar;
	Parms.InputID = InputID;
	Parms.bPressed = bPressed;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BlueprintContext.AutomationContext.ActivateAIAbility
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AOrionChar*                       InChar                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EOrionAbilityBinding                    InputID                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAutomationContext::ActivateAIAbility(class AOrionChar* InChar, const EOrionAbilityBinding InputID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AutomationContext", "ActivateAIAbility");

	Params::AutomationContext_ActivateAIAbility Parms{};

	Parms.InChar = InChar;
	Parms.InputID = InputID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BlueprintContext.AutomationContext.AddPawnMovementInput
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class AOrionChar*                       InChar                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          WorldDirection                                         (Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ScaleValue                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bForce                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAutomationContext::AddPawnMovementInput(class AOrionChar* InChar, const struct FVector& WorldDirection, float ScaleValue, bool bForce)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AutomationContext", "AddPawnMovementInput");

	Params::AutomationContext_AddPawnMovementInput Parms{};

	Parms.InChar = InChar;
	Parms.WorldDirection = std::move(WorldDirection);
	Parms.ScaleValue = ScaleValue;
	Parms.bForce = bForce;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BlueprintContext.AutomationContext.CancelAbilityForPawn
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AOrionChar*                       InChar                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAutomationContext::CancelAbilityForPawn(class AOrionChar* InChar)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AutomationContext", "CancelAbilityForPawn");

	Params::AutomationContext_CancelAbilityForPawn Parms{};

	Parms.InChar = InChar;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BlueprintContext.AutomationContext.CancelAllAbilities
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AOrionChar*                       InChar                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAutomationContext::CancelAllAbilities(class AOrionChar* InChar)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AutomationContext", "CancelAllAbilities");

	Params::AutomationContext_CancelAllAbilities Parms{};

	Parms.InChar = InChar;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BlueprintContext.AutomationContext.ConfirmAbilityForPawn
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AOrionChar*                       InChar                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAutomationContext::ConfirmAbilityForPawn(class AOrionChar* InChar)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AutomationContext", "ConfirmAbilityForPawn");

	Params::AutomationContext_ConfirmAbilityForPawn Parms{};

	Parms.InChar = InChar;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BlueprintContext.AutomationContext.GetRemainingCooldownForAbility
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UOrionAbilitySystemComponent*     AbilitySystem                                          (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EOrionAbilityBinding                    InputID                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UAutomationContext::GetRemainingCooldownForAbility(class UOrionAbilitySystemComponent* AbilitySystem, const EOrionAbilityBinding InputID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AutomationContext", "GetRemainingCooldownForAbility");

	Params::AutomationContext_GetRemainingCooldownForAbility Parms{};

	Parms.AbilitySystem = AbilitySystem;
	Parms.InputID = InputID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// DelegateFunction BlueprintContext.AutomationContext.OnOrionCharSpawned__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// class AOrionChar*                       NewOrionChar                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAutomationContext::OnOrionCharSpawned__DelegateSignature(class AOrionChar* NewOrionChar)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AutomationContext", "OnOrionCharSpawned__DelegateSignature");

	Params::AutomationContext_OnOrionCharSpawned__DelegateSignature Parms{};

	Parms.NewOrionChar = NewOrionChar;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BlueprintContext.AutomationContext.RegisterForActorSpawnCallbacks
// (Final, Native, Public, BlueprintCallable)

void UAutomationContext::RegisterForActorSpawnCallbacks()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AutomationContext", "RegisterForActorSpawnCallbacks");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BlueprintContext.AutomationContext.ResetAFKTime
// (Final, Native, Public, BlueprintCallable)

void UAutomationContext::ResetAFKTime()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AutomationContext", "ResetAFKTime");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BlueprintContext.AutomationContext.ScriptAIBehavior
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AOrionChar*                       InChar                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UAIScriptedBehavior*              ScriptedBehavior                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAutomationContext::ScriptAIBehavior(class AOrionChar* InChar, class UAIScriptedBehavior* ScriptedBehavior)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AutomationContext", "ScriptAIBehavior");

	Params::AutomationContext_ScriptAIBehavior Parms{};

	Parms.InChar = InChar;
	Parms.ScriptedBehavior = ScriptedBehavior;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BlueprintContext.AutomationContext.SetHealth
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AOrionChar*                       InChar                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InPercent                                              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAutomationContext::SetHealth(class AOrionChar* InChar, const float InPercent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AutomationContext", "SetHealth");

	Params::AutomationContext_SetHealth Parms{};

	Parms.InChar = InChar;
	Parms.InPercent = InPercent;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BlueprintContext.AutomationContext.TeleportCharTo
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class AOrionChar*                       InChar                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          DestLocation                                           (Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FRotator                         DestRotation                                           (Parm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)

void UAutomationContext::TeleportCharTo(class AOrionChar* InChar, const struct FVector& DestLocation, const struct FRotator& DestRotation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AutomationContext", "TeleportCharTo");

	Params::AutomationContext_TeleportCharTo Parms{};

	Parms.InChar = InChar;
	Parms.DestLocation = std::move(DestLocation);
	Parms.DestRotation = std::move(DestRotation);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BlueprintContext.AutomationContext.ViewTarget
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AActor*                           ActorToFace                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UAutomationContext::ViewTarget(class AActor* ActorToFace)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AutomationContext", "ViewTarget");

	Params::AutomationContext_ViewTarget Parms{};

	Parms.ActorToFace = ActorToFace;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BlueprintContext.BannerContext.AddRandomAlterationsToSocket
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FSingleBannerEntry               Socket                                                 (Parm, OutParm, NativeAccessSpecifierPublic)
// int32                                   NumRandomAlterations                                   (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBannerContext::AddRandomAlterationsToSocket(struct FSingleBannerEntry* Socket, const int32 NumRandomAlterations)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BannerContext", "AddRandomAlterationsToSocket");

	Params::BannerContext_AddRandomAlterationsToSocket Parms{};

	Parms.NumRandomAlterations = NumRandomAlterations;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (Socket != nullptr)
		*Socket = std::move(Parms.Socket);
}


// Function BlueprintContext.BannerContext.AddRandomItemToSocketSlot
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FSingleBannerEntry               Socket                                                 (Parm, OutParm, NativeAccessSpecifierPublic)

void UBannerContext::AddRandomItemToSocketSlot(struct FSingleBannerEntry* Socket)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BannerContext", "AddRandomItemToSocketSlot");

	Params::BannerContext_AddRandomItemToSocketSlot Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (Socket != nullptr)
		*Socket = std::move(Parms.Socket);
}


// Function BlueprintContext.BannerContext.CountOverlapAlterations
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FBannerItemIdent                 BannerItem                                             (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UBannerContext::CountOverlapAlterations(const struct FBannerItemIdent& BannerItem)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BannerContext", "CountOverlapAlterations");

	Params::BannerContext_CountOverlapAlterations Parms{};

	Parms.BannerItem = std::move(BannerItem);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BlueprintContext.BannerContext.CountValidAlterations
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<class FString>                   Alterations                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UBannerContext::CountValidAlterations(const TArray<class FString>& Alterations)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BannerContext", "CountValidAlterations");

	Params::BannerContext_CountValidAlterations Parms{};

	Parms.Alterations = std::move(Alterations);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BlueprintContext.BannerContext.CreateDefaultBannerSpec
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FBannerSpec                      DefaultBanner                                          (Parm, OutParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UBannerContext::CreateDefaultBannerSpec(struct FBannerSpec* DefaultBanner)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BannerContext", "CreateDefaultBannerSpec");

	Params::BannerContext_CreateDefaultBannerSpec Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (DefaultBanner != nullptr)
		*DefaultBanner = std::move(Parms.DefaultBanner);

	return Parms.ReturnValue;
}


// Function BlueprintContext.BannerContext.CreateRandomBannerSpec
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FBannerSpec                      RandomBanner                                           (Parm, OutParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UBannerContext::CreateRandomBannerSpec(struct FBannerSpec* RandomBanner)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BannerContext", "CreateRandomBannerSpec");

	Params::BannerContext_CreateRandomBannerSpec Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (RandomBanner != nullptr)
		*RandomBanner = std::move(Parms.RandomBanner);

	return Parms.ReturnValue;
}


// Function BlueprintContext.BannerContext.GetMaxAlterations
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UBannerContext::GetMaxAlterations()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BannerContext", "GetMaxAlterations");

	Params::BannerContext_GetMaxAlterations Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BlueprintContext.BannerContext.IsValidAlteration
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FString                           AlterationId                                           (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UBannerContext::IsValidAlteration(const class FString& AlterationId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BannerContext", "IsValidAlteration");

	Params::BannerContext_IsValidAlteration Parms{};

	Parms.AlterationId = std::move(AlterationId);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BlueprintContext.BannerContext.BuildListOfExistingItemAllocations
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UOrionMcpProfileAccount*          McpProfile                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<struct FBannerItemIdent>         AllocatedBannerIdents                                  (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
// TArray<struct FBannerItemIdent>         OwnedBannerItems                                       (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void UBannerContext::BuildListOfExistingItemAllocations(const class UOrionMcpProfileAccount* McpProfile, TArray<struct FBannerItemIdent>* AllocatedBannerIdents, TArray<struct FBannerItemIdent>* OwnedBannerItems)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BannerContext", "BuildListOfExistingItemAllocations");

	Params::BannerContext_BuildListOfExistingItemAllocations Parms{};

	Parms.McpProfile = McpProfile;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (AllocatedBannerIdents != nullptr)
		*AllocatedBannerIdents = std::move(Parms.AllocatedBannerIdents);

	if (OwnedBannerItems != nullptr)
		*OwnedBannerItems = std::move(Parms.OwnedBannerItems);
}


// Function BlueprintContext.BannerContext.FindActiveBanner
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UOrionMcpProfileAccount*          McpProfile                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UOrionMcpBannerItem*              ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UOrionMcpBannerItem* UBannerContext::FindActiveBanner(const class UOrionMcpProfileAccount* McpProfile)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BannerContext", "FindActiveBanner");

	Params::BannerContext_FindActiveBanner Parms{};

	Parms.McpProfile = McpProfile;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BlueprintContext.BannerContext.GenerateBannerItemIDs
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class AOrionPlayerController_Game*      PlayerController                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<struct FBannerItemIdent>         ItemIdents                                             (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
// struct FBannerSpec                      BannerEntry                                            (Parm, OutParm, NativeAccessSpecifierPublic)

void UBannerContext::GenerateBannerItemIDs(class AOrionPlayerController_Game* PlayerController, const TArray<struct FBannerItemIdent>& ItemIdents, struct FBannerSpec* BannerEntry)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BannerContext", "GenerateBannerItemIDs");

	Params::BannerContext_GenerateBannerItemIDs Parms{};

	Parms.PlayerController = PlayerController;
	Parms.ItemIdents = std::move(ItemIdents);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (BannerEntry != nullptr)
		*BannerEntry = std::move(Parms.BannerEntry);
}


// Function BlueprintContext.BannerContext.GeneratePrototypeBannerItemIDs
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AOrionPlayerController_Game*      PlayerController                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<struct FBannerItemIdent>         ItemIdents                                             (Parm, ZeroConstructor, NativeAccessSpecifierPublic)

void UBannerContext::GeneratePrototypeBannerItemIDs(class AOrionPlayerController_Game* PlayerController, const TArray<struct FBannerItemIdent>& ItemIdents)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BannerContext", "GeneratePrototypeBannerItemIDs");

	Params::BannerContext_GeneratePrototypeBannerItemIDs Parms{};

	Parms.PlayerController = PlayerController;
	Parms.ItemIdents = std::move(ItemIdents);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BlueprintContext.BannerContext.SetPrototypeSocketAlteration
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   SocketIndex                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   AlterationIndex                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           Ident                                                  (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EOrionBannerType                        SocketType                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UBannerContext::SetPrototypeSocketAlteration(int32 SocketIndex, int32 AlterationIndex, const class FString& Ident, EOrionBannerType SocketType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BannerContext", "SetPrototypeSocketAlteration");

	Params::BannerContext_SetPrototypeSocketAlteration Parms{};

	Parms.SocketIndex = SocketIndex;
	Parms.AlterationIndex = AlterationIndex;
	Parms.Ident = std::move(Ident);
	Parms.SocketType = SocketType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BlueprintContext.BannerContext.SetPrototypeSocketIdent
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   SocketIndex                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           Ident                                                  (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EOrionBannerType                        SocketType                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UBannerContext::SetPrototypeSocketIdent(int32 SocketIndex, const class FString& Ident, EOrionBannerType SocketType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BannerContext", "SetPrototypeSocketIdent");

	Params::BannerContext_SetPrototypeSocketIdent Parms{};

	Parms.SocketIndex = SocketIndex;
	Parms.Ident = std::move(Ident);
	Parms.SocketType = SocketType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BlueprintContext.BannerContext.SetPrototypeSocketIdentFromArray
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<class FString>                   SocketIdentArray                                       (ConstParm, Parm, ZeroConstructor, NativeAccessSpecifierPublic)
// EOrionBannerType                        SocketType                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBannerContext::SetPrototypeSocketIdentFromArray(const TArray<class FString>& SocketIdentArray, EOrionBannerType SocketType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BannerContext", "SetPrototypeSocketIdentFromArray");

	Params::BannerContext_SetPrototypeSocketIdentFromArray Parms{};

	Parms.SocketIdentArray = std::move(SocketIdentArray);
	Parms.SocketType = SocketType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BlueprintContext.BannerContext.SetPrototypeStaffFromIdent
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FString                           BannerIdent                                            (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bRetainSocketID                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBannerContext::SetPrototypeStaffFromIdent(const class FString& BannerIdent, bool bRetainSocketID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BannerContext", "SetPrototypeStaffFromIdent");

	Params::BannerContext_SetPrototypeStaffFromIdent Parms{};

	Parms.BannerIdent = std::move(BannerIdent);
	Parms.bRetainSocketID = bRetainSocketID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BlueprintContext.BannerContext.SetupPrototypeFromDef
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UOrionMcpBannerItemDefinition*    BannerSpec                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBannerContext::SetupPrototypeFromDef(class UOrionMcpBannerItemDefinition* BannerSpec)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BannerContext", "SetupPrototypeFromDef");

	Params::BannerContext_SetupPrototypeFromDef Parms{};

	Parms.BannerSpec = BannerSpec;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BlueprintContext.BannerContext.GetBannerAlterationDisplayNameFromName
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FString                           Ident                                                  (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FString                     ReturnValue                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const class FString UBannerContext::GetBannerAlterationDisplayNameFromName(const class FString& Ident) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BannerContext", "GetBannerAlterationDisplayNameFromName");

	Params::BannerContext_GetBannerAlterationDisplayNameFromName Parms{};

	Parms.Ident = std::move(Ident);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BlueprintContext.BannerContext.GetBannerAlterationNameFromDisplayName
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FString                           Ident                                                  (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FString                     ReturnValue                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const class FString UBannerContext::GetBannerAlterationNameFromDisplayName(const class FString& Ident) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BannerContext", "GetBannerAlterationNameFromDisplayName");

	Params::BannerContext_GetBannerAlterationNameFromDisplayName Parms{};

	Parms.Ident = std::move(Ident);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BlueprintContext.BannerContext.GetBannerAlterationStrings
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<class FString>                   OutArray                                               (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
// bool                                    bMustOwn                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBannerContext::GetBannerAlterationStrings(TArray<class FString>* OutArray, bool bMustOwn) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BannerContext", "GetBannerAlterationStrings");

	Params::BannerContext_GetBannerAlterationStrings Parms{};

	Parms.bMustOwn = bMustOwn;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutArray != nullptr)
		*OutArray = std::move(Parms.OutArray);
}


// Function BlueprintContext.BannerContext.GetBannerItemDisplayNameFromName
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EOrionBannerType                        ItemType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           Ident                                                  (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FString                     ReturnValue                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const class FString UBannerContext::GetBannerItemDisplayNameFromName(EOrionBannerType ItemType, const class FString& Ident) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BannerContext", "GetBannerItemDisplayNameFromName");

	Params::BannerContext_GetBannerItemDisplayNameFromName Parms{};

	Parms.ItemType = ItemType;
	Parms.Ident = std::move(Ident);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BlueprintContext.BannerContext.GetBannerItemNameFromDisplayName
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EOrionBannerType                        ItemType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           Ident                                                  (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FString                     ReturnValue                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const class FString UBannerContext::GetBannerItemNameFromDisplayName(EOrionBannerType ItemType, const class FString& Ident) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BannerContext", "GetBannerItemNameFromDisplayName");

	Params::BannerContext_GetBannerItemNameFromDisplayName Parms{};

	Parms.ItemType = ItemType;
	Parms.Ident = std::move(Ident);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BlueprintContext.BannerContext.GetBannerItemsOfType
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EOrionBannerType                        ItemType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class UOrionMcpBannerItemDefinition*>ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UOrionMcpBannerItemDefinition*> UBannerContext::GetBannerItemsOfType(EOrionBannerType ItemType) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BannerContext", "GetBannerItemsOfType");

	Params::BannerContext_GetBannerItemsOfType Parms{};

	Parms.ItemType = ItemType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BlueprintContext.BannerContext.GetBannerItemStringsOfType
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EOrionBannerType                        ItemTypes                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class FString>                   OutArray                                               (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
// bool                                    bMustOwn                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UBannerContext::GetBannerItemStringsOfType(EOrionBannerType ItemTypes, TArray<class FString>* OutArray, bool bMustOwn) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BannerContext", "GetBannerItemStringsOfType");

	Params::BannerContext_GetBannerItemStringsOfType Parms{};

	Parms.ItemTypes = ItemTypes;
	Parms.bMustOwn = bMustOwn;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutArray != nullptr)
		*OutArray = std::move(Parms.OutArray);

	return Parms.ReturnValue;
}


// Function BlueprintContext.BannerContext.GetDisplayNameFromName
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EOrionBannerType                        ItemType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           Ident                                                  (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FString                     ReturnValue                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const class FString UBannerContext::GetDisplayNameFromName(EOrionBannerType ItemType, const class FString& Ident) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BannerContext", "GetDisplayNameFromName");

	Params::BannerContext_GetDisplayNameFromName Parms{};

	Parms.ItemType = ItemType;
	Parms.Ident = std::move(Ident);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BlueprintContext.BannerContext.GetNameFromDisplayName
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EOrionBannerType                        ItemType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           Ident                                                  (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FString                     ReturnValue                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const class FString UBannerContext::GetNameFromDisplayName(EOrionBannerType ItemType, const class FString& Ident) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BannerContext", "GetNameFromDisplayName");

	Params::BannerContext_GetNameFromDisplayName Parms{};

	Parms.ItemType = ItemType;
	Parms.Ident = std::move(Ident);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BlueprintContext.BannerContext.GetNumAlterationsOnPrototypeSocket
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   SocketIndex                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EOrionBannerType                        SocketType                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UBannerContext::GetNumAlterationsOnPrototypeSocket(int32 SocketIndex, EOrionBannerType SocketType) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BannerContext", "GetNumAlterationsOnPrototypeSocket");

	Params::BannerContext_GetNumAlterationsOnPrototypeSocket Parms{};

	Parms.SocketIndex = SocketIndex;
	Parms.SocketType = SocketType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BlueprintContext.BannerContext.GetNumSockets
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FBannerSpec                      BannerEntry                                            (ConstParm, Parm, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UBannerContext::GetNumSockets(const struct FBannerSpec& BannerEntry) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BannerContext", "GetNumSockets");

	Params::BannerContext_GetNumSockets Parms{};

	Parms.BannerEntry = std::move(BannerEntry);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BlueprintContext.BannerContext.GetNumSocketsOfType
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FBannerSpec                      BannerEntry                                            (ConstParm, Parm, NativeAccessSpecifierPublic)
// EOrionBannerType                        ItemType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UBannerContext::GetNumSocketsOfType(const struct FBannerSpec& BannerEntry, EOrionBannerType ItemType) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BannerContext", "GetNumSocketsOfType");

	Params::BannerContext_GetNumSocketsOfType Parms{};

	Parms.BannerEntry = std::move(BannerEntry);
	Parms.ItemType = ItemType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BlueprintContext.BannerContext.GetOwnedIDBannerItem
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<class UOrionMcpBannerItem*>      Banners                                                (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
// class FString                           InItemIdent                                            (ConstParm, Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FBannerItemIdent                 OutItemID                                              (Parm, OutParm, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UBannerContext::GetOwnedIDBannerItem(const TArray<class UOrionMcpBannerItem*>& Banners, const class FString& InItemIdent, struct FBannerItemIdent* OutItemID) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BannerContext", "GetOwnedIDBannerItem");

	Params::BannerContext_GetOwnedIDBannerItem Parms{};

	Parms.Banners = std::move(Banners);
	Parms.InItemIdent = std::move(InItemIdent);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutItemID != nullptr)
		*OutItemID = std::move(Parms.OutItemID);

	return Parms.ReturnValue;
}


// Function BlueprintContext.BannerContext.GetPrototypeAlterationIdentArray
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<class FString>                   AlterationIdentArray                                   (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
// int32                                   SocketIndex                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EOrionBannerType                        SocketType                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBannerContext::GetPrototypeAlterationIdentArray(TArray<class FString>* AlterationIdentArray, int32 SocketIndex, EOrionBannerType SocketType) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BannerContext", "GetPrototypeAlterationIdentArray");

	Params::BannerContext_GetPrototypeAlterationIdentArray Parms{};

	Parms.SocketIndex = SocketIndex;
	Parms.SocketType = SocketType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (AlterationIdentArray != nullptr)
		*AlterationIdentArray = std::move(Parms.AlterationIdentArray);
}


// Function BlueprintContext.BannerContext.GetPrototypeSocketAlteration
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   SocketIndex                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   AlterationIndex                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           SocketIdent                                            (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EOrionBannerType                        SocketType                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UBannerContext::GetPrototypeSocketAlteration(int32 SocketIndex, int32 AlterationIndex, class FString* SocketIdent, EOrionBannerType SocketType) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BannerContext", "GetPrototypeSocketAlteration");

	Params::BannerContext_GetPrototypeSocketAlteration Parms{};

	Parms.SocketIndex = SocketIndex;
	Parms.AlterationIndex = AlterationIndex;
	Parms.SocketType = SocketType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (SocketIdent != nullptr)
		*SocketIdent = std::move(Parms.SocketIdent);

	return Parms.ReturnValue;
}


// Function BlueprintContext.BannerContext.GetPrototypeSocketIdent
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   SocketIndex                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           SocketIdent                                            (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EOrionBannerType                        SocketType                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UBannerContext::GetPrototypeSocketIdent(int32 SocketIndex, class FString* SocketIdent, EOrionBannerType SocketType) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BannerContext", "GetPrototypeSocketIdent");

	Params::BannerContext_GetPrototypeSocketIdent Parms{};

	Parms.SocketIndex = SocketIndex;
	Parms.SocketType = SocketType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (SocketIdent != nullptr)
		*SocketIdent = std::move(Parms.SocketIdent);

	return Parms.ReturnValue;
}


// Function BlueprintContext.BannerContext.GetPrototypeSocketIdentArray
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<class FString>                   SocketIdentArray                                       (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
// EOrionBannerType                        SocketType                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBannerContext::GetPrototypeSocketIdentArray(TArray<class FString>* SocketIdentArray, EOrionBannerType SocketType) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BannerContext", "GetPrototypeSocketIdentArray");

	Params::BannerContext_GetPrototypeSocketIdentArray Parms{};

	Parms.SocketType = SocketType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (SocketIdentArray != nullptr)
		*SocketIdentArray = std::move(Parms.SocketIdentArray);
}


// Function BlueprintContext.BannerContext.GetProtoypeBanner
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FBannerSpec                      BannerSpec                                             (Parm, OutParm, NativeAccessSpecifierPublic)

void UBannerContext::GetProtoypeBanner(struct FBannerSpec* BannerSpec) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BannerContext", "GetProtoypeBanner");

	Params::BannerContext_GetProtoypeBanner Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (BannerSpec != nullptr)
		*BannerSpec = std::move(Parms.BannerSpec);
}


// Function BlueprintContext.BannerContext.SetupBannerSocketFromIdent
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FSingleBannerEntry               Socket                                                 (Parm, OutParm, NativeAccessSpecifierPublic)
// class FString                           BannerIdent                                            (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bRetainSocketID                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UBannerContext::SetupBannerSocketFromIdent(struct FSingleBannerEntry* Socket, const class FString& BannerIdent, bool bRetainSocketID) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BannerContext", "SetupBannerSocketFromIdent");

	Params::BannerContext_SetupBannerSocketFromIdent Parms{};

	Parms.BannerIdent = std::move(BannerIdent);
	Parms.bRetainSocketID = bRetainSocketID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (Socket != nullptr)
		*Socket = std::move(Parms.Socket);

	return Parms.ReturnValue;
}


// Function BlueprintContext.BaseHUDContext.ChangeMenuOpenState
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EOrionMenuSlotTypes                     MenuSlot                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bNewlyOpen                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBaseHUDContext::ChangeMenuOpenState(EOrionMenuSlotTypes MenuSlot, bool bNewlyOpen)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BaseHUDContext", "ChangeMenuOpenState");

	Params::BaseHUDContext_ChangeMenuOpenState Parms{};

	Parms.MenuSlot = MenuSlot;
	Parms.bNewlyOpen = bNewlyOpen;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BlueprintContext.BaseHUDContext.GetCurrentMatchTime
// (Native, Public, BlueprintCallable)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UBaseHUDContext::GetCurrentMatchTime()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BaseHUDContext", "GetCurrentMatchTime");

	Params::BaseHUDContext_GetCurrentMatchTime Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// DelegateFunction BlueprintContext.BaseHUDContext.OnAbilityFinishedCooldown__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// EOrionAbilityBinding                    InputID                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FOrionAbilityUIData              AbilityData                                            (Parm, NativeAccessSpecifierPublic)

void UBaseHUDContext::OnAbilityFinishedCooldown__DelegateSignature(EOrionAbilityBinding InputID, const struct FOrionAbilityUIData& AbilityData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BaseHUDContext", "OnAbilityFinishedCooldown__DelegateSignature");

	Params::BaseHUDContext_OnAbilityFinishedCooldown__DelegateSignature Parms{};

	Parms.InputID = InputID;
	Parms.AbilityData = std::move(AbilityData);

	UObject::ProcessEvent(Func, &Parms);
}


// DelegateFunction BlueprintContext.BaseHUDContext.OnAbilityUnlocked__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// EOrionAbilityBinding                    InputID                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FOrionAbilityUIData              AbilityData                                            (Parm, NativeAccessSpecifierPublic)

void UBaseHUDContext::OnAbilityUnlocked__DelegateSignature(EOrionAbilityBinding InputID, const struct FOrionAbilityUIData& AbilityData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BaseHUDContext", "OnAbilityUnlocked__DelegateSignature");

	Params::BaseHUDContext_OnAbilityUnlocked__DelegateSignature Parms{};

	Parms.InputID = InputID;
	Parms.AbilityData = std::move(AbilityData);

	UObject::ProcessEvent(Func, &Parms);
}


// DelegateFunction BlueprintContext.BaseHUDContext.OnAbilityUpdate__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// EOrionAbilityBinding                    InputID                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FOrionAbilityUIData              AbilityData                                            (Parm, NativeAccessSpecifierPublic)

void UBaseHUDContext::OnAbilityUpdate__DelegateSignature(EOrionAbilityBinding InputID, const struct FOrionAbilityUIData& AbilityData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BaseHUDContext", "OnAbilityUpdate__DelegateSignature");

	Params::BaseHUDContext_OnAbilityUpdate__DelegateSignature Parms{};

	Parms.InputID = InputID;
	Parms.AbilityData = std::move(AbilityData);

	UObject::ProcessEvent(Func, &Parms);
}


// DelegateFunction BlueprintContext.BaseHUDContext.OnCannotActivateAbility__DelegateSignature
// (MulticastDelegate, Public, Delegate, HasOutParams)
// Parameters:
// int32                                   InputID                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGameplayTagContainer            RelevantTags                                           (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UBaseHUDContext::OnCannotActivateAbility__DelegateSignature(int32 InputID, const struct FGameplayTagContainer& RelevantTags)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BaseHUDContext", "OnCannotActivateAbility__DelegateSignature");

	Params::BaseHUDContext_OnCannotActivateAbility__DelegateSignature Parms{};

	Parms.InputID = InputID;
	Parms.RelevantTags = std::move(RelevantTags);

	UObject::ProcessEvent(Func, &Parms);
}


// DelegateFunction BlueprintContext.BaseHUDContext.OnCardPointsUpdated__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// int32                                   NewCardActivationPointsSpent                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   NewCardActivationPointsMax                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBaseHUDContext::OnCardPointsUpdated__DelegateSignature(int32 NewCardActivationPointsSpent, int32 NewCardActivationPointsMax)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BaseHUDContext", "OnCardPointsUpdated__DelegateSignature");

	Params::BaseHUDContext_OnCardPointsUpdated__DelegateSignature Parms{};

	Parms.NewCardActivationPointsSpent = NewCardActivationPointsSpent;
	Parms.NewCardActivationPointsMax = NewCardActivationPointsMax;

	UObject::ProcessEvent(Func, &Parms);
}


// DelegateFunction BlueprintContext.BaseHUDContext.OnCardXPUpdate__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// float                                   NewXP                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   NewXPMax                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBaseHUDContext::OnCardXPUpdate__DelegateSignature(float NewXP, float NewXPMax)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BaseHUDContext", "OnCardXPUpdate__DelegateSignature");

	Params::BaseHUDContext_OnCardXPUpdate__DelegateSignature Parms{};

	Parms.NewXP = NewXP;
	Parms.NewXPMax = NewXPMax;

	UObject::ProcessEvent(Func, &Parms);
}


// DelegateFunction BlueprintContext.BaseHUDContext.OnHeroDeathOrSpawnEvent__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// struct FOrionHUDTeamStatusInfo          NewTeamInfo                                            (Parm, NativeAccessSpecifierPublic)

void UBaseHUDContext::OnHeroDeathOrSpawnEvent__DelegateSignature(const struct FOrionHUDTeamStatusInfo& NewTeamInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BaseHUDContext", "OnHeroDeathOrSpawnEvent__DelegateSignature");

	Params::BaseHUDContext_OnHeroDeathOrSpawnEvent__DelegateSignature Parms{};

	Parms.NewTeamInfo = std::move(NewTeamInfo);

	UObject::ProcessEvent(Func, &Parms);
}


// DelegateFunction BlueprintContext.BaseHUDContext.OnKDAUpdate__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// int32                                   Kills                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Deaths                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Assists                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Minions                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBaseHUDContext::OnKDAUpdate__DelegateSignature(int32 Kills, int32 Deaths, int32 Assists, int32 Minions)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BaseHUDContext", "OnKDAUpdate__DelegateSignature");

	Params::BaseHUDContext_OnKDAUpdate__DelegateSignature Parms{};

	Parms.Kills = Kills;
	Parms.Deaths = Deaths;
	Parms.Assists = Assists;
	Parms.Minions = Minions;

	UObject::ProcessEvent(Func, &Parms);
}


// DelegateFunction BlueprintContext.BaseHUDContext.OnLevelUp__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// int32                                   NewLevel                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBaseHUDContext::OnLevelUp__DelegateSignature(int32 NewLevel)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BaseHUDContext", "OnLevelUp__DelegateSignature");

	Params::BaseHUDContext_OnLevelUp__DelegateSignature Parms{};

	Parms.NewLevel = NewLevel;

	UObject::ProcessEvent(Func, &Parms);
}


// DelegateFunction BlueprintContext.BaseHUDContext.OnPlayerXPUpdate__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// int32                                   XP                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   MaxXP                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBaseHUDContext::OnPlayerXPUpdate__DelegateSignature(int32 XP, int32 MaxXP)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BaseHUDContext", "OnPlayerXPUpdate__DelegateSignature");

	Params::BaseHUDContext_OnPlayerXPUpdate__DelegateSignature Parms{};

	Parms.XP = XP;
	Parms.MaxXP = MaxXP;

	UObject::ProcessEvent(Func, &Parms);
}


// DelegateFunction BlueprintContext.BaseHUDContext.OnUltimateReady__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// int32                                   InputID                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBaseHUDContext::OnUltimateReady__DelegateSignature(int32 InputID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BaseHUDContext", "OnUltimateReady__DelegateSignature");

	Params::BaseHUDContext_OnUltimateReady__DelegateSignature Parms{};

	Parms.InputID = InputID;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BlueprintContext.BaseHUDContext.QueueHUDAlert
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UHUDAlertAsset*                   AlertAsset                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBaseHUDContext::QueueHUDAlert(const class UHUDAlertAsset* AlertAsset)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BaseHUDContext", "QueueHUDAlert");

	Params::BaseHUDContext_QueueHUDAlert Parms{};

	Parms.AlertAsset = AlertAsset;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BlueprintContext.BaseHUDContext.SetMatchInfoText
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FText                             NewMatchInfoText                                       (Parm, NativeAccessSpecifierPublic)

void UBaseHUDContext::SetMatchInfoText(const class FText& NewMatchInfoText)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BaseHUDContext", "SetMatchInfoText");

	Params::BaseHUDContext_SetMatchInfoText Parms{};

	Parms.NewMatchInfoText = std::move(NewMatchInfoText);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BlueprintContext.BaseHUDContext.SetMatchInfoTextVisibility
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bIsNewlyVisible                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBaseHUDContext::SetMatchInfoTextVisibility(bool bIsNewlyVisible)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BaseHUDContext", "SetMatchInfoTextVisibility");

	Params::BaseHUDContext_SetMatchInfoTextVisibility Parms{};

	Parms.bIsNewlyVisible = bIsNewlyVisible;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BlueprintContext.BaseHUDContext.GetAbilityData
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EOrionAbilityBinding                    InputID                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FOrionAbilityUIData        ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)

const struct FOrionAbilityUIData UBaseHUDContext::GetAbilityData(EOrionAbilityBinding InputID) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BaseHUDContext", "GetAbilityData");

	Params::BaseHUDContext_GetAbilityData Parms{};

	Parms.InputID = InputID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BlueprintContext.BaseHUDContext.GetCoreInfo
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EOrionTeam                              TeamNum                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FOrionCoreInfo                   ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)

struct FOrionCoreInfo UBaseHUDContext::GetCoreInfo(EOrionTeam TeamNum) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BaseHUDContext", "GetCoreInfo");

	Params::BaseHUDContext_GetCoreInfo Parms{};

	Parms.TeamNum = TeamNum;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BlueprintContext.BaseHUDContext.GetCurrentMenu
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EOrionMenuSlotTypes                     ActiveMenu                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBaseHUDContext::GetCurrentMenu(EOrionMenuSlotTypes* ActiveMenu) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BaseHUDContext", "GetCurrentMenu");

	Params::BaseHUDContext_GetCurrentMenu Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (ActiveMenu != nullptr)
		*ActiveMenu = Parms.ActiveMenu;
}


// Function BlueprintContext.BaseHUDContext.GetEnemyTeam
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EOrionTeam                              ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EOrionTeam UBaseHUDContext::GetEnemyTeam() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BaseHUDContext", "GetEnemyTeam");

	Params::BaseHUDContext_GetEnemyTeam Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BlueprintContext.BaseHUDContext.GetHUDPlayerInfo
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const struct FOrionBaseHUDPlayerInfo    ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)

const struct FOrionBaseHUDPlayerInfo UBaseHUDContext::GetHUDPlayerInfo() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BaseHUDContext", "GetHUDPlayerInfo");

	Params::BaseHUDContext_GetHUDPlayerInfo Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BlueprintContext.BaseHUDContext.GetIsMenuVisible
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EOrionMenuSlotTypes                     MenuType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UBaseHUDContext::GetIsMenuVisible(EOrionMenuSlotTypes MenuType) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BaseHUDContext", "GetIsMenuVisible");

	Params::BaseHUDContext_GetIsMenuVisible Parms{};

	Parms.MenuType = MenuType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BlueprintContext.BaseHUDContext.GetMenuExists
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EOrionMenuSlotTypes                     MenuType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UBaseHUDContext::GetMenuExists(EOrionMenuSlotTypes MenuType) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BaseHUDContext", "GetMenuExists");

	Params::BaseHUDContext_GetMenuExists Parms{};

	Parms.MenuType = MenuType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BlueprintContext.BaseHUDContext.GetMyTeam
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EOrionTeam                              ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EOrionTeam UBaseHUDContext::GetMyTeam() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BaseHUDContext", "GetMyTeam");

	Params::BaseHUDContext_GetMyTeam Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BlueprintContext.BaseHUDContext.GetTopOpenMenu
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UWidget*                          ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UWidget* UBaseHUDContext::GetTopOpenMenu() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BaseHUDContext", "GetTopOpenMenu");

	Params::BaseHUDContext_GetTopOpenMenu Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BlueprintContext.BaseHUDContext.GetTopOpenMenuInputMode
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EOrionDesiredAnalogCursorState          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EOrionDesiredAnalogCursorState UBaseHUDContext::GetTopOpenMenuInputMode() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BaseHUDContext", "GetTopOpenMenuInputMode");

	Params::BaseHUDContext_GetTopOpenMenuInputMode Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BlueprintContext.BaseHUDContext.IsUltimateReady
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UBaseHUDContext::IsUltimateReady() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BaseHUDContext", "IsUltimateReady");

	Params::BaseHUDContext_IsUltimateReady Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BlueprintContext.BlueprintContextLibrary.GetContext
// (Final, BlueprintCosmetic, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          ContextObject                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TSubclassOf<class UBlueprintContextBase>Class_0                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UBlueprintContextBase*            ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UBlueprintContextBase* UBlueprintContextLibrary::GetContext(class UObject* ContextObject, TSubclassOf<class UBlueprintContextBase> Class_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BlueprintContextLibrary", "GetContext");

	Params::BlueprintContextLibrary_GetContext Parms{};

	Parms.ContextObject = ContextObject;
	Parms.Class_0 = Class_0;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// DelegateFunction BlueprintContext.PlayerAwareContext.OnMcpError__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// class FText                             ErrorMessage                                           (Parm, NativeAccessSpecifierPublic)

void UPlayerAwareContext::OnMcpError__DelegateSignature(const class FText& ErrorMessage)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerAwareContext", "OnMcpError__DelegateSignature");

	Params::PlayerAwareContext_OnMcpError__DelegateSignature Parms{};

	Parms.ErrorMessage = std::move(ErrorMessage);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BlueprintContext.PlayerAwareContext.GetMCPTime
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FDateTime                        ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FDateTime UPlayerAwareContext::GetMCPTime() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerAwareContext", "GetMCPTime");

	Params::PlayerAwareContext_GetMCPTime Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BlueprintContext.BoostContext.GetBoostExpirationTime
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// EOrionBoostType                         BoostType                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FDateTime                        ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FDateTime UBoostContext::GetBoostExpirationTime(EOrionBoostType BoostType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BoostContext", "GetBoostExpirationTime");

	Params::BoostContext_GetBoostExpirationTime Parms{};

	Parms.BoostType = BoostType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BlueprintContext.BoostContext.GetBoosts
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<class UOrionMcpBoostItem*>       Boosts                                                 (Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void UBoostContext::GetBoosts(TArray<class UOrionMcpBoostItem*>& Boosts)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BoostContext", "GetBoosts");

	Params::BoostContext_GetBoosts Parms{};

	Parms.Boosts = std::move(Boosts);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	Boosts = std::move(Parms.Boosts);
}


// Function BlueprintContext.BoostContext.GetUsesRemaining
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EOrionBoostType                         BoostType                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UBoostContext::GetUsesRemaining(EOrionBoostType BoostType) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BoostContext", "GetUsesRemaining");

	Params::BoostContext_GetUsesRemaining Parms{};

	Parms.BoostType = BoostType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BlueprintContext.BoostContext.IsAnyBoostActive
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   NumActive                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UBoostContext::IsAnyBoostActive(int32* NumActive) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BoostContext", "IsAnyBoostActive");

	Params::BoostContext_IsAnyBoostActive Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (NumActive != nullptr)
		*NumActive = Parms.NumActive;

	return Parms.ReturnValue;
}


// Function BlueprintContext.BoostContext.IsBoostActive
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EOrionBoostType                         BoostType                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UBoostContext::IsBoostActive(EOrionBoostType BoostType) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BoostContext", "IsBoostActive");

	Params::BoostContext_IsBoostActive Parms{};

	Parms.BoostType = BoostType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BlueprintContext.ChunkInstallContext.Prioritize
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EOrionChunkId                           InChunk                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EInstallPriority                        InPriority                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UChunkInstallContext::Prioritize(EOrionChunkId InChunk, EInstallPriority InPriority)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ChunkInstallContext", "Prioritize");

	Params::ChunkInstallContext_Prioritize Parms{};

	Parms.InChunk = InChunk;
	Parms.InPriority = InPriority;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BlueprintContext.ChunkInstallContext.SetInstallSpeed
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EInstallSpeed                           NewSpeed                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UChunkInstallContext::SetInstallSpeed(EInstallSpeed NewSpeed)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ChunkInstallContext", "SetInstallSpeed");

	Params::ChunkInstallContext_SetInstallSpeed Parms{};

	Parms.NewSpeed = NewSpeed;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BlueprintContext.ChunkInstallContext.GetInstallSpeed
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EInstallSpeed                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EInstallSpeed UChunkInstallContext::GetInstallSpeed() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ChunkInstallContext", "GetInstallSpeed");

	Params::ChunkInstallContext_GetInstallSpeed Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BlueprintContext.ChunkInstallContext.GetProgress
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EOrionChunkId                           InChunk                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UChunkInstallContext::GetProgress(EOrionChunkId InChunk) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ChunkInstallContext", "GetProgress");

	Params::ChunkInstallContext_GetProgress Parms{};

	Parms.InChunk = InChunk;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BlueprintContext.ChunkInstallContext.GetStatus
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EOrionChunkId                           InChunk                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EInstallStatus                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EInstallStatus UChunkInstallContext::GetStatus(EOrionChunkId InChunk) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ChunkInstallContext", "GetStatus");

	Params::ChunkInstallContext_GetStatus Parms{};

	Parms.InChunk = InChunk;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BlueprintContext.ChunkInstallContext.GetTimeRemaining
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EOrionChunkId                           InChunk                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FTimespan                        ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FTimespan UChunkInstallContext::GetTimeRemaining(EOrionChunkId InChunk) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ChunkInstallContext", "GetTimeRemaining");

	Params::ChunkInstallContext_GetTimeRemaining Parms{};

	Parms.InChunk = InChunk;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BlueprintContext.FriendsContext.AcceptFriendRequest
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FUniqueNetIdRepl                 PlayerNetId                                            (ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFriendsContext::AcceptFriendRequest(const struct FUniqueNetIdRepl& PlayerNetId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FriendsContext", "AcceptFriendRequest");

	Params::FriendsContext_AcceptFriendRequest Parms{};

	Parms.PlayerNetId = std::move(PlayerNetId);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BlueprintContext.FriendsContext.CancelFriendRequest
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FUniqueNetIdRepl                 PlayerNetId                                            (ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFriendsContext::CancelFriendRequest(const struct FUniqueNetIdRepl& PlayerNetId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FriendsContext", "CancelFriendRequest");

	Params::FriendsContext_CancelFriendRequest Parms{};

	Parms.PlayerNetId = std::move(PlayerNetId);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BlueprintContext.FriendsContext.GetQuickInviteList
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<class UOrionFriendItem*>         QuickInviteFriends                                     (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void UFriendsContext::GetQuickInviteList(TArray<class UOrionFriendItem*>* QuickInviteFriends)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FriendsContext", "GetQuickInviteList");

	Params::FriendsContext_GetQuickInviteList Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (QuickInviteFriends != nullptr)
		*QuickInviteFriends = std::move(Parms.QuickInviteFriends);
}


// Function BlueprintContext.FriendsContext.HandleFriendsChanged
// (Final, Native, Private)

void UFriendsContext::HandleFriendsChanged()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FriendsContext", "HandleFriendsChanged");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BlueprintContext.FriendsContext.InitiateWhisperToFriend
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FUniqueNetIdRepl                 FriendNetID                                            (ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFriendsContext::InitiateWhisperToFriend(const struct FUniqueNetIdRepl& FriendNetID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FriendsContext", "InitiateWhisperToFriend");

	Params::FriendsContext_InitiateWhisperToFriend Parms{};

	Parms.FriendNetID = std::move(FriendNetID);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// DelegateFunction BlueprintContext.FriendsContext.OnFriendsListChanged__DelegateSignature
// (MulticastDelegate, Public, Delegate, HasOutParams)
// Parameters:
// TArray<class UOrionFriendItem*>         Friends                                                (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void UFriendsContext::OnFriendsListChanged__DelegateSignature(const TArray<class UOrionFriendItem*>& Friends)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FriendsContext", "OnFriendsListChanged__DelegateSignature");

	Params::FriendsContext_OnFriendsListChanged__DelegateSignature Parms{};

	Parms.Friends = std::move(Friends);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BlueprintContext.FriendsContext.RejectFriendRequest
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FUniqueNetIdRepl                 PlayerNetId                                            (ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFriendsContext::RejectFriendRequest(const struct FUniqueNetIdRepl& PlayerNetId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FriendsContext", "RejectFriendRequest");

	Params::FriendsContext_RejectFriendRequest Parms{};

	Parms.PlayerNetId = std::move(PlayerNetId);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BlueprintContext.FriendsContext.SendFriendRequest
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FUniqueNetIdRepl                 PlayerNetId                                            (ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UFriendsContext::SendFriendRequest(const struct FUniqueNetIdRepl& PlayerNetId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FriendsContext", "SendFriendRequest");

	Params::FriendsContext_SendFriendRequest Parms{};

	Parms.PlayerNetId = std::move(PlayerNetId);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BlueprintContext.FriendsContext.GetFriendshipStatus
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FUniqueNetIdRepl                 PlayerNetId                                            (ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EOrionFriendshipStatus                  ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EOrionFriendshipStatus UFriendsContext::GetFriendshipStatus(const struct FUniqueNetIdRepl& PlayerNetId) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FriendsContext", "GetFriendshipStatus");

	Params::FriendsContext_GetFriendshipStatus Parms{};

	Parms.PlayerNetId = std::move(PlayerNetId);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BlueprintContext.HeroContext.NotifyPreviewHeroChanged
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UOrionHeroData*                   NewHero                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHeroContext::NotifyPreviewHeroChanged(class UOrionHeroData* NewHero)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HeroContext", "NotifyPreviewHeroChanged");

	Params::HeroContext_NotifyPreviewHeroChanged Parms{};

	Parms.NewHero = NewHero;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BlueprintContext.HeroContext.NotifyPreviewSkinChanged
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UOrionSkinItemDefinition*         Skin                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHeroContext::NotifyPreviewSkinChanged(class UOrionSkinItemDefinition* Skin)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HeroContext", "NotifyPreviewSkinChanged");

	Params::HeroContext_NotifyPreviewSkinChanged Parms{};

	Parms.Skin = Skin;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// DelegateFunction BlueprintContext.HeroContext.OnSelectedSkinChanged__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// class UOrionSkinItemDefinition*         Skin                                                   (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHeroContext::OnSelectedSkinChanged__DelegateSignature(const class UOrionSkinItemDefinition* Skin)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HeroContext", "OnSelectedSkinChanged__DelegateSignature");

	Params::HeroContext_OnSelectedSkinChanged__DelegateSignature Parms{};

	Parms.Skin = Skin;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BlueprintContext.HeroContext.SetSelectedSkin
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UOrionSkinItemDefinition*         Skin                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHeroContext::SetSelectedSkin(class UOrionSkinItemDefinition* Skin)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HeroContext", "SetSelectedSkin");

	Params::HeroContext_SetSelectedSkin Parms{};

	Parms.Skin = Skin;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BlueprintContext.HeroContext.FilterAvailableHeroes
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FText                             SearchText                                             (Parm, NativeAccessSpecifierPublic)
// TArray<class UOrionHeroData*>           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UOrionHeroData*> UHeroContext::FilterAvailableHeroes(const class FText& SearchText) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HeroContext", "FilterAvailableHeroes");

	Params::HeroContext_FilterAvailableHeroes Parms{};

	Parms.SearchText = std::move(SearchText);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BlueprintContext.HeroContext.GetAbility
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UOrionHeroData*                   Hero                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EOrionAbilityBinding                    Slot                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UOrionAbility*                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UOrionAbility* UHeroContext::GetAbility(class UOrionHeroData* Hero, EOrionAbilityBinding Slot) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HeroContext", "GetAbility");

	Params::HeroContext_GetAbility Parms{};

	Parms.Hero = Hero;
	Parms.Slot = Slot;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BlueprintContext.HeroContext.GetAllAvailableHeroes
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<class UOrionHeroData*>           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UOrionHeroData*> UHeroContext::GetAllAvailableHeroes() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HeroContext", "GetAllAvailableHeroes");

	Params::HeroContext_GetAllAvailableHeroes Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BlueprintContext.HeroContext.GetHeroByString
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FString                           HeroName                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UOrionHeroData*                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UOrionHeroData* UHeroContext::GetHeroByString(const class FString& HeroName) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HeroContext", "GetHeroByString");

	Params::HeroContext_GetHeroByString Parms{};

	Parms.HeroName = std::move(HeroName);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BlueprintContext.HeroContext.GetQueueTimeFor
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UOrionHeroData*                   InHero                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   PlaylistId                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   OutNumSamples                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

class FText UHeroContext::GetQueueTimeFor(class UOrionHeroData* InHero, int32 PlaylistId, int32* OutNumSamples) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HeroContext", "GetQueueTimeFor");

	Params::HeroContext_GetQueueTimeFor Parms{};

	Parms.InHero = InHero;
	Parms.PlaylistId = PlaylistId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutNumSamples != nullptr)
		*OutNumSamples = Parms.OutNumSamples;

	return Parms.ReturnValue;
}


// Function BlueprintContext.HeroContext.GetSelectedCosmeticOptions
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FOrionCosmeticPlayerChoices      ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FOrionCosmeticPlayerChoices UHeroContext::GetSelectedCosmeticOptions() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HeroContext", "GetSelectedCosmeticOptions");

	Params::HeroContext_GetSelectedCosmeticOptions Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BlueprintContext.HeroContext.GetSelectedHero
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UOrionHeroData*                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UOrionHeroData* UHeroContext::GetSelectedHero() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HeroContext", "GetSelectedHero");

	Params::HeroContext_GetSelectedHero Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BlueprintContext.HeroContext.GetSelectedHeroDataSpec
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FOrionHeroDataSpec               ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FOrionHeroDataSpec UHeroContext::GetSelectedHeroDataSpec() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HeroContext", "GetSelectedHeroDataSpec");

	Params::HeroContext_GetSelectedHeroDataSpec Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BlueprintContext.HeroContext.GetSelectedSkinForHero
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UOrionHeroData*                   HeroData                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UOrionSkinItemDefinition*         ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UOrionSkinItemDefinition* UHeroContext::GetSelectedSkinForHero(const class UOrionHeroData* HeroData) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HeroContext", "GetSelectedSkinForHero");

	Params::HeroContext_GetSelectedSkinForHero Parms{};

	Parms.HeroData = HeroData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BlueprintContext.HUDContext.GetSafeZonePadding
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// ESafeZonePadding                        PaddingType                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector2D                        ReturnValue                                            (Parm, OutParm, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector2D UHUDContext::GetSafeZonePadding(ESafeZonePadding PaddingType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("HUDContext", "GetSafeZonePadding");

	Params::HUDContext_GetSafeZonePadding Parms{};

	Parms.PaddingType = PaddingType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BlueprintContext.HUDContext.AddDamageEvent
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FOrionUIDamageEventInfo          DamageEventInfo                                        (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void UHUDContext::AddDamageEvent(const struct FOrionUIDamageEventInfo& DamageEventInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUDContext", "AddDamageEvent");

	Params::HUDContext_AddDamageEvent Parms{};

	Parms.DamageEventInfo = std::move(DamageEventInfo);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BlueprintContext.HUDContext.AddStatusEffectEvent
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bForceCardShopToClose                                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHUDContext::AddStatusEffectEvent(const bool bForceCardShopToClose)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUDContext", "AddStatusEffectEvent");

	Params::HUDContext_AddStatusEffectEvent Parms{};

	Parms.bForceCardShopToClose = bForceCardShopToClose;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BlueprintContext.HUDContext.CancelAllAbilities
// (Final, Native, Public, BlueprintCallable)

void UHUDContext::CancelAllAbilities()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUDContext", "CancelAllAbilities");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BlueprintContext.HUDContext.FadeHUDIn
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bFadeFast                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHUDContext::FadeHUDIn(bool bFadeFast)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUDContext", "FadeHUDIn");

	Params::HUDContext_FadeHUDIn Parms{};

	Parms.bFadeFast = bFadeFast;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BlueprintContext.HUDContext.FadeHUDOut
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   FadeInWorldTime                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bFadeFast                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHUDContext::FadeHUDOut(float FadeInWorldTime, bool bFadeFast)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUDContext", "FadeHUDOut");

	Params::HUDContext_FadeHUDOut Parms{};

	Parms.FadeInWorldTime = FadeInWorldTime;
	Parms.bFadeFast = bFadeFast;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BlueprintContext.HUDContext.FlushPressedActionBindingKeys
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             ActionBindingName                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHUDContext::FlushPressedActionBindingKeys(class FName ActionBindingName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUDContext", "FlushPressedActionBindingKeys");

	Params::HUDContext_FlushPressedActionBindingKeys Parms{};

	Parms.ActionBindingName = ActionBindingName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BlueprintContext.HUDContext.HandleInput_Blueprint
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             ActionBindingName                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHUDContext::HandleInput_Blueprint(class FName ActionBindingName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUDContext", "HandleInput_Blueprint");

	Params::HUDContext_HandleInput_Blueprint Parms{};

	Parms.ActionBindingName = ActionBindingName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BlueprintContext.HUDContext.HideVictoryScreen
// (Final, Native, Public, BlueprintCallable)

void UHUDContext::HideVictoryScreen()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUDContext", "HideVictoryScreen");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BlueprintContext.HUDContext.HUDAnimationEnding
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             RequestingName                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHUDContext::HUDAnimationEnding(class FName RequestingName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUDContext", "HUDAnimationEnding");

	Params::HUDContext_HUDAnimationEnding Parms{};

	Parms.RequestingName = RequestingName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BlueprintContext.HUDContext.HUDAnimationStarting
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             RequestingName                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHUDContext::HUDAnimationStarting(class FName RequestingName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUDContext", "HUDAnimationStarting");

	Params::HUDContext_HUDAnimationStarting Parms{};

	Parms.RequestingName = RequestingName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BlueprintContext.HUDContext.InvalidateHUDCache
// (Final, Native, Public, BlueprintCallable)

void UHUDContext::InvalidateHUDCache()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUDContext", "InvalidateHUDCache");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BlueprintContext.HUDContext.IsLocalHeroDead
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHUDContext::IsLocalHeroDead()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUDContext", "IsLocalHeroDead");

	Params::HUDContext_IsLocalHeroDead Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BlueprintContext.HUDContext.SetAutoConfirmEndTime
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   EndTime                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHUDContext::SetAutoConfirmEndTime(float EndTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUDContext", "SetAutoConfirmEndTime");

	Params::HUDContext_SetAutoConfirmEndTime Parms{};

	Parms.EndTime = EndTime;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BlueprintContext.HUDContext.SetIsHUDHitTestable
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bNewIsHitTestable                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHUDContext::SetIsHUDHitTestable(bool bNewIsHitTestable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUDContext", "SetIsHUDHitTestable");

	Params::HUDContext_SetIsHUDHitTestable Parms{};

	Parms.bNewIsHitTestable = bNewIsHitTestable;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BlueprintContext.HUDContext.SetScoreDisplayEnemyText
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FText                             NewText                                                (Parm, NativeAccessSpecifierPublic)

void UHUDContext::SetScoreDisplayEnemyText(const class FText& NewText)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUDContext", "SetScoreDisplayEnemyText");

	Params::HUDContext_SetScoreDisplayEnemyText Parms{};

	Parms.NewText = std::move(NewText);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BlueprintContext.HUDContext.SetScoreDisplayFriendlyText
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FText                             NewText                                                (Parm, NativeAccessSpecifierPublic)

void UHUDContext::SetScoreDisplayFriendlyText(const class FText& NewText)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUDContext", "SetScoreDisplayFriendlyText");

	Params::HUDContext_SetScoreDisplayFriendlyText Parms{};

	Parms.NewText = std::move(NewText);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BlueprintContext.HUDContext.SetSprintCastingEndTime
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   EndTime                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHUDContext::SetSprintCastingEndTime(float EndTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUDContext", "SetSprintCastingEndTime");

	Params::HUDContext_SetSprintCastingEndTime Parms{};

	Parms.EndTime = EndTime;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BlueprintContext.HUDContext.ShowCardTutorialDialog
// (Final, Native, Public, BlueprintCallable)

void UHUDContext::ShowCardTutorialDialog()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUDContext", "ShowCardTutorialDialog");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BlueprintContext.HUDContext.BP_GetLocalPlayerInfo
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FOrionLocalPlayerUIInfo          ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FOrionLocalPlayerUIInfo UHUDContext::BP_GetLocalPlayerInfo() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUDContext", "BP_GetLocalPlayerInfo");

	Params::HUDContext_BP_GetLocalPlayerInfo Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BlueprintContext.HUDContext.GetAllowCardMenu
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHUDContext::GetAllowCardMenu() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUDContext", "GetAllowCardMenu");

	Params::HUDContext_GetAllowCardMenu Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BlueprintContext.HUDContext.GetDamageIndicatorRotation
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FVector                          PlayerLocation                                         (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          InstigatorLocation                                     (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UHUDContext::GetDamageIndicatorRotation(const struct FVector& PlayerLocation, const struct FVector& InstigatorLocation) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUDContext", "GetDamageIndicatorRotation");

	Params::HUDContext_GetDamageIndicatorRotation Parms{};

	Parms.PlayerLocation = std::move(PlayerLocation);
	Parms.InstigatorLocation = std::move(InstigatorLocation);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BlueprintContext.HUDContext.GetEnemyTeam
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EOrionTeam                              ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EOrionTeam UHUDContext::GetEnemyTeam() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUDContext", "GetEnemyTeam");

	Params::HUDContext_GetEnemyTeam Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BlueprintContext.HUDContext.GetHUDInputActionNames
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FOrionHUDInputActionNames        ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)

struct FOrionHUDInputActionNames UHUDContext::GetHUDInputActionNames() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUDContext", "GetHUDInputActionNames");

	Params::HUDContext_GetHUDInputActionNames Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BlueprintContext.HUDContext.GetMyTeam
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EOrionTeam                              ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EOrionTeam UHUDContext::GetMyTeam() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUDContext", "GetMyTeam");

	Params::HUDContext_GetMyTeam Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BlueprintContext.HUDContext.GetTeamUIInfo
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   Index_0                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EOrionTeam                              TeamNum                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FOrionHUDTeamStatusInfo          ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FOrionHUDTeamStatusInfo UHUDContext::GetTeamUIInfo(int32 Index_0, EOrionTeam TeamNum) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUDContext", "GetTeamUIInfo");

	Params::HUDContext_GetTeamUIInfo Parms{};

	Parms.Index_0 = Index_0;
	Parms.TeamNum = TeamNum;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BlueprintContext.HUDContext.GetTowerTargetingInfo
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FOrionTowerTargetingInfo         ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FOrionTowerTargetingInfo UHUDContext::GetTowerTargetingInfo() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUDContext", "GetTowerTargetingInfo");

	Params::HUDContext_GetTowerTargetingInfo Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BlueprintContext.HUDContext.IsSurrenderEnabled
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHUDContext::IsSurrenderEnabled() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUDContext", "IsSurrenderEnabled");

	Params::HUDContext_IsSurrenderEnabled Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BlueprintContext.HUDContext.IsTutorial
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHUDContext::IsTutorial() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUDContext", "IsTutorial");

	Params::HUDContext_IsTutorial Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BlueprintContext.HUDContext.ShouldShowMatchTimer
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHUDContext::ShouldShowMatchTimer() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUDContext", "ShouldShowMatchTimer");

	Params::HUDContext_ShouldShowMatchTimer Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BlueprintContext.HUDContext.ShouldShowTeamScores
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UHUDContext::ShouldShowTeamScores() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUDContext", "ShouldShowTeamScores");

	Params::HUDContext_ShouldShowTeamScores Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BlueprintContext.InventoryContext.GetActiveBanner
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FActiveBannerStruct              ActiveBanner                                           (Parm, OutParm, NativeAccessSpecifierPublic)

void UInventoryContext::GetActiveBanner(struct FActiveBannerStruct* ActiveBanner)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("InventoryContext", "GetActiveBanner");

	Params::InventoryContext_GetActiveBanner Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (ActiveBanner != nullptr)
		*ActiveBanner = std::move(Parms.ActiveBanner);
}


// Function BlueprintContext.InventoryContext.GetBannerAlterations
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<class UOrionMcpBannerAlterationItem*>BannerAlterations                                      (Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void UInventoryContext::GetBannerAlterations(TArray<class UOrionMcpBannerAlterationItem*>& BannerAlterations)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("InventoryContext", "GetBannerAlterations");

	Params::InventoryContext_GetBannerAlterations Parms{};

	Parms.BannerAlterations = std::move(BannerAlterations);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	BannerAlterations = std::move(Parms.BannerAlterations);
}


// Function BlueprintContext.InventoryContext.GetBanners
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<class UOrionMcpBannerItem*>      Banners                                                (Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void UInventoryContext::GetBanners(TArray<class UOrionMcpBannerItem*>& Banners)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("InventoryContext", "GetBanners");

	Params::InventoryContext_GetBanners Parms{};

	Parms.Banners = std::move(Banners);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	Banners = std::move(Parms.Banners);
}


// Function BlueprintContext.InventoryContext.GetHeroes
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<class UOrionMcpHeroItem*>        Heroes                                                 (Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void UInventoryContext::GetHeroes(TArray<class UOrionMcpHeroItem*>& Heroes)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("InventoryContext", "GetHeroes");

	Params::InventoryContext_GetHeroes Parms{};

	Parms.Heroes = std::move(Heroes);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	Heroes = std::move(Parms.Heroes);
}


// Function BlueprintContext.InventoryContext.GetItemFromDefinition
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UOrionMcpItemDefinition*          Definition                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UOrionMcpItem*                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UOrionMcpItem* UInventoryContext::GetItemFromDefinition(class UOrionMcpItemDefinition* Definition)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("InventoryContext", "GetItemFromDefinition");

	Params::InventoryContext_GetItemFromDefinition Parms{};

	Parms.Definition = Definition;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BlueprintContext.InventoryContext.GetItemQuantityFromDefinition
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UOrionMcpItemDefinition*          Definition                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UInventoryContext::GetItemQuantityFromDefinition(class UOrionMcpItemDefinition* Definition)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("InventoryContext", "GetItemQuantityFromDefinition");

	Params::InventoryContext_GetItemQuantityFromDefinition Parms{};

	Parms.Definition = Definition;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// DelegateFunction BlueprintContext.InventoryContext.OnCardPacksChanged__DelegateSignature
// (MulticastDelegate, Public, Delegate)

void UInventoryContext::OnCardPacksChanged__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("InventoryContext", "OnCardPacksChanged__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// DelegateFunction BlueprintContext.InventoryContext.OnGiftBoxOpened__DelegateSignature
// (MulticastDelegate, Public, Delegate, HasOutParams)
// Parameters:
// struct FOrionLootNotification           LootNotification                                       (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    bShowFanfare                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UInventoryContext::OnGiftBoxOpened__DelegateSignature(const struct FOrionLootNotification& LootNotification, bool bShowFanfare)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("InventoryContext", "OnGiftBoxOpened__DelegateSignature");

	Params::InventoryContext_OnGiftBoxOpened__DelegateSignature Parms{};

	Parms.LootNotification = std::move(LootNotification);
	Parms.bShowFanfare = bShowFanfare;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BlueprintContext.InventoryContext.OpenGiftBox
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FString                           GiftBoxID                                              (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bShowFanfare                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UInventoryContext::OpenGiftBox(const class FString& GiftBoxID, bool bShowFanfare)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("InventoryContext", "OpenGiftBox");

	Params::InventoryContext_OpenGiftBox Parms{};

	Parms.GiftBoxID = std::move(GiftBoxID);
	Parms.bShowFanfare = bShowFanfare;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BlueprintContext.InventoryContext.GetActiveBannerID
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FString                           ActiveID                                               (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UInventoryContext::GetActiveBannerID(class FString* ActiveID) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("InventoryContext", "GetActiveBannerID");

	Params::InventoryContext_GetActiveBannerID Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (ActiveID != nullptr)
		*ActiveID = std::move(Parms.ActiveID);
}


// Function BlueprintContext.InventoryContext.GetActiveSkinForHero
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UOrionHeroData*                   HeroData                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UOrionSkinItemDefinition*         ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UOrionSkinItemDefinition* UInventoryContext::GetActiveSkinForHero(const class UOrionHeroData* HeroData) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("InventoryContext", "GetActiveSkinForHero");

	Params::InventoryContext_GetActiveSkinForHero Parms{};

	Parms.HeroData = HeroData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BlueprintContext.InventoryContext.GetHeroFromData
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UOrionHeroData*                   HeroData                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UOrionMcpHeroItem*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UOrionMcpHeroItem* UInventoryContext::GetHeroFromData(class UOrionHeroData* HeroData) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("InventoryContext", "GetHeroFromData");

	Params::InventoryContext_GetHeroFromData Parms{};

	Parms.HeroData = HeroData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BlueprintContext.InventoryContext.GetNextCardPack
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EOrionCardPackType                      CardPackType                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UOrionMcpCardPackItem*            ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UOrionMcpCardPackItem* UInventoryContext::GetNextCardPack(EOrionCardPackType CardPackType) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("InventoryContext", "GetNextCardPack");

	Params::InventoryContext_GetNextCardPack Parms{};

	Parms.CardPackType = CardPackType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BlueprintContext.InventoryContext.GetNumCardPacks
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EOrionCardPackType                      CardPackType                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UInventoryContext::GetNumCardPacks(EOrionCardPackType CardPackType) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("InventoryContext", "GetNumCardPacks");

	Params::InventoryContext_GetNumCardPacks Parms{};

	Parms.CardPackType = CardPackType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BlueprintContext.InventoryContext.IsHeroLocked
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UOrionMcpHeroItem*                HeroItem                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UInventoryContext::IsHeroLocked(const class UOrionMcpHeroItem* HeroItem) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("InventoryContext", "IsHeroLocked");

	Params::InventoryContext_IsHeroLocked Parms{};

	Parms.HeroItem = HeroItem;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BlueprintContext.OrionAsyncAction_OpenCardPack.OpenCardPack
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UInventoryContext*                LibraryContext                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UOrionMcpCardPackItem*            CardPackToOpen                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UOrionMcpTokenItem*               KeyItem_0                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UOrionAsyncAction_OpenCardPack*   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UOrionAsyncAction_OpenCardPack* UOrionAsyncAction_OpenCardPack::OpenCardPack(class UInventoryContext* LibraryContext, class UOrionMcpCardPackItem* CardPackToOpen, class UOrionMcpTokenItem* KeyItem_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("OrionAsyncAction_OpenCardPack", "OpenCardPack");

	Params::OrionAsyncAction_OpenCardPack_OpenCardPack Parms{};

	Parms.LibraryContext = LibraryContext;
	Parms.CardPackToOpen = CardPackToOpen;
	Parms.KeyItem_0 = KeyItem_0;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BlueprintContext.MatchmakingContext.AddMatchmakingCustomKeyToSession
// (Final, Native, Public, BlueprintCallable)

void UMatchmakingContext::AddMatchmakingCustomKeyToSession()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MatchmakingContext", "AddMatchmakingCustomKeyToSession");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BlueprintContext.MatchmakingContext.GetAvailableRegions
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<class UMatchmakingRegion*>       OutRegionOptions                                       (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
// int32                                   OutSelectedRegion                                      (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMatchmakingContext::GetAvailableRegions(TArray<class UMatchmakingRegion*>* OutRegionOptions, int32* OutSelectedRegion)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MatchmakingContext", "GetAvailableRegions");

	Params::MatchmakingContext_GetAvailableRegions Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutRegionOptions != nullptr)
		*OutRegionOptions = std::move(Parms.OutRegionOptions);

	if (OutSelectedRegion != nullptr)
		*OutSelectedRegion = Parms.OutSelectedRegion;
}


// DelegateFunction BlueprintContext.MatchmakingContext.OnRejoinAttemptComplete__DelegateSignature
// (Public, Delegate)
// Parameters:
// bool                                    bSuccess                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMatchmakingContext::OnRejoinAttemptComplete__DelegateSignature(bool bSuccess)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MatchmakingContext", "OnRejoinAttemptComplete__DelegateSignature");

	Params::MatchmakingContext_OnRejoinAttemptComplete__DelegateSignature Parms{};

	Parms.bSuccess = bSuccess;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BlueprintContext.MatchmakingContext.RefreshRegionPings
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TDelegate<void()>                       InCompletionDelgate                                    (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void UMatchmakingContext::RefreshRegionPings(const TDelegate<void()>& InCompletionDelgate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MatchmakingContext", "RefreshRegionPings");

	Params::MatchmakingContext_RefreshRegionPings Parms{};

	Parms.InCompletionDelgate = InCompletionDelgate;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BlueprintContext.MatchmakingContext.SelectRegion
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FString                           RegionId                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bSaveRegion                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UMatchmakingContext::SelectRegion(const class FString& RegionId, bool bSaveRegion)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MatchmakingContext", "SelectRegion");

	Params::MatchmakingContext_SelectRegion Parms{};

	Parms.RegionId = std::move(RegionId);
	Parms.bSaveRegion = bSaveRegion;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BlueprintContext.MatchmakingContext.StartRejoin
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TDelegate<void(bool bSuccess)>          InCompletionDelegate                                   (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)

void UMatchmakingContext::StartRejoin(TDelegate<void(bool bSuccess)> InCompletionDelegate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MatchmakingContext", "StartRejoin");

	Params::MatchmakingContext_StartRejoin Parms{};

	Parms.InCompletionDelegate = InCompletionDelegate;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BlueprintContext.MatchmakingContext.GetCurrentBanInfo
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FTimespan                        TimeLeft                                               (Parm, OutParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EOrionBanReason                         ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EOrionBanReason UMatchmakingContext::GetCurrentBanInfo(struct FTimespan* TimeLeft) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MatchmakingContext", "GetCurrentBanInfo");

	Params::MatchmakingContext_GetCurrentBanInfo Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (TimeLeft != nullptr)
		*TimeLeft = std::move(Parms.TimeLeft);

	return Parms.ReturnValue;
}


// Function BlueprintContext.MatchmakingContext.GetCurrentPlaylistId
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UMatchmakingContext::GetCurrentPlaylistId() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MatchmakingContext", "GetCurrentPlaylistId");

	Params::MatchmakingContext_GetCurrentPlaylistId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BlueprintContext.MatchmakingContext.GetNativePlaylistIDs
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const struct FNativePlaylistIDs         ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

const struct FNativePlaylistIDs UMatchmakingContext::GetNativePlaylistIDs() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MatchmakingContext", "GetNativePlaylistIDs");

	Params::MatchmakingContext_GetNativePlaylistIDs Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BlueprintContext.MatchmakingContext.GetPingQuality
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UMatchmakingRegion*               Region                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EPingQuality                            ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EPingQuality UMatchmakingContext::GetPingQuality(class UMatchmakingRegion* Region) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MatchmakingContext", "GetPingQuality");

	Params::MatchmakingContext_GetPingQuality Parms{};

	Parms.Region = Region;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BlueprintContext.MatchmakingContext.GetSelectedRegionId
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UMatchmakingContext::GetSelectedRegionId() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MatchmakingContext", "GetSelectedRegionId");

	Params::MatchmakingContext_GetSelectedRegionId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BlueprintContext.MatchmakingContext.HasValidOnlinePresence
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FText                             ErrorString                                            (Parm, OutParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UMatchmakingContext::HasValidOnlinePresence(class FText* ErrorString) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MatchmakingContext", "HasValidOnlinePresence");

	Params::MatchmakingContext_HasValidOnlinePresence Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (ErrorString != nullptr)
		*ErrorString = std::move(Parms.ErrorString);

	return Parms.ReturnValue;
}


// Function BlueprintContext.MatchTutorialContext.ClearPathToActor
// (Final, Native, Public, BlueprintCallable)

void UMatchTutorialContext::ClearPathToActor()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MatchTutorialContext", "ClearPathToActor");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BlueprintContext.MatchTutorialContext.EndTutorial
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TSubclassOf<class UOrionTutorial>       TutorialClass                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMatchTutorialContext::EndTutorial(TSubclassOf<class UOrionTutorial> TutorialClass)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MatchTutorialContext", "EndTutorial");

	Params::MatchTutorialContext_EndTutorial Parms{};

	Parms.TutorialClass = TutorialClass;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BlueprintContext.MatchTutorialContext.RequestFade
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             TutorialID                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EOrionHUDFadeRequest                    FadeType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMatchTutorialContext::RequestFade(class FName TutorialID, EOrionHUDFadeRequest FadeType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MatchTutorialContext", "RequestFade");

	Params::MatchTutorialContext_RequestFade Parms{};

	Parms.TutorialID = TutorialID;
	Parms.FadeType = FadeType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BlueprintContext.MatchTutorialContext.RequestPathToActor
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AActor*                           TargetActor                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMatchTutorialContext::RequestPathToActor(class AActor* TargetActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MatchTutorialContext", "RequestPathToActor");

	Params::MatchTutorialContext_RequestPathToActor Parms{};

	Parms.TargetActor = TargetActor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BlueprintContext.MatchTutorialContext.StartTutorial
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TSubclassOf<class UOrionTutorial>       TutorialClass                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMatchTutorialContext::StartTutorial(TSubclassOf<class UOrionTutorial> TutorialClass)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MatchTutorialContext", "StartTutorial");

	Params::MatchTutorialContext_StartTutorial Parms{};

	Parms.TutorialClass = TutorialClass;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BlueprintContext.MatchTutorialContext.CurrentlyPlayingTutorial
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UMatchTutorialContext::CurrentlyPlayingTutorial() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MatchTutorialContext", "CurrentlyPlayingTutorial");

	Params::MatchTutorialContext_CurrentlyPlayingTutorial Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BlueprintContext.MatchTutorialContext.GetHUDTutorialWidgetNames
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FOrionHUDTutorialWidgetNames     ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)

struct FOrionHUDTutorialWidgetNames UMatchTutorialContext::GetHUDTutorialWidgetNames() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MatchTutorialContext", "GetHUDTutorialWidgetNames");

	Params::MatchTutorialContext_GetHUDTutorialWidgetNames Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BlueprintContext.MatchTutorialContext.InTutorialMode
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UMatchTutorialContext::InTutorialMode() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MatchTutorialContext", "InTutorialMode");

	Params::MatchTutorialContext_InTutorialMode Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BlueprintContext.McpContext.AcceptEula
// (Final, Native, Public, BlueprintCallable)

void UMcpContext::AcceptEula()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("McpContext", "AcceptEula");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BlueprintContext.McpContext.AutoLogin
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TDelegate<void(ELoginResult Result, class FText& MESSAGE)>OnCompleteDelegate                                     (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void UMcpContext::AutoLogin(const TDelegate<void(ELoginResult Result, class FText& MESSAGE)>& OnCompleteDelegate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("McpContext", "AutoLogin");

	Params::McpContext_AutoLogin Parms{};

	Parms.OnCompleteDelegate = OnCompleteDelegate;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// DelegateFunction BlueprintContext.McpContext.OnLoginRequestComplete__DelegateSignature
// (Public, Delegate, HasOutParams)
// Parameters:
// ELoginResult                            Result                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FText                             MESSAGE                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UMcpContext::OnLoginRequestComplete__DelegateSignature(ELoginResult Result, const class FText& MESSAGE)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("McpContext", "OnLoginRequestComplete__DelegateSignature");

	Params::McpContext_OnLoginRequestComplete__DelegateSignature Parms{};

	Parms.Result = Result;
	Parms.MESSAGE = std::move(MESSAGE);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BlueprintContext.McpContext.CheckHasRedeemForAccess
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TDelegate<void(bool bHasInvite, bool bHasPurchase)>OnCompleteDelegate                                     (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void UMcpContext::CheckHasRedeemForAccess(const TDelegate<void(bool bHasInvite, bool bHasPurchase)>& OnCompleteDelegate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("McpContext", "CheckHasRedeemForAccess");

	Params::McpContext_CheckHasRedeemForAccess Parms{};

	Parms.OnCompleteDelegate = OnCompleteDelegate;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// DelegateFunction BlueprintContext.McpContext.OnCheckHasRedeemForAccess__DelegateSignature
// (Public, Delegate)
// Parameters:
// bool                                    bHasInvite                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bHasPurchase                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMcpContext::OnCheckHasRedeemForAccess__DelegateSignature(bool bHasInvite, bool bHasPurchase)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("McpContext", "OnCheckHasRedeemForAccess__DelegateSignature");

	Params::McpContext_OnCheckHasRedeemForAccess__DelegateSignature Parms{};

	Parms.bHasInvite = bHasInvite;
	Parms.bHasPurchase = bHasPurchase;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BlueprintContext.McpContext.CheckPurchaseRequiredForAccess
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TDelegate<void(bool bPurchaseRequired)> OnCompleteDelegate                                     (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void UMcpContext::CheckPurchaseRequiredForAccess(const TDelegate<void(bool bPurchaseRequired)>& OnCompleteDelegate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("McpContext", "CheckPurchaseRequiredForAccess");

	Params::McpContext_CheckPurchaseRequiredForAccess Parms{};

	Parms.OnCompleteDelegate = OnCompleteDelegate;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// DelegateFunction BlueprintContext.McpContext.OnCheckPurchaseRequiredForAccess__DelegateSignature
// (Public, Delegate)
// Parameters:
// bool                                    bPurchaseRequired                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMcpContext::OnCheckPurchaseRequiredForAccess__DelegateSignature(bool bPurchaseRequired)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("McpContext", "OnCheckPurchaseRequiredForAccess__DelegateSignature");

	Params::McpContext_OnCheckPurchaseRequiredForAccess__DelegateSignature Parms{};

	Parms.bPurchaseRequired = bPurchaseRequired;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BlueprintContext.McpContext.CreateHeadlessAccount
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class FText                             DisplayName                                            (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// TDelegate<void(ECreateAccountResult Result, class FText& MESSAGE)>OnCompleteDelegate                                     (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void UMcpContext::CreateHeadlessAccount(const class FText& DisplayName, const TDelegate<void(ECreateAccountResult Result, class FText& MESSAGE)>& OnCompleteDelegate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("McpContext", "CreateHeadlessAccount");

	Params::McpContext_CreateHeadlessAccount Parms{};

	Parms.DisplayName = std::move(DisplayName);
	Parms.OnCompleteDelegate = OnCompleteDelegate;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// DelegateFunction BlueprintContext.McpContext.OnCreateAccountRequestComplete__DelegateSignature
// (Public, Delegate, HasOutParams)
// Parameters:
// ECreateAccountResult                    Result                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FText                             MESSAGE                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UMcpContext::OnCreateAccountRequestComplete__DelegateSignature(ECreateAccountResult Result, const class FText& MESSAGE)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("McpContext", "OnCreateAccountRequestComplete__DelegateSignature");

	Params::McpContext_OnCreateAccountRequestComplete__DelegateSignature Parms{};

	Parms.Result = Result;
	Parms.MESSAGE = std::move(MESSAGE);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BlueprintContext.McpContext.DeclineEula
// (Final, Native, Public, BlueprintCallable)

void UMcpContext::DeclineEula()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("McpContext", "DeclineEula");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BlueprintContext.McpContext.GetEULAText
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

class FText UMcpContext::GetEULAText()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("McpContext", "GetEULAText");

	Params::McpContext_GetEULAText Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BlueprintContext.McpContext.GetFriendCodeDescription
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FFriendCode                      FriendCode                                             (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

class FText UMcpContext::GetFriendCodeDescription(const struct FFriendCode& FriendCode)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("McpContext", "GetFriendCodeDescription");

	Params::McpContext_GetFriendCodeDescription Parms{};

	Parms.FriendCode = std::move(FriendCode);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BlueprintContext.McpContext.GetFriendCodeDisplayName
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FFriendCode                      FriendCode                                             (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

class FText UMcpContext::GetFriendCodeDisplayName(const struct FFriendCode& FriendCode)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("McpContext", "GetFriendCodeDisplayName");

	Params::McpContext_GetFriendCodeDisplayName Parms{};

	Parms.FriendCode = std::move(FriendCode);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BlueprintContext.McpContext.HACK_SetDisplayName
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FString                           DisplayName                                            (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMcpContext::HACK_SetDisplayName(const class FString& DisplayName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("McpContext", "HACK_SetDisplayName");

	Params::McpContext_HACK_SetDisplayName Parms{};

	Parms.DisplayName = std::move(DisplayName);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BlueprintContext.McpContext.IssueFriendCode
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TDelegate<void(bool bSuccess, struct FFriendCode& FriendCode)>OnCompleteDelegate                                     (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void UMcpContext::IssueFriendCode(const TDelegate<void(bool bSuccess, struct FFriendCode& FriendCode)>& OnCompleteDelegate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("McpContext", "IssueFriendCode");

	Params::McpContext_IssueFriendCode Parms{};

	Parms.OnCompleteDelegate = OnCompleteDelegate;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// DelegateFunction BlueprintContext.McpContext.OnIssueFriendCodeComplete__DelegateSignature
// (Public, Delegate, HasOutParams)
// Parameters:
// bool                                    bSuccess                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FFriendCode                      FriendCode                                             (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UMcpContext::OnIssueFriendCodeComplete__DelegateSignature(bool bSuccess, const struct FFriendCode& FriendCode)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("McpContext", "OnIssueFriendCodeComplete__DelegateSignature");

	Params::McpContext_OnIssueFriendCodeComplete__DelegateSignature Parms{};

	Parms.bSuccess = bSuccess;
	Parms.FriendCode = std::move(FriendCode);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BlueprintContext.McpContext.Login
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class FText                             Username                                               (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// class FText                             Password                                               (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    bRememberMe                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TDelegate<void(ELoginResult Result, class FText& MESSAGE)>OnCompleteDelegate                                     (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void UMcpContext::Login(const class FText& Username, const class FText& Password, bool bRememberMe, const TDelegate<void(ELoginResult Result, class FText& MESSAGE)>& OnCompleteDelegate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("McpContext", "Login");

	Params::McpContext_Login Parms{};

	Parms.Username = std::move(Username);
	Parms.Password = std::move(Password);
	Parms.bRememberMe = bRememberMe;
	Parms.OnCompleteDelegate = OnCompleteDelegate;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BlueprintContext.McpContext.LoginAuthCode
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class FString                           AuthCode                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TDelegate<void(ELoginResult Result, class FText& MESSAGE)>OnCompleteDelegate                                     (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void UMcpContext::LoginAuthCode(const class FString& AuthCode, const TDelegate<void(ELoginResult Result, class FText& MESSAGE)>& OnCompleteDelegate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("McpContext", "LoginAuthCode");

	Params::McpContext_LoginAuthCode Parms{};

	Parms.AuthCode = std::move(AuthCode);
	Parms.OnCompleteDelegate = OnCompleteDelegate;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BlueprintContext.McpContext.Logout
// (Final, Native, Public, BlueprintCallable)

void UMcpContext::Logout()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("McpContext", "Logout");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// DelegateFunction BlueprintContext.McpContext.OnDisplayNameUpdated__DelegateSignature
// (Public, Delegate, HasOutParams)
// Parameters:
// bool                                    bSuccess                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FText                             MESSAGE                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UMcpContext::OnDisplayNameUpdated__DelegateSignature(bool bSuccess, const class FText& MESSAGE)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("McpContext", "OnDisplayNameUpdated__DelegateSignature");

	Params::McpContext_OnDisplayNameUpdated__DelegateSignature Parms{};

	Parms.bSuccess = bSuccess;
	Parms.MESSAGE = std::move(MESSAGE);

	UObject::ProcessEvent(Func, &Parms);
}


// DelegateFunction BlueprintContext.McpContext.OnEulaAvailable__DelegateSignature
// (MulticastDelegate, Public, Delegate, HasOutParams)
// Parameters:
// class FText                             EulaText                                               (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UMcpContext::OnEulaAvailable__DelegateSignature(const class FText& EulaText)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("McpContext", "OnEulaAvailable__DelegateSignature");

	Params::McpContext_OnEulaAvailable__DelegateSignature Parms{};

	Parms.EulaText = std::move(EulaText);

	UObject::ProcessEvent(Func, &Parms);
}


// DelegateFunction BlueprintContext.McpContext.OnLinkedConsoleAccount__DelegateSignature
// (MulticastDelegate, Public, Delegate, HasOutParams)
// Parameters:
// class FText                             DisplayName                                            (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// class FText                             ConsoleDisplayName                                     (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UMcpContext::OnLinkedConsoleAccount__DelegateSignature(const class FText& DisplayName, const class FText& ConsoleDisplayName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("McpContext", "OnLinkedConsoleAccount__DelegateSignature");

	Params::McpContext_OnLinkedConsoleAccount__DelegateSignature Parms{};

	Parms.DisplayName = std::move(DisplayName);
	Parms.ConsoleDisplayName = std::move(ConsoleDisplayName);

	UObject::ProcessEvent(Func, &Parms);
}


// DelegateFunction BlueprintContext.McpContext.OnQueryUnredeemedFriendCodesComplete__DelegateSignature
// (Public, Delegate, HasOutParams)
// Parameters:
// bool                                    bSuccess                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<struct FFriendCode>              FriendCodes                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void UMcpContext::OnQueryUnredeemedFriendCodesComplete__DelegateSignature(bool bSuccess, const TArray<struct FFriendCode>& FriendCodes)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("McpContext", "OnQueryUnredeemedFriendCodesComplete__DelegateSignature");

	Params::McpContext_OnQueryUnredeemedFriendCodesComplete__DelegateSignature Parms{};

	Parms.bSuccess = bSuccess;
	Parms.FriendCodes = std::move(FriendCodes);

	UObject::ProcessEvent(Func, &Parms);
}


// DelegateFunction BlueprintContext.McpContext.OnSendFriendCodePlatformMessageComplete__DelegateSignature
// (Public, Delegate)
// Parameters:
// bool                                    bMessageSent                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMcpContext::OnSendFriendCodePlatformMessageComplete__DelegateSignature(bool bMessageSent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("McpContext", "OnSendFriendCodePlatformMessageComplete__DelegateSignature");

	Params::McpContext_OnSendFriendCodePlatformMessageComplete__DelegateSignature Parms{};

	Parms.bMessageSent = bMessageSent;

	UObject::ProcessEvent(Func, &Parms);
}


// DelegateFunction BlueprintContext.McpContext.OnUnlinkAccountRequestComplete__DelegateSignature
// (Public, Delegate, HasOutParams)
// Parameters:
// bool                                    bSuccess                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FText                             MESSAGE                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UMcpContext::OnUnlinkAccountRequestComplete__DelegateSignature(bool bSuccess, const class FText& MESSAGE)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("McpContext", "OnUnlinkAccountRequestComplete__DelegateSignature");

	Params::McpContext_OnUnlinkAccountRequestComplete__DelegateSignature Parms{};

	Parms.bSuccess = bSuccess;
	Parms.MESSAGE = std::move(MESSAGE);

	UObject::ProcessEvent(Func, &Parms);
}


// DelegateFunction BlueprintContext.McpContext.OnWebCreateEpicAccountRequestComplete__DelegateSignature
// (Public, Delegate, HasOutParams)
// Parameters:
// bool                                    bSuccess                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FText                             MESSAGE                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// class FString                           AuthCode                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMcpContext::OnWebCreateEpicAccountRequestComplete__DelegateSignature(bool bSuccess, const class FText& MESSAGE, const class FString& AuthCode)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("McpContext", "OnWebCreateEpicAccountRequestComplete__DelegateSignature");

	Params::McpContext_OnWebCreateEpicAccountRequestComplete__DelegateSignature Parms{};

	Parms.bSuccess = bSuccess;
	Parms.MESSAGE = std::move(MESSAGE);
	Parms.AuthCode = std::move(AuthCode);

	UObject::ProcessEvent(Func, &Parms);
}


// DelegateFunction BlueprintContext.McpContext.OnWebForgotPasswordRequestComplete__DelegateSignature
// (Public, Delegate, HasOutParams)
// Parameters:
// bool                                    bSuccess                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FText                             MESSAGE                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UMcpContext::OnWebForgotPasswordRequestComplete__DelegateSignature(bool bSuccess, const class FText& MESSAGE)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("McpContext", "OnWebForgotPasswordRequestComplete__DelegateSignature");

	Params::McpContext_OnWebForgotPasswordRequestComplete__DelegateSignature Parms{};

	Parms.bSuccess = bSuccess;
	Parms.MESSAGE = std::move(MESSAGE);

	UObject::ProcessEvent(Func, &Parms);
}


// DelegateFunction BlueprintContext.McpContext.OnWebUpgradeEpicAccountRequestComplete__DelegateSignature
// (Public, Delegate, HasOutParams)
// Parameters:
// bool                                    bSuccess                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FText                             MESSAGE                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UMcpContext::OnWebUpgradeEpicAccountRequestComplete__DelegateSignature(bool bSuccess, const class FText& MESSAGE)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("McpContext", "OnWebUpgradeEpicAccountRequestComplete__DelegateSignature");

	Params::McpContext_OnWebUpgradeEpicAccountRequestComplete__DelegateSignature Parms{};

	Parms.bSuccess = bSuccess;
	Parms.MESSAGE = std::move(MESSAGE);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BlueprintContext.McpContext.QueryUnredeemedFriendCodes
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TDelegate<void(bool bSuccess, TArray<struct FFriendCode>& FriendCodes)>OnCompleteDelegate                                     (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void UMcpContext::QueryUnredeemedFriendCodes(const TDelegate<void(bool bSuccess, TArray<struct FFriendCode>& FriendCodes)>& OnCompleteDelegate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("McpContext", "QueryUnredeemedFriendCodes");

	Params::McpContext_QueryUnredeemedFriendCodes Parms{};

	Parms.OnCompleteDelegate = OnCompleteDelegate;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BlueprintContext.McpContext.SendFriendCodePlatformMessage
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FFriendCode                      FriendCode                                             (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// TDelegate<void(bool bMessageSent)>      OnCompleteDelegate                                     (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void UMcpContext::SendFriendCodePlatformMessage(const struct FFriendCode& FriendCode, const TDelegate<void(bool bMessageSent)>& OnCompleteDelegate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("McpContext", "SendFriendCodePlatformMessage");

	Params::McpContext_SendFriendCodePlatformMessage Parms{};

	Parms.FriendCode = std::move(FriendCode);
	Parms.OnCompleteDelegate = OnCompleteDelegate;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BlueprintContext.McpContext.UnLinkConsoleAccount
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TDelegate<void(bool bSuccess, class FText& MESSAGE)>OnCompleteDelegate                                     (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void UMcpContext::UnLinkConsoleAccount(const TDelegate<void(bool bSuccess, class FText& MESSAGE)>& OnCompleteDelegate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("McpContext", "UnLinkConsoleAccount");

	Params::McpContext_UnLinkConsoleAccount Parms{};

	Parms.OnCompleteDelegate = OnCompleteDelegate;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BlueprintContext.McpContext.UpdateDisplayName
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class FString                           DisplayName                                            (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TDelegate<void(bool bSuccess, class FText& MESSAGE)>OnCompleteDelegate                                     (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void UMcpContext::UpdateDisplayName(const class FString& DisplayName, const TDelegate<void(bool bSuccess, class FText& MESSAGE)>& OnCompleteDelegate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("McpContext", "UpdateDisplayName");

	Params::McpContext_UpdateDisplayName Parms{};

	Parms.DisplayName = std::move(DisplayName);
	Parms.OnCompleteDelegate = OnCompleteDelegate;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BlueprintContext.McpContext.WebCreateEpicAccount
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class FText                             Email                                                  (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// TDelegate<void(bool bSuccess, class FText& MESSAGE, const class FString& AuthCode)>OnCompleteDelegate                                     (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void UMcpContext::WebCreateEpicAccount(const class FText& Email, const TDelegate<void(bool bSuccess, class FText& MESSAGE, const class FString& AuthCode)>& OnCompleteDelegate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("McpContext", "WebCreateEpicAccount");

	Params::McpContext_WebCreateEpicAccount Parms{};

	Parms.Email = std::move(Email);
	Parms.OnCompleteDelegate = OnCompleteDelegate;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BlueprintContext.McpContext.WebForgotPasswordEpicAccount
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class FText                             Email                                                  (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// TDelegate<void(bool bSuccess, class FText& MESSAGE)>OnCompleteDelegate                                     (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void UMcpContext::WebForgotPasswordEpicAccount(const class FText& Email, const TDelegate<void(bool bSuccess, class FText& MESSAGE)>& OnCompleteDelegate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("McpContext", "WebForgotPasswordEpicAccount");

	Params::McpContext_WebForgotPasswordEpicAccount Parms{};

	Parms.Email = std::move(Email);
	Parms.OnCompleteDelegate = OnCompleteDelegate;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BlueprintContext.McpContext.WebManageEpicAccount
// (Final, Native, Public, BlueprintCallable)

void UMcpContext::WebManageEpicAccount()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("McpContext", "WebManageEpicAccount");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BlueprintContext.McpContext.WebUpgradeEpicAccount
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class FText                             Email                                                  (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// TDelegate<void(bool bSuccess, class FText& MESSAGE)>OnCompleteDelegate                                     (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void UMcpContext::WebUpgradeEpicAccount(const class FText& Email, const TDelegate<void(bool bSuccess, class FText& MESSAGE)>& OnCompleteDelegate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("McpContext", "WebUpgradeEpicAccount");

	Params::McpContext_WebUpgradeEpicAccount Parms{};

	Parms.Email = std::move(Email);
	Parms.OnCompleteDelegate = OnCompleteDelegate;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BlueprintContext.McpContext.DisplayNameUpdateAllowed
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UMcpContext::DisplayNameUpdateAllowed() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("McpContext", "DisplayNameUpdateAllowed");

	Params::McpContext_DisplayNameUpdateAllowed Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BlueprintContext.McpContext.GetAppName
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UMcpContext::GetAppName() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("McpContext", "GetAppName");

	Params::McpContext_GetAppName Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BlueprintContext.McpContext.GetGameSessionWatermarkText
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

class FText UMcpContext::GetGameSessionWatermarkText() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("McpContext", "GetGameSessionWatermarkText");

	Params::McpContext_GetGameSessionWatermarkText Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BlueprintContext.McpContext.GetLoginStatus
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

class FText UMcpContext::GetLoginStatus() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("McpContext", "GetLoginStatus");

	Params::McpContext_GetLoginStatus Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BlueprintContext.McpContext.GetNumFriendCodesToIssue
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UMcpContext::GetNumFriendCodesToIssue() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("McpContext", "GetNumFriendCodesToIssue");

	Params::McpContext_GetNumFriendCodesToIssue Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BlueprintContext.McpContext.GetUsername
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

class FText UMcpContext::GetUsername() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("McpContext", "GetUsername");

	Params::McpContext_GetUsername Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BlueprintContext.McpContext.HasPlaystationPlus
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UMcpContext::HasPlaystationPlus() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("McpContext", "HasPlaystationPlus");

	Params::McpContext_HasPlaystationPlus Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BlueprintContext.McpContext.IsBusy
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UMcpContext::IsBusy() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("McpContext", "IsBusy");

	Params::McpContext_IsBusy Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BlueprintContext.McpContext.IsHeadlessAccount
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UMcpContext::IsHeadlessAccount() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("McpContext", "IsHeadlessAccount");

	Params::McpContext_IsHeadlessAccount Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BlueprintContext.McpContext.IsHeadlessAccountAllowed
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UMcpContext::IsHeadlessAccountAllowed() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("McpContext", "IsHeadlessAccountAllowed");

	Params::McpContext_IsHeadlessAccountAllowed Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BlueprintContext.McpContext.IsLoggedIn
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UMcpContext::IsLoggedIn() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("McpContext", "IsLoggedIn");

	Params::McpContext_IsLoggedIn Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BlueprintContext.McpContext.IsRememberMeAllowed
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UMcpContext::IsRememberMeAllowed() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("McpContext", "IsRememberMeAllowed");

	Params::McpContext_IsRememberMeAllowed Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BlueprintContext.McpContext.IsRememberMeChecked
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UMcpContext::IsRememberMeChecked() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("McpContext", "IsRememberMeChecked");

	Params::McpContext_IsRememberMeChecked Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BlueprintContext.McpContext.IsUnlinkConsoleAccountAllowed
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UMcpContext::IsUnlinkConsoleAccountAllowed() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("McpContext", "IsUnlinkConsoleAccountAllowed");

	Params::McpContext_IsUnlinkConsoleAccountAllowed Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BlueprintContext.McpContext.IsValidEmail
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FText                             InEmail                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UMcpContext::IsValidEmail(const class FText& InEmail) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("McpContext", "IsValidEmail");

	Params::McpContext_IsValidEmail Parms{};

	Parms.InEmail = std::move(InEmail);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BlueprintContext.McpContext.ShouldShowWatermark
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UMcpContext::ShouldShowWatermark() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("McpContext", "ShouldShowWatermark");

	Params::McpContext_ShouldShowWatermark Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BlueprintContext.MenuContext.BroadcastFrontEndTabActivated
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class FName                             TabId                                                  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMenuContext::BroadcastFrontEndTabActivated(const class FName& TabId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MenuContext", "BroadcastFrontEndTabActivated");

	Params::MenuContext_BroadcastFrontEndTabActivated Parms{};

	Parms.TabId = TabId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BlueprintContext.MenuContext.BroadcastSceneChange
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class FName                             SceneName                                              (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMenuContext::BroadcastSceneChange(const class FName& SceneName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MenuContext", "BroadcastSceneChange");

	Params::MenuContext_BroadcastSceneChange Parms{};

	Parms.SceneName = SceneName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BlueprintContext.MenuContext.DisplayReturnToMainMenuReason
// (Final, Native, Public, BlueprintCallable)

void UMenuContext::DisplayReturnToMainMenuReason()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MenuContext", "DisplayReturnToMainMenuReason");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BlueprintContext.MenuContext.DisplayReturnToTitleScreenReason
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TDelegate<void()>                       OnDialogClosed                                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UMenuContext::DisplayReturnToTitleScreenReason(const TDelegate<void()>& OnDialogClosed)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MenuContext", "DisplayReturnToTitleScreenReason");

	Params::MenuContext_DisplayReturnToTitleScreenReason Parms{};

	Parms.OnDialogClosed = OnDialogClosed;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// DelegateFunction BlueprintContext.MenuContext.OnReturnToTitleScreenReasonClosed__DelegateSignature
// (Public, Delegate)

void UMenuContext::OnReturnToTitleScreenReasonClosed__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MenuContext", "OnReturnToTitleScreenReasonClosed__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BlueprintContext.MenuContext.IsFrontEndContentFlowComplete
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UMenuContext::IsFrontEndContentFlowComplete()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MenuContext", "IsFrontEndContentFlowComplete");

	Params::MenuContext_IsFrontEndContentFlowComplete Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BlueprintContext.MenuContext.NavigateToHomeScreen
// (Final, Native, Public, BlueprintCallable)

void UMenuContext::NavigateToHomeScreen()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MenuContext", "NavigateToHomeScreen");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BlueprintContext.MenuContext.NavigateToPlayScreen
// (Final, Native, Public, BlueprintCallable)

void UMenuContext::NavigateToPlayScreen()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MenuContext", "NavigateToPlayScreen");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BlueprintContext.MenuContext.NavigateToStoreOffer
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FString                           OfferId                                                (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMenuContext::NavigateToStoreOffer(const class FString& OfferId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MenuContext", "NavigateToStoreOffer");

	Params::MenuContext_NavigateToStoreOffer Parms{};

	Parms.OfferId = std::move(OfferId);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BlueprintContext.MenuContext.NavigationRequest
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FString                           NavigationPath                                         (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMenuContext::NavigationRequest(const class FString& NavigationPath)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MenuContext", "NavigationRequest");

	Params::MenuContext_NavigationRequest Parms{};

	Parms.NavigationPath = std::move(NavigationPath);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// DelegateFunction BlueprintContext.MenuContext.OnFrontEndTabActivated__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// class FName                             TabId                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMenuContext::OnFrontEndTabActivated__DelegateSignature(class FName TabId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MenuContext", "OnFrontEndTabActivated__DelegateSignature");

	Params::MenuContext_OnFrontEndTabActivated__DelegateSignature Parms{};

	Parms.TabId = TabId;

	UObject::ProcessEvent(Func, &Parms);
}


// DelegateFunction BlueprintContext.MenuContext.OnMenuCategoryPushed__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// class UUserWidget*                      Widget                                                 (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             MenuCategory                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMenuContext::OnMenuCategoryPushed__DelegateSignature(class UUserWidget* Widget, const class FName MenuCategory)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MenuContext", "OnMenuCategoryPushed__DelegateSignature");

	Params::MenuContext_OnMenuCategoryPushed__DelegateSignature Parms{};

	Parms.Widget = Widget;
	Parms.MenuCategory = MenuCategory;

	UObject::ProcessEvent(Func, &Parms);
}


// DelegateFunction BlueprintContext.MenuContext.OnMenuSceneChanged__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// class FName                             NewScene                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMenuContext::OnMenuSceneChanged__DelegateSignature(class FName NewScene)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MenuContext", "OnMenuSceneChanged__DelegateSignature");

	Params::MenuContext_OnMenuSceneChanged__DelegateSignature Parms{};

	Parms.NewScene = NewScene;

	UObject::ProcessEvent(Func, &Parms);
}


// DelegateFunction BlueprintContext.MenuContext.OnNavigateToStoreItem__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// class FString                           OfferId                                                (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMenuContext::OnNavigateToStoreItem__DelegateSignature(const class FString& OfferId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MenuContext", "OnNavigateToStoreItem__DelegateSignature");

	Params::MenuContext_OnNavigateToStoreItem__DelegateSignature Parms{};

	Parms.OfferId = std::move(OfferId);

	UObject::ProcessEvent(Func, &Parms);
}


// DelegateFunction BlueprintContext.MenuContext.OnNavigateToTab__DelegateSignature
// (MulticastDelegate, Public, Delegate)

void UMenuContext::OnNavigateToTab__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MenuContext", "OnNavigateToTab__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// DelegateFunction BlueprintContext.MenuContext.OnShowArcadeLadderScreen__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// class UOrionArcadeLadderSetupData*      ArcadeLadder                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMenuContext::OnShowArcadeLadderScreen__DelegateSignature(class UOrionArcadeLadderSetupData* ArcadeLadder)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MenuContext", "OnShowArcadeLadderScreen__DelegateSignature");

	Params::MenuContext_OnShowArcadeLadderScreen__DelegateSignature Parms{};

	Parms.ArcadeLadder = ArcadeLadder;

	UObject::ProcessEvent(Func, &Parms);
}


// DelegateFunction BlueprintContext.MenuContext.OnShowBundlePurchaseScreen__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// class FString                           OfferId                                                (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             InPurchaseContext                                      (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMenuContext::OnShowBundlePurchaseScreen__DelegateSignature(const class FString& OfferId, const class FName InPurchaseContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MenuContext", "OnShowBundlePurchaseScreen__DelegateSignature");

	Params::MenuContext_OnShowBundlePurchaseScreen__DelegateSignature Parms{};

	Parms.OfferId = std::move(OfferId);
	Parms.InPurchaseContext = InPurchaseContext;

	UObject::ProcessEvent(Func, &Parms);
}


// DelegateFunction BlueprintContext.MenuContext.OnShowDeckBuilder__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// class UOrionMcpDeckItem*                Deck                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMenuContext::OnShowDeckBuilder__DelegateSignature(class UOrionMcpDeckItem* Deck)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MenuContext", "OnShowDeckBuilder__DelegateSignature");

	Params::MenuContext_OnShowDeckBuilder__DelegateSignature Parms{};

	Parms.Deck = Deck;

	UObject::ProcessEvent(Func, &Parms);
}


// DelegateFunction BlueprintContext.MenuContext.OnShowFrontEndContent__DelegateSignature
// (MulticastDelegate, Public, Delegate)

void UMenuContext::OnShowFrontEndContent__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MenuContext", "OnShowFrontEndContent__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// DelegateFunction BlueprintContext.MenuContext.OnShowHeroDetails__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// class UOrionHeroData*                   HeroData                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UOrionSkinItemDefinition*         SkinToShow                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMenuContext::OnShowHeroDetails__DelegateSignature(class UOrionHeroData* HeroData, class UOrionSkinItemDefinition* SkinToShow)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MenuContext", "OnShowHeroDetails__DelegateSignature");

	Params::MenuContext_OnShowHeroDetails__DelegateSignature Parms{};

	Parms.HeroData = HeroData;
	Parms.SkinToShow = SkinToShow;

	UObject::ProcessEvent(Func, &Parms);
}


// DelegateFunction BlueprintContext.MenuContext.OnShowLootCrateOpeningScreen__DelegateSignature
// (MulticastDelegate, Public, Delegate)

void UMenuContext::OnShowLootCrateOpeningScreen__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MenuContext", "OnShowLootCrateOpeningScreen__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// DelegateFunction BlueprintContext.MenuContext.OnShowMTXReplenish__DelegateSignature
// (MulticastDelegate, Public, Delegate)

void UMenuContext::OnShowMTXReplenish__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MenuContext", "OnShowMTXReplenish__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// DelegateFunction BlueprintContext.MenuContext.OnShowPackOpenScreen__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// class UOrionMcpCardPackItem*            CardPack                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMenuContext::OnShowPackOpenScreen__DelegateSignature(class UOrionMcpCardPackItem* CardPack)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MenuContext", "OnShowPackOpenScreen__DelegateSignature");

	Params::MenuContext_OnShowPackOpenScreen__DelegateSignature Parms{};

	Parms.CardPack = CardPack;

	UObject::ProcessEvent(Func, &Parms);
}


// DelegateFunction BlueprintContext.MenuContext.OnShowPostGameSummary__DelegateSignature
// (MulticastDelegate, Public, Delegate)

void UMenuContext::OnShowPostGameSummary__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MenuContext", "OnShowPostGameSummary__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// DelegateFunction BlueprintContext.MenuContext.OnShowRefineGemScreen__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// class UOrionMcpGemItem*                 GemItem                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UOrionCardInspectScreen*          CardInspectScreen                                      (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMenuContext::OnShowRefineGemScreen__DelegateSignature(const class UOrionMcpGemItem* GemItem, class UOrionCardInspectScreen* CardInspectScreen)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MenuContext", "OnShowRefineGemScreen__DelegateSignature");

	Params::MenuContext_OnShowRefineGemScreen__DelegateSignature Parms{};

	Parms.GemItem = GemItem;
	Parms.CardInspectScreen = CardInspectScreen;

	UObject::ProcessEvent(Func, &Parms);
}


// DelegateFunction BlueprintContext.MenuContext.OnShowVaultScreen__DelegateSignature
// (MulticastDelegate, Public, Delegate)

void UMenuContext::OnShowVaultScreen__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MenuContext", "OnShowVaultScreen__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BlueprintContext.MenuContext.RefreshCurrentScene
// (Final, Native, Public, BlueprintCallable)

void UMenuContext::RefreshCurrentScene()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MenuContext", "RefreshCurrentScene");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BlueprintContext.MenuContext.RegisterMTXConfirmation
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UOrionPurchaseConfirmationWidget* MTXConfirmationWidget                                  (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMenuContext::RegisterMTXConfirmation(class UOrionPurchaseConfirmationWidget* MTXConfirmationWidget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MenuContext", "RegisterMTXConfirmation");

	Params::MenuContext_RegisterMTXConfirmation Parms{};

	Parms.MTXConfirmationWidget = MTXConfirmationWidget;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BlueprintContext.MenuContext.RegisterPurchaseConfirmation
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UOrionPurchaseConfirmationWidget* PurchaseConfirmationWidget                             (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMenuContext::RegisterPurchaseConfirmation(class UOrionPurchaseConfirmationWidget* PurchaseConfirmationWidget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MenuContext", "RegisterPurchaseConfirmation");

	Params::MenuContext_RegisterPurchaseConfirmation Parms{};

	Parms.PurchaseConfirmationWidget = PurchaseConfirmationWidget;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BlueprintContext.MenuContext.RegisterTabListWidget
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UOrionTabListWidget*              TabListWidget                                          (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMenuContext::RegisterTabListWidget(class UOrionTabListWidget* TabListWidget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MenuContext", "RegisterTabListWidget");

	Params::MenuContext_RegisterTabListWidget Parms{};

	Parms.TabListWidget = TabListWidget;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BlueprintContext.MenuContext.ReturnToTitleDueToRequiredUpdate
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// EReturnToMainMenuReason                 Reason                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TDelegate<void()>                       OnDialogClosed                                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UMenuContext::ReturnToTitleDueToRequiredUpdate(EReturnToMainMenuReason Reason, const TDelegate<void()>& OnDialogClosed)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MenuContext", "ReturnToTitleDueToRequiredUpdate");

	Params::MenuContext_ReturnToTitleDueToRequiredUpdate Parms{};

	Parms.Reason = Reason;
	Parms.OnDialogClosed = OnDialogClosed;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BlueprintContext.MenuContext.ShowPostGame
// (Final, Native, Public, BlueprintCallable)

void UMenuContext::ShowPostGame()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MenuContext", "ShowPostGame");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BlueprintContext.MenuContext.ShowVoiceChatUI
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bShowUI                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMenuContext::ShowVoiceChatUI(bool bShowUI)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MenuContext", "ShowVoiceChatUI");

	Params::MenuContext_ShowVoiceChatUI Parms{};

	Parms.bShowUI = bShowUI;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BlueprintContext.MenuContext.UnregisterTabListWidget
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UOrionTabListWidget*              TabListWidget                                          (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMenuContext::UnregisterTabListWidget(class UOrionTabListWidget* TabListWidget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MenuContext", "UnregisterTabListWidget");

	Params::MenuContext_UnregisterTabListWidget Parms{};

	Parms.TabListWidget = TabListWidget;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BlueprintContext.MenuContext.GetCurrentSceneName
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FName                             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FName UMenuContext::GetCurrentSceneName() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MenuContext", "GetCurrentSceneName");

	Params::MenuContext_GetCurrentSceneName Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BlueprintContext.MenuContext.ShouldDisplayWUIUI
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UMenuContext::ShouldDisplayWUIUI() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MenuContext", "ShouldDisplayWUIUI");

	Params::MenuContext_ShouldDisplayWUIUI Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BlueprintContext.OrionGameContext.GetHeroData
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UOrionHeroData*                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UOrionHeroData* UOrionGameContext::GetHeroData() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionGameContext", "GetHeroData");

	Params::OrionGameContext_GetHeroData Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BlueprintContext.OrionGameContext.GetIsUsingGamePad
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UOrionGameContext::GetIsUsingGamePad() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionGameContext", "GetIsUsingGamePad");

	Params::OrionGameContext_GetIsUsingGamePad Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BlueprintContext.OrionGameContext.GetLeftAnalogStickValues
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FVector2D                        ReturnValue                                            (Parm, OutParm, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector2D UOrionGameContext::GetLeftAnalogStickValues() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionGameContext", "GetLeftAnalogStickValues");

	Params::OrionGameContext_GetLeftAnalogStickValues Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BlueprintContext.OrionGameContext.GetRightAnalogStickValues
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FVector2D                        ReturnValue                                            (Parm, OutParm, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector2D UOrionGameContext::GetRightAnalogStickValues() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionGameContext", "GetRightAnalogStickValues");

	Params::OrionGameContext_GetRightAnalogStickValues Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BlueprintContext.PartyContext.GetUniqueNetID
// (Final, BlueprintCosmetic, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// class UOrionPartyMemberState*           PartyMember                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FUniqueNetIdRepl                 UniqueNetId                                            (Parm, OutParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPartyContext::GetUniqueNetID(class UOrionPartyMemberState* PartyMember, struct FUniqueNetIdRepl* UniqueNetId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("PartyContext", "GetUniqueNetID");

	Params::PartyContext_GetUniqueNetID Parms{};

	Parms.PartyMember = PartyMember;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (UniqueNetId != nullptr)
		*UniqueNetId = std::move(Parms.UniqueNetId);
}


// Function BlueprintContext.PartyContext.GetPartyPrivacySetting
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// EPartyType                              OutPartyType                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    OutLeaderFriendsOnly                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    OutLeaderInvitesOnly                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UPartyContext::GetPartyPrivacySetting(EPartyType* OutPartyType, bool* OutLeaderFriendsOnly, bool* OutLeaderInvitesOnly)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PartyContext", "GetPartyPrivacySetting");

	Params::PartyContext_GetPartyPrivacySetting Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutPartyType != nullptr)
		*OutPartyType = Parms.OutPartyType;

	if (OutLeaderFriendsOnly != nullptr)
		*OutLeaderFriendsOnly = Parms.OutLeaderFriendsOnly;

	if (OutLeaderInvitesOnly != nullptr)
		*OutLeaderInvitesOnly = Parms.OutLeaderInvitesOnly;

	return Parms.ReturnValue;
}


// Function BlueprintContext.PartyContext.JoinAsSpectator
// (Final, Native, Public, BlueprintCallable)

void UPartyContext::JoinAsSpectator()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PartyContext", "JoinAsSpectator");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BlueprintContext.PartyContext.KickFromParty
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UOrionPartyMemberState*           PartyMember                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPartyContext::KickFromParty(class UOrionPartyMemberState* PartyMember)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PartyContext", "KickFromParty");

	Params::PartyContext_KickFromParty Parms{};

	Parms.PartyMember = PartyMember;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BlueprintContext.PartyContext.LeaveParty
// (Final, Native, Public, BlueprintCallable)

void UPartyContext::LeaveParty()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PartyContext", "LeaveParty");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// DelegateFunction BlueprintContext.PartyContext.OnLeaderFriendsOnlyChanged__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// bool                                    bLeaderFriendsOnly                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPartyContext::OnLeaderFriendsOnlyChanged__DelegateSignature(bool bLeaderFriendsOnly)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PartyContext", "OnLeaderFriendsOnlyChanged__DelegateSignature");

	Params::PartyContext_OnLeaderFriendsOnlyChanged__DelegateSignature Parms{};

	Parms.bLeaderFriendsOnly = bLeaderFriendsOnly;

	UObject::ProcessEvent(Func, &Parms);
}


// DelegateFunction BlueprintContext.PartyContext.OnLeaderInvitesOnlyChanged__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// bool                                    bLeaderInviteOnly                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPartyContext::OnLeaderInvitesOnlyChanged__DelegateSignature(bool bLeaderInviteOnly)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PartyContext", "OnLeaderInvitesOnlyChanged__DelegateSignature");

	Params::PartyContext_OnLeaderInvitesOnlyChanged__DelegateSignature Parms{};

	Parms.bLeaderInviteOnly = bLeaderInviteOnly;

	UObject::ProcessEvent(Func, &Parms);
}


// DelegateFunction BlueprintContext.PartyContext.OnMatchmakingCustomKeyChanged__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// class FString                           CustomKey                                              (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPartyContext::OnMatchmakingCustomKeyChanged__DelegateSignature(const class FString& CustomKey)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PartyContext", "OnMatchmakingCustomKeyChanged__DelegateSignature");

	Params::PartyContext_OnMatchmakingCustomKeyChanged__DelegateSignature Parms{};

	Parms.CustomKey = std::move(CustomKey);

	UObject::ProcessEvent(Func, &Parms);
}


// DelegateFunction BlueprintContext.PartyContext.OnMMRUpdated__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// bool                                    bIsValid                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPartyContext::OnMMRUpdated__DelegateSignature(bool bIsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PartyContext", "OnMMRUpdated__DelegateSignature");

	Params::PartyContext_OnMMRUpdated__DelegateSignature Parms{};

	Parms.bIsValid = bIsValid;

	UObject::ProcessEvent(Func, &Parms);
}


// DelegateFunction BlueprintContext.PartyContext.OnPartyChanged__DelegateSignature
// (MulticastDelegate, Public, Delegate)

void UPartyContext::OnPartyChanged__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PartyContext", "OnPartyChanged__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// DelegateFunction BlueprintContext.PartyContext.OnPartyDataChanged__DelegateSignature
// (MulticastDelegate, Public, Delegate, HasOutParams)
// Parameters:
// struct FPartyState                      PartyData                                              (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UPartyContext::OnPartyDataChanged__DelegateSignature(const struct FPartyState& PartyData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PartyContext", "OnPartyDataChanged__DelegateSignature");

	Params::PartyContext_OnPartyDataChanged__DelegateSignature Parms{};

	Parms.PartyData = std::move(PartyData);

	UObject::ProcessEvent(Func, &Parms);
}


// DelegateFunction BlueprintContext.PartyContext.OnPartyTypeChanged__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// EPartyType                              PartyType                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPartyContext::OnPartyTypeChanged__DelegateSignature(EPartyType PartyType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PartyContext", "OnPartyTypeChanged__DelegateSignature");

	Params::PartyContext_OnPartyTypeChanged__DelegateSignature Parms{};

	Parms.PartyType = PartyType;

	UObject::ProcessEvent(Func, &Parms);
}


// DelegateFunction BlueprintContext.PartyContext.OnPlaylistIDChanged__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// int32                                   PlaylistId                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPartyContext::OnPlaylistIDChanged__DelegateSignature(int32 PlaylistId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PartyContext", "OnPlaylistIDChanged__DelegateSignature");

	Params::PartyContext_OnPlaylistIDChanged__DelegateSignature Parms{};

	Parms.PlaylistId = PlaylistId;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BlueprintContext.PartyContext.PromoteToPartyLeader
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UOrionPartyMemberState*           PartyMember                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPartyContext::PromoteToPartyLeader(class UOrionPartyMemberState* PartyMember)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PartyContext", "PromoteToPartyLeader");

	Params::PartyContext_PromoteToPartyLeader Parms{};

	Parms.PartyMember = PartyMember;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BlueprintContext.PartyContext.SendConsoleFriendInvite
// (Final, Native, Public, BlueprintCallable)

void UPartyContext::SendConsoleFriendInvite()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PartyContext", "SendConsoleFriendInvite");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BlueprintContext.PartyContext.SendPartyInvite
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UOrionFriendItem*                 FriendItem                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPartyContext::SendPartyInvite(class UOrionFriendItem* FriendItem)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PartyContext", "SendPartyInvite");

	Params::PartyContext_SendPartyInvite Parms{};

	Parms.FriendItem = FriendItem;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BlueprintContext.PartyContext.SetMatchmakingCustomKey
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FString                           CustomKey                                              (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPartyContext::SetMatchmakingCustomKey(const class FString& CustomKey)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PartyContext", "SetMatchmakingCustomKey");

	Params::PartyContext_SetMatchmakingCustomKey Parms{};

	Parms.CustomKey = std::move(CustomKey);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BlueprintContext.PartyContext.SetPartyPrivacySetting
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EPartyType                              PartyType                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bLeaderFriendsOnly                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bLeaderInvitesOnly                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPartyContext::SetPartyPrivacySetting(EPartyType PartyType, bool bLeaderFriendsOnly, bool bLeaderInvitesOnly)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PartyContext", "SetPartyPrivacySetting");

	Params::PartyContext_SetPartyPrivacySetting Parms{};

	Parms.PartyType = PartyType;
	Parms.bLeaderFriendsOnly = bLeaderFriendsOnly;
	Parms.bLeaderInvitesOnly = bLeaderInvitesOnly;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BlueprintContext.PartyContext.SetPlaylistID
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   NewPlaylistID                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPartyContext::SetPlaylistID(int32 NewPlaylistID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PartyContext", "SetPlaylistID");

	Params::PartyContext_SetPlaylistID Parms{};

	Parms.NewPlaylistID = NewPlaylistID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BlueprintContext.PartyContext.AmIPartyLeader
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UPartyContext::AmIPartyLeader() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PartyContext", "AmIPartyLeader");

	Params::PartyContext_AmIPartyLeader Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BlueprintContext.PartyContext.GetMatchmakingCustomKey
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UPartyContext::GetMatchmakingCustomKey() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PartyContext", "GetMatchmakingCustomKey");

	Params::PartyContext_GetMatchmakingCustomKey Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BlueprintContext.PartyContext.GetMyPersistentPartyEntry
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UOrionPersistentPartyMember*      ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UOrionPersistentPartyMember* UPartyContext::GetMyPersistentPartyEntry() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PartyContext", "GetMyPersistentPartyEntry");

	Params::PartyContext_GetMyPersistentPartyEntry Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BlueprintContext.PartyContext.GetPartyMembers
// (Final, Native, Public, HasOutParams, BlueprintCallable, Const)
// Parameters:
// TArray<class UOrionPersistentPartyMember*>PartyMembers                                           (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void UPartyContext::GetPartyMembers(TArray<class UOrionPersistentPartyMember*>* PartyMembers) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PartyContext", "GetPartyMembers");

	Params::PartyContext_GetPartyMembers Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (PartyMembers != nullptr)
		*PartyMembers = std::move(Parms.PartyMembers);
}


// Function BlueprintContext.PartyContext.GetPlaylistID
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UPartyContext::GetPlaylistID() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PartyContext", "GetPlaylistID");

	Params::PartyContext_GetPlaylistID Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BlueprintContext.PartyContext.IsHeroPickedByOtherPlayer
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UOrionHeroData*                   InHero                                                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UPartyContext::IsHeroPickedByOtherPlayer(const class UOrionHeroData* InHero) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PartyContext", "IsHeroPickedByOtherPlayer");

	Params::PartyContext_IsHeroPickedByOtherPlayer Parms{};

	Parms.InHero = InHero;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BlueprintContext.PartyContext.IsMatchmakingCustomKeyActive
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UPartyContext::IsMatchmakingCustomKeyActive() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PartyContext", "IsMatchmakingCustomKeyActive");

	Params::PartyContext_IsMatchmakingCustomKeyActive Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BlueprintContext.PartyContext.IsPartyLeader
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UOrionPartyMemberState*           PartyMember                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UPartyContext::IsPartyLeader(class UOrionPartyMemberState* PartyMember) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PartyContext", "IsPartyLeader");

	Params::PartyContext_IsPartyLeader Parms{};

	Parms.PartyMember = PartyMember;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BlueprintContext.PartyContext.MaxPartyMembers
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UPartyContext::MaxPartyMembers() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PartyContext", "MaxPartyMembers");

	Params::PartyContext_MaxPartyMembers Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BlueprintContext.PartyContext.NumPartyMembers
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UPartyContext::NumPartyMembers() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PartyContext", "NumPartyMembers");

	Params::PartyContext_NumPartyMembers Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BlueprintContext.PlayerContext.ApplyAllClientSettings
// (Final, Native, Public, BlueprintCallable)

void UPlayerContext::ApplyAllClientSettings()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerContext", "ApplyAllClientSettings");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BlueprintContext.PlayerContext.ApplyClientAudioSettings
// (Final, Native, Public, BlueprintCallable)

void UPlayerContext::ApplyClientAudioSettings()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerContext", "ApplyClientAudioSettings");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BlueprintContext.PlayerContext.ApplyClientGameplaySettings
// (Final, Native, Public, BlueprintCallable)

void UPlayerContext::ApplyClientGameplaySettings()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerContext", "ApplyClientGameplaySettings");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BlueprintContext.PlayerContext.ApplyClientHUDSettings
// (Final, Native, Public, BlueprintCallable)

void UPlayerContext::ApplyClientHUDSettings()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerContext", "ApplyClientHUDSettings");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BlueprintContext.PlayerContext.ChangeLanguage
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FString                           LanguageCode                                           (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bSave                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayerContext::ChangeLanguage(const class FString& LanguageCode, bool bSave)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerContext", "ChangeLanguage");

	Params::PlayerContext_ChangeLanguage Parms{};

	Parms.LanguageCode = std::move(LanguageCode);
	Parms.bSave = bSave;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BlueprintContext.PlayerContext.GetBoundKeysByNameAndType
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             BindingName                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EKeyBindingType                         BindingType                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FBoundKeys                       ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FBoundKeys UPlayerContext::GetBoundKeysByNameAndType(class FName BindingName, EKeyBindingType BindingType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerContext", "GetBoundKeysByNameAndType");

	Params::PlayerContext_GetBoundKeysByNameAndType Parms{};

	Parms.BindingName = BindingName;
	Parms.BindingType = BindingType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// DelegateFunction BlueprintContext.PlayerContext.OnMcpResult__DelegateSignature
// (Public, Delegate)
// Parameters:
// bool                                    bSuccess                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FText                             ErrorMessage                                           (Parm, NativeAccessSpecifierPublic)

void UPlayerContext::OnMcpResult__DelegateSignature(bool bSuccess, const class FText& ErrorMessage)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerContext", "OnMcpResult__DelegateSignature");

	Params::PlayerContext_OnMcpResult__DelegateSignature Parms{};

	Parms.bSuccess = bSuccess;
	Parms.ErrorMessage = std::move(ErrorMessage);

	UObject::ProcessEvent(Func, &Parms);
}


// DelegateFunction BlueprintContext.PlayerContext.OnPrestigeAccountComplete__DelegateSignature
// (MulticastDelegate, Public, Delegate)

void UPlayerContext::OnPrestigeAccountComplete__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerContext", "OnPrestigeAccountComplete__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BlueprintContext.PlayerContext.OverrideBoundKeyByNameAndType
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             BindingName                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EKeyBindingType                         BindingType                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FInputChord                      PreviousKey                                            (Parm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FInputChord                      NewKey                                                 (Parm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayerContext::OverrideBoundKeyByNameAndType(class FName BindingName, EKeyBindingType BindingType, const struct FInputChord& PreviousKey, const struct FInputChord& NewKey)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerContext", "OverrideBoundKeyByNameAndType");

	Params::PlayerContext_OverrideBoundKeyByNameAndType Parms{};

	Parms.BindingName = BindingName;
	Parms.BindingType = BindingType;
	Parms.PreviousKey = std::move(PreviousKey);
	Parms.NewKey = std::move(NewKey);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BlueprintContext.PlayerContext.ResetClientAudioSettings
// (Final, Native, Public, BlueprintCallable)

void UPlayerContext::ResetClientAudioSettings()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerContext", "ResetClientAudioSettings");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BlueprintContext.PlayerContext.ResetClientGameplaySettings
// (Final, Native, Public, BlueprintCallable)

void UPlayerContext::ResetClientGameplaySettings()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerContext", "ResetClientGameplaySettings");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BlueprintContext.PlayerContext.ResetClientHUDSettings
// (Final, Native, Public, BlueprintCallable)

void UPlayerContext::ResetClientHUDSettings()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerContext", "ResetClientHUDSettings");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BlueprintContext.PlayerContext.RevertToCurrentClientAudioSettings
// (Final, Native, Public, BlueprintCallable)

void UPlayerContext::RevertToCurrentClientAudioSettings()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerContext", "RevertToCurrentClientAudioSettings");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BlueprintContext.PlayerContext.RevertToCurrentClientGameplaySettings
// (Final, Native, Public, BlueprintCallable)

void UPlayerContext::RevertToCurrentClientGameplaySettings()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerContext", "RevertToCurrentClientGameplaySettings");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BlueprintContext.PlayerContext.SaveClientSettings
// (Final, Native, Public, BlueprintCallable)

void UPlayerContext::SaveClientSettings()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerContext", "SaveClientSettings");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BlueprintContext.PlayerContext.SetAutoPlayInstantReplay
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    NewValue                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayerContext::SetAutoPlayInstantReplay(bool NewValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerContext", "SetAutoPlayInstantReplay");

	Params::PlayerContext_SetAutoPlayInstantReplay Parms{};

	Parms.NewValue = NewValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BlueprintContext.PlayerContext.SetContinuousMusic
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    NewValue                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayerContext::SetContinuousMusic(bool NewValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerContext", "SetContinuousMusic");

	Params::PlayerContext_SetContinuousMusic Parms{};

	Parms.NewValue = NewValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BlueprintContext.PlayerContext.SetDisplayCardOverLocalPlayer
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bOn                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayerContext::SetDisplayCardOverLocalPlayer(bool bOn)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerContext", "SetDisplayCardOverLocalPlayer");

	Params::PlayerContext_SetDisplayCardOverLocalPlayer Parms{};

	Parms.bOn = bOn;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BlueprintContext.PlayerContext.SetEnableDeathcam
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   NewValue                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayerContext::SetEnableDeathcam(int32 NewValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerContext", "SetEnableDeathcam");

	Params::PlayerContext_SetEnableDeathcam Parms{};

	Parms.NewValue = NewValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BlueprintContext.PlayerContext.SetEngineGammaValue
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   NewValue                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayerContext::SetEngineGammaValue(float NewValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerContext", "SetEngineGammaValue");

	Params::PlayerContext_SetEngineGammaValue Parms{};

	Parms.NewValue = NewValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BlueprintContext.PlayerContext.SetGamepadAbilityConfirmOnRelease
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   NewValue                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayerContext::SetGamepadAbilityConfirmOnRelease(int32 NewValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerContext", "SetGamepadAbilityConfirmOnRelease");

	Params::PlayerContext_SetGamepadAbilityConfirmOnRelease Parms{};

	Parms.NewValue = NewValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BlueprintContext.PlayerContext.SetGamepadConfigIndex
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   NewValue                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayerContext::SetGamepadConfigIndex(int32 NewValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerContext", "SetGamepadConfigIndex");

	Params::PlayerContext_SetGamepadConfigIndex Parms{};

	Parms.NewValue = NewValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BlueprintContext.PlayerContext.SetGamepadHandednessConfigIndex
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   NewValue                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayerContext::SetGamepadHandednessConfigIndex(int32 NewValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerContext", "SetGamepadHandednessConfigIndex");

	Params::PlayerContext_SetGamepadHandednessConfigIndex Parms{};

	Parms.NewValue = NewValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BlueprintContext.PlayerContext.SetGamepadInvertPitch
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   NewValue                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayerContext::SetGamepadInvertPitch(int32 NewValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerContext", "SetGamepadInvertPitch");

	Params::PlayerContext_SetGamepadInvertPitch Parms{};

	Parms.NewValue = NewValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BlueprintContext.PlayerContext.SetGamepadInvertYaw
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   NewValue                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayerContext::SetGamepadInvertYaw(int32 NewValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerContext", "SetGamepadInvertYaw");

	Params::PlayerContext_SetGamepadInvertYaw Parms{};

	Parms.NewValue = NewValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BlueprintContext.PlayerContext.SetGamepadPitchSensitivity
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   NewValue                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayerContext::SetGamepadPitchSensitivity(int32 NewValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerContext", "SetGamepadPitchSensitivity");

	Params::PlayerContext_SetGamepadPitchSensitivity Parms{};

	Parms.NewValue = NewValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BlueprintContext.PlayerContext.SetGamepadRadialSelectEnabled
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   NewValue                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayerContext::SetGamepadRadialSelectEnabled(int32 NewValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerContext", "SetGamepadRadialSelectEnabled");

	Params::PlayerContext_SetGamepadRadialSelectEnabled Parms{};

	Parms.NewValue = NewValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BlueprintContext.PlayerContext.SetGamepadYawSensitivity
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   NewValue                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayerContext::SetGamepadYawSensitivity(int32 NewValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerContext", "SetGamepadYawSensitivity");

	Params::PlayerContext_SetGamepadYawSensitivity Parms{};

	Parms.NewValue = NewValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BlueprintContext.PlayerContext.SetHealthBarOverhead
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bOn                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayerContext::SetHealthBarOverhead(bool bOn)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerContext", "SetHealthBarOverhead");

	Params::PlayerContext_SetHealthBarOverhead Parms{};

	Parms.bOn = bOn;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BlueprintContext.PlayerContext.SetInvertedMouse
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bOn                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayerContext::SetInvertedMouse(bool bOn)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerContext", "SetInvertedMouse");

	Params::PlayerContext_SetInvertedMouse Parms{};

	Parms.bOn = bOn;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BlueprintContext.PlayerContext.SetMasterGameVolume
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   NewValue                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayerContext::SetMasterGameVolume(float NewValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerContext", "SetMasterGameVolume");

	Params::PlayerContext_SetMasterGameVolume Parms{};

	Parms.NewValue = NewValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BlueprintContext.PlayerContext.SetMouseLookSensitivity
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   NewValue                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayerContext::SetMouseLookSensitivity(float NewValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerContext", "SetMouseLookSensitivity");

	Params::PlayerContext_SetMouseLookSensitivity Parms{};

	Parms.NewValue = NewValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BlueprintContext.PlayerContext.SetMusicGameVolume
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   NewValue                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayerContext::SetMusicGameVolume(float NewValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerContext", "SetMusicGameVolume");

	Params::PlayerContext_SetMusicGameVolume Parms{};

	Parms.NewValue = NewValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BlueprintContext.PlayerContext.SetOtherGameVolume
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   NewValue                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayerContext::SetOtherGameVolume(float NewValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerContext", "SetOtherGameVolume");

	Params::PlayerContext_SetOtherGameVolume Parms{};

	Parms.NewValue = NewValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BlueprintContext.PlayerContext.SetShowAbilityConfirmWidget
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   NewValue                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayerContext::SetShowAbilityConfirmWidget(int32 NewValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerContext", "SetShowAbilityConfirmWidget");

	Params::PlayerContext_SetShowAbilityConfirmWidget Parms{};

	Parms.NewValue = NewValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BlueprintContext.PlayerContext.SetShowAddedItemsInChat
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bOn                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayerContext::SetShowAddedItemsInChat(bool bOn)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerContext", "SetShowAddedItemsInChat");

	Params::PlayerContext_SetShowAddedItemsInChat Parms{};

	Parms.bOn = bOn;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BlueprintContext.PlayerContext.SetShowBasicAttackRangeIndicator
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   NewValue                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayerContext::SetShowBasicAttackRangeIndicator(int32 NewValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerContext", "SetShowBasicAttackRangeIndicator");

	Params::PlayerContext_SetShowBasicAttackRangeIndicator Parms{};

	Parms.NewValue = NewValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BlueprintContext.PlayerContext.SetShowCompletedItemsInChat
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bOn                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayerContext::SetShowCompletedItemsInChat(bool bOn)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerContext", "SetShowCompletedItemsInChat");

	Params::PlayerContext_SetShowCompletedItemsInChat Parms{};

	Parms.bOn = bOn;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BlueprintContext.PlayerContext.SetShowDiscardedItemsInChat
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bOn                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayerContext::SetShowDiscardedItemsInChat(bool bOn)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerContext", "SetShowDiscardedItemsInChat");

	Params::PlayerContext_SetShowDiscardedItemsInChat Parms{};

	Parms.bOn = bOn;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BlueprintContext.PlayerContext.SetShowPingAndFPSOnHUD
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   NewValue                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayerContext::SetShowPingAndFPSOnHUD(int32 NewValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerContext", "SetShowPingAndFPSOnHUD");

	Params::PlayerContext_SetShowPingAndFPSOnHUD Parms{};

	Parms.NewValue = NewValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BlueprintContext.PlayerContext.SetShowXPPerMinOnHUD
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   NewValue                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayerContext::SetShowXPPerMinOnHUD(int32 NewValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerContext", "SetShowXPPerMinOnHUD");

	Params::PlayerContext_SetShowXPPerMinOnHUD Parms{};

	Parms.NewValue = NewValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BlueprintContext.PlayerContext.SetThemeMusic
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FString                           NewTheme                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayerContext::SetThemeMusic(const class FString& NewTheme)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerContext", "SetThemeMusic");

	Params::PlayerContext_SetThemeMusic Parms{};

	Parms.NewTheme = std::move(NewTheme);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BlueprintContext.PlayerContext.SetVeterancy
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EOrionVeterancy                         Veterancy                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TDelegate<void(bool bSuccess, class FText ErrorMessage)>Callback                                               (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)

void UPlayerContext::SetVeterancy(EOrionVeterancy Veterancy, TDelegate<void(bool bSuccess, class FText ErrorMessage)> Callback)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerContext", "SetVeterancy");

	Params::PlayerContext_SetVeterancy Parms{};

	Parms.Veterancy = Veterancy;
	Parms.Callback = Callback;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BlueprintContext.PlayerContext.SetVoiceGameVolume
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   NewValue                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayerContext::SetVoiceGameVolume(float NewValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerContext", "SetVoiceGameVolume");

	Params::PlayerContext_SetVoiceGameVolume Parms{};

	Parms.NewValue = NewValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BlueprintContext.PlayerContext.GammaToSlider
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   Gamma                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UPlayerContext::GammaToSlider(float Gamma) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerContext", "GammaToSlider");

	Params::PlayerContext_GammaToSlider Parms{};

	Parms.Gamma = Gamma;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BlueprintContext.PlayerContext.GetAccountCountryCode
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UPlayerContext::GetAccountCountryCode() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerContext", "GetAccountCountryCode");

	Params::PlayerContext_GetAccountCountryCode Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BlueprintContext.PlayerContext.GetAccountLevel
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UPlayerContext::GetAccountLevel() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerContext", "GetAccountLevel");

	Params::PlayerContext_GetAccountLevel Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BlueprintContext.PlayerContext.GetAccountLevelInfo
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FOrionLevelInfo                  AccountLevelInfo                                       (Parm, OutParm, NoDestructor, NativeAccessSpecifierPublic)

void UPlayerContext::GetAccountLevelInfo(struct FOrionLevelInfo* AccountLevelInfo) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerContext", "GetAccountLevelInfo");

	Params::PlayerContext_GetAccountLevelInfo Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (AccountLevelInfo != nullptr)
		*AccountLevelInfo = std::move(Parms.AccountLevelInfo);
}


// Function BlueprintContext.PlayerContext.GetAutoOpenCardShop
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UPlayerContext::GetAutoOpenCardShop() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerContext", "GetAutoOpenCardShop");

	Params::PlayerContext_GetAutoOpenCardShop Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BlueprintContext.PlayerContext.GetAutoPlayInstantReplay
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UPlayerContext::GetAutoPlayInstantReplay() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerContext", "GetAutoPlayInstantReplay");

	Params::PlayerContext_GetAutoPlayInstantReplay Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BlueprintContext.PlayerContext.GetContinuousMusic
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UPlayerContext::GetContinuousMusic() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerContext", "GetContinuousMusic");

	Params::PlayerContext_GetContinuousMusic Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BlueprintContext.PlayerContext.GetDisplayCardOverLocalPlayer
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UPlayerContext::GetDisplayCardOverLocalPlayer() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerContext", "GetDisplayCardOverLocalPlayer");

	Params::PlayerContext_GetDisplayCardOverLocalPlayer Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BlueprintContext.PlayerContext.GetEnableDeathcam
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UPlayerContext::GetEnableDeathcam() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerContext", "GetEnableDeathcam");

	Params::PlayerContext_GetEnableDeathcam Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BlueprintContext.PlayerContext.GetEngineGammaValue
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UPlayerContext::GetEngineGammaValue() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerContext", "GetEngineGammaValue");

	Params::PlayerContext_GetEngineGammaValue Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BlueprintContext.PlayerContext.GetGamepadAbilityConfirmOnRelease
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UPlayerContext::GetGamepadAbilityConfirmOnRelease() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerContext", "GetGamepadAbilityConfirmOnRelease");

	Params::PlayerContext_GetGamepadAbilityConfirmOnRelease Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BlueprintContext.PlayerContext.GetGamepadConfigIndex
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UPlayerContext::GetGamepadConfigIndex() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerContext", "GetGamepadConfigIndex");

	Params::PlayerContext_GetGamepadConfigIndex Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BlueprintContext.PlayerContext.GetGamepadHandednessConfigIndex
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UPlayerContext::GetGamepadHandednessConfigIndex() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerContext", "GetGamepadHandednessConfigIndex");

	Params::PlayerContext_GetGamepadHandednessConfigIndex Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BlueprintContext.PlayerContext.GetGamepadInvertPitch
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UPlayerContext::GetGamepadInvertPitch() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerContext", "GetGamepadInvertPitch");

	Params::PlayerContext_GetGamepadInvertPitch Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BlueprintContext.PlayerContext.GetGamepadInvertYaw
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UPlayerContext::GetGamepadInvertYaw() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerContext", "GetGamepadInvertYaw");

	Params::PlayerContext_GetGamepadInvertYaw Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BlueprintContext.PlayerContext.GetGamepadPitchSensitivity
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UPlayerContext::GetGamepadPitchSensitivity() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerContext", "GetGamepadPitchSensitivity");

	Params::PlayerContext_GetGamepadPitchSensitivity Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BlueprintContext.PlayerContext.GetGamepadRadialSelectEnabled
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UPlayerContext::GetGamepadRadialSelectEnabled() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerContext", "GetGamepadRadialSelectEnabled");

	Params::PlayerContext_GetGamepadRadialSelectEnabled Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BlueprintContext.PlayerContext.GetGamepadYawSensitivity
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UPlayerContext::GetGamepadYawSensitivity() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerContext", "GetGamepadYawSensitivity");

	Params::PlayerContext_GetGamepadYawSensitivity Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BlueprintContext.PlayerContext.GetHealthBarOverhead
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UPlayerContext::GetHealthBarOverhead() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerContext", "GetHealthBarOverhead");

	Params::PlayerContext_GetHealthBarOverhead Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BlueprintContext.PlayerContext.GetInvertedMouse
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UPlayerContext::GetInvertedMouse() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerContext", "GetInvertedMouse");

	Params::PlayerContext_GetInvertedMouse Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BlueprintContext.PlayerContext.GetMasterGameVolume
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UPlayerContext::GetMasterGameVolume() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerContext", "GetMasterGameVolume");

	Params::PlayerContext_GetMasterGameVolume Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BlueprintContext.PlayerContext.GetMinorCanPlayAtTime
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FDateTime                        ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FDateTime UPlayerContext::GetMinorCanPlayAtTime() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerContext", "GetMinorCanPlayAtTime");

	Params::PlayerContext_GetMinorCanPlayAtTime Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BlueprintContext.PlayerContext.GetMinorShutDownAtTime
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FDateTime                        ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FDateTime UPlayerContext::GetMinorShutDownAtTime() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerContext", "GetMinorShutDownAtTime");

	Params::PlayerContext_GetMinorShutDownAtTime Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BlueprintContext.PlayerContext.GetMouseLookSensitivity
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UPlayerContext::GetMouseLookSensitivity() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerContext", "GetMouseLookSensitivity");

	Params::PlayerContext_GetMouseLookSensitivity Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BlueprintContext.PlayerContext.GetMusicGameVolume
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UPlayerContext::GetMusicGameVolume() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerContext", "GetMusicGameVolume");

	Params::PlayerContext_GetMusicGameVolume Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BlueprintContext.PlayerContext.GetName
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

class FText UPlayerContext::GetName() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerContext", "GetName");

	Params::PlayerContext_GetName Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BlueprintContext.PlayerContext.GetNewDawnGamesPlayed
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UPlayerContext::GetNewDawnGamesPlayed() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerContext", "GetNewDawnGamesPlayed");

	Params::PlayerContext_GetNewDawnGamesPlayed Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BlueprintContext.PlayerContext.GetOtherGameVolume
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UPlayerContext::GetOtherGameVolume() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerContext", "GetOtherGameVolume");

	Params::PlayerContext_GetOtherGameVolume Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BlueprintContext.PlayerContext.GetPlayerLoginTime
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FDateTime                        ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FDateTime UPlayerContext::GetPlayerLoginTime() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerContext", "GetPlayerLoginTime");

	Params::PlayerContext_GetPlayerLoginTime Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BlueprintContext.PlayerContext.GetShowAbilityConfirmWidget
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UPlayerContext::GetShowAbilityConfirmWidget() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerContext", "GetShowAbilityConfirmWidget");

	Params::PlayerContext_GetShowAbilityConfirmWidget Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BlueprintContext.PlayerContext.GetShowAddedItemsInChat
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UPlayerContext::GetShowAddedItemsInChat() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerContext", "GetShowAddedItemsInChat");

	Params::PlayerContext_GetShowAddedItemsInChat Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BlueprintContext.PlayerContext.GetShowBasicAttackRangeIndicator
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UPlayerContext::GetShowBasicAttackRangeIndicator() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerContext", "GetShowBasicAttackRangeIndicator");

	Params::PlayerContext_GetShowBasicAttackRangeIndicator Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BlueprintContext.PlayerContext.GetShowCompletedItemsInChat
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UPlayerContext::GetShowCompletedItemsInChat() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerContext", "GetShowCompletedItemsInChat");

	Params::PlayerContext_GetShowCompletedItemsInChat Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BlueprintContext.PlayerContext.GetShowDiscardedItemsInChat
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UPlayerContext::GetShowDiscardedItemsInChat() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerContext", "GetShowDiscardedItemsInChat");

	Params::PlayerContext_GetShowDiscardedItemsInChat Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BlueprintContext.PlayerContext.GetShowPingAndFPSOnHUD
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UPlayerContext::GetShowPingAndFPSOnHUD() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerContext", "GetShowPingAndFPSOnHUD");

	Params::PlayerContext_GetShowPingAndFPSOnHUD Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BlueprintContext.PlayerContext.GetShowXPPerMinOnHUD
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UPlayerContext::GetShowXPPerMinOnHUD() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerContext", "GetShowXPPerMinOnHUD");

	Params::PlayerContext_GetShowXPPerMinOnHUD Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BlueprintContext.PlayerContext.GetThemeMusic
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UPlayerContext::GetThemeMusic() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerContext", "GetThemeMusic");

	Params::PlayerContext_GetThemeMusic Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BlueprintContext.PlayerContext.GetVoiceGameVolume
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UPlayerContext::GetVoiceGameVolume() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerContext", "GetVoiceGameVolume");

	Params::PlayerContext_GetVoiceGameVolume Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BlueprintContext.PlayerContext.SliderToGamma
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   SliderPosition                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UPlayerContext::SliderToGamma(float SliderPosition) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerContext", "SliderToGamma");

	Params::PlayerContext_SliderToGamma Parms{};

	Parms.SliderPosition = SliderPosition;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BlueprintContext.ReticleContext.AddReticle
// (Final, BlueprintCosmetic, Native, Public, BlueprintCallable)
// Parameters:
// class UOrionAbilitySystemComponent*     AbilityComp                                            (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UOrionAbility*                    Ability                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TSubclassOf<class UOrionUserWidget_Reticle>OptionalReticleClass                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UReticleContext::AddReticle(class UOrionAbilitySystemComponent* AbilityComp, const class UOrionAbility* Ability, TSubclassOf<class UOrionUserWidget_Reticle> OptionalReticleClass)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ReticleContext", "AddReticle");

	Params::ReticleContext_AddReticle Parms{};

	Parms.AbilityComp = AbilityComp;
	Parms.Ability = Ability;
	Parms.OptionalReticleClass = OptionalReticleClass;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BlueprintContext.ReticleContext.HideReticle
// (Final, BlueprintCosmetic, Native, Public, BlueprintCallable)
// Parameters:
// class UOrionAbility*                    Ability                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UReticleContext::HideReticle(const class UOrionAbility* Ability)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ReticleContext", "HideReticle");

	Params::ReticleContext_HideReticle Parms{};

	Parms.Ability = Ability;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// DelegateFunction BlueprintContext.ReticleContext.OnActivelyTargeting__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// bool                                    CurrentlyTargeting                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UReticleContext::OnActivelyTargeting__DelegateSignature(bool CurrentlyTargeting)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ReticleContext", "OnActivelyTargeting__DelegateSignature");

	Params::ReticleContext_OnActivelyTargeting__DelegateSignature Parms{};

	Parms.CurrentlyTargeting = CurrentlyTargeting;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BlueprintContext.ReticleContext.OnSuccessfulHit
// (Final, BlueprintCosmetic, Native, Public, BlueprintCallable)
// Parameters:
// class AActor*                           TargetActor                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           Instigator                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UReticleContext::OnSuccessfulHit(const class AActor* TargetActor, const class AActor* Instigator)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ReticleContext", "OnSuccessfulHit");

	Params::ReticleContext_OnSuccessfulHit Parms{};

	Parms.TargetActor = TargetActor;
	Parms.Instigator = Instigator;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// DelegateFunction BlueprintContext.ReticleContext.OnSuccessfulHit__DelegateSignature
// (MulticastDelegate, Public, Delegate)

void UReticleContext::OnSuccessfulHit__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ReticleContext", "OnSuccessfulHit__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BlueprintContext.ReticleContext.SetDefaultReticle
// (Final, BlueprintCosmetic, Native, Public, BlueprintCallable)
// Parameters:
// class UOrionUserWidget_Reticle*         NewDefaultReticle                                      (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UReticleContext::SetDefaultReticle(class UOrionUserWidget_Reticle* NewDefaultReticle)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ReticleContext", "SetDefaultReticle");

	Params::ReticleContext_SetDefaultReticle Parms{};

	Parms.NewDefaultReticle = NewDefaultReticle;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BlueprintContext.ReticleContext.ShowReticle
// (Final, BlueprintCosmetic, Native, Public, BlueprintCallable)
// Parameters:
// class UOrionAbility*                    Ability                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UReticleContext::ShowReticle(const class UOrionAbility* Ability)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ReticleContext", "ShowReticle");

	Params::ReticleContext_ShowReticle Parms{};

	Parms.Ability = Ability;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BlueprintContext.ReticleContext.GetHideCount
// (Final, BlueprintCosmetic, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UReticleContext::GetHideCount() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ReticleContext", "GetHideCount");

	Params::ReticleContext_GetHideCount Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BlueprintContext.ReticleContext.GetReticleClass
// (Final, BlueprintCosmetic, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TSubclassOf<class UOrionUserWidget_Reticle>ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

TSubclassOf<class UOrionUserWidget_Reticle> UReticleContext::GetReticleClass() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ReticleContext", "GetReticleClass");

	Params::ReticleContext_GetReticleClass Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BlueprintContext.ReticleContext.GetReticleWidget
// (Final, BlueprintCosmetic, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UOrionAbility*                    Ability                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UOrionUserWidget_Reticle*         ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UOrionUserWidget_Reticle* UReticleContext::GetReticleWidget(const class UOrionAbility* Ability) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ReticleContext", "GetReticleWidget");

	Params::ReticleContext_GetReticleWidget Parms{};

	Parms.Ability = Ability;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BlueprintContext.ReticleContext.IsActivelyTargetingAnyActor
// (Final, BlueprintCosmetic, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UReticleContext::IsActivelyTargetingAnyActor() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ReticleContext", "IsActivelyTargetingAnyActor");

	Params::ReticleContext_IsActivelyTargetingAnyActor Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BlueprintContext.ReticleContext.IsReticleHidden
// (Final, BlueprintCosmetic, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UReticleContext::IsReticleHidden() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ReticleContext", "IsReticleHidden");

	Params::ReticleContext_IsReticleHidden Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BlueprintContext.ReticleContext.IsUsingUMGReticle
// (Final, BlueprintCosmetic, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UReticleContext::IsUsingUMGReticle() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ReticleContext", "IsUsingUMGReticle");

	Params::ReticleContext_IsUsingUMGReticle Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BlueprintContext.ScoreboardContext.ForceUpdateAllEntries
// (Final, Native, Public, BlueprintCallable)

void UScoreboardContext::ForceUpdateAllEntries()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ScoreboardContext", "ForceUpdateAllEntries");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BlueprintContext.ScoreboardContext.GetCurrentMatchTime
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UScoreboardContext::GetCurrentMatchTime() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ScoreboardContext", "GetCurrentMatchTime");

	Params::ScoreboardContext_GetCurrentMatchTime Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BlueprintContext.ScoreboardContext.GetEnemyTeam
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EOrionTeam                              ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EOrionTeam UScoreboardContext::GetEnemyTeam() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ScoreboardContext", "GetEnemyTeam");

	Params::ScoreboardContext_GetEnemyTeam Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BlueprintContext.ScoreboardContext.GetLocalPlayerScoreboardEntry
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FOrionScoreboardPlayerEntryInfo  ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FOrionScoreboardPlayerEntryInfo UScoreboardContext::GetLocalPlayerScoreboardEntry() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ScoreboardContext", "GetLocalPlayerScoreboardEntry");

	Params::ScoreboardContext_GetLocalPlayerScoreboardEntry Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BlueprintContext.ScoreboardContext.GetLocalPlayerUIID
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FOrionPlayerStateUIID            ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FOrionPlayerStateUIID UScoreboardContext::GetLocalPlayerUIID() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ScoreboardContext", "GetLocalPlayerUIID");

	Params::ScoreboardContext_GetLocalPlayerUIID Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BlueprintContext.ScoreboardContext.GetMyTeam
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EOrionTeam                              ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EOrionTeam UScoreboardContext::GetMyTeam() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ScoreboardContext", "GetMyTeam");

	Params::ScoreboardContext_GetMyTeam Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BlueprintContext.ScoreboardContext.GetScoreboardPlayerEntry
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EOrionTeam                              TeamNum                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   PlayerIndex                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FOrionScoreboardPlayerEntryInfo  ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FOrionScoreboardPlayerEntryInfo UScoreboardContext::GetScoreboardPlayerEntry(EOrionTeam TeamNum, int32 PlayerIndex) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ScoreboardContext", "GetScoreboardPlayerEntry");

	Params::ScoreboardContext_GetScoreboardPlayerEntry Parms{};

	Parms.TeamNum = TeamNum;
	Parms.PlayerIndex = PlayerIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BlueprintContext.ScoreboardContext.GetScoreboardPlayerEntryFromUIID
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FOrionPlayerStateUIID            PlayerStateUIID                                        (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// struct FOrionScoreboardPlayerEntryInfo  ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FOrionScoreboardPlayerEntryInfo UScoreboardContext::GetScoreboardPlayerEntryFromUIID(const struct FOrionPlayerStateUIID& PlayerStateUIID) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ScoreboardContext", "GetScoreboardPlayerEntryFromUIID");

	Params::ScoreboardContext_GetScoreboardPlayerEntryFromUIID Parms{};

	Parms.PlayerStateUIID = std::move(PlayerStateUIID);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BlueprintContext.ScoreboardContext.GetScoreboardTeamEntry
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EOrionTeam                              TeamNum                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FOrionScoreboardTeamEntryInfo    ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)

struct FOrionScoreboardTeamEntryInfo UScoreboardContext::GetScoreboardTeamEntry(EOrionTeam TeamNum) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ScoreboardContext", "GetScoreboardTeamEntry");

	Params::ScoreboardContext_GetScoreboardTeamEntry Parms{};

	Parms.TeamNum = TeamNum;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BlueprintContext.ScoreboardContext.IsSpectatorScoreboard
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UScoreboardContext::IsSpectatorScoreboard() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ScoreboardContext", "IsSpectatorScoreboard");

	Params::ScoreboardContext_IsSpectatorScoreboard Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BlueprintContext.SpectatorHUDContext.GetCurrentMatchTime
// (Native, Public, BlueprintCallable)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float USpectatorHUDContext::GetCurrentMatchTime()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SpectatorHUDContext", "GetCurrentMatchTime");

	Params::SpectatorHUDContext_GetCurrentMatchTime Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// DelegateFunction BlueprintContext.SpectatorHUDContext.OnAnselEvent__DelegateSignature
// (MulticastDelegate, Public, Delegate)

void USpectatorHUDContext::OnAnselEvent__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SpectatorHUDContext", "OnAnselEvent__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// DelegateFunction BlueprintContext.SpectatorHUDContext.OnPlayerInfoUpdateDelegate__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// EOrionTeam                              TeamNum                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   PlayerIndex                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FOrionSpectatorHUDPlayerInfo     NewPlayerInfo                                          (Parm, NativeAccessSpecifierPublic)

void USpectatorHUDContext::OnPlayerInfoUpdateDelegate__DelegateSignature(EOrionTeam TeamNum, int32 PlayerIndex, const struct FOrionSpectatorHUDPlayerInfo& NewPlayerInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SpectatorHUDContext", "OnPlayerInfoUpdateDelegate__DelegateSignature");

	Params::SpectatorHUDContext_OnPlayerInfoUpdateDelegate__DelegateSignature Parms{};

	Parms.TeamNum = TeamNum;
	Parms.PlayerIndex = PlayerIndex;
	Parms.NewPlayerInfo = std::move(NewPlayerInfo);

	UObject::ProcessEvent(Func, &Parms);
}


// DelegateFunction BlueprintContext.SpectatorHUDContext.OnSetHudVisibility__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// bool                                    bMainVisible                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bIndicatorsVisible                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USpectatorHUDContext::OnSetHudVisibility__DelegateSignature(bool bMainVisible, bool bIndicatorsVisible)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SpectatorHUDContext", "OnSetHudVisibility__DelegateSignature");

	Params::SpectatorHUDContext_OnSetHudVisibility__DelegateSignature Parms{};

	Parms.bMainVisible = bMainVisible;
	Parms.bIndicatorsVisible = bIndicatorsVisible;

	UObject::ProcessEvent(Func, &Parms);
}


// DelegateFunction BlueprintContext.SpectatorHUDContext.OnSpectatorCameraModeChange__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// ESpectatorCameraType                    NewCameraMode                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USpectatorHUDContext::OnSpectatorCameraModeChange__DelegateSignature(ESpectatorCameraType NewCameraMode)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SpectatorHUDContext", "OnSpectatorCameraModeChange__DelegateSignature");

	Params::SpectatorHUDContext_OnSpectatorCameraModeChange__DelegateSignature Parms{};

	Parms.NewCameraMode = NewCameraMode;

	UObject::ProcessEvent(Func, &Parms);
}


// DelegateFunction BlueprintContext.SpectatorHUDContext.OnSpectatorToggleControllerCursor__DelegateSignature
// (MulticastDelegate, Public, Delegate)

void USpectatorHUDContext::OnSpectatorToggleControllerCursor__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SpectatorHUDContext", "OnSpectatorToggleControllerCursor__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// DelegateFunction BlueprintContext.SpectatorHUDContext.OnSpectatorWatchedHeroChange__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// EOrionTeam                              HeroTeam                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   HeroIndex                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USpectatorHUDContext::OnSpectatorWatchedHeroChange__DelegateSignature(EOrionTeam HeroTeam, int32 HeroIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SpectatorHUDContext", "OnSpectatorWatchedHeroChange__DelegateSignature");

	Params::SpectatorHUDContext_OnSpectatorWatchedHeroChange__DelegateSignature Parms{};

	Parms.HeroTeam = HeroTeam;
	Parms.HeroIndex = HeroIndex;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BlueprintContext.SpectatorHUDContext.GetEnemyTeam
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EOrionTeam                              ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EOrionTeam USpectatorHUDContext::GetEnemyTeam() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SpectatorHUDContext", "GetEnemyTeam");

	Params::SpectatorHUDContext_GetEnemyTeam Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BlueprintContext.SpectatorHUDContext.GetHUDPlayerInfo
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const struct FOrionBaseHUDPlayerInfo    ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)

const struct FOrionBaseHUDPlayerInfo USpectatorHUDContext::GetHUDPlayerInfo() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SpectatorHUDContext", "GetHUDPlayerInfo");

	Params::SpectatorHUDContext_GetHUDPlayerInfo Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BlueprintContext.SpectatorHUDContext.GetMyTeam
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EOrionTeam                              ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EOrionTeam USpectatorHUDContext::GetMyTeam() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SpectatorHUDContext", "GetMyTeam");

	Params::SpectatorHUDContext_GetMyTeam Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BlueprintContext.SpectatorHUDContext.GetSpectatorHUDPlayerInfo
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EOrionTeam                              Team                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Index_0                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FOrionSpectatorHUDPlayerInfo     ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FOrionSpectatorHUDPlayerInfo USpectatorHUDContext::GetSpectatorHUDPlayerInfo(EOrionTeam Team, int32 Index_0) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SpectatorHUDContext", "GetSpectatorHUDPlayerInfo");

	Params::SpectatorHUDContext_GetSpectatorHUDPlayerInfo Parms{};

	Parms.Team = Team;
	Parms.Index_0 = Index_0;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BlueprintContext.StoreContext.CancelEpicPurchasingDisplay
// (Final, Native, Public, BlueprintCallable)

void UStoreContext::CancelEpicPurchasingDisplay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("StoreContext", "CancelEpicPurchasingDisplay");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BlueprintContext.StoreContext.CheckForStuff
// (Final, Native, Public, BlueprintCallable)

void UStoreContext::CheckForStuff()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("StoreContext", "CheckForStuff");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BlueprintContext.StoreContext.FlushStoreCatalogCache
// (Final, Native, Public, BlueprintCallable)

void UStoreContext::FlushStoreCatalogCache()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("StoreContext", "FlushStoreCatalogCache");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// DelegateFunction BlueprintContext.StoreContext.OnEpicPurchasingWidgetDismissed__DelegateSignature
// (Public, Delegate)

void UStoreContext::OnEpicPurchasingWidgetDismissed__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("StoreContext", "OnEpicPurchasingWidgetDismissed__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// DelegateFunction BlueprintContext.StoreContext.OnEpicPurchasingWidgetDisplay__DelegateSignature
// (Public, Delegate)
// Parameters:
// class UWidget*                          WebWidget                                              (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           OfferId                                                (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UStoreContext::OnEpicPurchasingWidgetDisplay__DelegateSignature(class UWidget* WebWidget, const class FString& OfferId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("StoreContext", "OnEpicPurchasingWidgetDisplay__DelegateSignature");

	Params::StoreContext_OnEpicPurchasingWidgetDisplay__DelegateSignature Parms{};

	Parms.WebWidget = WebWidget;
	Parms.OfferId = std::move(OfferId);

	UObject::ProcessEvent(Func, &Parms);
}


// DelegateFunction BlueprintContext.StoreContext.OnOrionCatalogChanged__DelegateSignature
// (MulticastDelegate, Public, Delegate)

void UStoreContext::OnOrionCatalogChanged__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("StoreContext", "OnOrionCatalogChanged__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// DelegateFunction BlueprintContext.StoreContext.OnPlatformStoreClosed__DelegateSignature
// (Public, Delegate)
// Parameters:
// bool                                    bPurchased                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UStoreContext::OnPlatformStoreClosed__DelegateSignature(bool bPurchased)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("StoreContext", "OnPlatformStoreClosed__DelegateSignature");

	Params::StoreContext_OnPlatformStoreClosed__DelegateSignature Parms{};

	Parms.bPurchased = bPurchased;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BlueprintContext.StoreContext.RegisterForEpicPurchasingDisplay
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TDelegate<void(class UWidget* WebWidget, const class FString& OfferId)>DisplayCallback                                        (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// TDelegate<void()>                       DismissCallback                                        (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void UStoreContext::RegisterForEpicPurchasingDisplay(const TDelegate<void(class UWidget* WebWidget, const class FString& OfferId)>& DisplayCallback, const TDelegate<void()>& DismissCallback)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("StoreContext", "RegisterForEpicPurchasingDisplay");

	Params::StoreContext_RegisterForEpicPurchasingDisplay Parms{};

	Parms.DisplayCallback = DisplayCallback;
	Parms.DismissCallback = DismissCallback;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BlueprintContext.StoreContext.ReportEnterRealMoneyStore
// (Final, Native, Public, BlueprintCallable)

void UStoreContext::ReportEnterRealMoneyStore()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("StoreContext", "ReportEnterRealMoneyStore");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BlueprintContext.StoreContext.ReportExitRealMoneyStore
// (Final, Native, Public, BlueprintCallable)

void UStoreContext::ReportExitRealMoneyStore()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("StoreContext", "ReportExitRealMoneyStore");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BlueprintContext.StoreContext.ReportNoOffersAvailable
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UStoreContext::ReportNoOffersAvailable()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("StoreContext", "ReportNoOffersAvailable");

	Params::StoreContext_ReportNoOffersAvailable Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BlueprintContext.StoreContext.ShowPlatformStore
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class FString                           Category                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TDelegate<void(bool bPurchased)>        OnClosedDelegate                                       (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void UStoreContext::ShowPlatformStore(const class FString& Category, const TDelegate<void(bool bPurchased)>& OnClosedDelegate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("StoreContext", "ShowPlatformStore");

	Params::StoreContext_ShowPlatformStore Parms{};

	Parms.Category = std::move(Category);
	Parms.OnClosedDelegate = OnClosedDelegate;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BlueprintContext.StoreContext.ToggleCurrencyUpdate
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bBroadcastCurrencyChange                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UStoreContext::ToggleCurrencyUpdate(bool bBroadcastCurrencyChange)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("StoreContext", "ToggleCurrencyUpdate");

	Params::StoreContext_ToggleCurrencyUpdate Parms{};

	Parms.bBroadcastCurrencyChange = bBroadcastCurrencyChange;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BlueprintContext.StoreContext.BP_GetBannerOffer
// (Final, Native, Public, HasOutParams, BlueprintCallable, Const)
// Parameters:
// class UOrionMcpBannerItemDefinition*    Banner                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FStoreOfferBP                    BannerOffer                                            (Parm, OutParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UStoreContext::BP_GetBannerOffer(class UOrionMcpBannerItemDefinition* Banner, struct FStoreOfferBP* BannerOffer) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("StoreContext", "BP_GetBannerOffer");

	Params::StoreContext_BP_GetBannerOffer Parms{};

	Parms.Banner = Banner;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (BannerOffer != nullptr)
		*BannerOffer = std::move(Parms.BannerOffer);

	return Parms.ReturnValue;
}


// Function BlueprintContext.StoreContext.BP_GetSkinOffer
// (Final, Native, Public, HasOutParams, BlueprintCallable, Const)
// Parameters:
// class UOrionSkinItemDefinition*         Skin                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FStoreOfferBP                    SkinOffer                                              (Parm, OutParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UStoreContext::BP_GetSkinOffer(class UOrionSkinItemDefinition* Skin, struct FStoreOfferBP* SkinOffer) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("StoreContext", "BP_GetSkinOffer");

	Params::StoreContext_BP_GetSkinOffer Parms{};

	Parms.Skin = Skin;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (SkinOffer != nullptr)
		*SkinOffer = std::move(Parms.SkinOffer);

	return Parms.ReturnValue;
}


// Function BlueprintContext.StoreContext.CanAfford
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FOrionStorePrice                 Price                                                  (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// int32                                   Quantity                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UStoreContext::CanAfford(const struct FOrionStorePrice& Price, int32 Quantity) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("StoreContext", "CanAfford");

	Params::StoreContext_CanAfford Parms{};

	Parms.Price = std::move(Price);
	Parms.Quantity = Quantity;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BlueprintContext.StoreContext.GetBannerOffers
// (Final, Native, Public, HasOutParams, BlueprintCallable, Const)
// Parameters:
// TArray<struct FStoreOfferBP>            BannerOffers                                           (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void UStoreContext::GetBannerOffers(TArray<struct FStoreOfferBP>* BannerOffers) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("StoreContext", "GetBannerOffers");

	Params::StoreContext_GetBannerOffers Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (BannerOffers != nullptr)
		*BannerOffers = std::move(Parms.BannerOffers);
}


// Function BlueprintContext.StoreContext.GetBoostOffers
// (Final, Native, Public, HasOutParams, BlueprintCallable, Const)
// Parameters:
// TArray<struct FStoreOfferBP>            BoostOffers                                            (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
// bool                                    bShowIneligibleOffers                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UStoreContext::GetBoostOffers(TArray<struct FStoreOfferBP>* BoostOffers, bool bShowIneligibleOffers) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("StoreContext", "GetBoostOffers");

	Params::StoreContext_GetBoostOffers Parms{};

	Parms.bShowIneligibleOffers = bShowIneligibleOffers;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (BoostOffers != nullptr)
		*BoostOffers = std::move(Parms.BoostOffers);
}


// Function BlueprintContext.StoreContext.GetBundleByTag
// (Final, Native, Public, HasOutParams, BlueprintCallable, Const)
// Parameters:
// class FString                           BundleTag                                              (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FStoreOfferBP                    StoreOffer                                             (Parm, OutParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UStoreContext::GetBundleByTag(const class FString& BundleTag, struct FStoreOfferBP* StoreOffer) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("StoreContext", "GetBundleByTag");

	Params::StoreContext_GetBundleByTag Parms{};

	Parms.BundleTag = std::move(BundleTag);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (StoreOffer != nullptr)
		*StoreOffer = std::move(Parms.StoreOffer);

	return Parms.ReturnValue;
}


// Function BlueprintContext.StoreContext.GetBundleForHero
// (Final, Native, Public, HasOutParams, BlueprintCallable, Const)
// Parameters:
// class UOrionHeroData*                   Hero                                                   (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           BundleTag                                              (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FStoreOfferBP                    StoreOffer                                             (Parm, OutParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UStoreContext::GetBundleForHero(const class UOrionHeroData* Hero, const class FString& BundleTag, struct FStoreOfferBP* StoreOffer) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("StoreContext", "GetBundleForHero");

	Params::StoreContext_GetBundleForHero Parms{};

	Parms.Hero = Hero;
	Parms.BundleTag = std::move(BundleTag);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (StoreOffer != nullptr)
		*StoreOffer = std::move(Parms.StoreOffer);

	return Parms.ReturnValue;
}


// Function BlueprintContext.StoreContext.GetBundleOffers
// (Final, Native, Public, HasOutParams, BlueprintCallable, Const)
// Parameters:
// TArray<struct FStoreOfferBP>            BundleOffers                                           (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
// bool                                    bShowIneligibleOffers                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UStoreContext::GetBundleOffers(TArray<struct FStoreOfferBP>* BundleOffers, bool bShowIneligibleOffers) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("StoreContext", "GetBundleOffers");

	Params::StoreContext_GetBundleOffers Parms{};

	Parms.bShowIneligibleOffers = bShowIneligibleOffers;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (BundleOffers != nullptr)
		*BundleOffers = std::move(Parms.BundleOffers);
}


// Function BlueprintContext.StoreContext.GetCardpackOffers
// (Final, Native, Public, HasOutParams, BlueprintCallable, Const)
// Parameters:
// TArray<struct FStoreOfferBP>            CardpackOffers                                         (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
// bool                                    bShowIneligibleOffers                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UStoreContext::GetCardpackOffers(TArray<struct FStoreOfferBP>* CardpackOffers, bool bShowIneligibleOffers) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("StoreContext", "GetCardpackOffers");

	Params::StoreContext_GetCardpackOffers Parms{};

	Parms.bShowIneligibleOffers = bShowIneligibleOffers;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (CardpackOffers != nullptr)
		*CardpackOffers = std::move(Parms.CardpackOffers);
}


// Function BlueprintContext.StoreContext.GetCrateOffers
// (Final, Native, Public, HasOutParams, BlueprintCallable, Const)
// Parameters:
// TArray<struct FStoreOfferBP>            CrateOffers                                            (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
// bool                                    bShowIneligibleOffers                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UStoreContext::GetCrateOffers(TArray<struct FStoreOfferBP>* CrateOffers, bool bShowIneligibleOffers) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("StoreContext", "GetCrateOffers");

	Params::StoreContext_GetCrateOffers Parms{};

	Parms.bShowIneligibleOffers = bShowIneligibleOffers;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (CrateOffers != nullptr)
		*CrateOffers = std::move(Parms.CrateOffers);
}


// Function BlueprintContext.StoreContext.GetCurrencyBalance
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EOrionCurrencyType                      Type                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UStoreContext::GetCurrencyBalance(EOrionCurrencyType Type) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("StoreContext", "GetCurrencyBalance");

	Params::StoreContext_GetCurrencyBalance Parms{};

	Parms.Type = Type;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BlueprintContext.StoreContext.GetDailyRewardInfo
// (Final, Native, Public, HasOutParams, BlueprintCallable, Const)
// Parameters:
// TArray<struct FOrionDailyRewardInfo>    UpcomingRewards                                        (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UStoreContext::GetDailyRewardInfo(TArray<struct FOrionDailyRewardInfo>* UpcomingRewards) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("StoreContext", "GetDailyRewardInfo");

	Params::StoreContext_GetDailyRewardInfo Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (UpcomingRewards != nullptr)
		*UpcomingRewards = std::move(Parms.UpcomingRewards);

	return Parms.ReturnValue;
}


// Function BlueprintContext.StoreContext.GetDeckOffers
// (Final, Native, Public, HasOutParams, BlueprintCallable, Const)
// Parameters:
// TArray<struct FStoreOfferBP>            DeckOffers                                             (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
// bool                                    bShowIneligibleOffers                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UStoreContext::GetDeckOffers(TArray<struct FStoreOfferBP>* DeckOffers, bool bShowIneligibleOffers) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("StoreContext", "GetDeckOffers");

	Params::StoreContext_GetDeckOffers Parms{};

	Parms.bShowIneligibleOffers = bShowIneligibleOffers;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (DeckOffers != nullptr)
		*DeckOffers = std::move(Parms.DeckOffers);
}


// Function BlueprintContext.StoreContext.GetEmoteOffers
// (Final, Native, Public, HasOutParams, BlueprintCallable, Const)
// Parameters:
// TArray<struct FStoreOfferBP>            EmoteOffers                                            (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
// bool                                    bShowIneligibleOffers                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UStoreContext::GetEmoteOffers(TArray<struct FStoreOfferBP>* EmoteOffers, bool bShowIneligibleOffers) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("StoreContext", "GetEmoteOffers");

	Params::StoreContext_GetEmoteOffers Parms{};

	Parms.bShowIneligibleOffers = bShowIneligibleOffers;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (EmoteOffers != nullptr)
		*EmoteOffers = std::move(Parms.EmoteOffers);
}


// Function BlueprintContext.StoreContext.GetFounderOffers
// (Final, Native, Public, HasOutParams, BlueprintCallable, Const)
// Parameters:
// TArray<struct FStoreOfferBP>            FounderOffers                                          (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void UStoreContext::GetFounderOffers(TArray<struct FStoreOfferBP>* FounderOffers) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("StoreContext", "GetFounderOffers");

	Params::StoreContext_GetFounderOffers Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (FounderOffers != nullptr)
		*FounderOffers = std::move(Parms.FounderOffers);
}


// Function BlueprintContext.StoreContext.GetHeroOffer
// (Final, Native, Public, HasOutParams, BlueprintCallable, Const)
// Parameters:
// class FString                           HeroPersistentName                                     (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FStoreOfferBP                    HeroOffer                                              (Parm, OutParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UStoreContext::GetHeroOffer(const class FString& HeroPersistentName, struct FStoreOfferBP* HeroOffer) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("StoreContext", "GetHeroOffer");

	Params::StoreContext_GetHeroOffer Parms{};

	Parms.HeroPersistentName = std::move(HeroPersistentName);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (HeroOffer != nullptr)
		*HeroOffer = std::move(Parms.HeroOffer);

	return Parms.ReturnValue;
}


// Function BlueprintContext.StoreContext.GetHeroOffers
// (Final, Native, Public, HasOutParams, BlueprintCallable, Const)
// Parameters:
// TArray<struct FStoreOfferBP>            HeroOffers                                             (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
// bool                                    bShowIneligibleOffers                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UStoreContext::GetHeroOffers(TArray<struct FStoreOfferBP>* HeroOffers, bool bShowIneligibleOffers) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("StoreContext", "GetHeroOffers");

	Params::StoreContext_GetHeroOffers Parms{};

	Parms.bShowIneligibleOffers = bShowIneligibleOffers;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (HeroOffers != nullptr)
		*HeroOffers = std::move(Parms.HeroOffers);
}


// Function BlueprintContext.StoreContext.GetMtxCurrency
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UStoreContext::GetMtxCurrency() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("StoreContext", "GetMtxCurrency");

	Params::StoreContext_GetMtxCurrency Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BlueprintContext.StoreContext.GetMtxOffers
// (Final, Native, Public, HasOutParams, BlueprintCallable, Const)
// Parameters:
// TArray<struct FStoreOfferBP>            MtxOffers                                              (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
// bool                                    bShowIneligibleOffers                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UStoreContext::GetMtxOffers(TArray<struct FStoreOfferBP>* MtxOffers, bool bShowIneligibleOffers) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("StoreContext", "GetMtxOffers");

	Params::StoreContext_GetMtxOffers Parms{};

	Parms.bShowIneligibleOffers = bShowIneligibleOffers;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (MtxOffers != nullptr)
		*MtxOffers = std::move(Parms.MtxOffers);
}


// Function BlueprintContext.StoreContext.GetOffer
// (Final, Native, Public, HasOutParams, BlueprintCallable, Const)
// Parameters:
// class UOrionMcpItemDefinition*          ItemDefinition                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FStoreOfferBP                    StoreOffer                                             (Parm, OutParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UStoreContext::GetOffer(const class UOrionMcpItemDefinition* ItemDefinition, struct FStoreOfferBP* StoreOffer) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("StoreContext", "GetOffer");

	Params::StoreContext_GetOffer Parms{};

	Parms.ItemDefinition = ItemDefinition;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (StoreOffer != nullptr)
		*StoreOffer = std::move(Parms.StoreOffer);

	return Parms.ReturnValue;
}


// Function BlueprintContext.StoreContext.GetSkinOffers
// (Final, Native, Public, HasOutParams, BlueprintCallable, Const)
// Parameters:
// TArray<struct FStoreOfferBP>            SkinOffers                                             (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
// bool                                    bShowIneligibleOffers                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UStoreContext::GetSkinOffers(TArray<struct FStoreOfferBP>* SkinOffers, bool bShowIneligibleOffers) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("StoreContext", "GetSkinOffers");

	Params::StoreContext_GetSkinOffers Parms{};

	Parms.bShowIneligibleOffers = bShowIneligibleOffers;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (SkinOffers != nullptr)
		*SkinOffers = std::move(Parms.SkinOffers);
}


// Function BlueprintContext.StoreContext.GetTimeCurrency
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UStoreContext::GetTimeCurrency() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("StoreContext", "GetTimeCurrency");

	Params::StoreContext_GetTimeCurrency Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BlueprintContext.StoreContext.GetTimeUntilNextDailyReward
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FTimespan                        ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FTimespan UStoreContext::GetTimeUntilNextDailyReward() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("StoreContext", "GetTimeUntilNextDailyReward");

	Params::StoreContext_GetTimeUntilNextDailyReward Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BlueprintContext.StoreContext.GetVaultKeyOffers
// (Final, Native, Public, HasOutParams, BlueprintCallable, Const)
// Parameters:
// TArray<struct FStoreOfferBP>            VaultKeyOffers                                         (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
// bool                                    bShowIneligibleOffers                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UStoreContext::GetVaultKeyOffers(TArray<struct FStoreOfferBP>* VaultKeyOffers, bool bShowIneligibleOffers) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("StoreContext", "GetVaultKeyOffers");

	Params::StoreContext_GetVaultKeyOffers Parms{};

	Parms.bShowIneligibleOffers = bShowIneligibleOffers;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (VaultKeyOffers != nullptr)
		*VaultKeyOffers = std::move(Parms.VaultKeyOffers);
}


// Function BlueprintContext.StoreContext.IsCatalogDownloadInProgress
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UStoreContext::IsCatalogDownloadInProgress() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("StoreContext", "IsCatalogDownloadInProgress");

	Params::StoreContext_IsCatalogDownloadInProgress Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BlueprintContext.StoreContext.IsDailyRewardAvailable
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UStoreContext::IsDailyRewardAvailable() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("StoreContext", "IsDailyRewardAvailable");

	Params::StoreContext_IsDailyRewardAvailable Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BlueprintContext.OrionAsyncAction_RefreshCatalog.RefreshCatalog
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UStoreContext*                    InStoreContext                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UOrionAsyncAction_RefreshCatalog* ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UOrionAsyncAction_RefreshCatalog* UOrionAsyncAction_RefreshCatalog::RefreshCatalog(class UStoreContext* InStoreContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("OrionAsyncAction_RefreshCatalog", "RefreshCatalog");

	Params::OrionAsyncAction_RefreshCatalog_RefreshCatalog Parms{};

	Parms.InStoreContext = InStoreContext;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BlueprintContext.TencentContext.OnSensitivityBrowserClosed
// (Final, Native, Public, BlueprintCallable)

void UTencentContext::OnSensitivityBrowserClosed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TencentContext", "OnSensitivityBrowserClosed");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// DelegateFunction BlueprintContext.TencentContext.OnSensitivityBrowserWidgetDisplay__DelegateSignature
// (Public, Delegate)
// Parameters:
// class UWidget*                          WebWidget                                              (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FText                             Title                                                  (Parm, NativeAccessSpecifierPublic)
// class FText                             Text                                                   (Parm, NativeAccessSpecifierPublic)

void UTencentContext::OnSensitivityBrowserWidgetDisplay__DelegateSignature(class UWidget* WebWidget, const class FText& Title, const class FText& Text)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TencentContext", "OnSensitivityBrowserWidgetDisplay__DelegateSignature");

	Params::TencentContext_OnSensitivityBrowserWidgetDisplay__DelegateSignature Parms{};

	Parms.WebWidget = WebWidget;
	Parms.Title = std::move(Title);
	Parms.Text = std::move(Text);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BlueprintContext.TencentContext.OnTencentLoginComplete
// (Final, Native, Public, BlueprintCallable)

void UTencentContext::OnTencentLoginComplete()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TencentContext", "OnTencentLoginComplete");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BlueprintContext.TencentContext.OpenSensitivitySettingsBrowser
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// ETencentSensitivityType                 SensitivityType                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTencentContext::OpenSensitivitySettingsBrowser(ETencentSensitivityType SensitivityType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TencentContext", "OpenSensitivitySettingsBrowser");

	Params::TencentContext_OpenSensitivitySettingsBrowser Parms{};

	Parms.SensitivityType = SensitivityType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BlueprintContext.TencentContext.RegisterForSensitivityBrowserDisplay
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TDelegate<void(class UWidget* WebWidget, class FText Title, class FText Text)>DisplayCallback                                        (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void UTencentContext::RegisterForSensitivityBrowserDisplay(const TDelegate<void(class UWidget* WebWidget, class FText Title, class FText Text)>& DisplayCallback)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TencentContext", "RegisterForSensitivityBrowserDisplay");

	Params::TencentContext_RegisterForSensitivityBrowserDisplay Parms{};

	Parms.DisplayCallback = DisplayCallback;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BlueprintContext.TooltipContext.CalculateHeroTooltip
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UOrionHeroData*                   InHeroData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EOrionAbilityBinding                    InAbilityKeyBind                                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   InAbilityLevel                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UAbilitySystemComponent*          ASC                                                    (ConstParm, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UTooltipContext::CalculateHeroTooltip(class UOrionHeroData* InHeroData, const EOrionAbilityBinding InAbilityKeyBind, const int32 InAbilityLevel, const class UAbilitySystemComponent* ASC)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TooltipContext", "CalculateHeroTooltip");

	Params::TooltipContext_CalculateHeroTooltip Parms{};

	Parms.InHeroData = InHeroData;
	Parms.InAbilityKeyBind = InAbilityKeyBind;
	Parms.InAbilityLevel = InAbilityLevel;
	Parms.ASC = ASC;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BlueprintContext.TooltipContext.GetField
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FName                             InFieldName                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FText                             FieldText                                              (Parm, OutParm, NativeAccessSpecifierPublic)

void UTooltipContext::GetField(class FName InFieldName, class FText* FieldText) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TooltipContext", "GetField");

	Params::TooltipContext_GetField Parms{};

	Parms.InFieldName = InFieldName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (FieldText != nullptr)
		*FieldText = std::move(Parms.FieldText);
}


// Function BlueprintContext.UserFeedbackContext.FinishTakeScreenshotAndInitializeFeedback
// (Final, Native, Public)

void UUserFeedbackContext::FinishTakeScreenshotAndInitializeFeedback()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UserFeedbackContext", "FinishTakeScreenshotAndInitializeFeedback");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BlueprintContext.UserFeedbackContext.SendFeedback
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class FText                             Body                                                   (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UUserFeedbackContext::SendFeedback(const class FText& Body)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UserFeedbackContext", "SendFeedback");

	Params::UserFeedbackContext_SendFeedback Parms{};

	Parms.Body = std::move(Body);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BlueprintContext.UserFeedbackContext.TakeScreenshotAndInitializeFeedback
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EFeedbackType                           FeedbackType                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UUserFeedbackContext::TakeScreenshotAndInitializeFeedback(EFeedbackType FeedbackType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UserFeedbackContext", "TakeScreenshotAndInitializeFeedback");

	Params::UserFeedbackContext_TakeScreenshotAndInitializeFeedback Parms{};

	Parms.FeedbackType = FeedbackType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BlueprintContext.VideoContext.IsFullscreen
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UVideoContext::IsFullscreen() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("VideoContext", "IsFullscreen");

	Params::VideoContext_IsFullscreen Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}

}

