#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GC_DealPBAOEDamage

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "GameplayAbilities_structs.hpp"


namespace SDK::Params
{

// Function GC_DealPBAOEDamage.GC_DealPBAOEDamage_C.OnExecute
// 0x00F8 (0x00F8 - 0x0000)
struct GC_DealPBAOEDamage_C_OnExecute final
{
public:
	class AActor*                                 MyTarget;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayCueParameters                 Parameters;                                        // 0x0008(0x00B8)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
	bool                                          ReturnValue;                                       // 0x00C0(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C1[0x7];                                       // 0x00C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AOrionChar*                             K2Node_DynamicCast_AsOrion_Char;                   // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D1[0x3];                                       // 0x00D1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x00D4(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x00E0(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_EC[0x4];                                       // 0x00EC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UParticleSystemComponent*               CallFunc_SpawnEmitterAttached_ReturnValue;         // 0x00F0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GC_DealPBAOEDamage_C_OnExecute) == 0x000008, "Wrong alignment on GC_DealPBAOEDamage_C_OnExecute");
static_assert(sizeof(GC_DealPBAOEDamage_C_OnExecute) == 0x0000F8, "Wrong size on GC_DealPBAOEDamage_C_OnExecute");
static_assert(offsetof(GC_DealPBAOEDamage_C_OnExecute, MyTarget) == 0x000000, "Member 'GC_DealPBAOEDamage_C_OnExecute::MyTarget' has a wrong offset!");
static_assert(offsetof(GC_DealPBAOEDamage_C_OnExecute, Parameters) == 0x000008, "Member 'GC_DealPBAOEDamage_C_OnExecute::Parameters' has a wrong offset!");
static_assert(offsetof(GC_DealPBAOEDamage_C_OnExecute, ReturnValue) == 0x0000C0, "Member 'GC_DealPBAOEDamage_C_OnExecute::ReturnValue' has a wrong offset!");
static_assert(offsetof(GC_DealPBAOEDamage_C_OnExecute, K2Node_DynamicCast_AsOrion_Char) == 0x0000C8, "Member 'GC_DealPBAOEDamage_C_OnExecute::K2Node_DynamicCast_AsOrion_Char' has a wrong offset!");
static_assert(offsetof(GC_DealPBAOEDamage_C_OnExecute, K2Node_DynamicCast_bSuccess) == 0x0000D0, "Member 'GC_DealPBAOEDamage_C_OnExecute::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(GC_DealPBAOEDamage_C_OnExecute, CallFunc_K2_GetActorLocation_ReturnValue) == 0x0000D4, "Member 'GC_DealPBAOEDamage_C_OnExecute::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(GC_DealPBAOEDamage_C_OnExecute, CallFunc_MakeVector_ReturnValue) == 0x0000E0, "Member 'GC_DealPBAOEDamage_C_OnExecute::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(GC_DealPBAOEDamage_C_OnExecute, CallFunc_SpawnEmitterAttached_ReturnValue) == 0x0000F0, "Member 'GC_DealPBAOEDamage_C_OnExecute::CallFunc_SpawnEmitterAttached_ReturnValue' has a wrong offset!");

}

