#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Animated_Reticle_Widget

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "OrionGame_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass Animated_Reticle_Widget.Animated_Reticle_Widget_C
// 0x0030 (0x0270 - 0x0240)
class UAnimated_Reticle_Widget_C final : public UOrionUserWidget_Reticle
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0240(0x0008)(Transient, DuplicateTransient)
	class UWidgetAnimation*                       Targeting;                                         // 0x0248(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWidgetAnimation*                       SuccessfulHit;                                     // 0x0250(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 CooldownRing;                                      // 0x0258(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 HitX;                                              // 0x0260(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 TargetingRing;                                     // 0x0268(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)

public:
	void Construct();
	void ExecuteUbergraph_Animated_Reticle_Widget(int32 EntryPoint);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"Animated_Reticle_Widget_C">();
	}
	static class UAnimated_Reticle_Widget_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAnimated_Reticle_Widget_C>();
	}
};
static_assert(alignof(UAnimated_Reticle_Widget_C) == 0x000008, "Wrong alignment on UAnimated_Reticle_Widget_C");
static_assert(sizeof(UAnimated_Reticle_Widget_C) == 0x000270, "Wrong size on UAnimated_Reticle_Widget_C");
static_assert(offsetof(UAnimated_Reticle_Widget_C, UberGraphFrame) == 0x000240, "Member 'UAnimated_Reticle_Widget_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UAnimated_Reticle_Widget_C, Targeting) == 0x000248, "Member 'UAnimated_Reticle_Widget_C::Targeting' has a wrong offset!");
static_assert(offsetof(UAnimated_Reticle_Widget_C, SuccessfulHit) == 0x000250, "Member 'UAnimated_Reticle_Widget_C::SuccessfulHit' has a wrong offset!");
static_assert(offsetof(UAnimated_Reticle_Widget_C, CooldownRing) == 0x000258, "Member 'UAnimated_Reticle_Widget_C::CooldownRing' has a wrong offset!");
static_assert(offsetof(UAnimated_Reticle_Widget_C, HitX) == 0x000260, "Member 'UAnimated_Reticle_Widget_C::HitX' has a wrong offset!");
static_assert(offsetof(UAnimated_Reticle_Widget_C, TargetingRing) == 0x000268, "Member 'UAnimated_Reticle_Widget_C::TargetingRing' has a wrong offset!");

}

