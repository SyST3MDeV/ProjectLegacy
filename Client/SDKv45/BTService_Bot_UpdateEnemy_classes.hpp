#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BTService_Bot_UpdateEnemy

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "AIModule_structs.hpp"
#include "AIModule_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BTService_Bot_UpdateEnemy.BTService_Bot_UpdateEnemy_C
// 0x0020 (0x00B8 - 0x0098)
class UBTService_Bot_UpdateEnemy_C final : public UBTService_BlueprintBase
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0098(0x0008)(Transient, DuplicateTransient)
	class AOrionAIBot*                            BotController;                                     // 0x00A0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UEnvQuery*                              InsideTurretQuery;                                 // 0x00A8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UEnvQuery*                              TmpQuery;                                          // 0x00B0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BTService_Bot_UpdateEnemy(int32 EntryPoint);
	void QueryDone(class UEnvQueryInstanceBlueprintWrapper* QueryInstance, EEnvQueryStatus QueryStatus);
	void ReceiveTickAI(class AAIController* OwnerController, class APawn* ControlledPawn, float DeltaSeconds);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BTService_Bot_UpdateEnemy_C">();
	}
	static class UBTService_Bot_UpdateEnemy_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBTService_Bot_UpdateEnemy_C>();
	}
};
static_assert(alignof(UBTService_Bot_UpdateEnemy_C) == 0x000008, "Wrong alignment on UBTService_Bot_UpdateEnemy_C");
static_assert(sizeof(UBTService_Bot_UpdateEnemy_C) == 0x0000B8, "Wrong size on UBTService_Bot_UpdateEnemy_C");
static_assert(offsetof(UBTService_Bot_UpdateEnemy_C, UberGraphFrame) == 0x000098, "Member 'UBTService_Bot_UpdateEnemy_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UBTService_Bot_UpdateEnemy_C, BotController) == 0x0000A0, "Member 'UBTService_Bot_UpdateEnemy_C::BotController' has a wrong offset!");
static_assert(offsetof(UBTService_Bot_UpdateEnemy_C, InsideTurretQuery) == 0x0000A8, "Member 'UBTService_Bot_UpdateEnemy_C::InsideTurretQuery' has a wrong offset!");
static_assert(offsetof(UBTService_Bot_UpdateEnemy_C, TmpQuery) == 0x0000B0, "Member 'UBTService_Bot_UpdateEnemy_C::TmpQuery' has a wrong offset!");

}

