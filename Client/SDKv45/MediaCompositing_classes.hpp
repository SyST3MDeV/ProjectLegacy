#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: MediaCompositing

#include "Basic.hpp"

#include "Engine_classes.hpp"
#include "MediaCompositing_structs.hpp"
#include "MovieSceneTracks_classes.hpp"
#include "MovieScene_classes.hpp"


namespace SDK
{

// Class MediaCompositing.MediaPlane
// 0x0008 (0x0320 - 0x0318)
class AMediaPlane final : public AActor
{
public:
	class UMediaPlaneComponent*                   MediaPlane;                                        // 0x0318(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"MediaPlane">();
	}
	static class AMediaPlane* GetDefaultObj()
	{
		return GetDefaultObjImpl<AMediaPlane>();
	}
};
static_assert(alignof(AMediaPlane) == 0x000008, "Wrong alignment on AMediaPlane");
static_assert(sizeof(AMediaPlane) == 0x000320, "Wrong size on AMediaPlane");
static_assert(offsetof(AMediaPlane, MediaPlane) == 0x000318, "Member 'AMediaPlane::MediaPlane' has a wrong offset!");

// Class MediaCompositing.MediaPlaneComponent
// 0x00D0 (0x0760 - 0x0690)
class UMediaPlaneComponent final : public UPrimitiveComponent
{
public:
	struct FMediaPlaneParameters                  Plane;                                             // 0x0690(0x0038)(Edit, NoDestructor, NativeAccessSpecifierPrivate)
	uint8                                         Pad_6C8[0x98];                                     // 0x06C8(0x0098)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void OnRenderTextureChanged();
	void SetMediaPlane(const struct FMediaPlaneParameters& Plane_0);

	struct FMediaPlaneParameters GetPlane() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"MediaPlaneComponent">();
	}
	static class UMediaPlaneComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UMediaPlaneComponent>();
	}
};
static_assert(alignof(UMediaPlaneComponent) == 0x000010, "Wrong alignment on UMediaPlaneComponent");
static_assert(sizeof(UMediaPlaneComponent) == 0x000760, "Wrong size on UMediaPlaneComponent");
static_assert(offsetof(UMediaPlaneComponent, Plane) == 0x000690, "Member 'UMediaPlaneComponent::Plane' has a wrong offset!");

// Class MediaCompositing.MediaPlaneFrustumComponent
// 0x0000 (0x0690 - 0x0690)
class UMediaPlaneFrustumComponent final : public UPrimitiveComponent
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"MediaPlaneFrustumComponent">();
	}
	static class UMediaPlaneFrustumComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UMediaPlaneFrustumComponent>();
	}
};
static_assert(alignof(UMediaPlaneFrustumComponent) == 0x000010, "Wrong alignment on UMediaPlaneFrustumComponent");
static_assert(sizeof(UMediaPlaneFrustumComponent) == 0x000690, "Wrong size on UMediaPlaneFrustumComponent");

// Class MediaCompositing.MovieSceneMediaSection
// 0x0020 (0x0130 - 0x0110)
class UMovieSceneMediaSection final : public UMovieSceneSection
{
public:
	class FString                                 Proxy;                                             // 0x0110(0x0010)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UMediaSource*                           MediaSource;                                       // 0x0120(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_128[0x8];                                      // 0x0128(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"MovieSceneMediaSection">();
	}
	static class UMovieSceneMediaSection* GetDefaultObj()
	{
		return GetDefaultObjImpl<UMovieSceneMediaSection>();
	}
};
static_assert(alignof(UMovieSceneMediaSection) == 0x000008, "Wrong alignment on UMovieSceneMediaSection");
static_assert(sizeof(UMovieSceneMediaSection) == 0x000130, "Wrong size on UMovieSceneMediaSection");
static_assert(offsetof(UMovieSceneMediaSection, Proxy) == 0x000110, "Member 'UMovieSceneMediaSection::Proxy' has a wrong offset!");
static_assert(offsetof(UMovieSceneMediaSection, MediaSource) == 0x000120, "Member 'UMovieSceneMediaSection::MediaSource' has a wrong offset!");

// Class MediaCompositing.MovieSceneMediaTrack
// 0x0000 (0x00E0 - 0x00E0)
class UMovieSceneMediaTrack final : public UMovieScenePropertyTrack
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"MovieSceneMediaTrack">();
	}
	static class UMovieSceneMediaTrack* GetDefaultObj()
	{
		return GetDefaultObjImpl<UMovieSceneMediaTrack>();
	}
};
static_assert(alignof(UMovieSceneMediaTrack) == 0x000008, "Wrong alignment on UMovieSceneMediaTrack");
static_assert(sizeof(UMovieSceneMediaTrack) == 0x0000E0, "Wrong size on UMovieSceneMediaTrack");

}

