#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_OrionVisionWard

#include "Basic.hpp"

#include "GameplayAbilities_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "OrionGame_structs.hpp"


namespace SDK::Params
{

// Function BP_OrionVisionWard.BP_OrionVisionWard_C.ExecuteUbergraph_BP_OrionVisionWard
// 0x0020 (0x0020 - 0x0000)
struct BP_OrionVisionWard_C_ExecuteUbergraph_BP_OrionVisionWard final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EOrionTeam                                    K2Node_Event_NewTeamIdx;                           // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_FloatToVector_ReturnValue;           // 0x000C(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FActiveGameplayEffectHandle            CallFunc_BP_ApplyGameplayEffectToSelf_ReturnValue; // 0x0018(0x0008)(NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_OrionVisionWard_C_ExecuteUbergraph_BP_OrionVisionWard) == 0x000004, "Wrong alignment on BP_OrionVisionWard_C_ExecuteUbergraph_BP_OrionVisionWard");
static_assert(sizeof(BP_OrionVisionWard_C_ExecuteUbergraph_BP_OrionVisionWard) == 0x000020, "Wrong size on BP_OrionVisionWard_C_ExecuteUbergraph_BP_OrionVisionWard");
static_assert(offsetof(BP_OrionVisionWard_C_ExecuteUbergraph_BP_OrionVisionWard, EntryPoint) == 0x000000, "Member 'BP_OrionVisionWard_C_ExecuteUbergraph_BP_OrionVisionWard::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_OrionVisionWard_C_ExecuteUbergraph_BP_OrionVisionWard, K2Node_Event_NewTeamIdx) == 0x000004, "Member 'BP_OrionVisionWard_C_ExecuteUbergraph_BP_OrionVisionWard::K2Node_Event_NewTeamIdx' has a wrong offset!");
static_assert(offsetof(BP_OrionVisionWard_C_ExecuteUbergraph_BP_OrionVisionWard, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000008, "Member 'BP_OrionVisionWard_C_ExecuteUbergraph_BP_OrionVisionWard::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_OrionVisionWard_C_ExecuteUbergraph_BP_OrionVisionWard, CallFunc_Conv_FloatToVector_ReturnValue) == 0x00000C, "Member 'BP_OrionVisionWard_C_ExecuteUbergraph_BP_OrionVisionWard::CallFunc_Conv_FloatToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_OrionVisionWard_C_ExecuteUbergraph_BP_OrionVisionWard, CallFunc_BP_ApplyGameplayEffectToSelf_ReturnValue) == 0x000018, "Member 'BP_OrionVisionWard_C_ExecuteUbergraph_BP_OrionVisionWard::CallFunc_BP_ApplyGameplayEffectToSelf_ReturnValue' has a wrong offset!");

// Function BP_OrionVisionWard.BP_OrionVisionWard_C.OnTeamChanged
// 0x0001 (0x0001 - 0x0000)
struct BP_OrionVisionWard_C_OnTeamChanged final
{
public:
	EOrionTeam                                    NewTeamIdx;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_OrionVisionWard_C_OnTeamChanged) == 0x000001, "Wrong alignment on BP_OrionVisionWard_C_OnTeamChanged");
static_assert(sizeof(BP_OrionVisionWard_C_OnTeamChanged) == 0x000001, "Wrong size on BP_OrionVisionWard_C_OnTeamChanged");
static_assert(offsetof(BP_OrionVisionWard_C_OnTeamChanged, NewTeamIdx) == 0x000000, "Member 'BP_OrionVisionWard_C_OnTeamChanged::NewTeamIdx' has a wrong offset!");

// Function BP_OrionVisionWard.BP_OrionVisionWard_C.UserConstructionScript
// 0x0020 (0x0020 - 0x0000)
struct BP_OrionVisionWard_C_UserConstructionScript final
{
public:
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue; // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue2; // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue3; // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue4; // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_OrionVisionWard_C_UserConstructionScript) == 0x000008, "Wrong alignment on BP_OrionVisionWard_C_UserConstructionScript");
static_assert(sizeof(BP_OrionVisionWard_C_UserConstructionScript) == 0x000020, "Wrong size on BP_OrionVisionWard_C_UserConstructionScript");
static_assert(offsetof(BP_OrionVisionWard_C_UserConstructionScript, CallFunc_CreateDynamicMaterialInstance_ReturnValue) == 0x000000, "Member 'BP_OrionVisionWard_C_UserConstructionScript::CallFunc_CreateDynamicMaterialInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_OrionVisionWard_C_UserConstructionScript, CallFunc_CreateDynamicMaterialInstance_ReturnValue2) == 0x000008, "Member 'BP_OrionVisionWard_C_UserConstructionScript::CallFunc_CreateDynamicMaterialInstance_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_OrionVisionWard_C_UserConstructionScript, CallFunc_CreateDynamicMaterialInstance_ReturnValue3) == 0x000010, "Member 'BP_OrionVisionWard_C_UserConstructionScript::CallFunc_CreateDynamicMaterialInstance_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_OrionVisionWard_C_UserConstructionScript, CallFunc_CreateDynamicMaterialInstance_ReturnValue4) == 0x000018, "Member 'BP_OrionVisionWard_C_UserConstructionScript::CallFunc_CreateDynamicMaterialInstance_ReturnValue4' has a wrong offset!");

// Function BP_OrionVisionWard.BP_OrionVisionWard_C.SetupColors
// 0x0024 (0x0024 - 0x0000)
struct BP_OrionVisionWard_C_SetupColors final
{
public:
	EOrionTeam                                    TeamNum_0;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           CallFunc_GetTeamColorFromMPCWithTeamNum_ReturnValue; // 0x0004(0x0010)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_LinearColorToVector_ReturnValue;     // 0x0014(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue2;                     // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_OrionVisionWard_C_SetupColors) == 0x000004, "Wrong alignment on BP_OrionVisionWard_C_SetupColors");
static_assert(sizeof(BP_OrionVisionWard_C_SetupColors) == 0x000024, "Wrong size on BP_OrionVisionWard_C_SetupColors");
static_assert(offsetof(BP_OrionVisionWard_C_SetupColors, TeamNum_0) == 0x000000, "Member 'BP_OrionVisionWard_C_SetupColors::TeamNum_0' has a wrong offset!");
static_assert(offsetof(BP_OrionVisionWard_C_SetupColors, CallFunc_GetTeamColorFromMPCWithTeamNum_ReturnValue) == 0x000004, "Member 'BP_OrionVisionWard_C_SetupColors::CallFunc_GetTeamColorFromMPCWithTeamNum_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_OrionVisionWard_C_SetupColors, CallFunc_Conv_LinearColorToVector_ReturnValue) == 0x000014, "Member 'BP_OrionVisionWard_C_SetupColors::CallFunc_Conv_LinearColorToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_OrionVisionWard_C_SetupColors, CallFunc_IsValid_ReturnValue) == 0x000020, "Member 'BP_OrionVisionWard_C_SetupColors::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_OrionVisionWard_C_SetupColors, CallFunc_IsValid_ReturnValue2) == 0x000021, "Member 'BP_OrionVisionWard_C_SetupColors::CallFunc_IsValid_ReturnValue2' has a wrong offset!");

// Function BP_OrionVisionWard.BP_OrionVisionWard_C.GetAimTargetSensingLocation
// 0x0018 (0x0018 - 0x0000)
struct BP_OrionVisionWard_C_GetAimTargetSensingLocation final
{
public:
	struct FVector                                AimPosition;                                       // 0x0000(0x000C)(Parm, OutParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x000C(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_OrionVisionWard_C_GetAimTargetSensingLocation) == 0x000004, "Wrong alignment on BP_OrionVisionWard_C_GetAimTargetSensingLocation");
static_assert(sizeof(BP_OrionVisionWard_C_GetAimTargetSensingLocation) == 0x000018, "Wrong size on BP_OrionVisionWard_C_GetAimTargetSensingLocation");
static_assert(offsetof(BP_OrionVisionWard_C_GetAimTargetSensingLocation, AimPosition) == 0x000000, "Member 'BP_OrionVisionWard_C_GetAimTargetSensingLocation::AimPosition' has a wrong offset!");
static_assert(offsetof(BP_OrionVisionWard_C_GetAimTargetSensingLocation, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x00000C, "Member 'BP_OrionVisionWard_C_GetAimTargetSensingLocation::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");

// Function BP_OrionVisionWard.BP_OrionVisionWard_C.GetTargetingLocation
// 0x0018 (0x0018 - 0x0000)
struct BP_OrionVisionWard_C_GetTargetingLocation final
{
public:
	struct FVector                                OutPosition;                                       // 0x0000(0x000C)(Parm, OutParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x000C(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_OrionVisionWard_C_GetTargetingLocation) == 0x000004, "Wrong alignment on BP_OrionVisionWard_C_GetTargetingLocation");
static_assert(sizeof(BP_OrionVisionWard_C_GetTargetingLocation) == 0x000018, "Wrong size on BP_OrionVisionWard_C_GetTargetingLocation");
static_assert(offsetof(BP_OrionVisionWard_C_GetTargetingLocation, OutPosition) == 0x000000, "Member 'BP_OrionVisionWard_C_GetTargetingLocation::OutPosition' has a wrong offset!");
static_assert(offsetof(BP_OrionVisionWard_C_GetTargetingLocation, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x00000C, "Member 'BP_OrionVisionWard_C_GetTargetingLocation::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");

// Function BP_OrionVisionWard.BP_OrionVisionWard_C.GetNumberPopLocation
// 0x0034 (0x0034 - 0x0000)
struct BP_OrionVisionWard_C_GetNumberPopLocation final
{
public:
	struct FVector                                HitLocation;                                       // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                ReturnValue;                                       // 0x000C(0x000C)(Parm, OutParm, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_DoesSocketExist_ReturnValue;              // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1A[0x2];                                       // 0x001A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetSocketLocation_ReturnValue;            // 0x001C(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_Select_Default;                             // 0x0028(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_OrionVisionWard_C_GetNumberPopLocation) == 0x000004, "Wrong alignment on BP_OrionVisionWard_C_GetNumberPopLocation");
static_assert(sizeof(BP_OrionVisionWard_C_GetNumberPopLocation) == 0x000034, "Wrong size on BP_OrionVisionWard_C_GetNumberPopLocation");
static_assert(offsetof(BP_OrionVisionWard_C_GetNumberPopLocation, HitLocation) == 0x000000, "Member 'BP_OrionVisionWard_C_GetNumberPopLocation::HitLocation' has a wrong offset!");
static_assert(offsetof(BP_OrionVisionWard_C_GetNumberPopLocation, ReturnValue) == 0x00000C, "Member 'BP_OrionVisionWard_C_GetNumberPopLocation::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_OrionVisionWard_C_GetNumberPopLocation, Temp_bool_Variable) == 0x000018, "Member 'BP_OrionVisionWard_C_GetNumberPopLocation::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_OrionVisionWard_C_GetNumberPopLocation, CallFunc_DoesSocketExist_ReturnValue) == 0x000019, "Member 'BP_OrionVisionWard_C_GetNumberPopLocation::CallFunc_DoesSocketExist_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_OrionVisionWard_C_GetNumberPopLocation, CallFunc_GetSocketLocation_ReturnValue) == 0x00001C, "Member 'BP_OrionVisionWard_C_GetNumberPopLocation::CallFunc_GetSocketLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_OrionVisionWard_C_GetNumberPopLocation, K2Node_Select_Default) == 0x000028, "Member 'BP_OrionVisionWard_C_GetNumberPopLocation::K2Node_Select_Default' has a wrong offset!");

// Function BP_OrionVisionWard.BP_OrionVisionWard_C.GetHighlightableMeshes
// 0x0020 (0x0020 - 0x0000)
struct BP_OrionVisionWard_C_GetHighlightableMeshes final
{
public:
	TArray<class UMeshComponent*>                 ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm)
	TArray<class UMeshComponent*>                 K2Node_MakeArray_Array;                            // 0x0010(0x0010)(ZeroConstructor, ReferenceParm)
};
static_assert(alignof(BP_OrionVisionWard_C_GetHighlightableMeshes) == 0x000008, "Wrong alignment on BP_OrionVisionWard_C_GetHighlightableMeshes");
static_assert(sizeof(BP_OrionVisionWard_C_GetHighlightableMeshes) == 0x000020, "Wrong size on BP_OrionVisionWard_C_GetHighlightableMeshes");
static_assert(offsetof(BP_OrionVisionWard_C_GetHighlightableMeshes, ReturnValue) == 0x000000, "Member 'BP_OrionVisionWard_C_GetHighlightableMeshes::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_OrionVisionWard_C_GetHighlightableMeshes, K2Node_MakeArray_Array) == 0x000010, "Member 'BP_OrionVisionWard_C_GetHighlightableMeshes::K2Node_MakeArray_Array' has a wrong offset!");

}

