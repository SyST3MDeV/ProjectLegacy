#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GC_CardActivation_TESTVFX

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "OrionGame_structs.hpp"
#include "OrionGame_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass GC_CardActivation_TESTVFX.GC_CardActivation_TESTVFX_C
// 0x0040 (0x0750 - 0x0710)
class AGC_CardActivation_TESTVFX_C final : public AOrionGameplayCueNotify_Burst_Latent
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0710(0x0008)(Transient, DuplicateTransient)
	class UStaticMeshComponent*                   _CC_Device_CardArea;                               // 0x0718(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UActorSequenceComponent*                BurstSequence;                                     // 0x0720(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   FrontMesh;                                         // 0x0728(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UMaterialBillboardComponent*            MaterialBillboard;                                 // 0x0730(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USphereComponent*                       Sphere;                                            // 0x0738(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               BillboardDMI;                                      // 0x0740(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_GC_CardActivation_TESTVFX(int32 EntryPoint);
	void ReceiveTick(float DeltaSeconds);
	void K2_OnExecute(class AActor* MyTarget, const struct FGameplayCueParameters& Parameters, class UParticleSystemComponent* BurstParticleSystems, const TArray<class UParticleSystemComponent*>& AdditionalParticleSystems, class UNiagaraComponent* BurstNiagaraParticleSystems, const TArray<class UNiagaraComponent*>& AdditionalNiagaraParticleSystems);
	void UserConstructionScript();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"GC_CardActivation_TESTVFX_C">();
	}
	static class AGC_CardActivation_TESTVFX_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AGC_CardActivation_TESTVFX_C>();
	}
};
static_assert(alignof(AGC_CardActivation_TESTVFX_C) == 0x000010, "Wrong alignment on AGC_CardActivation_TESTVFX_C");
static_assert(sizeof(AGC_CardActivation_TESTVFX_C) == 0x000750, "Wrong size on AGC_CardActivation_TESTVFX_C");
static_assert(offsetof(AGC_CardActivation_TESTVFX_C, UberGraphFrame) == 0x000710, "Member 'AGC_CardActivation_TESTVFX_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(AGC_CardActivation_TESTVFX_C, _CC_Device_CardArea) == 0x000718, "Member 'AGC_CardActivation_TESTVFX_C::_CC_Device_CardArea' has a wrong offset!");
static_assert(offsetof(AGC_CardActivation_TESTVFX_C, BurstSequence) == 0x000720, "Member 'AGC_CardActivation_TESTVFX_C::BurstSequence' has a wrong offset!");
static_assert(offsetof(AGC_CardActivation_TESTVFX_C, FrontMesh) == 0x000728, "Member 'AGC_CardActivation_TESTVFX_C::FrontMesh' has a wrong offset!");
static_assert(offsetof(AGC_CardActivation_TESTVFX_C, MaterialBillboard) == 0x000730, "Member 'AGC_CardActivation_TESTVFX_C::MaterialBillboard' has a wrong offset!");
static_assert(offsetof(AGC_CardActivation_TESTVFX_C, Sphere) == 0x000738, "Member 'AGC_CardActivation_TESTVFX_C::Sphere' has a wrong offset!");
static_assert(offsetof(AGC_CardActivation_TESTVFX_C, BillboardDMI) == 0x000740, "Member 'AGC_CardActivation_TESTVFX_C::BillboardDMI' has a wrong offset!");

}

