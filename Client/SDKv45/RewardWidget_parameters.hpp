#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: RewardWidget

#include "Basic.hpp"

#include "OrionGame_structs.hpp"
#include "OrionUI_structs.hpp"
#include "SlateCore_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "UMG_structs.hpp"


namespace SDK::Params
{

// Function RewardWidget.RewardWidget_C.ExecuteUbergraph_RewardWidget
// 0x0420 (0x0420 - 0x0000)
struct RewardWidget_C_ExecuteUbergraph_RewardWidget final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              Temp_struct_Variable;                              // 0x0004(0x0008)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              Temp_struct_Variable2;                             // 0x000C(0x0008)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EOrionRewardWidgetState                       Temp_byte_Variable;                                // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable2;                               // 0x0015(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable3;                               // 0x0016(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable4;                               // 0x0017(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable5;                               // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EOrionItemRarity                              Temp_byte_Variable6;                               // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1A[0x6];                                       // 0x001A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInterface*                     Temp_object_Variable;                              // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     Temp_object_Variable2;                             // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     Temp_object_Variable3;                             // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     Temp_object_Variable4;                             // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     Temp_object_Variable5;                             // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EOrionItemRarity                              Temp_byte_Variable7;                               // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInterface*                     Temp_object_Variable6;                             // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     Temp_object_Variable7;                             // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     Temp_object_Variable8;                             // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     Temp_object_Variable9;                             // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     Temp_object_Variable10;                            // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EOrionItemRarity                              Temp_byte_Variable8;                               // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_79[0x7];                                       // 0x0079(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInterface*                     Temp_object_Variable11;                            // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     Temp_object_Variable12;                            // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     Temp_object_Variable13;                            // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     Temp_object_Variable14;                            // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     Temp_object_Variable15;                            // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EOrionRewardWidgetState                       Temp_byte_Variable9;                               // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A9[0x3];                                       // 0x00A9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           Temp_struct_Variable3;                             // 0x00AC(0x0010)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable4;                             // 0x00BC(0x0010)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable5;                             // 0x00CC(0x0010)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable6;                             // 0x00DC(0x0010)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EOrionRewardWidgetState                       Temp_byte_Variable10;                              // 0x00EC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_ED[0x3];                                       // 0x00ED(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           Temp_struct_Variable7;                             // 0x00F0(0x0010)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable8;                             // 0x0100(0x0010)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable9;                             // 0x0110(0x0010)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable10;                            // 0x0120(0x0010)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EOrionRewardWidgetState                       Temp_byte_Variable11;                              // 0x0130(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EOrionRewardWidgetState                       Temp_byte_Variable12;                              // 0x0131(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EOrionItemRarity                              Temp_byte_Variable13;                              // 0x0132(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_133[0x5];                                      // 0x0133(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInterface*                     Temp_object_Variable16;                            // 0x0138(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     Temp_object_Variable17;                            // 0x0140(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     Temp_object_Variable18;                            // 0x0148(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     Temp_object_Variable19;                            // 0x0150(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     Temp_object_Variable20;                            // 0x0158(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0160(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_161[0x3];                                      // 0x0161(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable;                               // 0x0164(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EOrionRewardWidgetState                       Temp_byte_Variable14;                              // 0x0168(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable15;                              // 0x0169(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable16;                              // 0x016A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable17;                              // 0x016B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable18;                              // 0x016C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_16D[0x3];                                      // 0x016D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              Temp_struct_Variable11;                            // 0x0170(0x0008)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              Temp_struct_Variable12;                            // 0x0178(0x0008)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              Temp_struct_Variable13;                            // 0x0180(0x0008)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EOrionItemRarity                              Temp_byte_Variable19;                              // 0x0188(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EOrionItemRarity                              K2Node_Event_ItemRarity;                           // 0x0189(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EOrionItemType                                K2Node_Event_ItemType;                             // 0x018A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EOrionRewardWidgetState                       K2Node_Event_State;                                // 0x018B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Get_Type_Switcher_Index_Index;            // 0x018C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0190(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_191[0x3];                                      // 0x0191(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           K2Node_Select2_Default;                            // 0x0194(0x0010)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_Select3_Default;                            // 0x01A4(0x0010)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select4_Default;                            // 0x01B4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1B5[0x3];                                      // 0x01B5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              K2Node_Select5_Default;                            // 0x01B8(0x0008)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     K2Node_Select6_Default;                            // 0x01C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     K2Node_Select7_Default;                            // 0x01C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     K2Node_Select8_Default;                            // 0x01D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     K2Node_Select9_Default;                            // 0x01D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable20;                              // 0x01E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable21;                              // 0x01E1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1E2[0x6];                                      // 0x01E2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPointerEvent                          K2Node_Event_MouseEvent2;                          // 0x01E8(0x0070)()
	struct FGeometry                              K2Node_Event_MyGeometry;                           // 0x0258(0x0038)(IsPlainOldData, NoDestructor)
	struct FPointerEvent                          K2Node_Event_MouseEvent;                           // 0x0290(0x0070)()
	ESlateVisibility                              Temp_byte_Variable22;                              // 0x0300(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_301[0x7];                                      // 0x0301(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateColor                            K2Node_MakeStruct_SlateColor;                      // 0x0308(0x0028)()
	class UGlowingRarityText_C*                   K2Node_DynamicCast_AsGlowing_Rarity_Text;          // 0x0330(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0338(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_339[0x7];                                      // 0x0339(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateColor                            K2Node_MakeStruct_SlateColor2;                     // 0x0340(0x0028)()
	struct FSlateColor                            K2Node_Select10_Default;                           // 0x0368(0x0028)()
	ESlateVisibility                              Temp_byte_Variable23;                              // 0x0390(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable24;                              // 0x0391(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EOrionItemRarity                              Temp_byte_Variable25;                              // 0x0392(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_393[0x1];                                      // 0x0393(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           Temp_struct_Variable14;                            // 0x0394(0x0010)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select11_Default;                           // 0x03A4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A5[0x3];                                      // 0x03A5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           Temp_struct_Variable15;                            // 0x03A8(0x0010)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       K2Node_Select12_Default;                           // 0x03B8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetEndTime_ReturnValue;                   // 0x03C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable16;                            // 0x03C4(0x0010)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x03D4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3D5[0x3];                                      // 0x03D5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           Temp_struct_Variable17;                            // 0x03D8(0x0010)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select13_Default;                           // 0x03E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable18;                            // 0x03EC(0x0010)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_RoundsRemaining;                      // 0x03FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0400(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_401[0x3];                                      // 0x0401(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_SelectFloat_ReturnValue;                  // 0x0404(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EOrionItemRarity                              Temp_byte_Variable26;                              // 0x0408(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0409(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_40A[0x2];                                      // 0x040A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           K2Node_Select14_Default;                           // 0x040C(0x0010)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(RewardWidget_C_ExecuteUbergraph_RewardWidget) == 0x000008, "Wrong alignment on RewardWidget_C_ExecuteUbergraph_RewardWidget");
static_assert(sizeof(RewardWidget_C_ExecuteUbergraph_RewardWidget) == 0x000420, "Wrong size on RewardWidget_C_ExecuteUbergraph_RewardWidget");
static_assert(offsetof(RewardWidget_C_ExecuteUbergraph_RewardWidget, EntryPoint) == 0x000000, "Member 'RewardWidget_C_ExecuteUbergraph_RewardWidget::EntryPoint' has a wrong offset!");
static_assert(offsetof(RewardWidget_C_ExecuteUbergraph_RewardWidget, Temp_struct_Variable) == 0x000004, "Member 'RewardWidget_C_ExecuteUbergraph_RewardWidget::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(RewardWidget_C_ExecuteUbergraph_RewardWidget, Temp_struct_Variable2) == 0x00000C, "Member 'RewardWidget_C_ExecuteUbergraph_RewardWidget::Temp_struct_Variable2' has a wrong offset!");
static_assert(offsetof(RewardWidget_C_ExecuteUbergraph_RewardWidget, Temp_byte_Variable) == 0x000014, "Member 'RewardWidget_C_ExecuteUbergraph_RewardWidget::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(RewardWidget_C_ExecuteUbergraph_RewardWidget, Temp_byte_Variable2) == 0x000015, "Member 'RewardWidget_C_ExecuteUbergraph_RewardWidget::Temp_byte_Variable2' has a wrong offset!");
static_assert(offsetof(RewardWidget_C_ExecuteUbergraph_RewardWidget, Temp_byte_Variable3) == 0x000016, "Member 'RewardWidget_C_ExecuteUbergraph_RewardWidget::Temp_byte_Variable3' has a wrong offset!");
static_assert(offsetof(RewardWidget_C_ExecuteUbergraph_RewardWidget, Temp_byte_Variable4) == 0x000017, "Member 'RewardWidget_C_ExecuteUbergraph_RewardWidget::Temp_byte_Variable4' has a wrong offset!");
static_assert(offsetof(RewardWidget_C_ExecuteUbergraph_RewardWidget, Temp_byte_Variable5) == 0x000018, "Member 'RewardWidget_C_ExecuteUbergraph_RewardWidget::Temp_byte_Variable5' has a wrong offset!");
static_assert(offsetof(RewardWidget_C_ExecuteUbergraph_RewardWidget, Temp_byte_Variable6) == 0x000019, "Member 'RewardWidget_C_ExecuteUbergraph_RewardWidget::Temp_byte_Variable6' has a wrong offset!");
static_assert(offsetof(RewardWidget_C_ExecuteUbergraph_RewardWidget, Temp_object_Variable) == 0x000020, "Member 'RewardWidget_C_ExecuteUbergraph_RewardWidget::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(RewardWidget_C_ExecuteUbergraph_RewardWidget, Temp_object_Variable2) == 0x000028, "Member 'RewardWidget_C_ExecuteUbergraph_RewardWidget::Temp_object_Variable2' has a wrong offset!");
static_assert(offsetof(RewardWidget_C_ExecuteUbergraph_RewardWidget, Temp_object_Variable3) == 0x000030, "Member 'RewardWidget_C_ExecuteUbergraph_RewardWidget::Temp_object_Variable3' has a wrong offset!");
static_assert(offsetof(RewardWidget_C_ExecuteUbergraph_RewardWidget, Temp_object_Variable4) == 0x000038, "Member 'RewardWidget_C_ExecuteUbergraph_RewardWidget::Temp_object_Variable4' has a wrong offset!");
static_assert(offsetof(RewardWidget_C_ExecuteUbergraph_RewardWidget, Temp_object_Variable5) == 0x000040, "Member 'RewardWidget_C_ExecuteUbergraph_RewardWidget::Temp_object_Variable5' has a wrong offset!");
static_assert(offsetof(RewardWidget_C_ExecuteUbergraph_RewardWidget, Temp_byte_Variable7) == 0x000048, "Member 'RewardWidget_C_ExecuteUbergraph_RewardWidget::Temp_byte_Variable7' has a wrong offset!");
static_assert(offsetof(RewardWidget_C_ExecuteUbergraph_RewardWidget, Temp_object_Variable6) == 0x000050, "Member 'RewardWidget_C_ExecuteUbergraph_RewardWidget::Temp_object_Variable6' has a wrong offset!");
static_assert(offsetof(RewardWidget_C_ExecuteUbergraph_RewardWidget, Temp_object_Variable7) == 0x000058, "Member 'RewardWidget_C_ExecuteUbergraph_RewardWidget::Temp_object_Variable7' has a wrong offset!");
static_assert(offsetof(RewardWidget_C_ExecuteUbergraph_RewardWidget, Temp_object_Variable8) == 0x000060, "Member 'RewardWidget_C_ExecuteUbergraph_RewardWidget::Temp_object_Variable8' has a wrong offset!");
static_assert(offsetof(RewardWidget_C_ExecuteUbergraph_RewardWidget, Temp_object_Variable9) == 0x000068, "Member 'RewardWidget_C_ExecuteUbergraph_RewardWidget::Temp_object_Variable9' has a wrong offset!");
static_assert(offsetof(RewardWidget_C_ExecuteUbergraph_RewardWidget, Temp_object_Variable10) == 0x000070, "Member 'RewardWidget_C_ExecuteUbergraph_RewardWidget::Temp_object_Variable10' has a wrong offset!");
static_assert(offsetof(RewardWidget_C_ExecuteUbergraph_RewardWidget, Temp_byte_Variable8) == 0x000078, "Member 'RewardWidget_C_ExecuteUbergraph_RewardWidget::Temp_byte_Variable8' has a wrong offset!");
static_assert(offsetof(RewardWidget_C_ExecuteUbergraph_RewardWidget, Temp_object_Variable11) == 0x000080, "Member 'RewardWidget_C_ExecuteUbergraph_RewardWidget::Temp_object_Variable11' has a wrong offset!");
static_assert(offsetof(RewardWidget_C_ExecuteUbergraph_RewardWidget, Temp_object_Variable12) == 0x000088, "Member 'RewardWidget_C_ExecuteUbergraph_RewardWidget::Temp_object_Variable12' has a wrong offset!");
static_assert(offsetof(RewardWidget_C_ExecuteUbergraph_RewardWidget, Temp_object_Variable13) == 0x000090, "Member 'RewardWidget_C_ExecuteUbergraph_RewardWidget::Temp_object_Variable13' has a wrong offset!");
static_assert(offsetof(RewardWidget_C_ExecuteUbergraph_RewardWidget, Temp_object_Variable14) == 0x000098, "Member 'RewardWidget_C_ExecuteUbergraph_RewardWidget::Temp_object_Variable14' has a wrong offset!");
static_assert(offsetof(RewardWidget_C_ExecuteUbergraph_RewardWidget, Temp_object_Variable15) == 0x0000A0, "Member 'RewardWidget_C_ExecuteUbergraph_RewardWidget::Temp_object_Variable15' has a wrong offset!");
static_assert(offsetof(RewardWidget_C_ExecuteUbergraph_RewardWidget, Temp_byte_Variable9) == 0x0000A8, "Member 'RewardWidget_C_ExecuteUbergraph_RewardWidget::Temp_byte_Variable9' has a wrong offset!");
static_assert(offsetof(RewardWidget_C_ExecuteUbergraph_RewardWidget, Temp_struct_Variable3) == 0x0000AC, "Member 'RewardWidget_C_ExecuteUbergraph_RewardWidget::Temp_struct_Variable3' has a wrong offset!");
static_assert(offsetof(RewardWidget_C_ExecuteUbergraph_RewardWidget, Temp_struct_Variable4) == 0x0000BC, "Member 'RewardWidget_C_ExecuteUbergraph_RewardWidget::Temp_struct_Variable4' has a wrong offset!");
static_assert(offsetof(RewardWidget_C_ExecuteUbergraph_RewardWidget, Temp_struct_Variable5) == 0x0000CC, "Member 'RewardWidget_C_ExecuteUbergraph_RewardWidget::Temp_struct_Variable5' has a wrong offset!");
static_assert(offsetof(RewardWidget_C_ExecuteUbergraph_RewardWidget, Temp_struct_Variable6) == 0x0000DC, "Member 'RewardWidget_C_ExecuteUbergraph_RewardWidget::Temp_struct_Variable6' has a wrong offset!");
static_assert(offsetof(RewardWidget_C_ExecuteUbergraph_RewardWidget, Temp_byte_Variable10) == 0x0000EC, "Member 'RewardWidget_C_ExecuteUbergraph_RewardWidget::Temp_byte_Variable10' has a wrong offset!");
static_assert(offsetof(RewardWidget_C_ExecuteUbergraph_RewardWidget, Temp_struct_Variable7) == 0x0000F0, "Member 'RewardWidget_C_ExecuteUbergraph_RewardWidget::Temp_struct_Variable7' has a wrong offset!");
static_assert(offsetof(RewardWidget_C_ExecuteUbergraph_RewardWidget, Temp_struct_Variable8) == 0x000100, "Member 'RewardWidget_C_ExecuteUbergraph_RewardWidget::Temp_struct_Variable8' has a wrong offset!");
static_assert(offsetof(RewardWidget_C_ExecuteUbergraph_RewardWidget, Temp_struct_Variable9) == 0x000110, "Member 'RewardWidget_C_ExecuteUbergraph_RewardWidget::Temp_struct_Variable9' has a wrong offset!");
static_assert(offsetof(RewardWidget_C_ExecuteUbergraph_RewardWidget, Temp_struct_Variable10) == 0x000120, "Member 'RewardWidget_C_ExecuteUbergraph_RewardWidget::Temp_struct_Variable10' has a wrong offset!");
static_assert(offsetof(RewardWidget_C_ExecuteUbergraph_RewardWidget, Temp_byte_Variable11) == 0x000130, "Member 'RewardWidget_C_ExecuteUbergraph_RewardWidget::Temp_byte_Variable11' has a wrong offset!");
static_assert(offsetof(RewardWidget_C_ExecuteUbergraph_RewardWidget, Temp_byte_Variable12) == 0x000131, "Member 'RewardWidget_C_ExecuteUbergraph_RewardWidget::Temp_byte_Variable12' has a wrong offset!");
static_assert(offsetof(RewardWidget_C_ExecuteUbergraph_RewardWidget, Temp_byte_Variable13) == 0x000132, "Member 'RewardWidget_C_ExecuteUbergraph_RewardWidget::Temp_byte_Variable13' has a wrong offset!");
static_assert(offsetof(RewardWidget_C_ExecuteUbergraph_RewardWidget, Temp_object_Variable16) == 0x000138, "Member 'RewardWidget_C_ExecuteUbergraph_RewardWidget::Temp_object_Variable16' has a wrong offset!");
static_assert(offsetof(RewardWidget_C_ExecuteUbergraph_RewardWidget, Temp_object_Variable17) == 0x000140, "Member 'RewardWidget_C_ExecuteUbergraph_RewardWidget::Temp_object_Variable17' has a wrong offset!");
static_assert(offsetof(RewardWidget_C_ExecuteUbergraph_RewardWidget, Temp_object_Variable18) == 0x000148, "Member 'RewardWidget_C_ExecuteUbergraph_RewardWidget::Temp_object_Variable18' has a wrong offset!");
static_assert(offsetof(RewardWidget_C_ExecuteUbergraph_RewardWidget, Temp_object_Variable19) == 0x000150, "Member 'RewardWidget_C_ExecuteUbergraph_RewardWidget::Temp_object_Variable19' has a wrong offset!");
static_assert(offsetof(RewardWidget_C_ExecuteUbergraph_RewardWidget, Temp_object_Variable20) == 0x000158, "Member 'RewardWidget_C_ExecuteUbergraph_RewardWidget::Temp_object_Variable20' has a wrong offset!");
static_assert(offsetof(RewardWidget_C_ExecuteUbergraph_RewardWidget, Temp_bool_Variable) == 0x000160, "Member 'RewardWidget_C_ExecuteUbergraph_RewardWidget::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(RewardWidget_C_ExecuteUbergraph_RewardWidget, Temp_float_Variable) == 0x000164, "Member 'RewardWidget_C_ExecuteUbergraph_RewardWidget::Temp_float_Variable' has a wrong offset!");
static_assert(offsetof(RewardWidget_C_ExecuteUbergraph_RewardWidget, Temp_byte_Variable14) == 0x000168, "Member 'RewardWidget_C_ExecuteUbergraph_RewardWidget::Temp_byte_Variable14' has a wrong offset!");
static_assert(offsetof(RewardWidget_C_ExecuteUbergraph_RewardWidget, Temp_byte_Variable15) == 0x000169, "Member 'RewardWidget_C_ExecuteUbergraph_RewardWidget::Temp_byte_Variable15' has a wrong offset!");
static_assert(offsetof(RewardWidget_C_ExecuteUbergraph_RewardWidget, Temp_byte_Variable16) == 0x00016A, "Member 'RewardWidget_C_ExecuteUbergraph_RewardWidget::Temp_byte_Variable16' has a wrong offset!");
static_assert(offsetof(RewardWidget_C_ExecuteUbergraph_RewardWidget, Temp_byte_Variable17) == 0x00016B, "Member 'RewardWidget_C_ExecuteUbergraph_RewardWidget::Temp_byte_Variable17' has a wrong offset!");
static_assert(offsetof(RewardWidget_C_ExecuteUbergraph_RewardWidget, Temp_byte_Variable18) == 0x00016C, "Member 'RewardWidget_C_ExecuteUbergraph_RewardWidget::Temp_byte_Variable18' has a wrong offset!");
static_assert(offsetof(RewardWidget_C_ExecuteUbergraph_RewardWidget, Temp_struct_Variable11) == 0x000170, "Member 'RewardWidget_C_ExecuteUbergraph_RewardWidget::Temp_struct_Variable11' has a wrong offset!");
static_assert(offsetof(RewardWidget_C_ExecuteUbergraph_RewardWidget, Temp_struct_Variable12) == 0x000178, "Member 'RewardWidget_C_ExecuteUbergraph_RewardWidget::Temp_struct_Variable12' has a wrong offset!");
static_assert(offsetof(RewardWidget_C_ExecuteUbergraph_RewardWidget, Temp_struct_Variable13) == 0x000180, "Member 'RewardWidget_C_ExecuteUbergraph_RewardWidget::Temp_struct_Variable13' has a wrong offset!");
static_assert(offsetof(RewardWidget_C_ExecuteUbergraph_RewardWidget, Temp_byte_Variable19) == 0x000188, "Member 'RewardWidget_C_ExecuteUbergraph_RewardWidget::Temp_byte_Variable19' has a wrong offset!");
static_assert(offsetof(RewardWidget_C_ExecuteUbergraph_RewardWidget, K2Node_Event_ItemRarity) == 0x000189, "Member 'RewardWidget_C_ExecuteUbergraph_RewardWidget::K2Node_Event_ItemRarity' has a wrong offset!");
static_assert(offsetof(RewardWidget_C_ExecuteUbergraph_RewardWidget, K2Node_Event_ItemType) == 0x00018A, "Member 'RewardWidget_C_ExecuteUbergraph_RewardWidget::K2Node_Event_ItemType' has a wrong offset!");
static_assert(offsetof(RewardWidget_C_ExecuteUbergraph_RewardWidget, K2Node_Event_State) == 0x00018B, "Member 'RewardWidget_C_ExecuteUbergraph_RewardWidget::K2Node_Event_State' has a wrong offset!");
static_assert(offsetof(RewardWidget_C_ExecuteUbergraph_RewardWidget, CallFunc_Get_Type_Switcher_Index_Index) == 0x00018C, "Member 'RewardWidget_C_ExecuteUbergraph_RewardWidget::CallFunc_Get_Type_Switcher_Index_Index' has a wrong offset!");
static_assert(offsetof(RewardWidget_C_ExecuteUbergraph_RewardWidget, K2Node_Select_Default) == 0x000190, "Member 'RewardWidget_C_ExecuteUbergraph_RewardWidget::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(RewardWidget_C_ExecuteUbergraph_RewardWidget, K2Node_Select2_Default) == 0x000194, "Member 'RewardWidget_C_ExecuteUbergraph_RewardWidget::K2Node_Select2_Default' has a wrong offset!");
static_assert(offsetof(RewardWidget_C_ExecuteUbergraph_RewardWidget, K2Node_Select3_Default) == 0x0001A4, "Member 'RewardWidget_C_ExecuteUbergraph_RewardWidget::K2Node_Select3_Default' has a wrong offset!");
static_assert(offsetof(RewardWidget_C_ExecuteUbergraph_RewardWidget, K2Node_Select4_Default) == 0x0001B4, "Member 'RewardWidget_C_ExecuteUbergraph_RewardWidget::K2Node_Select4_Default' has a wrong offset!");
static_assert(offsetof(RewardWidget_C_ExecuteUbergraph_RewardWidget, K2Node_Select5_Default) == 0x0001B8, "Member 'RewardWidget_C_ExecuteUbergraph_RewardWidget::K2Node_Select5_Default' has a wrong offset!");
static_assert(offsetof(RewardWidget_C_ExecuteUbergraph_RewardWidget, K2Node_Select6_Default) == 0x0001C0, "Member 'RewardWidget_C_ExecuteUbergraph_RewardWidget::K2Node_Select6_Default' has a wrong offset!");
static_assert(offsetof(RewardWidget_C_ExecuteUbergraph_RewardWidget, K2Node_Select7_Default) == 0x0001C8, "Member 'RewardWidget_C_ExecuteUbergraph_RewardWidget::K2Node_Select7_Default' has a wrong offset!");
static_assert(offsetof(RewardWidget_C_ExecuteUbergraph_RewardWidget, K2Node_Select8_Default) == 0x0001D0, "Member 'RewardWidget_C_ExecuteUbergraph_RewardWidget::K2Node_Select8_Default' has a wrong offset!");
static_assert(offsetof(RewardWidget_C_ExecuteUbergraph_RewardWidget, K2Node_Select9_Default) == 0x0001D8, "Member 'RewardWidget_C_ExecuteUbergraph_RewardWidget::K2Node_Select9_Default' has a wrong offset!");
static_assert(offsetof(RewardWidget_C_ExecuteUbergraph_RewardWidget, Temp_byte_Variable20) == 0x0001E0, "Member 'RewardWidget_C_ExecuteUbergraph_RewardWidget::Temp_byte_Variable20' has a wrong offset!");
static_assert(offsetof(RewardWidget_C_ExecuteUbergraph_RewardWidget, Temp_byte_Variable21) == 0x0001E1, "Member 'RewardWidget_C_ExecuteUbergraph_RewardWidget::Temp_byte_Variable21' has a wrong offset!");
static_assert(offsetof(RewardWidget_C_ExecuteUbergraph_RewardWidget, K2Node_Event_MouseEvent2) == 0x0001E8, "Member 'RewardWidget_C_ExecuteUbergraph_RewardWidget::K2Node_Event_MouseEvent2' has a wrong offset!");
static_assert(offsetof(RewardWidget_C_ExecuteUbergraph_RewardWidget, K2Node_Event_MyGeometry) == 0x000258, "Member 'RewardWidget_C_ExecuteUbergraph_RewardWidget::K2Node_Event_MyGeometry' has a wrong offset!");
static_assert(offsetof(RewardWidget_C_ExecuteUbergraph_RewardWidget, K2Node_Event_MouseEvent) == 0x000290, "Member 'RewardWidget_C_ExecuteUbergraph_RewardWidget::K2Node_Event_MouseEvent' has a wrong offset!");
static_assert(offsetof(RewardWidget_C_ExecuteUbergraph_RewardWidget, Temp_byte_Variable22) == 0x000300, "Member 'RewardWidget_C_ExecuteUbergraph_RewardWidget::Temp_byte_Variable22' has a wrong offset!");
static_assert(offsetof(RewardWidget_C_ExecuteUbergraph_RewardWidget, K2Node_MakeStruct_SlateColor) == 0x000308, "Member 'RewardWidget_C_ExecuteUbergraph_RewardWidget::K2Node_MakeStruct_SlateColor' has a wrong offset!");
static_assert(offsetof(RewardWidget_C_ExecuteUbergraph_RewardWidget, K2Node_DynamicCast_AsGlowing_Rarity_Text) == 0x000330, "Member 'RewardWidget_C_ExecuteUbergraph_RewardWidget::K2Node_DynamicCast_AsGlowing_Rarity_Text' has a wrong offset!");
static_assert(offsetof(RewardWidget_C_ExecuteUbergraph_RewardWidget, K2Node_DynamicCast_bSuccess) == 0x000338, "Member 'RewardWidget_C_ExecuteUbergraph_RewardWidget::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(RewardWidget_C_ExecuteUbergraph_RewardWidget, K2Node_MakeStruct_SlateColor2) == 0x000340, "Member 'RewardWidget_C_ExecuteUbergraph_RewardWidget::K2Node_MakeStruct_SlateColor2' has a wrong offset!");
static_assert(offsetof(RewardWidget_C_ExecuteUbergraph_RewardWidget, K2Node_Select10_Default) == 0x000368, "Member 'RewardWidget_C_ExecuteUbergraph_RewardWidget::K2Node_Select10_Default' has a wrong offset!");
static_assert(offsetof(RewardWidget_C_ExecuteUbergraph_RewardWidget, Temp_byte_Variable23) == 0x000390, "Member 'RewardWidget_C_ExecuteUbergraph_RewardWidget::Temp_byte_Variable23' has a wrong offset!");
static_assert(offsetof(RewardWidget_C_ExecuteUbergraph_RewardWidget, Temp_byte_Variable24) == 0x000391, "Member 'RewardWidget_C_ExecuteUbergraph_RewardWidget::Temp_byte_Variable24' has a wrong offset!");
static_assert(offsetof(RewardWidget_C_ExecuteUbergraph_RewardWidget, Temp_byte_Variable25) == 0x000392, "Member 'RewardWidget_C_ExecuteUbergraph_RewardWidget::Temp_byte_Variable25' has a wrong offset!");
static_assert(offsetof(RewardWidget_C_ExecuteUbergraph_RewardWidget, Temp_struct_Variable14) == 0x000394, "Member 'RewardWidget_C_ExecuteUbergraph_RewardWidget::Temp_struct_Variable14' has a wrong offset!");
static_assert(offsetof(RewardWidget_C_ExecuteUbergraph_RewardWidget, K2Node_Select11_Default) == 0x0003A4, "Member 'RewardWidget_C_ExecuteUbergraph_RewardWidget::K2Node_Select11_Default' has a wrong offset!");
static_assert(offsetof(RewardWidget_C_ExecuteUbergraph_RewardWidget, Temp_struct_Variable15) == 0x0003A8, "Member 'RewardWidget_C_ExecuteUbergraph_RewardWidget::Temp_struct_Variable15' has a wrong offset!");
static_assert(offsetof(RewardWidget_C_ExecuteUbergraph_RewardWidget, K2Node_Select12_Default) == 0x0003B8, "Member 'RewardWidget_C_ExecuteUbergraph_RewardWidget::K2Node_Select12_Default' has a wrong offset!");
static_assert(offsetof(RewardWidget_C_ExecuteUbergraph_RewardWidget, CallFunc_GetEndTime_ReturnValue) == 0x0003C0, "Member 'RewardWidget_C_ExecuteUbergraph_RewardWidget::CallFunc_GetEndTime_ReturnValue' has a wrong offset!");
static_assert(offsetof(RewardWidget_C_ExecuteUbergraph_RewardWidget, Temp_struct_Variable16) == 0x0003C4, "Member 'RewardWidget_C_ExecuteUbergraph_RewardWidget::Temp_struct_Variable16' has a wrong offset!");
static_assert(offsetof(RewardWidget_C_ExecuteUbergraph_RewardWidget, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x0003D4, "Member 'RewardWidget_C_ExecuteUbergraph_RewardWidget::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(RewardWidget_C_ExecuteUbergraph_RewardWidget, Temp_struct_Variable17) == 0x0003D8, "Member 'RewardWidget_C_ExecuteUbergraph_RewardWidget::Temp_struct_Variable17' has a wrong offset!");
static_assert(offsetof(RewardWidget_C_ExecuteUbergraph_RewardWidget, K2Node_Select13_Default) == 0x0003E8, "Member 'RewardWidget_C_ExecuteUbergraph_RewardWidget::K2Node_Select13_Default' has a wrong offset!");
static_assert(offsetof(RewardWidget_C_ExecuteUbergraph_RewardWidget, Temp_struct_Variable18) == 0x0003EC, "Member 'RewardWidget_C_ExecuteUbergraph_RewardWidget::Temp_struct_Variable18' has a wrong offset!");
static_assert(offsetof(RewardWidget_C_ExecuteUbergraph_RewardWidget, K2Node_Event_RoundsRemaining) == 0x0003FC, "Member 'RewardWidget_C_ExecuteUbergraph_RewardWidget::K2Node_Event_RoundsRemaining' has a wrong offset!");
static_assert(offsetof(RewardWidget_C_ExecuteUbergraph_RewardWidget, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000400, "Member 'RewardWidget_C_ExecuteUbergraph_RewardWidget::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(RewardWidget_C_ExecuteUbergraph_RewardWidget, CallFunc_SelectFloat_ReturnValue) == 0x000404, "Member 'RewardWidget_C_ExecuteUbergraph_RewardWidget::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(RewardWidget_C_ExecuteUbergraph_RewardWidget, Temp_byte_Variable26) == 0x000408, "Member 'RewardWidget_C_ExecuteUbergraph_RewardWidget::Temp_byte_Variable26' has a wrong offset!");
static_assert(offsetof(RewardWidget_C_ExecuteUbergraph_RewardWidget, K2Node_Event_IsDesignTime) == 0x000409, "Member 'RewardWidget_C_ExecuteUbergraph_RewardWidget::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(RewardWidget_C_ExecuteUbergraph_RewardWidget, K2Node_Select14_Default) == 0x00040C, "Member 'RewardWidget_C_ExecuteUbergraph_RewardWidget::K2Node_Select14_Default' has a wrong offset!");

// Function RewardWidget.RewardWidget_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct RewardWidget_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(RewardWidget_C_PreConstruct) == 0x000001, "Wrong alignment on RewardWidget_C_PreConstruct");
static_assert(sizeof(RewardWidget_C_PreConstruct) == 0x000001, "Wrong size on RewardWidget_C_PreConstruct");
static_assert(offsetof(RewardWidget_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'RewardWidget_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function RewardWidget.RewardWidget_C.OnVaultFlash
// 0x0004 (0x0004 - 0x0000)
struct RewardWidget_C_OnVaultFlash final
{
public:
	int32                                         RoundsRemaining;                                   // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(RewardWidget_C_OnVaultFlash) == 0x000004, "Wrong alignment on RewardWidget_C_OnVaultFlash");
static_assert(sizeof(RewardWidget_C_OnVaultFlash) == 0x000004, "Wrong size on RewardWidget_C_OnVaultFlash");
static_assert(offsetof(RewardWidget_C_OnVaultFlash, RoundsRemaining) == 0x000000, "Member 'RewardWidget_C_OnVaultFlash::RoundsRemaining' has a wrong offset!");

// Function RewardWidget.RewardWidget_C.OnMouseEnter
// 0x00A8 (0x00A8 - 0x0000)
struct RewardWidget_C_OnMouseEnter final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FPointerEvent                          MouseEvent;                                        // 0x0038(0x0070)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(RewardWidget_C_OnMouseEnter) == 0x000008, "Wrong alignment on RewardWidget_C_OnMouseEnter");
static_assert(sizeof(RewardWidget_C_OnMouseEnter) == 0x0000A8, "Wrong size on RewardWidget_C_OnMouseEnter");
static_assert(offsetof(RewardWidget_C_OnMouseEnter, MyGeometry) == 0x000000, "Member 'RewardWidget_C_OnMouseEnter::MyGeometry' has a wrong offset!");
static_assert(offsetof(RewardWidget_C_OnMouseEnter, MouseEvent) == 0x000038, "Member 'RewardWidget_C_OnMouseEnter::MouseEvent' has a wrong offset!");

// Function RewardWidget.RewardWidget_C.OnMouseLeave
// 0x0070 (0x0070 - 0x0000)
struct RewardWidget_C_OnMouseLeave final
{
public:
	struct FPointerEvent                          MouseEvent;                                        // 0x0000(0x0070)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(RewardWidget_C_OnMouseLeave) == 0x000008, "Wrong alignment on RewardWidget_C_OnMouseLeave");
static_assert(sizeof(RewardWidget_C_OnMouseLeave) == 0x000070, "Wrong size on RewardWidget_C_OnMouseLeave");
static_assert(offsetof(RewardWidget_C_OnMouseLeave, MouseEvent) == 0x000000, "Member 'RewardWidget_C_OnMouseLeave::MouseEvent' has a wrong offset!");

// Function RewardWidget.RewardWidget_C.OnActiveStateSet
// 0x0001 (0x0001 - 0x0000)
struct RewardWidget_C_OnActiveStateSet final
{
public:
	EOrionRewardWidgetState                       State;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(RewardWidget_C_OnActiveStateSet) == 0x000001, "Wrong alignment on RewardWidget_C_OnActiveStateSet");
static_assert(sizeof(RewardWidget_C_OnActiveStateSet) == 0x000001, "Wrong size on RewardWidget_C_OnActiveStateSet");
static_assert(offsetof(RewardWidget_C_OnActiveStateSet, State) == 0x000000, "Member 'RewardWidget_C_OnActiveStateSet::State' has a wrong offset!");

// Function RewardWidget.RewardWidget_C.OnDataSet
// 0x0002 (0x0002 - 0x0000)
struct RewardWidget_C_OnDataSet final
{
public:
	EOrionItemRarity                              ItemRarity;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EOrionItemType                                ItemType;                                          // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(RewardWidget_C_OnDataSet) == 0x000001, "Wrong alignment on RewardWidget_C_OnDataSet");
static_assert(sizeof(RewardWidget_C_OnDataSet) == 0x000002, "Wrong size on RewardWidget_C_OnDataSet");
static_assert(offsetof(RewardWidget_C_OnDataSet, ItemRarity) == 0x000000, "Member 'RewardWidget_C_OnDataSet::ItemRarity' has a wrong offset!");
static_assert(offsetof(RewardWidget_C_OnDataSet, ItemType) == 0x000001, "Member 'RewardWidget_C_OnDataSet::ItemType' has a wrong offset!");

// Function RewardWidget.RewardWidget_C.Get Type Switcher Index
// 0x008C (0x008C - 0x0000)
struct RewardWidget_C_Get_Type_Switcher_Index final
{
public:
	EOrionItemType                                Type;                                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Index_0;                                           // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EOrionItemType                                Temp_byte_Variable;                                // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable2;                                // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable3;                                // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable4;                                // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable5;                                // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable6;                                // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable7;                                // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable8;                                // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable9;                                // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable10;                               // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable11;                               // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable12;                               // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable13;                               // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable14;                               // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable15;                               // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable16;                               // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable17;                               // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable18;                               // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable19;                               // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable20;                               // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable21;                               // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable22;                               // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable23;                               // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable24;                               // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable25;                               // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable26;                               // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable27;                               // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable28;                               // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable29;                               // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable30;                               // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable31;                               // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Select_Default;                             // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(RewardWidget_C_Get_Type_Switcher_Index) == 0x000004, "Wrong alignment on RewardWidget_C_Get_Type_Switcher_Index");
static_assert(sizeof(RewardWidget_C_Get_Type_Switcher_Index) == 0x00008C, "Wrong size on RewardWidget_C_Get_Type_Switcher_Index");
static_assert(offsetof(RewardWidget_C_Get_Type_Switcher_Index, Type) == 0x000000, "Member 'RewardWidget_C_Get_Type_Switcher_Index::Type' has a wrong offset!");
static_assert(offsetof(RewardWidget_C_Get_Type_Switcher_Index, Index_0) == 0x000004, "Member 'RewardWidget_C_Get_Type_Switcher_Index::Index_0' has a wrong offset!");
static_assert(offsetof(RewardWidget_C_Get_Type_Switcher_Index, Temp_byte_Variable) == 0x000008, "Member 'RewardWidget_C_Get_Type_Switcher_Index::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(RewardWidget_C_Get_Type_Switcher_Index, Temp_int_Variable) == 0x00000C, "Member 'RewardWidget_C_Get_Type_Switcher_Index::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(RewardWidget_C_Get_Type_Switcher_Index, Temp_int_Variable2) == 0x000010, "Member 'RewardWidget_C_Get_Type_Switcher_Index::Temp_int_Variable2' has a wrong offset!");
static_assert(offsetof(RewardWidget_C_Get_Type_Switcher_Index, Temp_int_Variable3) == 0x000014, "Member 'RewardWidget_C_Get_Type_Switcher_Index::Temp_int_Variable3' has a wrong offset!");
static_assert(offsetof(RewardWidget_C_Get_Type_Switcher_Index, Temp_int_Variable4) == 0x000018, "Member 'RewardWidget_C_Get_Type_Switcher_Index::Temp_int_Variable4' has a wrong offset!");
static_assert(offsetof(RewardWidget_C_Get_Type_Switcher_Index, Temp_int_Variable5) == 0x00001C, "Member 'RewardWidget_C_Get_Type_Switcher_Index::Temp_int_Variable5' has a wrong offset!");
static_assert(offsetof(RewardWidget_C_Get_Type_Switcher_Index, Temp_int_Variable6) == 0x000020, "Member 'RewardWidget_C_Get_Type_Switcher_Index::Temp_int_Variable6' has a wrong offset!");
static_assert(offsetof(RewardWidget_C_Get_Type_Switcher_Index, Temp_int_Variable7) == 0x000024, "Member 'RewardWidget_C_Get_Type_Switcher_Index::Temp_int_Variable7' has a wrong offset!");
static_assert(offsetof(RewardWidget_C_Get_Type_Switcher_Index, Temp_int_Variable8) == 0x000028, "Member 'RewardWidget_C_Get_Type_Switcher_Index::Temp_int_Variable8' has a wrong offset!");
static_assert(offsetof(RewardWidget_C_Get_Type_Switcher_Index, Temp_int_Variable9) == 0x00002C, "Member 'RewardWidget_C_Get_Type_Switcher_Index::Temp_int_Variable9' has a wrong offset!");
static_assert(offsetof(RewardWidget_C_Get_Type_Switcher_Index, Temp_int_Variable10) == 0x000030, "Member 'RewardWidget_C_Get_Type_Switcher_Index::Temp_int_Variable10' has a wrong offset!");
static_assert(offsetof(RewardWidget_C_Get_Type_Switcher_Index, Temp_int_Variable11) == 0x000034, "Member 'RewardWidget_C_Get_Type_Switcher_Index::Temp_int_Variable11' has a wrong offset!");
static_assert(offsetof(RewardWidget_C_Get_Type_Switcher_Index, Temp_int_Variable12) == 0x000038, "Member 'RewardWidget_C_Get_Type_Switcher_Index::Temp_int_Variable12' has a wrong offset!");
static_assert(offsetof(RewardWidget_C_Get_Type_Switcher_Index, Temp_int_Variable13) == 0x00003C, "Member 'RewardWidget_C_Get_Type_Switcher_Index::Temp_int_Variable13' has a wrong offset!");
static_assert(offsetof(RewardWidget_C_Get_Type_Switcher_Index, Temp_int_Variable14) == 0x000040, "Member 'RewardWidget_C_Get_Type_Switcher_Index::Temp_int_Variable14' has a wrong offset!");
static_assert(offsetof(RewardWidget_C_Get_Type_Switcher_Index, Temp_int_Variable15) == 0x000044, "Member 'RewardWidget_C_Get_Type_Switcher_Index::Temp_int_Variable15' has a wrong offset!");
static_assert(offsetof(RewardWidget_C_Get_Type_Switcher_Index, Temp_int_Variable16) == 0x000048, "Member 'RewardWidget_C_Get_Type_Switcher_Index::Temp_int_Variable16' has a wrong offset!");
static_assert(offsetof(RewardWidget_C_Get_Type_Switcher_Index, Temp_int_Variable17) == 0x00004C, "Member 'RewardWidget_C_Get_Type_Switcher_Index::Temp_int_Variable17' has a wrong offset!");
static_assert(offsetof(RewardWidget_C_Get_Type_Switcher_Index, Temp_int_Variable18) == 0x000050, "Member 'RewardWidget_C_Get_Type_Switcher_Index::Temp_int_Variable18' has a wrong offset!");
static_assert(offsetof(RewardWidget_C_Get_Type_Switcher_Index, Temp_int_Variable19) == 0x000054, "Member 'RewardWidget_C_Get_Type_Switcher_Index::Temp_int_Variable19' has a wrong offset!");
static_assert(offsetof(RewardWidget_C_Get_Type_Switcher_Index, Temp_int_Variable20) == 0x000058, "Member 'RewardWidget_C_Get_Type_Switcher_Index::Temp_int_Variable20' has a wrong offset!");
static_assert(offsetof(RewardWidget_C_Get_Type_Switcher_Index, Temp_int_Variable21) == 0x00005C, "Member 'RewardWidget_C_Get_Type_Switcher_Index::Temp_int_Variable21' has a wrong offset!");
static_assert(offsetof(RewardWidget_C_Get_Type_Switcher_Index, Temp_int_Variable22) == 0x000060, "Member 'RewardWidget_C_Get_Type_Switcher_Index::Temp_int_Variable22' has a wrong offset!");
static_assert(offsetof(RewardWidget_C_Get_Type_Switcher_Index, Temp_int_Variable23) == 0x000064, "Member 'RewardWidget_C_Get_Type_Switcher_Index::Temp_int_Variable23' has a wrong offset!");
static_assert(offsetof(RewardWidget_C_Get_Type_Switcher_Index, Temp_int_Variable24) == 0x000068, "Member 'RewardWidget_C_Get_Type_Switcher_Index::Temp_int_Variable24' has a wrong offset!");
static_assert(offsetof(RewardWidget_C_Get_Type_Switcher_Index, Temp_int_Variable25) == 0x00006C, "Member 'RewardWidget_C_Get_Type_Switcher_Index::Temp_int_Variable25' has a wrong offset!");
static_assert(offsetof(RewardWidget_C_Get_Type_Switcher_Index, Temp_int_Variable26) == 0x000070, "Member 'RewardWidget_C_Get_Type_Switcher_Index::Temp_int_Variable26' has a wrong offset!");
static_assert(offsetof(RewardWidget_C_Get_Type_Switcher_Index, Temp_int_Variable27) == 0x000074, "Member 'RewardWidget_C_Get_Type_Switcher_Index::Temp_int_Variable27' has a wrong offset!");
static_assert(offsetof(RewardWidget_C_Get_Type_Switcher_Index, Temp_int_Variable28) == 0x000078, "Member 'RewardWidget_C_Get_Type_Switcher_Index::Temp_int_Variable28' has a wrong offset!");
static_assert(offsetof(RewardWidget_C_Get_Type_Switcher_Index, Temp_int_Variable29) == 0x00007C, "Member 'RewardWidget_C_Get_Type_Switcher_Index::Temp_int_Variable29' has a wrong offset!");
static_assert(offsetof(RewardWidget_C_Get_Type_Switcher_Index, Temp_int_Variable30) == 0x000080, "Member 'RewardWidget_C_Get_Type_Switcher_Index::Temp_int_Variable30' has a wrong offset!");
static_assert(offsetof(RewardWidget_C_Get_Type_Switcher_Index, Temp_int_Variable31) == 0x000084, "Member 'RewardWidget_C_Get_Type_Switcher_Index::Temp_int_Variable31' has a wrong offset!");
static_assert(offsetof(RewardWidget_C_Get_Type_Switcher_Index, K2Node_Select_Default) == 0x000088, "Member 'RewardWidget_C_Get_Type_Switcher_Index::K2Node_Select_Default' has a wrong offset!");

}

