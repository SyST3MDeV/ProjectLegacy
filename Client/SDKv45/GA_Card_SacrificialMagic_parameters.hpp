#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GA_Card_SacrificialMagic

#include "Basic.hpp"

#include "GameplayAbilities_structs.hpp"
#include "GameplayTags_structs.hpp"


namespace SDK::Params
{

// Function GA_Card_SacrificialMagic.GA_Card_SacrificialMagic_C.ExecuteUbergraph_GA_Card_SacrificialMagic
// 0x0168 (0x0168 - 0x0000)
struct GA_Card_SacrificialMagic_C_ExecuteUbergraph_GA_Card_SacrificialMagic final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_bMatchesComparison2;            // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_CustomEvent_CurrentRatio2;                  // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable;                               // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAbilityTask_WaitAttributeChangeRatioThreshold* CallFunc_WaitForAttributeChangeRatioThreshold_ReturnValue; // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(bool bMatchesComparison, float CurrentRatio)> K2Node_CreateDelegate_OutputDelegate;              // 0x0020(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_CustomEvent_bMatchesComparison;             // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_32[0x2];                                       // 0x0032(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_CustomEvent_CurrentRatio;                   // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable2;                              // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable2;                               // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3D[0x3];                                       // 0x003D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UAbilityTask_WaitAttributeChangeRatioThreshold* CallFunc_WaitForAttributeChangeRatioThreshold_ReturnValue2; // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate2;             // 0x0048(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue2;                     // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_59[0x7];                                       // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate3;             // 0x0060(0x0010)(ZeroConstructor, NoDestructor)
	class UAbilityTask_StartAbilityState*         CallFunc_StartAbilityState_ReturnValue;            // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayAbilityActorInfo              CallFunc_GetActorInfo_ReturnValue;                 // 0x0078(0x0040)(ContainsInstancedReference)
	bool                                          CallFunc_RemoveActiveGameplayEffect_ReturnValue;   // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue3;                     // 0x00B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_BA[0x6];                                       // 0x00BA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayAbilityActorInfo              CallFunc_GetActorInfo_ReturnValue2;                // 0x00C0(0x0040)(ContainsInstancedReference)
	struct FGameplayAbilityActorInfo              CallFunc_GetActorInfo_ReturnValue3;                // 0x0100(0x0040)(ContainsInstancedReference)
	int32                                         CallFunc_GetAbilityLevel_ReturnValue;              // 0x0140(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_144[0x4];                                      // 0x0144(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(bool bMatchesComparison, float CurrentRatio)> K2Node_CreateDelegate_OutputDelegate4;             // 0x0148(0x0010)(ZeroConstructor, NoDestructor)
	struct FActiveGameplayEffectHandle            CallFunc_BP_ApplyGameplayEffectToOwner_ReturnValue; // 0x0158(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_RemoveActiveGameplayEffect_ReturnValue2;  // 0x0160(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_RemoveActiveGameplayEffect_ReturnValue3;  // 0x0161(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(GA_Card_SacrificialMagic_C_ExecuteUbergraph_GA_Card_SacrificialMagic) == 0x000008, "Wrong alignment on GA_Card_SacrificialMagic_C_ExecuteUbergraph_GA_Card_SacrificialMagic");
static_assert(sizeof(GA_Card_SacrificialMagic_C_ExecuteUbergraph_GA_Card_SacrificialMagic) == 0x000168, "Wrong size on GA_Card_SacrificialMagic_C_ExecuteUbergraph_GA_Card_SacrificialMagic");
static_assert(offsetof(GA_Card_SacrificialMagic_C_ExecuteUbergraph_GA_Card_SacrificialMagic, EntryPoint) == 0x000000, "Member 'GA_Card_SacrificialMagic_C_ExecuteUbergraph_GA_Card_SacrificialMagic::EntryPoint' has a wrong offset!");
static_assert(offsetof(GA_Card_SacrificialMagic_C_ExecuteUbergraph_GA_Card_SacrificialMagic, K2Node_CustomEvent_bMatchesComparison2) == 0x000004, "Member 'GA_Card_SacrificialMagic_C_ExecuteUbergraph_GA_Card_SacrificialMagic::K2Node_CustomEvent_bMatchesComparison2' has a wrong offset!");
static_assert(offsetof(GA_Card_SacrificialMagic_C_ExecuteUbergraph_GA_Card_SacrificialMagic, K2Node_CustomEvent_CurrentRatio2) == 0x000008, "Member 'GA_Card_SacrificialMagic_C_ExecuteUbergraph_GA_Card_SacrificialMagic::K2Node_CustomEvent_CurrentRatio2' has a wrong offset!");
static_assert(offsetof(GA_Card_SacrificialMagic_C_ExecuteUbergraph_GA_Card_SacrificialMagic, Temp_float_Variable) == 0x00000C, "Member 'GA_Card_SacrificialMagic_C_ExecuteUbergraph_GA_Card_SacrificialMagic::Temp_float_Variable' has a wrong offset!");
static_assert(offsetof(GA_Card_SacrificialMagic_C_ExecuteUbergraph_GA_Card_SacrificialMagic, Temp_bool_Variable) == 0x000010, "Member 'GA_Card_SacrificialMagic_C_ExecuteUbergraph_GA_Card_SacrificialMagic::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(GA_Card_SacrificialMagic_C_ExecuteUbergraph_GA_Card_SacrificialMagic, CallFunc_WaitForAttributeChangeRatioThreshold_ReturnValue) == 0x000018, "Member 'GA_Card_SacrificialMagic_C_ExecuteUbergraph_GA_Card_SacrificialMagic::CallFunc_WaitForAttributeChangeRatioThreshold_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Card_SacrificialMagic_C_ExecuteUbergraph_GA_Card_SacrificialMagic, K2Node_CreateDelegate_OutputDelegate) == 0x000020, "Member 'GA_Card_SacrificialMagic_C_ExecuteUbergraph_GA_Card_SacrificialMagic::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(GA_Card_SacrificialMagic_C_ExecuteUbergraph_GA_Card_SacrificialMagic, CallFunc_IsValid_ReturnValue) == 0x000030, "Member 'GA_Card_SacrificialMagic_C_ExecuteUbergraph_GA_Card_SacrificialMagic::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Card_SacrificialMagic_C_ExecuteUbergraph_GA_Card_SacrificialMagic, K2Node_CustomEvent_bMatchesComparison) == 0x000031, "Member 'GA_Card_SacrificialMagic_C_ExecuteUbergraph_GA_Card_SacrificialMagic::K2Node_CustomEvent_bMatchesComparison' has a wrong offset!");
static_assert(offsetof(GA_Card_SacrificialMagic_C_ExecuteUbergraph_GA_Card_SacrificialMagic, K2Node_CustomEvent_CurrentRatio) == 0x000034, "Member 'GA_Card_SacrificialMagic_C_ExecuteUbergraph_GA_Card_SacrificialMagic::K2Node_CustomEvent_CurrentRatio' has a wrong offset!");
static_assert(offsetof(GA_Card_SacrificialMagic_C_ExecuteUbergraph_GA_Card_SacrificialMagic, Temp_float_Variable2) == 0x000038, "Member 'GA_Card_SacrificialMagic_C_ExecuteUbergraph_GA_Card_SacrificialMagic::Temp_float_Variable2' has a wrong offset!");
static_assert(offsetof(GA_Card_SacrificialMagic_C_ExecuteUbergraph_GA_Card_SacrificialMagic, Temp_bool_Variable2) == 0x00003C, "Member 'GA_Card_SacrificialMagic_C_ExecuteUbergraph_GA_Card_SacrificialMagic::Temp_bool_Variable2' has a wrong offset!");
static_assert(offsetof(GA_Card_SacrificialMagic_C_ExecuteUbergraph_GA_Card_SacrificialMagic, CallFunc_WaitForAttributeChangeRatioThreshold_ReturnValue2) == 0x000040, "Member 'GA_Card_SacrificialMagic_C_ExecuteUbergraph_GA_Card_SacrificialMagic::CallFunc_WaitForAttributeChangeRatioThreshold_ReturnValue2' has a wrong offset!");
static_assert(offsetof(GA_Card_SacrificialMagic_C_ExecuteUbergraph_GA_Card_SacrificialMagic, K2Node_CreateDelegate_OutputDelegate2) == 0x000048, "Member 'GA_Card_SacrificialMagic_C_ExecuteUbergraph_GA_Card_SacrificialMagic::K2Node_CreateDelegate_OutputDelegate2' has a wrong offset!");
static_assert(offsetof(GA_Card_SacrificialMagic_C_ExecuteUbergraph_GA_Card_SacrificialMagic, CallFunc_IsValid_ReturnValue2) == 0x000058, "Member 'GA_Card_SacrificialMagic_C_ExecuteUbergraph_GA_Card_SacrificialMagic::CallFunc_IsValid_ReturnValue2' has a wrong offset!");
static_assert(offsetof(GA_Card_SacrificialMagic_C_ExecuteUbergraph_GA_Card_SacrificialMagic, K2Node_CreateDelegate_OutputDelegate3) == 0x000060, "Member 'GA_Card_SacrificialMagic_C_ExecuteUbergraph_GA_Card_SacrificialMagic::K2Node_CreateDelegate_OutputDelegate3' has a wrong offset!");
static_assert(offsetof(GA_Card_SacrificialMagic_C_ExecuteUbergraph_GA_Card_SacrificialMagic, CallFunc_StartAbilityState_ReturnValue) == 0x000070, "Member 'GA_Card_SacrificialMagic_C_ExecuteUbergraph_GA_Card_SacrificialMagic::CallFunc_StartAbilityState_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Card_SacrificialMagic_C_ExecuteUbergraph_GA_Card_SacrificialMagic, CallFunc_GetActorInfo_ReturnValue) == 0x000078, "Member 'GA_Card_SacrificialMagic_C_ExecuteUbergraph_GA_Card_SacrificialMagic::CallFunc_GetActorInfo_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Card_SacrificialMagic_C_ExecuteUbergraph_GA_Card_SacrificialMagic, CallFunc_RemoveActiveGameplayEffect_ReturnValue) == 0x0000B8, "Member 'GA_Card_SacrificialMagic_C_ExecuteUbergraph_GA_Card_SacrificialMagic::CallFunc_RemoveActiveGameplayEffect_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Card_SacrificialMagic_C_ExecuteUbergraph_GA_Card_SacrificialMagic, CallFunc_IsValid_ReturnValue3) == 0x0000B9, "Member 'GA_Card_SacrificialMagic_C_ExecuteUbergraph_GA_Card_SacrificialMagic::CallFunc_IsValid_ReturnValue3' has a wrong offset!");
static_assert(offsetof(GA_Card_SacrificialMagic_C_ExecuteUbergraph_GA_Card_SacrificialMagic, CallFunc_GetActorInfo_ReturnValue2) == 0x0000C0, "Member 'GA_Card_SacrificialMagic_C_ExecuteUbergraph_GA_Card_SacrificialMagic::CallFunc_GetActorInfo_ReturnValue2' has a wrong offset!");
static_assert(offsetof(GA_Card_SacrificialMagic_C_ExecuteUbergraph_GA_Card_SacrificialMagic, CallFunc_GetActorInfo_ReturnValue3) == 0x000100, "Member 'GA_Card_SacrificialMagic_C_ExecuteUbergraph_GA_Card_SacrificialMagic::CallFunc_GetActorInfo_ReturnValue3' has a wrong offset!");
static_assert(offsetof(GA_Card_SacrificialMagic_C_ExecuteUbergraph_GA_Card_SacrificialMagic, CallFunc_GetAbilityLevel_ReturnValue) == 0x000140, "Member 'GA_Card_SacrificialMagic_C_ExecuteUbergraph_GA_Card_SacrificialMagic::CallFunc_GetAbilityLevel_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Card_SacrificialMagic_C_ExecuteUbergraph_GA_Card_SacrificialMagic, K2Node_CreateDelegate_OutputDelegate4) == 0x000148, "Member 'GA_Card_SacrificialMagic_C_ExecuteUbergraph_GA_Card_SacrificialMagic::K2Node_CreateDelegate_OutputDelegate4' has a wrong offset!");
static_assert(offsetof(GA_Card_SacrificialMagic_C_ExecuteUbergraph_GA_Card_SacrificialMagic, CallFunc_BP_ApplyGameplayEffectToOwner_ReturnValue) == 0x000158, "Member 'GA_Card_SacrificialMagic_C_ExecuteUbergraph_GA_Card_SacrificialMagic::CallFunc_BP_ApplyGameplayEffectToOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Card_SacrificialMagic_C_ExecuteUbergraph_GA_Card_SacrificialMagic, CallFunc_RemoveActiveGameplayEffect_ReturnValue2) == 0x000160, "Member 'GA_Card_SacrificialMagic_C_ExecuteUbergraph_GA_Card_SacrificialMagic::CallFunc_RemoveActiveGameplayEffect_ReturnValue2' has a wrong offset!");
static_assert(offsetof(GA_Card_SacrificialMagic_C_ExecuteUbergraph_GA_Card_SacrificialMagic, CallFunc_RemoveActiveGameplayEffect_ReturnValue3) == 0x000161, "Member 'GA_Card_SacrificialMagic_C_ExecuteUbergraph_GA_Card_SacrificialMagic::CallFunc_RemoveActiveGameplayEffect_ReturnValue3' has a wrong offset!");

// Function GA_Card_SacrificialMagic.GA_Card_SacrificialMagic_C.OnChange_57ADE99A46B9BFB44FE0B9996C284FBE
// 0x0008 (0x0008 - 0x0000)
struct GA_Card_SacrificialMagic_C_OnChange_57ADE99A46B9BFB44FE0B9996C284FBE final
{
public:
	bool                                          bMatchesComparison;                                // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CurrentRatio;                                      // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_Card_SacrificialMagic_C_OnChange_57ADE99A46B9BFB44FE0B9996C284FBE) == 0x000004, "Wrong alignment on GA_Card_SacrificialMagic_C_OnChange_57ADE99A46B9BFB44FE0B9996C284FBE");
static_assert(sizeof(GA_Card_SacrificialMagic_C_OnChange_57ADE99A46B9BFB44FE0B9996C284FBE) == 0x000008, "Wrong size on GA_Card_SacrificialMagic_C_OnChange_57ADE99A46B9BFB44FE0B9996C284FBE");
static_assert(offsetof(GA_Card_SacrificialMagic_C_OnChange_57ADE99A46B9BFB44FE0B9996C284FBE, bMatchesComparison) == 0x000000, "Member 'GA_Card_SacrificialMagic_C_OnChange_57ADE99A46B9BFB44FE0B9996C284FBE::bMatchesComparison' has a wrong offset!");
static_assert(offsetof(GA_Card_SacrificialMagic_C_OnChange_57ADE99A46B9BFB44FE0B9996C284FBE, CurrentRatio) == 0x000004, "Member 'GA_Card_SacrificialMagic_C_OnChange_57ADE99A46B9BFB44FE0B9996C284FBE::CurrentRatio' has a wrong offset!");

// Function GA_Card_SacrificialMagic.GA_Card_SacrificialMagic_C.OnChange_E67AF51C4C28737D261066A7FEC25163
// 0x0008 (0x0008 - 0x0000)
struct GA_Card_SacrificialMagic_C_OnChange_E67AF51C4C28737D261066A7FEC25163 final
{
public:
	bool                                          bMatchesComparison;                                // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CurrentRatio;                                      // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_Card_SacrificialMagic_C_OnChange_E67AF51C4C28737D261066A7FEC25163) == 0x000004, "Wrong alignment on GA_Card_SacrificialMagic_C_OnChange_E67AF51C4C28737D261066A7FEC25163");
static_assert(sizeof(GA_Card_SacrificialMagic_C_OnChange_E67AF51C4C28737D261066A7FEC25163) == 0x000008, "Wrong size on GA_Card_SacrificialMagic_C_OnChange_E67AF51C4C28737D261066A7FEC25163");
static_assert(offsetof(GA_Card_SacrificialMagic_C_OnChange_E67AF51C4C28737D261066A7FEC25163, bMatchesComparison) == 0x000000, "Member 'GA_Card_SacrificialMagic_C_OnChange_E67AF51C4C28737D261066A7FEC25163::bMatchesComparison' has a wrong offset!");
static_assert(offsetof(GA_Card_SacrificialMagic_C_OnChange_E67AF51C4C28737D261066A7FEC25163, CurrentRatio) == 0x000004, "Member 'GA_Card_SacrificialMagic_C_OnChange_E67AF51C4C28737D261066A7FEC25163::CurrentRatio' has a wrong offset!");

// Function GA_Card_SacrificialMagic.GA_Card_SacrificialMagic_C.K2_CanActivateAbility
// 0x0088 (0x0088 - 0x0000)
struct GA_Card_SacrificialMagic_C_K2_CanActivateAbility final
{
public:
	struct FGameplayAbilityActorInfo              ActorInfo;                                         // 0x0000(0x0040)(BlueprintVisible, BlueprintReadOnly, Parm, ContainsInstancedReference)
	struct FGameplayTagContainer                  RelevantTags;                                      // 0x0040(0x0020)(Parm, OutParm)
	bool                                          ReturnValue;                                       // 0x0060(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	bool                                          CanActivate;                                       // 0x0061(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_62[0x6];                                       // 0x0062(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AOrionCharHero*                         K2Node_DynamicCast_AsOrion_Char_Hero;              // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_71[0x3];                                       // 0x0071(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetEnergyPercent_ReturnValue;             // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_79[0x3];                                       // 0x0079(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetHealthPercent_ReturnValue;             // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0081(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(GA_Card_SacrificialMagic_C_K2_CanActivateAbility) == 0x000008, "Wrong alignment on GA_Card_SacrificialMagic_C_K2_CanActivateAbility");
static_assert(sizeof(GA_Card_SacrificialMagic_C_K2_CanActivateAbility) == 0x000088, "Wrong size on GA_Card_SacrificialMagic_C_K2_CanActivateAbility");
static_assert(offsetof(GA_Card_SacrificialMagic_C_K2_CanActivateAbility, ActorInfo) == 0x000000, "Member 'GA_Card_SacrificialMagic_C_K2_CanActivateAbility::ActorInfo' has a wrong offset!");
static_assert(offsetof(GA_Card_SacrificialMagic_C_K2_CanActivateAbility, RelevantTags) == 0x000040, "Member 'GA_Card_SacrificialMagic_C_K2_CanActivateAbility::RelevantTags' has a wrong offset!");
static_assert(offsetof(GA_Card_SacrificialMagic_C_K2_CanActivateAbility, ReturnValue) == 0x000060, "Member 'GA_Card_SacrificialMagic_C_K2_CanActivateAbility::ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Card_SacrificialMagic_C_K2_CanActivateAbility, CanActivate) == 0x000061, "Member 'GA_Card_SacrificialMagic_C_K2_CanActivateAbility::CanActivate' has a wrong offset!");
static_assert(offsetof(GA_Card_SacrificialMagic_C_K2_CanActivateAbility, K2Node_DynamicCast_AsOrion_Char_Hero) == 0x000068, "Member 'GA_Card_SacrificialMagic_C_K2_CanActivateAbility::K2Node_DynamicCast_AsOrion_Char_Hero' has a wrong offset!");
static_assert(offsetof(GA_Card_SacrificialMagic_C_K2_CanActivateAbility, K2Node_DynamicCast_bSuccess) == 0x000070, "Member 'GA_Card_SacrificialMagic_C_K2_CanActivateAbility::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(GA_Card_SacrificialMagic_C_K2_CanActivateAbility, CallFunc_GetEnergyPercent_ReturnValue) == 0x000074, "Member 'GA_Card_SacrificialMagic_C_K2_CanActivateAbility::CallFunc_GetEnergyPercent_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Card_SacrificialMagic_C_K2_CanActivateAbility, CallFunc_Less_FloatFloat_ReturnValue) == 0x000078, "Member 'GA_Card_SacrificialMagic_C_K2_CanActivateAbility::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Card_SacrificialMagic_C_K2_CanActivateAbility, CallFunc_GetHealthPercent_ReturnValue) == 0x00007C, "Member 'GA_Card_SacrificialMagic_C_K2_CanActivateAbility::CallFunc_GetHealthPercent_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Card_SacrificialMagic_C_K2_CanActivateAbility, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000080, "Member 'GA_Card_SacrificialMagic_C_K2_CanActivateAbility::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Card_SacrificialMagic_C_K2_CanActivateAbility, CallFunc_BooleanAND_ReturnValue) == 0x000081, "Member 'GA_Card_SacrificialMagic_C_K2_CanActivateAbility::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

}

