#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GC_ScalableCameraShake

#include "Basic.hpp"

#include "OrionGame_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass GC_ScalableCameraShake.GC_ScalableCameraShake_C
// 0x0030 (0x0670 - 0x0640)
class UGC_ScalableCameraShake_C : public UOrionGameplayCueNotify_Burst
{
public:
	float                                         MinAttackTime;                                     // 0x0640(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         MaxAttackTime;                                     // 0x0644(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         MinShakeScale;                                     // 0x0648(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         MaxShakeScale;                                     // 0x064C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ViewKickAdditonalScaling;                          // 0x0650(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_654[0x4];                                      // 0x0654(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 ScalableCameraShakeClass;                          // 0x0658(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 ScalableViewKickClass;                             // 0x0660(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void OnBurst(class AActor* MyTarget, struct FGameplayCueParameters& Parameters, class UParticleSystemComponent* BurstParticleSystem, TArray<class UParticleSystemComponent*>& AdditionalParticleSystems, class UCameraShake* BurstCameraShakeInstance, class ADecalActor* BurstDecalInstance, class UNiagaraComponent* BurstNiagaraParticleSystem, TArray<class UNiagaraComponent*>& AdditionalNiagaraParticleSystems) const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"GC_ScalableCameraShake_C">();
	}
	static class UGC_ScalableCameraShake_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGC_ScalableCameraShake_C>();
	}
};
static_assert(alignof(UGC_ScalableCameraShake_C) == 0x000010, "Wrong alignment on UGC_ScalableCameraShake_C");
static_assert(sizeof(UGC_ScalableCameraShake_C) == 0x000670, "Wrong size on UGC_ScalableCameraShake_C");
static_assert(offsetof(UGC_ScalableCameraShake_C, MinAttackTime) == 0x000640, "Member 'UGC_ScalableCameraShake_C::MinAttackTime' has a wrong offset!");
static_assert(offsetof(UGC_ScalableCameraShake_C, MaxAttackTime) == 0x000644, "Member 'UGC_ScalableCameraShake_C::MaxAttackTime' has a wrong offset!");
static_assert(offsetof(UGC_ScalableCameraShake_C, MinShakeScale) == 0x000648, "Member 'UGC_ScalableCameraShake_C::MinShakeScale' has a wrong offset!");
static_assert(offsetof(UGC_ScalableCameraShake_C, MaxShakeScale) == 0x00064C, "Member 'UGC_ScalableCameraShake_C::MaxShakeScale' has a wrong offset!");
static_assert(offsetof(UGC_ScalableCameraShake_C, ViewKickAdditonalScaling) == 0x000650, "Member 'UGC_ScalableCameraShake_C::ViewKickAdditonalScaling' has a wrong offset!");
static_assert(offsetof(UGC_ScalableCameraShake_C, ScalableCameraShakeClass) == 0x000658, "Member 'UGC_ScalableCameraShake_C::ScalableCameraShakeClass' has a wrong offset!");
static_assert(offsetof(UGC_ScalableCameraShake_C, ScalableViewKickClass) == 0x000660, "Member 'UGC_ScalableCameraShake_C::ScalableViewKickClass' has a wrong offset!");

}

