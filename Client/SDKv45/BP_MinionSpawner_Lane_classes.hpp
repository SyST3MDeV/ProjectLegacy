#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_MinionSpawner_Lane

#include "Basic.hpp"

#include "E_MinionSpawner_Lane_WaveType_structs.hpp"
#include "Engine_structs.hpp"
#include "GameplayAbilities_structs.hpp"
#include "BP_OrionCharAISpawner_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_MinionSpawner_Lane.BP_MinionSpawner_Lane_C
// 0x00B0 (0x07E8 - 0x0738)
class ABP_MinionSpawner_Lane_C final : public ABP_OrionCharAISpawner_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_BP_MinionSpawner_Lane_C;            // 0x0738(0x0008)(Transient, DuplicateTransient)
	class UAudioComponent*                        Audio_Hum;                                         // 0x0740(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	int32                                         StartingWave_Normal2;                              // 0x0748(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         StartingWave_Normal3;                              // 0x074C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         StartingWave_Normal4;                              // 0x0750(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Debug;                                             // 0x0754(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_755[0x3];                                      // 0x0755(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         SiegeWaveFrequency;                                // 0x0758(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         TotalWavesSpawned;                                 // 0x075C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FScalableFloat                         SiegeWaveFrequencyRow;                             // 0x0760(0x0028)(Edit, BlueprintVisible, ExposeOnSpawn)
	class ABP_SentryTurret_C*                     Inhibitor_SentryTurret_;                           // 0x0788(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UOrionAIFormationData*>          DefaultWaveFormations;                             // 0x0790(0x0010)(Edit, BlueprintVisible, ZeroConstructor)
	TArray<class UOrionAIFormationData*>          SiegeWaveFormations;                               // 0x07A0(0x0010)(Edit, BlueprintVisible, ZeroConstructor)
	TArray<class UOrionAIFormationData*>          SuperWaveFormations;                               // 0x07B0(0x0010)(Edit, BlueprintVisible, ZeroConstructor)
	TArray<class UOrionAIFormationData*>          SuperSiegeFormations;                              // 0x07C0(0x0010)(Edit, BlueprintVisible, ZeroConstructor)
	E_MinionSpawner_Lane_WaveType                 WaveType;                                          // 0x07D0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7D1[0x3];                                      // 0x07D1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         WaveVariant;                                       // 0x07D4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AOrionCharAI*>                   SpawnedAI;                                         // 0x07D8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance)

public:
	void ExecuteUbergraph_BP_MinionSpawner_Lane(int32 EntryPoint);
	void SentryDestroyed_Bind(class ABP_SentryTurret_C* Objective);
	void OnAIFormationSpawned(class UOrionAIFormation* NewFormation);
	void OnIntroSpawnForAI(class AOrionCharAI* SpawnedAI_0);
	void ReceiveBeginPlay();
	void UserConstructionScript();
	void SetNextWaveFormation();
	void WaveCounter();
	void SelectWaveFormation(E_MinionSpawner_Lane_WaveType* WaveType_0);
	void SelectWaveVariant(int32* WaveVariant_0);
	void InitializeWaveFormations();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_MinionSpawner_Lane_C">();
	}
	static class ABP_MinionSpawner_Lane_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_MinionSpawner_Lane_C>();
	}
};
static_assert(alignof(ABP_MinionSpawner_Lane_C) == 0x000008, "Wrong alignment on ABP_MinionSpawner_Lane_C");
static_assert(sizeof(ABP_MinionSpawner_Lane_C) == 0x0007E8, "Wrong size on ABP_MinionSpawner_Lane_C");
static_assert(offsetof(ABP_MinionSpawner_Lane_C, UberGraphFrame_BP_MinionSpawner_Lane_C) == 0x000738, "Member 'ABP_MinionSpawner_Lane_C::UberGraphFrame_BP_MinionSpawner_Lane_C' has a wrong offset!");
static_assert(offsetof(ABP_MinionSpawner_Lane_C, Audio_Hum) == 0x000740, "Member 'ABP_MinionSpawner_Lane_C::Audio_Hum' has a wrong offset!");
static_assert(offsetof(ABP_MinionSpawner_Lane_C, StartingWave_Normal2) == 0x000748, "Member 'ABP_MinionSpawner_Lane_C::StartingWave_Normal2' has a wrong offset!");
static_assert(offsetof(ABP_MinionSpawner_Lane_C, StartingWave_Normal3) == 0x00074C, "Member 'ABP_MinionSpawner_Lane_C::StartingWave_Normal3' has a wrong offset!");
static_assert(offsetof(ABP_MinionSpawner_Lane_C, StartingWave_Normal4) == 0x000750, "Member 'ABP_MinionSpawner_Lane_C::StartingWave_Normal4' has a wrong offset!");
static_assert(offsetof(ABP_MinionSpawner_Lane_C, Debug) == 0x000754, "Member 'ABP_MinionSpawner_Lane_C::Debug' has a wrong offset!");
static_assert(offsetof(ABP_MinionSpawner_Lane_C, SiegeWaveFrequency) == 0x000758, "Member 'ABP_MinionSpawner_Lane_C::SiegeWaveFrequency' has a wrong offset!");
static_assert(offsetof(ABP_MinionSpawner_Lane_C, TotalWavesSpawned) == 0x00075C, "Member 'ABP_MinionSpawner_Lane_C::TotalWavesSpawned' has a wrong offset!");
static_assert(offsetof(ABP_MinionSpawner_Lane_C, SiegeWaveFrequencyRow) == 0x000760, "Member 'ABP_MinionSpawner_Lane_C::SiegeWaveFrequencyRow' has a wrong offset!");
static_assert(offsetof(ABP_MinionSpawner_Lane_C, Inhibitor_SentryTurret_) == 0x000788, "Member 'ABP_MinionSpawner_Lane_C::Inhibitor_SentryTurret_' has a wrong offset!");
static_assert(offsetof(ABP_MinionSpawner_Lane_C, DefaultWaveFormations) == 0x000790, "Member 'ABP_MinionSpawner_Lane_C::DefaultWaveFormations' has a wrong offset!");
static_assert(offsetof(ABP_MinionSpawner_Lane_C, SiegeWaveFormations) == 0x0007A0, "Member 'ABP_MinionSpawner_Lane_C::SiegeWaveFormations' has a wrong offset!");
static_assert(offsetof(ABP_MinionSpawner_Lane_C, SuperWaveFormations) == 0x0007B0, "Member 'ABP_MinionSpawner_Lane_C::SuperWaveFormations' has a wrong offset!");
static_assert(offsetof(ABP_MinionSpawner_Lane_C, SuperSiegeFormations) == 0x0007C0, "Member 'ABP_MinionSpawner_Lane_C::SuperSiegeFormations' has a wrong offset!");
static_assert(offsetof(ABP_MinionSpawner_Lane_C, WaveType) == 0x0007D0, "Member 'ABP_MinionSpawner_Lane_C::WaveType' has a wrong offset!");
static_assert(offsetof(ABP_MinionSpawner_Lane_C, WaveVariant) == 0x0007D4, "Member 'ABP_MinionSpawner_Lane_C::WaveVariant' has a wrong offset!");
static_assert(offsetof(ABP_MinionSpawner_Lane_C, SpawnedAI) == 0x0007D8, "Member 'ABP_MinionSpawner_Lane_C::SpawnedAI' has a wrong offset!");

}

