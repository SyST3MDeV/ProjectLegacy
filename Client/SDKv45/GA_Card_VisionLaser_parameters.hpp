#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GA_Card_VisionLaser

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "GameplayAbilities_structs.hpp"
#include "Engine_structs.hpp"
#include "OrionGame_structs.hpp"


namespace SDK::Params
{

// Function GA_Card_VisionLaser.GA_Card_VisionLaser_C.ExecuteUbergraph_GA_Card_VisionLaser
// 0x0440 (0x0440 - 0x0000)
struct GA_Card_VisionLaser_C_ExecuteUbergraph_GA_Card_VisionLaser final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayAbilityTargetDataHandle       K2Node_CustomEvent_Targets;                        // 0x0008(0x0020)(ConstParm)
	TDelegate<void(struct FGameplayAbilityTargetDataHandle& Targets)> K2Node_CreateDelegate_OutputDelegate;              // 0x0028(0x0010)(ZeroConstructor, NoDestructor)
	struct FGameplayAbilityTargetDataHandle       Temp_struct_Variable;                              // 0x0038(0x0020)()
	class UOrionAbilityTask_StartTargeting*       CallFunc_StartTargeting_ReturnValue;               // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_61[0x7];                                       // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UOrionAbilityTask_SpawnProjectile*      CallFunc_SpawnProjectile_ReturnValue;              // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AOrionProjectile*                       CallFunc_BeginSpawningActor_SpawnedActor;          // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BeginSpawningActor_ReturnValue;           // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue2;                     // 0x0079(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7A[0x6];                                       // 0x007A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AOrionProjectile*                       K2Node_CustomEvent_SpawnedProjectile4;             // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class AOrionProjectile* SpawnedProjectile)> K2Node_CreateDelegate_OutputDelegate2;             // 0x0088(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void(class AOrionProjectile* SpawnedProjectile)> K2Node_CreateDelegate_OutputDelegate3;             // 0x0098(0x0010)(ZeroConstructor, NoDestructor)
	class AOrionProjectile*                       K2Node_CustomEvent_SpawnedProjectile3;             // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AOrionProjectile*                       K2Node_CustomEvent_SpawnedProjectile2;             // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class AOrionProjectile* SpawnedProjectile)> K2Node_CreateDelegate_OutputDelegate4;             // 0x00B8(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void(class AOrionProjectile* SpawnedProjectile)> K2Node_CreateDelegate_OutputDelegate5;             // 0x00C8(0x0010)(ZeroConstructor, NoDestructor)
	class AOrionProjectile*                       K2Node_CustomEvent_SpawnedProjectile;              // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AOrionProjectile*                       Temp_object_Variable;                              // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(struct FHitResult& HitResult)> K2Node_CreateDelegate_OutputDelegate6;             // 0x00E8(0x0010)(ZeroConstructor, NoDestructor)
	class UOrionAbilityTask_WaitProjectileStop*   CallFunc_WaitProjectileStop_ReturnValue;           // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             K2Node_CustomEvent_HitResult2;                     // 0x0100(0x0088)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_IsValid_ReturnValue3;                     // 0x0188(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_189[0x7];                                      // 0x0189(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(struct FHitResult& HitResult)> K2Node_CreateDelegate_OutputDelegate7;             // 0x0190(0x0010)(ZeroConstructor, NoDestructor)
	struct FHitResult                             K2Node_CustomEvent_HitResult;                      // 0x01A0(0x0088)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FHitResult                             Temp_struct_Variable2;                             // 0x0228(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	TDelegate<void(class AActor* SpawnedActor)>   K2Node_CreateDelegate_OutputDelegate8;             // 0x02B0(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x02C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x02C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2C2[0x2];                                      // 0x02C2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x02C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x02C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x02CC(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x02D8(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x02E4(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x02F0(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2FC[0x4];                                      // 0x02FC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x0300(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x0308(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x0310(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x0318(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x0320(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x0324(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x0328(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x0334(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_CustomEvent_SpawnedActor3;                  // 0x0340(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_Conv_VectorToRotator_ReturnValue;         // 0x0348(0x000C)(IsPlainOldData, NoDestructor)
	uint8                                         Pad_354[0xC];                                      // 0x0354(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0360(0x0030)(IsPlainOldData, NoDestructor)
	class UOrionAbilityTask_SpawnOrionActor*      CallFunc_SpawnOrionActorTransform_ReturnValue;     // 0x0390(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class AActor* SpawnedActor)>   K2Node_CreateDelegate_OutputDelegate9;             // 0x0398(0x0010)(ZeroConstructor, NoDestructor)
	class AActor*                                 CallFunc_BeginSpawningActor_SpawnedActor2;         // 0x03A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BeginSpawningActor_ReturnValue2;          // 0x03B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue4;                     // 0x03B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3B2[0x6];                                      // 0x03B2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_CustomEvent_SpawnedActor2;                  // 0x03B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_CustomEvent_SpawnedActor;                   // 0x03C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class AActor* SpawnedActor)>   K2Node_CreateDelegate_OutputDelegate10;            // 0x03C8(0x0010)(ZeroConstructor, NoDestructor)
	class AActor*                                 Temp_object_Variable2;                             // 0x03D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate11;            // 0x03E0(0x0010)(ZeroConstructor, NoDestructor)
	class UAbilityTask_WaitDelay*                 CallFunc_WaitDelay_ReturnValue;                    // 0x03F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue5;                     // 0x03F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3F9[0x7];                                      // 0x03F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayAbilityTargetDataHandle       K2Node_CustomEvent_Targets2;                       // 0x0400(0x0020)(ConstParm)
	class AActor*                                 CallFunc_GetAvatarActorFromActorInfo_ReturnValue;  // 0x0420(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(struct FGameplayAbilityTargetDataHandle& Targets)> K2Node_CreateDelegate_OutputDelegate12;            // 0x0428(0x0010)(ZeroConstructor, NoDestructor)
	EOrionTeam                                    CallFunc_GetActorTeam_ReturnValue;                 // 0x0438(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_CommitAbility_ReturnValue;             // 0x0439(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(GA_Card_VisionLaser_C_ExecuteUbergraph_GA_Card_VisionLaser) == 0x000010, "Wrong alignment on GA_Card_VisionLaser_C_ExecuteUbergraph_GA_Card_VisionLaser");
static_assert(sizeof(GA_Card_VisionLaser_C_ExecuteUbergraph_GA_Card_VisionLaser) == 0x000440, "Wrong size on GA_Card_VisionLaser_C_ExecuteUbergraph_GA_Card_VisionLaser");
static_assert(offsetof(GA_Card_VisionLaser_C_ExecuteUbergraph_GA_Card_VisionLaser, EntryPoint) == 0x000000, "Member 'GA_Card_VisionLaser_C_ExecuteUbergraph_GA_Card_VisionLaser::EntryPoint' has a wrong offset!");
static_assert(offsetof(GA_Card_VisionLaser_C_ExecuteUbergraph_GA_Card_VisionLaser, K2Node_CustomEvent_Targets) == 0x000008, "Member 'GA_Card_VisionLaser_C_ExecuteUbergraph_GA_Card_VisionLaser::K2Node_CustomEvent_Targets' has a wrong offset!");
static_assert(offsetof(GA_Card_VisionLaser_C_ExecuteUbergraph_GA_Card_VisionLaser, K2Node_CreateDelegate_OutputDelegate) == 0x000028, "Member 'GA_Card_VisionLaser_C_ExecuteUbergraph_GA_Card_VisionLaser::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(GA_Card_VisionLaser_C_ExecuteUbergraph_GA_Card_VisionLaser, Temp_struct_Variable) == 0x000038, "Member 'GA_Card_VisionLaser_C_ExecuteUbergraph_GA_Card_VisionLaser::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(GA_Card_VisionLaser_C_ExecuteUbergraph_GA_Card_VisionLaser, CallFunc_StartTargeting_ReturnValue) == 0x000058, "Member 'GA_Card_VisionLaser_C_ExecuteUbergraph_GA_Card_VisionLaser::CallFunc_StartTargeting_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Card_VisionLaser_C_ExecuteUbergraph_GA_Card_VisionLaser, CallFunc_IsValid_ReturnValue) == 0x000060, "Member 'GA_Card_VisionLaser_C_ExecuteUbergraph_GA_Card_VisionLaser::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Card_VisionLaser_C_ExecuteUbergraph_GA_Card_VisionLaser, CallFunc_SpawnProjectile_ReturnValue) == 0x000068, "Member 'GA_Card_VisionLaser_C_ExecuteUbergraph_GA_Card_VisionLaser::CallFunc_SpawnProjectile_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Card_VisionLaser_C_ExecuteUbergraph_GA_Card_VisionLaser, CallFunc_BeginSpawningActor_SpawnedActor) == 0x000070, "Member 'GA_Card_VisionLaser_C_ExecuteUbergraph_GA_Card_VisionLaser::CallFunc_BeginSpawningActor_SpawnedActor' has a wrong offset!");
static_assert(offsetof(GA_Card_VisionLaser_C_ExecuteUbergraph_GA_Card_VisionLaser, CallFunc_BeginSpawningActor_ReturnValue) == 0x000078, "Member 'GA_Card_VisionLaser_C_ExecuteUbergraph_GA_Card_VisionLaser::CallFunc_BeginSpawningActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Card_VisionLaser_C_ExecuteUbergraph_GA_Card_VisionLaser, CallFunc_IsValid_ReturnValue2) == 0x000079, "Member 'GA_Card_VisionLaser_C_ExecuteUbergraph_GA_Card_VisionLaser::CallFunc_IsValid_ReturnValue2' has a wrong offset!");
static_assert(offsetof(GA_Card_VisionLaser_C_ExecuteUbergraph_GA_Card_VisionLaser, K2Node_CustomEvent_SpawnedProjectile4) == 0x000080, "Member 'GA_Card_VisionLaser_C_ExecuteUbergraph_GA_Card_VisionLaser::K2Node_CustomEvent_SpawnedProjectile4' has a wrong offset!");
static_assert(offsetof(GA_Card_VisionLaser_C_ExecuteUbergraph_GA_Card_VisionLaser, K2Node_CreateDelegate_OutputDelegate2) == 0x000088, "Member 'GA_Card_VisionLaser_C_ExecuteUbergraph_GA_Card_VisionLaser::K2Node_CreateDelegate_OutputDelegate2' has a wrong offset!");
static_assert(offsetof(GA_Card_VisionLaser_C_ExecuteUbergraph_GA_Card_VisionLaser, K2Node_CreateDelegate_OutputDelegate3) == 0x000098, "Member 'GA_Card_VisionLaser_C_ExecuteUbergraph_GA_Card_VisionLaser::K2Node_CreateDelegate_OutputDelegate3' has a wrong offset!");
static_assert(offsetof(GA_Card_VisionLaser_C_ExecuteUbergraph_GA_Card_VisionLaser, K2Node_CustomEvent_SpawnedProjectile3) == 0x0000A8, "Member 'GA_Card_VisionLaser_C_ExecuteUbergraph_GA_Card_VisionLaser::K2Node_CustomEvent_SpawnedProjectile3' has a wrong offset!");
static_assert(offsetof(GA_Card_VisionLaser_C_ExecuteUbergraph_GA_Card_VisionLaser, K2Node_CustomEvent_SpawnedProjectile2) == 0x0000B0, "Member 'GA_Card_VisionLaser_C_ExecuteUbergraph_GA_Card_VisionLaser::K2Node_CustomEvent_SpawnedProjectile2' has a wrong offset!");
static_assert(offsetof(GA_Card_VisionLaser_C_ExecuteUbergraph_GA_Card_VisionLaser, K2Node_CreateDelegate_OutputDelegate4) == 0x0000B8, "Member 'GA_Card_VisionLaser_C_ExecuteUbergraph_GA_Card_VisionLaser::K2Node_CreateDelegate_OutputDelegate4' has a wrong offset!");
static_assert(offsetof(GA_Card_VisionLaser_C_ExecuteUbergraph_GA_Card_VisionLaser, K2Node_CreateDelegate_OutputDelegate5) == 0x0000C8, "Member 'GA_Card_VisionLaser_C_ExecuteUbergraph_GA_Card_VisionLaser::K2Node_CreateDelegate_OutputDelegate5' has a wrong offset!");
static_assert(offsetof(GA_Card_VisionLaser_C_ExecuteUbergraph_GA_Card_VisionLaser, K2Node_CustomEvent_SpawnedProjectile) == 0x0000D8, "Member 'GA_Card_VisionLaser_C_ExecuteUbergraph_GA_Card_VisionLaser::K2Node_CustomEvent_SpawnedProjectile' has a wrong offset!");
static_assert(offsetof(GA_Card_VisionLaser_C_ExecuteUbergraph_GA_Card_VisionLaser, Temp_object_Variable) == 0x0000E0, "Member 'GA_Card_VisionLaser_C_ExecuteUbergraph_GA_Card_VisionLaser::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(GA_Card_VisionLaser_C_ExecuteUbergraph_GA_Card_VisionLaser, K2Node_CreateDelegate_OutputDelegate6) == 0x0000E8, "Member 'GA_Card_VisionLaser_C_ExecuteUbergraph_GA_Card_VisionLaser::K2Node_CreateDelegate_OutputDelegate6' has a wrong offset!");
static_assert(offsetof(GA_Card_VisionLaser_C_ExecuteUbergraph_GA_Card_VisionLaser, CallFunc_WaitProjectileStop_ReturnValue) == 0x0000F8, "Member 'GA_Card_VisionLaser_C_ExecuteUbergraph_GA_Card_VisionLaser::CallFunc_WaitProjectileStop_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Card_VisionLaser_C_ExecuteUbergraph_GA_Card_VisionLaser, K2Node_CustomEvent_HitResult2) == 0x000100, "Member 'GA_Card_VisionLaser_C_ExecuteUbergraph_GA_Card_VisionLaser::K2Node_CustomEvent_HitResult2' has a wrong offset!");
static_assert(offsetof(GA_Card_VisionLaser_C_ExecuteUbergraph_GA_Card_VisionLaser, CallFunc_IsValid_ReturnValue3) == 0x000188, "Member 'GA_Card_VisionLaser_C_ExecuteUbergraph_GA_Card_VisionLaser::CallFunc_IsValid_ReturnValue3' has a wrong offset!");
static_assert(offsetof(GA_Card_VisionLaser_C_ExecuteUbergraph_GA_Card_VisionLaser, K2Node_CreateDelegate_OutputDelegate7) == 0x000190, "Member 'GA_Card_VisionLaser_C_ExecuteUbergraph_GA_Card_VisionLaser::K2Node_CreateDelegate_OutputDelegate7' has a wrong offset!");
static_assert(offsetof(GA_Card_VisionLaser_C_ExecuteUbergraph_GA_Card_VisionLaser, K2Node_CustomEvent_HitResult) == 0x0001A0, "Member 'GA_Card_VisionLaser_C_ExecuteUbergraph_GA_Card_VisionLaser::K2Node_CustomEvent_HitResult' has a wrong offset!");
static_assert(offsetof(GA_Card_VisionLaser_C_ExecuteUbergraph_GA_Card_VisionLaser, Temp_struct_Variable2) == 0x000228, "Member 'GA_Card_VisionLaser_C_ExecuteUbergraph_GA_Card_VisionLaser::Temp_struct_Variable2' has a wrong offset!");
static_assert(offsetof(GA_Card_VisionLaser_C_ExecuteUbergraph_GA_Card_VisionLaser, K2Node_CreateDelegate_OutputDelegate8) == 0x0002B0, "Member 'GA_Card_VisionLaser_C_ExecuteUbergraph_GA_Card_VisionLaser::K2Node_CreateDelegate_OutputDelegate8' has a wrong offset!");
static_assert(offsetof(GA_Card_VisionLaser_C_ExecuteUbergraph_GA_Card_VisionLaser, CallFunc_BreakHitResult_bBlockingHit) == 0x0002C0, "Member 'GA_Card_VisionLaser_C_ExecuteUbergraph_GA_Card_VisionLaser::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(GA_Card_VisionLaser_C_ExecuteUbergraph_GA_Card_VisionLaser, CallFunc_BreakHitResult_bInitialOverlap) == 0x0002C1, "Member 'GA_Card_VisionLaser_C_ExecuteUbergraph_GA_Card_VisionLaser::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(GA_Card_VisionLaser_C_ExecuteUbergraph_GA_Card_VisionLaser, CallFunc_BreakHitResult_Time) == 0x0002C4, "Member 'GA_Card_VisionLaser_C_ExecuteUbergraph_GA_Card_VisionLaser::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(GA_Card_VisionLaser_C_ExecuteUbergraph_GA_Card_VisionLaser, CallFunc_BreakHitResult_Distance) == 0x0002C8, "Member 'GA_Card_VisionLaser_C_ExecuteUbergraph_GA_Card_VisionLaser::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(GA_Card_VisionLaser_C_ExecuteUbergraph_GA_Card_VisionLaser, CallFunc_BreakHitResult_Location) == 0x0002CC, "Member 'GA_Card_VisionLaser_C_ExecuteUbergraph_GA_Card_VisionLaser::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(GA_Card_VisionLaser_C_ExecuteUbergraph_GA_Card_VisionLaser, CallFunc_BreakHitResult_ImpactPoint) == 0x0002D8, "Member 'GA_Card_VisionLaser_C_ExecuteUbergraph_GA_Card_VisionLaser::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(GA_Card_VisionLaser_C_ExecuteUbergraph_GA_Card_VisionLaser, CallFunc_BreakHitResult_Normal) == 0x0002E4, "Member 'GA_Card_VisionLaser_C_ExecuteUbergraph_GA_Card_VisionLaser::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(GA_Card_VisionLaser_C_ExecuteUbergraph_GA_Card_VisionLaser, CallFunc_BreakHitResult_ImpactNormal) == 0x0002F0, "Member 'GA_Card_VisionLaser_C_ExecuteUbergraph_GA_Card_VisionLaser::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(GA_Card_VisionLaser_C_ExecuteUbergraph_GA_Card_VisionLaser, CallFunc_BreakHitResult_PhysMat) == 0x000300, "Member 'GA_Card_VisionLaser_C_ExecuteUbergraph_GA_Card_VisionLaser::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(GA_Card_VisionLaser_C_ExecuteUbergraph_GA_Card_VisionLaser, CallFunc_BreakHitResult_HitActor) == 0x000308, "Member 'GA_Card_VisionLaser_C_ExecuteUbergraph_GA_Card_VisionLaser::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(GA_Card_VisionLaser_C_ExecuteUbergraph_GA_Card_VisionLaser, CallFunc_BreakHitResult_HitComponent) == 0x000310, "Member 'GA_Card_VisionLaser_C_ExecuteUbergraph_GA_Card_VisionLaser::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(GA_Card_VisionLaser_C_ExecuteUbergraph_GA_Card_VisionLaser, CallFunc_BreakHitResult_HitBoneName) == 0x000318, "Member 'GA_Card_VisionLaser_C_ExecuteUbergraph_GA_Card_VisionLaser::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(GA_Card_VisionLaser_C_ExecuteUbergraph_GA_Card_VisionLaser, CallFunc_BreakHitResult_HitItem) == 0x000320, "Member 'GA_Card_VisionLaser_C_ExecuteUbergraph_GA_Card_VisionLaser::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(GA_Card_VisionLaser_C_ExecuteUbergraph_GA_Card_VisionLaser, CallFunc_BreakHitResult_FaceIndex) == 0x000324, "Member 'GA_Card_VisionLaser_C_ExecuteUbergraph_GA_Card_VisionLaser::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(GA_Card_VisionLaser_C_ExecuteUbergraph_GA_Card_VisionLaser, CallFunc_BreakHitResult_TraceStart) == 0x000328, "Member 'GA_Card_VisionLaser_C_ExecuteUbergraph_GA_Card_VisionLaser::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(GA_Card_VisionLaser_C_ExecuteUbergraph_GA_Card_VisionLaser, CallFunc_BreakHitResult_TraceEnd) == 0x000334, "Member 'GA_Card_VisionLaser_C_ExecuteUbergraph_GA_Card_VisionLaser::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(GA_Card_VisionLaser_C_ExecuteUbergraph_GA_Card_VisionLaser, K2Node_CustomEvent_SpawnedActor3) == 0x000340, "Member 'GA_Card_VisionLaser_C_ExecuteUbergraph_GA_Card_VisionLaser::K2Node_CustomEvent_SpawnedActor3' has a wrong offset!");
static_assert(offsetof(GA_Card_VisionLaser_C_ExecuteUbergraph_GA_Card_VisionLaser, CallFunc_Conv_VectorToRotator_ReturnValue) == 0x000348, "Member 'GA_Card_VisionLaser_C_ExecuteUbergraph_GA_Card_VisionLaser::CallFunc_Conv_VectorToRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Card_VisionLaser_C_ExecuteUbergraph_GA_Card_VisionLaser, CallFunc_MakeTransform_ReturnValue) == 0x000360, "Member 'GA_Card_VisionLaser_C_ExecuteUbergraph_GA_Card_VisionLaser::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Card_VisionLaser_C_ExecuteUbergraph_GA_Card_VisionLaser, CallFunc_SpawnOrionActorTransform_ReturnValue) == 0x000390, "Member 'GA_Card_VisionLaser_C_ExecuteUbergraph_GA_Card_VisionLaser::CallFunc_SpawnOrionActorTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Card_VisionLaser_C_ExecuteUbergraph_GA_Card_VisionLaser, K2Node_CreateDelegate_OutputDelegate9) == 0x000398, "Member 'GA_Card_VisionLaser_C_ExecuteUbergraph_GA_Card_VisionLaser::K2Node_CreateDelegate_OutputDelegate9' has a wrong offset!");
static_assert(offsetof(GA_Card_VisionLaser_C_ExecuteUbergraph_GA_Card_VisionLaser, CallFunc_BeginSpawningActor_SpawnedActor2) == 0x0003A8, "Member 'GA_Card_VisionLaser_C_ExecuteUbergraph_GA_Card_VisionLaser::CallFunc_BeginSpawningActor_SpawnedActor2' has a wrong offset!");
static_assert(offsetof(GA_Card_VisionLaser_C_ExecuteUbergraph_GA_Card_VisionLaser, CallFunc_BeginSpawningActor_ReturnValue2) == 0x0003B0, "Member 'GA_Card_VisionLaser_C_ExecuteUbergraph_GA_Card_VisionLaser::CallFunc_BeginSpawningActor_ReturnValue2' has a wrong offset!");
static_assert(offsetof(GA_Card_VisionLaser_C_ExecuteUbergraph_GA_Card_VisionLaser, CallFunc_IsValid_ReturnValue4) == 0x0003B1, "Member 'GA_Card_VisionLaser_C_ExecuteUbergraph_GA_Card_VisionLaser::CallFunc_IsValid_ReturnValue4' has a wrong offset!");
static_assert(offsetof(GA_Card_VisionLaser_C_ExecuteUbergraph_GA_Card_VisionLaser, K2Node_CustomEvent_SpawnedActor2) == 0x0003B8, "Member 'GA_Card_VisionLaser_C_ExecuteUbergraph_GA_Card_VisionLaser::K2Node_CustomEvent_SpawnedActor2' has a wrong offset!");
static_assert(offsetof(GA_Card_VisionLaser_C_ExecuteUbergraph_GA_Card_VisionLaser, K2Node_CustomEvent_SpawnedActor) == 0x0003C0, "Member 'GA_Card_VisionLaser_C_ExecuteUbergraph_GA_Card_VisionLaser::K2Node_CustomEvent_SpawnedActor' has a wrong offset!");
static_assert(offsetof(GA_Card_VisionLaser_C_ExecuteUbergraph_GA_Card_VisionLaser, K2Node_CreateDelegate_OutputDelegate10) == 0x0003C8, "Member 'GA_Card_VisionLaser_C_ExecuteUbergraph_GA_Card_VisionLaser::K2Node_CreateDelegate_OutputDelegate10' has a wrong offset!");
static_assert(offsetof(GA_Card_VisionLaser_C_ExecuteUbergraph_GA_Card_VisionLaser, Temp_object_Variable2) == 0x0003D8, "Member 'GA_Card_VisionLaser_C_ExecuteUbergraph_GA_Card_VisionLaser::Temp_object_Variable2' has a wrong offset!");
static_assert(offsetof(GA_Card_VisionLaser_C_ExecuteUbergraph_GA_Card_VisionLaser, K2Node_CreateDelegate_OutputDelegate11) == 0x0003E0, "Member 'GA_Card_VisionLaser_C_ExecuteUbergraph_GA_Card_VisionLaser::K2Node_CreateDelegate_OutputDelegate11' has a wrong offset!");
static_assert(offsetof(GA_Card_VisionLaser_C_ExecuteUbergraph_GA_Card_VisionLaser, CallFunc_WaitDelay_ReturnValue) == 0x0003F0, "Member 'GA_Card_VisionLaser_C_ExecuteUbergraph_GA_Card_VisionLaser::CallFunc_WaitDelay_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Card_VisionLaser_C_ExecuteUbergraph_GA_Card_VisionLaser, CallFunc_IsValid_ReturnValue5) == 0x0003F8, "Member 'GA_Card_VisionLaser_C_ExecuteUbergraph_GA_Card_VisionLaser::CallFunc_IsValid_ReturnValue5' has a wrong offset!");
static_assert(offsetof(GA_Card_VisionLaser_C_ExecuteUbergraph_GA_Card_VisionLaser, K2Node_CustomEvent_Targets2) == 0x000400, "Member 'GA_Card_VisionLaser_C_ExecuteUbergraph_GA_Card_VisionLaser::K2Node_CustomEvent_Targets2' has a wrong offset!");
static_assert(offsetof(GA_Card_VisionLaser_C_ExecuteUbergraph_GA_Card_VisionLaser, CallFunc_GetAvatarActorFromActorInfo_ReturnValue) == 0x000420, "Member 'GA_Card_VisionLaser_C_ExecuteUbergraph_GA_Card_VisionLaser::CallFunc_GetAvatarActorFromActorInfo_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Card_VisionLaser_C_ExecuteUbergraph_GA_Card_VisionLaser, K2Node_CreateDelegate_OutputDelegate12) == 0x000428, "Member 'GA_Card_VisionLaser_C_ExecuteUbergraph_GA_Card_VisionLaser::K2Node_CreateDelegate_OutputDelegate12' has a wrong offset!");
static_assert(offsetof(GA_Card_VisionLaser_C_ExecuteUbergraph_GA_Card_VisionLaser, CallFunc_GetActorTeam_ReturnValue) == 0x000438, "Member 'GA_Card_VisionLaser_C_ExecuteUbergraph_GA_Card_VisionLaser::CallFunc_GetActorTeam_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Card_VisionLaser_C_ExecuteUbergraph_GA_Card_VisionLaser, CallFunc_K2_CommitAbility_ReturnValue) == 0x000439, "Member 'GA_Card_VisionLaser_C_ExecuteUbergraph_GA_Card_VisionLaser::CallFunc_K2_CommitAbility_ReturnValue' has a wrong offset!");

// Function GA_Card_VisionLaser.GA_Card_VisionLaser_C.Cancelled_DAE966F943345ABA5B9F86BF90DA7488
// 0x0020 (0x0020 - 0x0000)
struct GA_Card_VisionLaser_C_Cancelled_DAE966F943345ABA5B9F86BF90DA7488 final
{
public:
	struct FGameplayAbilityTargetDataHandle       Targets;                                           // 0x0000(0x0020)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(GA_Card_VisionLaser_C_Cancelled_DAE966F943345ABA5B9F86BF90DA7488) == 0x000008, "Wrong alignment on GA_Card_VisionLaser_C_Cancelled_DAE966F943345ABA5B9F86BF90DA7488");
static_assert(sizeof(GA_Card_VisionLaser_C_Cancelled_DAE966F943345ABA5B9F86BF90DA7488) == 0x000020, "Wrong size on GA_Card_VisionLaser_C_Cancelled_DAE966F943345ABA5B9F86BF90DA7488");
static_assert(offsetof(GA_Card_VisionLaser_C_Cancelled_DAE966F943345ABA5B9F86BF90DA7488, Targets) == 0x000000, "Member 'GA_Card_VisionLaser_C_Cancelled_DAE966F943345ABA5B9F86BF90DA7488::Targets' has a wrong offset!");

// Function GA_Card_VisionLaser.GA_Card_VisionLaser_C.Confirmed_DAE966F943345ABA5B9F86BF90DA7488
// 0x0020 (0x0020 - 0x0000)
struct GA_Card_VisionLaser_C_Confirmed_DAE966F943345ABA5B9F86BF90DA7488 final
{
public:
	struct FGameplayAbilityTargetDataHandle       Targets;                                           // 0x0000(0x0020)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(GA_Card_VisionLaser_C_Confirmed_DAE966F943345ABA5B9F86BF90DA7488) == 0x000008, "Wrong alignment on GA_Card_VisionLaser_C_Confirmed_DAE966F943345ABA5B9F86BF90DA7488");
static_assert(sizeof(GA_Card_VisionLaser_C_Confirmed_DAE966F943345ABA5B9F86BF90DA7488) == 0x000020, "Wrong size on GA_Card_VisionLaser_C_Confirmed_DAE966F943345ABA5B9F86BF90DA7488");
static_assert(offsetof(GA_Card_VisionLaser_C_Confirmed_DAE966F943345ABA5B9F86BF90DA7488, Targets) == 0x000000, "Member 'GA_Card_VisionLaser_C_Confirmed_DAE966F943345ABA5B9F86BF90DA7488::Targets' has a wrong offset!");

// Function GA_Card_VisionLaser.GA_Card_VisionLaser_C.FailedToSpawn_4FCCAE6E4E34B2219C5D6E8A3697EF5B
// 0x0008 (0x0008 - 0x0000)
struct GA_Card_VisionLaser_C_FailedToSpawn_4FCCAE6E4E34B2219C5D6E8A3697EF5B final
{
public:
	class AActor*                                 SpawnedActor;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_Card_VisionLaser_C_FailedToSpawn_4FCCAE6E4E34B2219C5D6E8A3697EF5B) == 0x000008, "Wrong alignment on GA_Card_VisionLaser_C_FailedToSpawn_4FCCAE6E4E34B2219C5D6E8A3697EF5B");
static_assert(sizeof(GA_Card_VisionLaser_C_FailedToSpawn_4FCCAE6E4E34B2219C5D6E8A3697EF5B) == 0x000008, "Wrong size on GA_Card_VisionLaser_C_FailedToSpawn_4FCCAE6E4E34B2219C5D6E8A3697EF5B");
static_assert(offsetof(GA_Card_VisionLaser_C_FailedToSpawn_4FCCAE6E4E34B2219C5D6E8A3697EF5B, SpawnedActor) == 0x000000, "Member 'GA_Card_VisionLaser_C_FailedToSpawn_4FCCAE6E4E34B2219C5D6E8A3697EF5B::SpawnedActor' has a wrong offset!");

// Function GA_Card_VisionLaser.GA_Card_VisionLaser_C.FailedToSpawn_EBC56A9A40A8C311BE6E9F8C547559A7
// 0x0008 (0x0008 - 0x0000)
struct GA_Card_VisionLaser_C_FailedToSpawn_EBC56A9A40A8C311BE6E9F8C547559A7 final
{
public:
	class AOrionProjectile*                       SpawnedProjectile;                                 // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_Card_VisionLaser_C_FailedToSpawn_EBC56A9A40A8C311BE6E9F8C547559A7) == 0x000008, "Wrong alignment on GA_Card_VisionLaser_C_FailedToSpawn_EBC56A9A40A8C311BE6E9F8C547559A7");
static_assert(sizeof(GA_Card_VisionLaser_C_FailedToSpawn_EBC56A9A40A8C311BE6E9F8C547559A7) == 0x000008, "Wrong size on GA_Card_VisionLaser_C_FailedToSpawn_EBC56A9A40A8C311BE6E9F8C547559A7");
static_assert(offsetof(GA_Card_VisionLaser_C_FailedToSpawn_EBC56A9A40A8C311BE6E9F8C547559A7, SpawnedProjectile) == 0x000000, "Member 'GA_Card_VisionLaser_C_FailedToSpawn_EBC56A9A40A8C311BE6E9F8C547559A7::SpawnedProjectile' has a wrong offset!");

// Function GA_Card_VisionLaser.GA_Card_VisionLaser_C.NotAuthority_4FCCAE6E4E34B2219C5D6E8A3697EF5B
// 0x0008 (0x0008 - 0x0000)
struct GA_Card_VisionLaser_C_NotAuthority_4FCCAE6E4E34B2219C5D6E8A3697EF5B final
{
public:
	class AActor*                                 SpawnedActor;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_Card_VisionLaser_C_NotAuthority_4FCCAE6E4E34B2219C5D6E8A3697EF5B) == 0x000008, "Wrong alignment on GA_Card_VisionLaser_C_NotAuthority_4FCCAE6E4E34B2219C5D6E8A3697EF5B");
static_assert(sizeof(GA_Card_VisionLaser_C_NotAuthority_4FCCAE6E4E34B2219C5D6E8A3697EF5B) == 0x000008, "Wrong size on GA_Card_VisionLaser_C_NotAuthority_4FCCAE6E4E34B2219C5D6E8A3697EF5B");
static_assert(offsetof(GA_Card_VisionLaser_C_NotAuthority_4FCCAE6E4E34B2219C5D6E8A3697EF5B, SpawnedActor) == 0x000000, "Member 'GA_Card_VisionLaser_C_NotAuthority_4FCCAE6E4E34B2219C5D6E8A3697EF5B::SpawnedActor' has a wrong offset!");

// Function GA_Card_VisionLaser.GA_Card_VisionLaser_C.NotAuthority_EBC56A9A40A8C311BE6E9F8C547559A7
// 0x0008 (0x0008 - 0x0000)
struct GA_Card_VisionLaser_C_NotAuthority_EBC56A9A40A8C311BE6E9F8C547559A7 final
{
public:
	class AOrionProjectile*                       SpawnedProjectile;                                 // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_Card_VisionLaser_C_NotAuthority_EBC56A9A40A8C311BE6E9F8C547559A7) == 0x000008, "Wrong alignment on GA_Card_VisionLaser_C_NotAuthority_EBC56A9A40A8C311BE6E9F8C547559A7");
static_assert(sizeof(GA_Card_VisionLaser_C_NotAuthority_EBC56A9A40A8C311BE6E9F8C547559A7) == 0x000008, "Wrong size on GA_Card_VisionLaser_C_NotAuthority_EBC56A9A40A8C311BE6E9F8C547559A7");
static_assert(offsetof(GA_Card_VisionLaser_C_NotAuthority_EBC56A9A40A8C311BE6E9F8C547559A7, SpawnedProjectile) == 0x000000, "Member 'GA_Card_VisionLaser_C_NotAuthority_EBC56A9A40A8C311BE6E9F8C547559A7::SpawnedProjectile' has a wrong offset!");

// Function GA_Card_VisionLaser.GA_Card_VisionLaser_C.OnShutdown_8CA1FAB84E10006DEF2DFAB7DA8E107D
// 0x0088 (0x0088 - 0x0000)
struct GA_Card_VisionLaser_C_OnShutdown_8CA1FAB84E10006DEF2DFAB7DA8E107D final
{
public:
	struct FHitResult                             HitResult;                                         // 0x0000(0x0088)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(GA_Card_VisionLaser_C_OnShutdown_8CA1FAB84E10006DEF2DFAB7DA8E107D) == 0x000008, "Wrong alignment on GA_Card_VisionLaser_C_OnShutdown_8CA1FAB84E10006DEF2DFAB7DA8E107D");
static_assert(sizeof(GA_Card_VisionLaser_C_OnShutdown_8CA1FAB84E10006DEF2DFAB7DA8E107D) == 0x000088, "Wrong size on GA_Card_VisionLaser_C_OnShutdown_8CA1FAB84E10006DEF2DFAB7DA8E107D");
static_assert(offsetof(GA_Card_VisionLaser_C_OnShutdown_8CA1FAB84E10006DEF2DFAB7DA8E107D, HitResult) == 0x000000, "Member 'GA_Card_VisionLaser_C_OnShutdown_8CA1FAB84E10006DEF2DFAB7DA8E107D::HitResult' has a wrong offset!");

// Function GA_Card_VisionLaser.GA_Card_VisionLaser_C.OnStop_8CA1FAB84E10006DEF2DFAB7DA8E107D
// 0x0088 (0x0088 - 0x0000)
struct GA_Card_VisionLaser_C_OnStop_8CA1FAB84E10006DEF2DFAB7DA8E107D final
{
public:
	struct FHitResult                             HitResult;                                         // 0x0000(0x0088)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(GA_Card_VisionLaser_C_OnStop_8CA1FAB84E10006DEF2DFAB7DA8E107D) == 0x000008, "Wrong alignment on GA_Card_VisionLaser_C_OnStop_8CA1FAB84E10006DEF2DFAB7DA8E107D");
static_assert(sizeof(GA_Card_VisionLaser_C_OnStop_8CA1FAB84E10006DEF2DFAB7DA8E107D) == 0x000088, "Wrong size on GA_Card_VisionLaser_C_OnStop_8CA1FAB84E10006DEF2DFAB7DA8E107D");
static_assert(offsetof(GA_Card_VisionLaser_C_OnStop_8CA1FAB84E10006DEF2DFAB7DA8E107D, HitResult) == 0x000000, "Member 'GA_Card_VisionLaser_C_OnStop_8CA1FAB84E10006DEF2DFAB7DA8E107D::HitResult' has a wrong offset!");

// Function GA_Card_VisionLaser.GA_Card_VisionLaser_C.PreSpawned_EBC56A9A40A8C311BE6E9F8C547559A7
// 0x0008 (0x0008 - 0x0000)
struct GA_Card_VisionLaser_C_PreSpawned_EBC56A9A40A8C311BE6E9F8C547559A7 final
{
public:
	class AOrionProjectile*                       SpawnedProjectile;                                 // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_Card_VisionLaser_C_PreSpawned_EBC56A9A40A8C311BE6E9F8C547559A7) == 0x000008, "Wrong alignment on GA_Card_VisionLaser_C_PreSpawned_EBC56A9A40A8C311BE6E9F8C547559A7");
static_assert(sizeof(GA_Card_VisionLaser_C_PreSpawned_EBC56A9A40A8C311BE6E9F8C547559A7) == 0x000008, "Wrong size on GA_Card_VisionLaser_C_PreSpawned_EBC56A9A40A8C311BE6E9F8C547559A7");
static_assert(offsetof(GA_Card_VisionLaser_C_PreSpawned_EBC56A9A40A8C311BE6E9F8C547559A7, SpawnedProjectile) == 0x000000, "Member 'GA_Card_VisionLaser_C_PreSpawned_EBC56A9A40A8C311BE6E9F8C547559A7::SpawnedProjectile' has a wrong offset!");

// Function GA_Card_VisionLaser.GA_Card_VisionLaser_C.Success_4FCCAE6E4E34B2219C5D6E8A3697EF5B
// 0x0008 (0x0008 - 0x0000)
struct GA_Card_VisionLaser_C_Success_4FCCAE6E4E34B2219C5D6E8A3697EF5B final
{
public:
	class AActor*                                 SpawnedActor;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_Card_VisionLaser_C_Success_4FCCAE6E4E34B2219C5D6E8A3697EF5B) == 0x000008, "Wrong alignment on GA_Card_VisionLaser_C_Success_4FCCAE6E4E34B2219C5D6E8A3697EF5B");
static_assert(sizeof(GA_Card_VisionLaser_C_Success_4FCCAE6E4E34B2219C5D6E8A3697EF5B) == 0x000008, "Wrong size on GA_Card_VisionLaser_C_Success_4FCCAE6E4E34B2219C5D6E8A3697EF5B");
static_assert(offsetof(GA_Card_VisionLaser_C_Success_4FCCAE6E4E34B2219C5D6E8A3697EF5B, SpawnedActor) == 0x000000, "Member 'GA_Card_VisionLaser_C_Success_4FCCAE6E4E34B2219C5D6E8A3697EF5B::SpawnedActor' has a wrong offset!");

// Function GA_Card_VisionLaser.GA_Card_VisionLaser_C.Success_EBC56A9A40A8C311BE6E9F8C547559A7
// 0x0008 (0x0008 - 0x0000)
struct GA_Card_VisionLaser_C_Success_EBC56A9A40A8C311BE6E9F8C547559A7 final
{
public:
	class AOrionProjectile*                       SpawnedProjectile;                                 // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_Card_VisionLaser_C_Success_EBC56A9A40A8C311BE6E9F8C547559A7) == 0x000008, "Wrong alignment on GA_Card_VisionLaser_C_Success_EBC56A9A40A8C311BE6E9F8C547559A7");
static_assert(sizeof(GA_Card_VisionLaser_C_Success_EBC56A9A40A8C311BE6E9F8C547559A7) == 0x000008, "Wrong size on GA_Card_VisionLaser_C_Success_EBC56A9A40A8C311BE6E9F8C547559A7");
static_assert(offsetof(GA_Card_VisionLaser_C_Success_EBC56A9A40A8C311BE6E9F8C547559A7, SpawnedProjectile) == 0x000000, "Member 'GA_Card_VisionLaser_C_Success_EBC56A9A40A8C311BE6E9F8C547559A7::SpawnedProjectile' has a wrong offset!");

}

