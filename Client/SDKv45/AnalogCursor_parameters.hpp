#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: AnalogCursor

#include "Basic.hpp"

#include "UMG_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function AnalogCursor.AnalogCursor_C.ExecuteUbergraph_AnalogCursor
// 0x0050 (0x0050 - 0x0000)
struct AnalogCursor_C_ExecuteUbergraph_AnalogCursor final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetCurrentMaterialTime_ReturnValue;       // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0008(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate2;             // 0x0018(0x0010)(ZeroConstructor, NoDestructor)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0028(0x0008)(NoDestructor)
	class UAnalogCursorContext*                   CallFunc_GetContext_ReturnValue;                   // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(bool bIsHovering)>             K2Node_CreateDelegate_OutputDelegate3;             // 0x0038(0x0010)(ZeroConstructor, NoDestructor)
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicMaterial_ReturnValue;           // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AnalogCursor_C_ExecuteUbergraph_AnalogCursor) == 0x000008, "Wrong alignment on AnalogCursor_C_ExecuteUbergraph_AnalogCursor");
static_assert(sizeof(AnalogCursor_C_ExecuteUbergraph_AnalogCursor) == 0x000050, "Wrong size on AnalogCursor_C_ExecuteUbergraph_AnalogCursor");
static_assert(offsetof(AnalogCursor_C_ExecuteUbergraph_AnalogCursor, EntryPoint) == 0x000000, "Member 'AnalogCursor_C_ExecuteUbergraph_AnalogCursor::EntryPoint' has a wrong offset!");
static_assert(offsetof(AnalogCursor_C_ExecuteUbergraph_AnalogCursor, CallFunc_GetCurrentMaterialTime_ReturnValue) == 0x000004, "Member 'AnalogCursor_C_ExecuteUbergraph_AnalogCursor::CallFunc_GetCurrentMaterialTime_ReturnValue' has a wrong offset!");
static_assert(offsetof(AnalogCursor_C_ExecuteUbergraph_AnalogCursor, K2Node_CreateDelegate_OutputDelegate) == 0x000008, "Member 'AnalogCursor_C_ExecuteUbergraph_AnalogCursor::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(AnalogCursor_C_ExecuteUbergraph_AnalogCursor, K2Node_CreateDelegate_OutputDelegate2) == 0x000018, "Member 'AnalogCursor_C_ExecuteUbergraph_AnalogCursor::K2Node_CreateDelegate_OutputDelegate2' has a wrong offset!");
static_assert(offsetof(AnalogCursor_C_ExecuteUbergraph_AnalogCursor, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000028, "Member 'AnalogCursor_C_ExecuteUbergraph_AnalogCursor::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(AnalogCursor_C_ExecuteUbergraph_AnalogCursor, CallFunc_GetContext_ReturnValue) == 0x000030, "Member 'AnalogCursor_C_ExecuteUbergraph_AnalogCursor::CallFunc_GetContext_ReturnValue' has a wrong offset!");
static_assert(offsetof(AnalogCursor_C_ExecuteUbergraph_AnalogCursor, K2Node_CreateDelegate_OutputDelegate3) == 0x000038, "Member 'AnalogCursor_C_ExecuteUbergraph_AnalogCursor::K2Node_CreateDelegate_OutputDelegate3' has a wrong offset!");
static_assert(offsetof(AnalogCursor_C_ExecuteUbergraph_AnalogCursor, CallFunc_GetDynamicMaterial_ReturnValue) == 0x000048, "Member 'AnalogCursor_C_ExecuteUbergraph_AnalogCursor::CallFunc_GetDynamicMaterial_ReturnValue' has a wrong offset!");

// Function AnalogCursor.AnalogCursor_C.Hover Happened
// 0x0005 (0x0005 - 0x0000)
struct AnalogCursor_C_Hover_Happened final
{
public:
	bool                                          Is_Hovering;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EUMGSequencePlayMode                          Temp_byte_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUMGSequencePlayMode                          Temp_byte_Variable2;                               // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUMGSequencePlayMode                          K2Node_Select_Default;                             // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AnalogCursor_C_Hover_Happened) == 0x000001, "Wrong alignment on AnalogCursor_C_Hover_Happened");
static_assert(sizeof(AnalogCursor_C_Hover_Happened) == 0x000005, "Wrong size on AnalogCursor_C_Hover_Happened");
static_assert(offsetof(AnalogCursor_C_Hover_Happened, Is_Hovering) == 0x000000, "Member 'AnalogCursor_C_Hover_Happened::Is_Hovering' has a wrong offset!");
static_assert(offsetof(AnalogCursor_C_Hover_Happened, Temp_bool_Variable) == 0x000001, "Member 'AnalogCursor_C_Hover_Happened::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(AnalogCursor_C_Hover_Happened, Temp_byte_Variable) == 0x000002, "Member 'AnalogCursor_C_Hover_Happened::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(AnalogCursor_C_Hover_Happened, Temp_byte_Variable2) == 0x000003, "Member 'AnalogCursor_C_Hover_Happened::Temp_byte_Variable2' has a wrong offset!");
static_assert(offsetof(AnalogCursor_C_Hover_Happened, K2Node_Select_Default) == 0x000004, "Member 'AnalogCursor_C_Hover_Happened::K2Node_Select_Default' has a wrong offset!");

}

