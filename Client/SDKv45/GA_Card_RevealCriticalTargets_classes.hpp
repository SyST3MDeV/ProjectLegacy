#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GA_Card_RevealCriticalTargets

#include "Basic.hpp"

#include "OrionGame_structs.hpp"
#include "OrionGame_classes.hpp"
#include "Engine_structs.hpp"
#include "GameplayAbilities_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass GA_Card_RevealCriticalTargets.GA_Card_RevealCriticalTargets_C
// 0x0060 (0x0BD0 - 0x0B70)
class UGA_Card_RevealCriticalTargets_C final : public UOrionAbility
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0B70(0x0008)(Transient, DuplicateTransient)
	struct FOrionAuraHandle                       Aura;                                              // 0x0B78(0x0004)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B7C[0x4];                                      // 0x0B7C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FOrionFilterAndEffectsContainer        RevealCritTargets;                                 // 0x0B80(0x0020)(Edit, BlueprintVisible, DisableEditOnInstance)
	float                                         RevealRadius;                                      // 0x0BA0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_BA4[0x4];                                      // 0x0BA4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AOrionCharHero*>                 HeroArray;                                         // 0x0BA8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance)
	int32                                         StacksToApply;                                     // 0x0BB8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FActiveGameplayEffectHandle            GE_RevealCriticalTarget_MS;                        // 0x0BBC(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_GA_Card_RevealCriticalTargets(int32 EntryPoint);
	void K2_ActivateAbility();
	void OnStateEnded_9D0EC75C4A290FDD3E54A09E061035D5();
	void OnStateInterrupted_9D0EC75C4A290FDD3E54A09E061035D5();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"GA_Card_RevealCriticalTargets_C">();
	}
	static class UGA_Card_RevealCriticalTargets_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGA_Card_RevealCriticalTargets_C>();
	}
};
static_assert(alignof(UGA_Card_RevealCriticalTargets_C) == 0x000010, "Wrong alignment on UGA_Card_RevealCriticalTargets_C");
static_assert(sizeof(UGA_Card_RevealCriticalTargets_C) == 0x000BD0, "Wrong size on UGA_Card_RevealCriticalTargets_C");
static_assert(offsetof(UGA_Card_RevealCriticalTargets_C, UberGraphFrame) == 0x000B70, "Member 'UGA_Card_RevealCriticalTargets_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UGA_Card_RevealCriticalTargets_C, Aura) == 0x000B78, "Member 'UGA_Card_RevealCriticalTargets_C::Aura' has a wrong offset!");
static_assert(offsetof(UGA_Card_RevealCriticalTargets_C, RevealCritTargets) == 0x000B80, "Member 'UGA_Card_RevealCriticalTargets_C::RevealCritTargets' has a wrong offset!");
static_assert(offsetof(UGA_Card_RevealCriticalTargets_C, RevealRadius) == 0x000BA0, "Member 'UGA_Card_RevealCriticalTargets_C::RevealRadius' has a wrong offset!");
static_assert(offsetof(UGA_Card_RevealCriticalTargets_C, HeroArray) == 0x000BA8, "Member 'UGA_Card_RevealCriticalTargets_C::HeroArray' has a wrong offset!");
static_assert(offsetof(UGA_Card_RevealCriticalTargets_C, StacksToApply) == 0x000BB8, "Member 'UGA_Card_RevealCriticalTargets_C::StacksToApply' has a wrong offset!");
static_assert(offsetof(UGA_Card_RevealCriticalTargets_C, GE_RevealCriticalTarget_MS) == 0x000BBC, "Member 'UGA_Card_RevealCriticalTargets_C::GE_RevealCriticalTarget_MS' has a wrong offset!");

}

