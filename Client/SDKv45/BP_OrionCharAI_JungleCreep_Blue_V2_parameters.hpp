#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_OrionCharAI_JungleCreep_Blue_V2

#include "Basic.hpp"

#include "GameplayAbilities_structs.hpp"


namespace SDK::Params
{

// Function BP_OrionCharAI_JungleCreep_Blue_V2.BP_OrionCharAI_JungleCreep_Blue_V2_C.ExecuteUbergraph_BP_OrionCharAI_JungleCreep_Blue_V2
// 0x00C0 (0x00C0 - 0x0000)
struct BP_OrionCharAI_JungleCreep_Blue_V2_C_ExecuteUbergraph_BP_OrionCharAI_JungleCreep_Blue_V2 final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EGameplayCueEvent                             K2Node_GameplayCueEvent_EventType;                 // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayCueParameters                 K2Node_GameplayCueEvent_Parameters;                // 0x0008(0x00B8)(ContainsInstancedReference)
};
static_assert(alignof(BP_OrionCharAI_JungleCreep_Blue_V2_C_ExecuteUbergraph_BP_OrionCharAI_JungleCreep_Blue_V2) == 0x000008, "Wrong alignment on BP_OrionCharAI_JungleCreep_Blue_V2_C_ExecuteUbergraph_BP_OrionCharAI_JungleCreep_Blue_V2");
static_assert(sizeof(BP_OrionCharAI_JungleCreep_Blue_V2_C_ExecuteUbergraph_BP_OrionCharAI_JungleCreep_Blue_V2) == 0x0000C0, "Wrong size on BP_OrionCharAI_JungleCreep_Blue_V2_C_ExecuteUbergraph_BP_OrionCharAI_JungleCreep_Blue_V2");
static_assert(offsetof(BP_OrionCharAI_JungleCreep_Blue_V2_C_ExecuteUbergraph_BP_OrionCharAI_JungleCreep_Blue_V2, EntryPoint) == 0x000000, "Member 'BP_OrionCharAI_JungleCreep_Blue_V2_C_ExecuteUbergraph_BP_OrionCharAI_JungleCreep_Blue_V2::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_OrionCharAI_JungleCreep_Blue_V2_C_ExecuteUbergraph_BP_OrionCharAI_JungleCreep_Blue_V2, K2Node_GameplayCueEvent_EventType) == 0x000004, "Member 'BP_OrionCharAI_JungleCreep_Blue_V2_C_ExecuteUbergraph_BP_OrionCharAI_JungleCreep_Blue_V2::K2Node_GameplayCueEvent_EventType' has a wrong offset!");
static_assert(offsetof(BP_OrionCharAI_JungleCreep_Blue_V2_C_ExecuteUbergraph_BP_OrionCharAI_JungleCreep_Blue_V2, K2Node_GameplayCueEvent_Parameters) == 0x000008, "Member 'BP_OrionCharAI_JungleCreep_Blue_V2_C_ExecuteUbergraph_BP_OrionCharAI_JungleCreep_Blue_V2::K2Node_GameplayCueEvent_Parameters' has a wrong offset!");

// Function BP_OrionCharAI_JungleCreep_Blue_V2.BP_OrionCharAI_JungleCreep_Blue_V2_C.GameplayCue.Death
// 0x00C0 (0x00C0 - 0x0000)
struct BP_OrionCharAI_JungleCreep_Blue_V2_C_GameplayCue_Death final
{
public:
	EGameplayCueEvent                             EventType;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayCueParameters                 Parameters;                                        // 0x0008(0x00B8)(BlueprintVisible, BlueprintReadOnly, Parm, ContainsInstancedReference)
};
static_assert(alignof(BP_OrionCharAI_JungleCreep_Blue_V2_C_GameplayCue_Death) == 0x000008, "Wrong alignment on BP_OrionCharAI_JungleCreep_Blue_V2_C_GameplayCue_Death");
static_assert(sizeof(BP_OrionCharAI_JungleCreep_Blue_V2_C_GameplayCue_Death) == 0x0000C0, "Wrong size on BP_OrionCharAI_JungleCreep_Blue_V2_C_GameplayCue_Death");
static_assert(offsetof(BP_OrionCharAI_JungleCreep_Blue_V2_C_GameplayCue_Death, EventType) == 0x000000, "Member 'BP_OrionCharAI_JungleCreep_Blue_V2_C_GameplayCue_Death::EventType' has a wrong offset!");
static_assert(offsetof(BP_OrionCharAI_JungleCreep_Blue_V2_C_GameplayCue_Death, Parameters) == 0x000008, "Member 'BP_OrionCharAI_JungleCreep_Blue_V2_C_GameplayCue_Death::Parameters' has a wrong offset!");

}

