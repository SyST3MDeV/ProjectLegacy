#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GA_Card_CreepingDeath

#include "Basic.hpp"

#include "GameplayAbilities_structs.hpp"
#include "OrionGame_structs.hpp"
#include "OrionGame_classes.hpp"
#include "Engine_structs.hpp"
#include "GameplayTags_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass GA_Card_CreepingDeath.GA_Card_CreepingDeath_C
// 0x0130 (0x0CA0 - 0x0B70)
class UGA_Card_CreepingDeath_C final : public UOrionAbility
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0B70(0x0008)(Transient, DuplicateTransient)
	float                                         ExecuteHealthThreshold;                            // 0x0B78(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B7C[0x4];                                      // 0x0B7C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FOrionFilterAndEffectsContainer        OnHitPassContainers;                               // 0x0B80(0x0020)(Edit, BlueprintVisible, DisableEditOnInstance)
	class UClass*                                 Projectile;                                        // 0x0BA0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FDamageQualifierKeywordsWithContext    HomingProjQualifier;                               // 0x0BA8(0x0078)(Edit, BlueprintVisible, DisableEditOnInstance)
	class UClass*                                 ExecuteTarget;                                     // 0x0C20(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AOrionProjectile*                       BP_Projectile;                                     // 0x0C28(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FScalableFloat                         ExecuteHealthThreshold_Value;                      // 0x0C30(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FGameplayAbilityTargetDataHandle       TargetData;                                        // 0x0C58(0x0020)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FGameplayTagContainer                  TC_IsImmortal;                                     // 0x0C78(0x0020)(Edit, BlueprintVisible, DisableEditOnInstance)

public:
	void ExecuteUbergraph_GA_Card_CreepingDeath(int32 EntryPoint);
	void Cancelled_B0996239431A0DCDDB0BF5884EE0AFB0(const struct FGameplayAbilityTargetDataHandle& Targets);
	void Confirmed_B0996239431A0DCDDB0BF5884EE0AFB0(const struct FGameplayAbilityTargetDataHandle& Targets);
	void FailedToSpawn_61DCF31D4B832B0C61F218B9EAE05412(class AOrionProjectile* SpawnedProjectile);
	void K2_ActivateAbility();
	void NotAuthority_61DCF31D4B832B0C61F218B9EAE05412(class AOrionProjectile* SpawnedProjectile);
	void OnDamage_9BA431FC42C196600C8DD095302FFB76(class UAbilitySystemComponent* AuxillaryASC, const struct FQualifierContextDamage& DamageInfo, const struct FGameplayEffectSpecHandle& SpecHandle);
	void OnFinish_EE4FC98844E999CE78E645ABD2E8BDDB();
	void OnKilled_05C19E6D48B9AEA7C835389346920F8C(class AActor* Source, const struct FGameplayEffectSpecHandle& SpecHandle);
	void OnShutdown_8FF02CF541946B7DD22059AAE7E11E17();
	void OnStateEnded_F068D783427B1D8BBCD4C5A64B774530();
	void OnStateInterrupted_F068D783427B1D8BBCD4C5A64B774530();
	void PreSpawned_61DCF31D4B832B0C61F218B9EAE05412(class AOrionProjectile* SpawnedProjectile);
	void Success_61DCF31D4B832B0C61F218B9EAE05412(class AOrionProjectile* SpawnedProjectile);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"GA_Card_CreepingDeath_C">();
	}
	static class UGA_Card_CreepingDeath_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGA_Card_CreepingDeath_C>();
	}
};
static_assert(alignof(UGA_Card_CreepingDeath_C) == 0x000010, "Wrong alignment on UGA_Card_CreepingDeath_C");
static_assert(sizeof(UGA_Card_CreepingDeath_C) == 0x000CA0, "Wrong size on UGA_Card_CreepingDeath_C");
static_assert(offsetof(UGA_Card_CreepingDeath_C, UberGraphFrame) == 0x000B70, "Member 'UGA_Card_CreepingDeath_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UGA_Card_CreepingDeath_C, ExecuteHealthThreshold) == 0x000B78, "Member 'UGA_Card_CreepingDeath_C::ExecuteHealthThreshold' has a wrong offset!");
static_assert(offsetof(UGA_Card_CreepingDeath_C, OnHitPassContainers) == 0x000B80, "Member 'UGA_Card_CreepingDeath_C::OnHitPassContainers' has a wrong offset!");
static_assert(offsetof(UGA_Card_CreepingDeath_C, Projectile) == 0x000BA0, "Member 'UGA_Card_CreepingDeath_C::Projectile' has a wrong offset!");
static_assert(offsetof(UGA_Card_CreepingDeath_C, HomingProjQualifier) == 0x000BA8, "Member 'UGA_Card_CreepingDeath_C::HomingProjQualifier' has a wrong offset!");
static_assert(offsetof(UGA_Card_CreepingDeath_C, ExecuteTarget) == 0x000C20, "Member 'UGA_Card_CreepingDeath_C::ExecuteTarget' has a wrong offset!");
static_assert(offsetof(UGA_Card_CreepingDeath_C, BP_Projectile) == 0x000C28, "Member 'UGA_Card_CreepingDeath_C::BP_Projectile' has a wrong offset!");
static_assert(offsetof(UGA_Card_CreepingDeath_C, ExecuteHealthThreshold_Value) == 0x000C30, "Member 'UGA_Card_CreepingDeath_C::ExecuteHealthThreshold_Value' has a wrong offset!");
static_assert(offsetof(UGA_Card_CreepingDeath_C, TargetData) == 0x000C58, "Member 'UGA_Card_CreepingDeath_C::TargetData' has a wrong offset!");
static_assert(offsetof(UGA_Card_CreepingDeath_C, TC_IsImmortal) == 0x000C78, "Member 'UGA_Card_CreepingDeath_C::TC_IsImmortal' has a wrong offset!");

}

