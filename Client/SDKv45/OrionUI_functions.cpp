#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: OrionUI

#include "Basic.hpp"

#include "OrionUI_classes.hpp"
#include "OrionUI_parameters.hpp"


namespace SDK
{

// Function OrionUI.ArcadeLadderDetailsRoot.SetLadder
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UOrionArcadeLadderSetupData*      NewLadderData                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UArcadeLadderDetailsRoot::SetLadder(class UOrionArcadeLadderSetupData* NewLadderData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ArcadeLadderDetailsRoot", "SetLadder");

	Params::ArcadeLadderDetailsRoot_SetLadder Parms{};

	Parms.NewLadderData = NewLadderData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.ArcadeLadderDetailsRoot.SetupButtons
// (Native, Event, Protected, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   StartingStageIndex                                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UArcadeLadderDetailsRoot::SetupButtons(const int32 StartingStageIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ArcadeLadderDetailsRoot", "SetupButtons");

	Params::ArcadeLadderDetailsRoot_SetupButtons Parms{};

	Parms.StartingStageIndex = StartingStageIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.ArcadeLadderButton.UpdateWithLadderData
// (Native, Event, Public, BlueprintEvent)

void UArcadeLadderButton::UpdateWithLadderData()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ArcadeLadderButton", "UpdateWithLadderData");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.ArcadeRoot.DynamicHandleItemSelected
// (Final, Native, Protected)
// Parameters:
// class UObject*                          Item                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UArcadeRoot::DynamicHandleItemSelected(class UObject* Item)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ArcadeRoot", "DynamicHandleItemSelected");

	Params::ArcadeRoot_DynamicHandleItemSelected Parms{};

	Parms.Item = Item;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.ArcadeStageButton.HideButton
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)

void UArcadeStageButton::HideButton()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ArcadeStageButton", "HideButton");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.ArcadeStageButton.SetStageData
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UOrionArcadeLadderSetupData*      InLadderData                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   InStageIndex                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UArcadeStageButton::SetStageData(class UOrionArcadeLadderSetupData* InLadderData, int32 InStageIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ArcadeStageButton", "SetStageData");

	Params::ArcadeStageButton_SetStageData Parms{};

	Parms.InLadderData = InLadderData;
	Parms.InStageIndex = InStageIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.ArcadeStageButton.UpdateWithStageData
// (Native, Event, Protected, BlueprintCallable, BlueprintEvent)

void UArcadeStageButton::UpdateWithStageData()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ArcadeStageButton", "UpdateWithStageData");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.ArcadeStageButton.GetPlaylistID
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UArcadeStageButton::GetPlaylistID() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ArcadeStageButton", "GetPlaylistID");

	Params::ArcadeStageButton_GetPlaylistID Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function OrionUI.ArcadeStageButton.GetUIIndex
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UArcadeStageButton::GetUIIndex() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ArcadeStageButton", "GetUIIndex");

	Params::ArcadeStageButton_GetUIIndex Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function OrionUI.ArcadeStageButton.IsValidStage
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UArcadeStageButton::IsValidStage() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ArcadeStageButton", "IsValidStage");

	Params::ArcadeStageButton_IsValidStage Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function OrionUI.Base_Group.AddWidget
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UWidget*                          InWidget                                               (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBase_Group::AddWidget(class UWidget* InWidget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Base_Group", "AddWidget");

	Params::Base_Group_AddWidget Parms{};

	Parms.InWidget = InWidget;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.Base_Group.RemoveAll
// (Final, Native, Public, BlueprintCallable)

void UBase_Group::RemoveAll()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Base_Group", "RemoveAll");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.Base_Group.RemoveWidget
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UWidget*                          InWidget                                               (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBase_Group::RemoveWidget(class UWidget* InWidget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Base_Group", "RemoveWidget");

	Params::Base_Group_RemoveWidget Parms{};

	Parms.InWidget = InWidget;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// DelegateFunction OrionUI.ChatWindow.GetChatPromptText__DelegateSignature
// (Public, Delegate)
// Parameters:
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

class FText UChatWindow::GetChatPromptText__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ChatWindow", "GetChatPromptText__DelegateSignature");

	Params::ChatWindow_GetChatPromptText__DelegateSignature Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// DelegateFunction OrionUI.ChatWindow.OnChatDelegate__DelegateSignature
// (Public, Delegate)

void UChatWindow::OnChatDelegate__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ChatWindow", "OnChatDelegate__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function OrionUI.ChatWindow.SetActive
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bActive                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UChatWindow::SetActive(bool bActive)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ChatWindow", "SetActive");

	Params::ChatWindow_SetActive Parms{};

	Parms.bActive = bActive;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.ChatWindow.SetFocus
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bWithSlash                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UChatWindow::SetFocus(bool bWithSlash)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ChatWindow", "SetFocus");

	Params::ChatWindow_SetFocus Parms{};

	Parms.bWithSlash = bWithSlash;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.ChatWindow.IsActive
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UChatWindow::IsActive() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ChatWindow", "IsActive");

	Params::ChatWindow_IsActive Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function OrionUI.ChatWindowWidget.HandleOpenChat
// (Final, Native, Private)

void UChatWindowWidget::HandleOpenChat()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ChatWindowWidget", "HandleOpenChat");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.ChatWindowWidget.HandleOpenChatWithSlash
// (Final, Native, Private)

void UChatWindowWidget::HandleOpenChatWithSlash()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ChatWindowWidget", "HandleOpenChatWithSlash");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.CircularLayoutPanel.AddChildToCircularLayout
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UWidget*                          Content                                                (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UCircularLayoutSlot*              ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UCircularLayoutSlot* UCircularLayoutPanel::AddChildToCircularLayout(class UWidget* Content)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CircularLayoutPanel", "AddChildToCircularLayout");

	Params::CircularLayoutPanel_AddChildToCircularLayout Parms{};

	Parms.Content = Content;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function OrionUI.CircularLayoutPanel.SetPhaseOffset
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   InPhaseOffset                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UCircularLayoutPanel::SetPhaseOffset(float InPhaseOffset)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CircularLayoutPanel", "SetPhaseOffset");

	Params::CircularLayoutPanel_SetPhaseOffset Parms{};

	Parms.InPhaseOffset = InPhaseOffset;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.CircularLayoutPanel.SetRadiusMultiplier
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   InRadiusMultiplier                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UCircularLayoutPanel::SetRadiusMultiplier(float InRadiusMultiplier)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CircularLayoutPanel", "SetRadiusMultiplier");

	Params::CircularLayoutPanel_SetRadiusMultiplier Parms{};

	Parms.InRadiusMultiplier = InRadiusMultiplier;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.CircularLayoutSlot.SetHorizontalAlignment
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EHorizontalAlignment                    InHorizontalAlignment                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UCircularLayoutSlot::SetHorizontalAlignment(EHorizontalAlignment InHorizontalAlignment)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CircularLayoutSlot", "SetHorizontalAlignment");

	Params::CircularLayoutSlot_SetHorizontalAlignment Parms{};

	Parms.InHorizontalAlignment = InHorizontalAlignment;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.CircularLayoutSlot.SetProportion
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   InProportion                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UCircularLayoutSlot::SetProportion(float InProportion)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CircularLayoutSlot", "SetProportion");

	Params::CircularLayoutSlot_SetProportion Parms{};

	Parms.InProportion = InProportion;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.CircularLayoutSlot.SetRadius
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   InRadius                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UCircularLayoutSlot::SetRadius(float InRadius)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CircularLayoutSlot", "SetRadius");

	Params::CircularLayoutSlot_SetRadius Parms{};

	Parms.InRadius = InRadius;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.CircularLayoutSlot.SetVerticalAlignment
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EVerticalAlignment                      InVerticalAlignment                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UCircularLayoutSlot::SetVerticalAlignment(EVerticalAlignment InVerticalAlignment)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CircularLayoutSlot", "SetVerticalAlignment");

	Params::CircularLayoutSlot_SetVerticalAlignment Parms{};

	Parms.InVerticalAlignment = InVerticalAlignment;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.EventWidgetSlot.SetHorizontalAlignment
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EHorizontalAlignment                    InHorizontalAlignment                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEventWidgetSlot::SetHorizontalAlignment(EHorizontalAlignment InHorizontalAlignment)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EventWidgetSlot", "SetHorizontalAlignment");

	Params::EventWidgetSlot_SetHorizontalAlignment Parms{};

	Parms.InHorizontalAlignment = InHorizontalAlignment;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.EventWidgetSlot.SetPadding
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FMargin                          InPadding                                              (Parm, NoDestructor, NativeAccessSpecifierPublic)

void UEventWidgetSlot::SetPadding(const struct FMargin& InPadding)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EventWidgetSlot", "SetPadding");

	Params::EventWidgetSlot_SetPadding Parms{};

	Parms.InPadding = std::move(InPadding);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.EventWidgetSlot.SetVerticalAlignment
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EVerticalAlignment                      InVerticalAlignment                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UEventWidgetSlot::SetVerticalAlignment(EVerticalAlignment InVerticalAlignment)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EventWidgetSlot", "SetVerticalAlignment");

	Params::EventWidgetSlot_SetVerticalAlignment Parms{};

	Parms.InVerticalAlignment = InVerticalAlignment;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.ExpandableArea_Group.OnExpansionChanged
// (Final, Native, Private)
// Parameters:
// class UExpandableArea*                  Area                                                   (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bIsExpanded                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UExpandableArea_Group::OnExpansionChanged(class UExpandableArea* Area, bool bIsExpanded)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ExpandableArea_Group", "OnExpansionChanged");

	Params::ExpandableArea_Group_OnExpansionChanged Parms{};

	Parms.Area = Area;
	Parms.bIsExpanded = bIsExpanded;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.HUDAlertWidgetBase.NotifyAlertFinished
// (Final, Native, Protected, BlueprintCallable)

void UHUDAlertWidgetBase::NotifyAlertFinished()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUDAlertWidgetBase", "NotifyAlertFinished");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.HUDAlertWidgetBase.OnPlay
// (Native, Event, Protected, BlueprintEvent)
// Parameters:
// class UHUDAlertAsset*                   InAlertToShow                                          (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UHUDAlertWidgetBase::OnPlay(const class UHUDAlertAsset* InAlertToShow)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HUDAlertWidgetBase", "OnPlay");

	Params::HUDAlertWidgetBase_OnPlay Parms{};

	Parms.InAlertToShow = InAlertToShow;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.OrionVaultScreen.FanfareCompleted
// (Final, Native, Private)

void UOrionVaultScreen::FanfareCompleted()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionVaultScreen", "FanfareCompleted");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.OrionVaultScreen.HandleButtonClick
// (Final, Native, Private, BlueprintCallable)

void UOrionVaultScreen::HandleButtonClick()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionVaultScreen", "HandleButtonClick");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.OrionVaultScreen.OnActivated
// (Event, Protected, BlueprintEvent)

void UOrionVaultScreen::OnActivated()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionVaultScreen", "OnActivated");

	UObject::ProcessEvent(Func, nullptr);
}


// Function OrionUI.OrionVaultScreen.OnDeactivated
// (Event, Protected, BlueprintEvent)

void UOrionVaultScreen::OnDeactivated()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionVaultScreen", "OnDeactivated");

	UObject::ProcessEvent(Func, nullptr);
}


// Function OrionUI.OrionVaultScreen.OnRequestAllowBackButton
// (Event, Protected, BlueprintEvent)

void UOrionVaultScreen::OnRequestAllowBackButton()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionVaultScreen", "OnRequestAllowBackButton");

	UObject::ProcessEvent(Func, nullptr);
}


// Function OrionUI.OrionVaultScreen.OnRequestDisableBackButton
// (Event, Protected, BlueprintEvent)

void UOrionVaultScreen::OnRequestDisableBackButton()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionVaultScreen", "OnRequestDisableBackButton");

	UObject::ProcessEvent(Func, nullptr);
}


// Function OrionUI.OrionListView.DynamicHandleItemClicked
// (Final, Native, Private)
// Parameters:
// class UUserWidget*                      Widget                                                 (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOrionListView::DynamicHandleItemClicked(class UUserWidget* Widget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionListView", "DynamicHandleItemClicked");

	Params::OrionListView_DynamicHandleItemClicked Parms{};

	Parms.Widget = Widget;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.OrionListView.DynamicHandleItemHovered
// (Final, Native, Private)
// Parameters:
// class UUserWidget*                      Widget                                                 (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bIsHovered                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOrionListView::DynamicHandleItemHovered(class UUserWidget* Widget, bool bIsHovered)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionListView", "DynamicHandleItemHovered");

	Params::OrionListView_DynamicHandleItemHovered Parms{};

	Parms.Widget = Widget;
	Parms.bIsHovered = bIsHovered;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.MatchmakingSearchWidget.OnFrontEndTabChanged
// (Final, Native, Protected)
// Parameters:
// class FName                             TabId                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMatchmakingSearchWidget::OnFrontEndTabChanged(class FName TabId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MatchmakingSearchWidget", "OnFrontEndTabChanged");

	Params::MatchmakingSearchWidget_OnFrontEndTabChanged Parms{};

	Parms.TabId = TabId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.MatchmakingSearchWidget.OnHideWidget
// (Event, Protected, BlueprintEvent)

void UMatchmakingSearchWidget::OnHideWidget()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MatchmakingSearchWidget", "OnHideWidget");

	UObject::ProcessEvent(Func, nullptr);
}


// Function OrionUI.MatchmakingSearchWidget.OnHoveredChanged
// (Final, Native, Protected)
// Parameters:
// bool                                    bIsHovered                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMatchmakingSearchWidget::OnHoveredChanged(bool bIsHovered)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MatchmakingSearchWidget", "OnHoveredChanged");

	Params::MatchmakingSearchWidget_OnHoveredChanged Parms{};

	Parms.bIsHovered = bIsHovered;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.MatchmakingSearchWidget.OnMinimizeWidget
// (Event, Protected, BlueprintEvent)

void UMatchmakingSearchWidget::OnMinimizeWidget()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MatchmakingSearchWidget", "OnMinimizeWidget");

	UObject::ProcessEvent(Func, nullptr);
}


// Function OrionUI.MatchmakingSearchWidget.OnReadyCheck
// (Event, Protected, BlueprintEvent)

void UMatchmakingSearchWidget::OnReadyCheck()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MatchmakingSearchWidget", "OnReadyCheck");

	UObject::ProcessEvent(Func, nullptr);
}


// Function OrionUI.MatchmakingSearchWidget.OnReadyCheckTimerWarning
// (Event, Protected, BlueprintEvent)

void UMatchmakingSearchWidget::OnReadyCheckTimerWarning()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MatchmakingSearchWidget", "OnReadyCheckTimerWarning");

	UObject::ProcessEvent(Func, nullptr);
}


// Function OrionUI.MatchmakingSearchWidget.OnRestoreWidget
// (Event, Protected, BlueprintEvent)

void UMatchmakingSearchWidget::OnRestoreWidget()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MatchmakingSearchWidget", "OnRestoreWidget");

	UObject::ProcessEvent(Func, nullptr);
}


// Function OrionUI.MatchmakingSearchWidget.OnShowWidget
// (Event, Protected, BlueprintEvent)

void UMatchmakingSearchWidget::OnShowWidget()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MatchmakingSearchWidget", "OnShowWidget");

	UObject::ProcessEvent(Func, nullptr);
}


// Function OrionUI.OrionTimerWidget.StartTimer
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   Seconds                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOrionTimerWidget::StartTimer(float Seconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionTimerWidget", "StartTimer");

	Params::OrionTimerWidget_StartTimer Parms{};

	Parms.Seconds = Seconds;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.OrionTimerWidget.StopTimer
// (Final, Native, Public, BlueprintCallable)

void UOrionTimerWidget::StopTimer()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionTimerWidget", "StopTimer");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.OrionAbilityAmmoTimer.OnTimerEnded
// (Native, Event, Protected, BlueprintEvent)
// Parameters:
// float                                   TimeRemaining                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   TotalDuration                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOrionAbilityAmmoTimer::OnTimerEnded(float TimeRemaining, float TotalDuration)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionAbilityAmmoTimer", "OnTimerEnded");

	Params::OrionAbilityAmmoTimer_OnTimerEnded Parms{};

	Parms.TimeRemaining = TimeRemaining;
	Parms.TotalDuration = TotalDuration;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.OrionAbilityAmmoTimer.OnTimerStarted
// (Native, Event, Protected, BlueprintEvent)
// Parameters:
// float                                   TimeRemaining                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   TotalDuration                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOrionAbilityAmmoTimer::OnTimerStarted(float TimeRemaining, float TotalDuration)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionAbilityAmmoTimer", "OnTimerStarted");

	Params::OrionAbilityAmmoTimer_OnTimerStarted Parms{};

	Parms.TimeRemaining = TimeRemaining;
	Parms.TotalDuration = TotalDuration;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.OrionAbilityConfirmWidget.HandleGameplaySettingsChanged
// (Final, Native, Protected)

void UOrionAbilityConfirmWidget::HandleGameplaySettingsChanged()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionAbilityConfirmWidget", "HandleGameplaySettingsChanged");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.OrionAbilityConfirmWidget.HideConfirmWidget
// (Native, Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bImmediate                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOrionAbilityConfirmWidget::HideConfirmWidget(bool bImmediate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionAbilityConfirmWidget", "HideConfirmWidget");

	Params::OrionAbilityConfirmWidget_HideConfirmWidget Parms{};

	Parms.bImmediate = bImmediate;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.OrionAbilityConfirmWidget.ShowConfirmWidget
// (Native, Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bAllowConfirm                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOrionAbilityConfirmWidget::ShowConfirmWidget(bool bAllowConfirm)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionAbilityConfirmWidget", "ShowConfirmWidget");

	Params::OrionAbilityConfirmWidget_ShowConfirmWidget Parms{};

	Parms.bAllowConfirm = bAllowConfirm;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.OrionAbilityWidgetColumn.HideLevelUp
// (Native, Event, Protected, BlueprintEvent)

void UOrionAbilityWidgetColumn::HideLevelUp()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionAbilityWidgetColumn", "HideLevelUp");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.OrionAbilityWidgetColumn.ShowLevelUp
// (Native, Event, Protected, BlueprintEvent)

void UOrionAbilityWidgetColumn::ShowLevelUp()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionAbilityWidgetColumn", "ShowLevelUp");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.OrionXPWidget.SetPrimaryColor
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct FLinearColor                     InColor                                                (Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOrionXPWidget::SetPrimaryColor(const struct FLinearColor& InColor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionXPWidget", "SetPrimaryColor");

	Params::OrionXPWidget_SetPrimaryColor Parms{};

	Parms.InColor = std::move(InColor);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.OrionAbilityLayoutWidget.ForceAbilityLayoutUpdateForGamepad
// (Final, Native, Public, BlueprintCallable)

void UOrionAbilityLayoutWidget::ForceAbilityLayoutUpdateForGamepad()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionAbilityLayoutWidget", "ForceAbilityLayoutUpdateForGamepad");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.OrionAbilityLayoutWidget.OnSpectatorWatchedHeroChange
// (Final, Native, Protected)
// Parameters:
// EOrionTeam                              HeroTeam                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   HeroIndex                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOrionAbilityLayoutWidget::OnSpectatorWatchedHeroChange(EOrionTeam HeroTeam, int32 HeroIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionAbilityLayoutWidget", "OnSpectatorWatchedHeroChange");

	Params::OrionAbilityLayoutWidget_OnSpectatorWatchedHeroChange Parms{};

	Parms.HeroTeam = HeroTeam;
	Parms.HeroIndex = HeroIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.OrionAbilityPipsWidget.OnNumFilledPipsChanged
// (Event, Public, BlueprintEvent)
// Parameters:
// int32                                   NumFilledPips                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOrionAbilityPipsWidget::OnNumFilledPipsChanged(int32 NumFilledPips)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionAbilityPipsWidget", "OnNumFilledPipsChanged");

	Params::OrionAbilityPipsWidget_OnNumFilledPipsChanged Parms{};

	Parms.NumFilledPips = NumFilledPips;

	UObject::ProcessEvent(Func, &Parms);
}


// Function OrionUI.OrionAbilityPipsWidget.OnPipDisplayTypeChanged
// (Event, Public, BlueprintEvent)
// Parameters:
// EAbilityPipDisplayType                  DisplayType                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOrionAbilityPipsWidget::OnPipDisplayTypeChanged(EAbilityPipDisplayType DisplayType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionAbilityPipsWidget", "OnPipDisplayTypeChanged");

	Params::OrionAbilityPipsWidget_OnPipDisplayTypeChanged Parms{};

	Parms.DisplayType = DisplayType;

	UObject::ProcessEvent(Func, &Parms);
}


// Function OrionUI.OrionAbilityPipsWidget.GetCorrectMIDValue
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   InNumOfPips                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UOrionAbilityPipsWidget::GetCorrectMIDValue(int32 InNumOfPips) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionAbilityPipsWidget", "GetCorrectMIDValue");

	Params::OrionAbilityPipsWidget_GetCorrectMIDValue Parms{};

	Parms.InNumOfPips = InNumOfPips;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function OrionUI.OrionURLs.GetURLs
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UOrionURLs*                       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UOrionURLs* UOrionURLs::GetURLs()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("OrionURLs", "GetURLs");

	Params::OrionURLs_GetURLs Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function OrionUI.OrionURLs.GetCustomerServiceURLInLanguage
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class FString                           LanguageCode                                           (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           CountryCode                                            (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UOrionURLs::GetCustomerServiceURLInLanguage(const class FString& LanguageCode, const class FString& CountryCode)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionURLs", "GetCustomerServiceURLInLanguage");

	Params::OrionURLs_GetCustomerServiceURLInLanguage Parms{};

	Parms.LanguageCode = std::move(LanguageCode);
	Parms.CountryCode = std::move(CountryCode);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function OrionUI.OrionUpgradePanelIcon.GoToCanNotUpgradeState
// (Native, Event, Public, BlueprintEvent)

void UOrionUpgradePanelIcon::GoToCanNotUpgradeState()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionUpgradePanelIcon", "GoToCanNotUpgradeState");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.OrionUpgradePanelIcon.GoToCanUpgradeState
// (Native, Event, Public, BlueprintEvent)

void UOrionUpgradePanelIcon::GoToCanUpgradeState()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionUpgradePanelIcon", "GoToCanUpgradeState");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.OrionUpgradePanelIcon.HideLock
// (Native, Event, Public, BlueprintEvent)

void UOrionUpgradePanelIcon::HideLock()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionUpgradePanelIcon", "HideLock");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.OrionAbilityUpgradePanelPullTab.HideWidget
// (Native, Event, Protected, BlueprintCallable, BlueprintEvent)

void UOrionAbilityUpgradePanelPullTab::HideWidget()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionAbilityUpgradePanelPullTab", "HideWidget");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.OrionAbilityUpgradePanelPullTab.ShowWidget
// (Native, Event, Protected, BlueprintCallable, BlueprintEvent)

void UOrionAbilityUpgradePanelPullTab::ShowWidget()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionAbilityUpgradePanelPullTab", "ShowWidget");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.OrionVideoPlayerWidget.ClaimMediaPlayer
// (Final, Native, Public, BlueprintCallable)

void UOrionVideoPlayerWidget::ClaimMediaPlayer()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionVideoPlayerWidget", "ClaimMediaPlayer");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.OrionVideoPlayerWidget.DynamicHandleOnClosed
// (Final, Native, Protected)

void UOrionVideoPlayerWidget::DynamicHandleOnClosed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionVideoPlayerWidget", "DynamicHandleOnClosed");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.OrionVideoPlayerWidget.DynamicHandleOnEndReached
// (Final, Native, Protected)

void UOrionVideoPlayerWidget::DynamicHandleOnEndReached()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionVideoPlayerWidget", "DynamicHandleOnEndReached");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.OrionVideoPlayerWidget.DynamicHandleOnMediaOpened
// (Final, Native, Protected)
// Parameters:
// class FString                           OpenedUrl                                              (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOrionVideoPlayerWidget::DynamicHandleOnMediaOpened(const class FString& OpenedUrl)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionVideoPlayerWidget", "DynamicHandleOnMediaOpened");

	Params::OrionVideoPlayerWidget_DynamicHandleOnMediaOpened Parms{};

	Parms.OpenedUrl = std::move(OpenedUrl);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.OrionVideoPlayerWidget.DynamicHandleOnOpenMediaFailed
// (Final, Native, Protected)
// Parameters:
// class FString                           FailedUrl                                              (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOrionVideoPlayerWidget::DynamicHandleOnOpenMediaFailed(const class FString& FailedUrl)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionVideoPlayerWidget", "DynamicHandleOnOpenMediaFailed");

	Params::OrionVideoPlayerWidget_DynamicHandleOnOpenMediaFailed Parms{};

	Parms.FailedUrl = std::move(FailedUrl);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.OrionVideoPlayerWidget.DynamicHandleVideoMouseButtonDown
// (Final, Native, Protected, HasOutParams)
// Parameters:
// struct FGeometry                        Geometry                                               (Parm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// struct FPointerEvent                    MouseEvent                                             (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// struct FEventReply                      ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FEventReply UOrionVideoPlayerWidget::DynamicHandleVideoMouseButtonDown(const struct FGeometry& Geometry, const struct FPointerEvent& MouseEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionVideoPlayerWidget", "DynamicHandleVideoMouseButtonDown");

	Params::OrionVideoPlayerWidget_DynamicHandleVideoMouseButtonDown Parms{};

	Parms.Geometry = std::move(Geometry);
	Parms.MouseEvent = std::move(MouseEvent);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function OrionUI.OrionVideoPlayerWidget.FreeMediaPlayer
// (Final, Native, Public, BlueprintCallable)

void UOrionVideoPlayerWidget::FreeMediaPlayer()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionVideoPlayerWidget", "FreeMediaPlayer");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.OrionVideoPlayerWidget.LoadFromVideoID
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class FName                             VideoID                                                (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UOrionVideoPlayerWidget::LoadFromVideoID(const class FName& VideoID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionVideoPlayerWidget", "LoadFromVideoID");

	Params::OrionVideoPlayerWidget_LoadFromVideoID Parms{};

	Parms.VideoID = VideoID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function OrionUI.OrionVideoPlayerWidget.OnVideoStarted
// (Event, Protected, BlueprintEvent)

void UOrionVideoPlayerWidget::OnVideoStarted()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionVideoPlayerWidget", "OnVideoStarted");

	UObject::ProcessEvent(Func, nullptr);
}


// Function OrionUI.OrionVideoPlayerWidget.OnVideoStopped
// (Event, Protected, BlueprintEvent)

void UOrionVideoPlayerWidget::OnVideoStopped()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionVideoPlayerWidget", "OnVideoStopped");

	UObject::ProcessEvent(Func, nullptr);
}


// Function OrionUI.OrionVideoPlayerWidget.OnVideoTitlesCreated
// (Event, Protected, BlueprintEvent)
// Parameters:
// class UOrionVideoTitles*                VideoTitlesWidget                                      (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOrionVideoPlayerWidget::OnVideoTitlesCreated(class UOrionVideoTitles* VideoTitlesWidget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionVideoPlayerWidget", "OnVideoTitlesCreated");

	Params::OrionVideoPlayerWidget_OnVideoTitlesCreated Parms{};

	Parms.VideoTitlesWidget = VideoTitlesWidget;

	UObject::ProcessEvent(Func, &Parms);
}


// Function OrionUI.OrionVideoPlayerWidget.Skip
// (Final, Native, Public, BlueprintCallable)

void UOrionVideoPlayerWidget::Skip()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionVideoPlayerWidget", "Skip");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.OrionVideoPlayerWidget.Start
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UOrionVideoPlayerWidget::Start()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionVideoPlayerWidget", "Start");

	Params::OrionVideoPlayerWidget_Start Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function OrionUI.OrionVideoPlayerWidget.Stop
// (Final, Native, Public, BlueprintCallable)

void UOrionVideoPlayerWidget::Stop()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionVideoPlayerWidget", "Stop");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.OrionVideoPlayerWidget.StreamFromVideoURL
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FString                           VideoURL                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UOrionVideoPlayerWidget::StreamFromVideoURL(const class FString& VideoURL)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionVideoPlayerWidget", "StreamFromVideoURL");

	Params::OrionVideoPlayerWidget_StreamFromVideoURL Parms{};

	Parms.VideoURL = std::move(VideoURL);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function OrionUI.OrionVideoPlayerWidget.IsPlaying
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UOrionVideoPlayerWidget::IsPlaying() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionVideoPlayerWidget", "IsPlaying");

	Params::OrionVideoPlayerWidget_IsPlaying Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function OrionUI.OrionVideoPlayerWidget.IsRunning
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UOrionVideoPlayerWidget::IsRunning() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionVideoPlayerWidget", "IsRunning");

	Params::OrionVideoPlayerWidget_IsRunning Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function OrionUI.OrionAbilityUpgradeRowWidget.HideLocks
// (Native, Event, Protected, BlueprintEvent)

void UOrionAbilityUpgradeRowWidget::HideLocks()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionAbilityUpgradeRowWidget", "HideLocks");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.OrionAbilityUpgradeRowWidget.HideUpgrades
// (Native, Event, Protected, BlueprintEvent)

void UOrionAbilityUpgradeRowWidget::HideUpgrades()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionAbilityUpgradeRowWidget", "HideUpgrades");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.OrionAbilityUpgradeRowWidget.OnAbilityUpgraded
// (Native, Event, Protected, BlueprintEvent)

void UOrionAbilityUpgradeRowWidget::OnAbilityUpgraded()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionAbilityUpgradeRowWidget", "OnAbilityUpgraded");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.OrionAbilityUpgradeRowWidget.ShowGamepadKeys
// (Native, Event, Protected, BlueprintEvent)

void UOrionAbilityUpgradeRowWidget::ShowGamepadKeys()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionAbilityUpgradeRowWidget", "ShowGamepadKeys");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.OrionAbilityUpgradeRowWidget.ShowKeyboardKeys
// (Native, Event, Protected, BlueprintEvent)

void UOrionAbilityUpgradeRowWidget::ShowKeyboardKeys()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionAbilityUpgradeRowWidget", "ShowKeyboardKeys");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.OrionAbilityUpgradeRowWidget.ShowUpgrades
// (Native, Event, Protected, BlueprintEvent)

void UOrionAbilityUpgradeRowWidget::ShowUpgrades()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionAbilityUpgradeRowWidget", "ShowUpgrades");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.OrionAbilityUpgradeRowWidget.GetInputID
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EOrionAbilityBinding                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EOrionAbilityBinding UOrionAbilityUpgradeRowWidget::GetInputID() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionAbilityUpgradeRowWidget", "GetInputID");

	Params::OrionAbilityUpgradeRowWidget_GetInputID Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function OrionUI.OrionAbilityUpgradePanel.CloseMenu
// (Native, Event, Protected, BlueprintCallable, BlueprintEvent)

void UOrionAbilityUpgradePanel::CloseMenu()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionAbilityUpgradePanel", "CloseMenu");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.OrionAbilityUpgradePanel.OnClosedFinished
// (Native, Event, Protected, BlueprintCallable, BlueprintEvent)

void UOrionAbilityUpgradePanel::OnClosedFinished()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionAbilityUpgradePanel", "OnClosedFinished");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.OrionAbilityUpgradePanel.OpenMenu
// (Native, Event, Protected, BlueprintCallable, BlueprintEvent)

void UOrionAbilityUpgradePanel::OpenMenu()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionAbilityUpgradePanel", "OpenMenu");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.OrionMiscAbilityWidget.CanActivate
// (Native, Event, Protected, BlueprintEvent)

void UOrionMiscAbilityWidget::CanActivate()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionMiscAbilityWidget", "CanActivate");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.OrionMiscAbilityWidget.CannotActivate
// (Native, Event, Protected, BlueprintEvent)

void UOrionMiscAbilityWidget::CannotActivate()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionMiscAbilityWidget", "CannotActivate");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.OrionMiscAbilityWidget.HideAbilityWidget
// (Native, Event, Protected, BlueprintEvent)

void UOrionMiscAbilityWidget::HideAbilityWidget()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionMiscAbilityWidget", "HideAbilityWidget");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.OrionMiscAbilityWidget.ShowAbilityWidget
// (Native, Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bImmediate                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOrionMiscAbilityWidget::ShowAbilityWidget(bool bImmediate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionMiscAbilityWidget", "ShowAbilityWidget");

	Params::OrionMiscAbilityWidget_ShowAbilityWidget Parms{};

	Parms.bImmediate = bImmediate;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.OrionAbilityWidget.AbilityFail_Cooldown
// (Native, Event, Protected, BlueprintEvent)

void UOrionAbilityWidget::AbilityFail_Cooldown()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionAbilityWidget", "AbilityFail_Cooldown");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.OrionAbilityWidget.AbilityFail_Energy
// (Native, Event, Protected, BlueprintEvent)

void UOrionAbilityWidget::AbilityFail_Energy()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionAbilityWidget", "AbilityFail_Energy");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.OrionAbilityWidget.AbilityFail_Generic
// (Native, Event, Protected, BlueprintEvent)

void UOrionAbilityWidget::AbilityFail_Generic()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionAbilityWidget", "AbilityFail_Generic");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.OrionAbilityWidget.CanActivate
// (Native, Event, Protected, BlueprintEvent)

void UOrionAbilityWidget::CanActivate()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionAbilityWidget", "CanActivate");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.OrionAbilityWidget.CannotActivate
// (Native, Event, Protected, BlueprintEvent)

void UOrionAbilityWidget::CannotActivate()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionAbilityWidget", "CannotActivate");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.OrionAbilityWidget.HideLock
// (Native, Event, Protected, BlueprintEvent)

void UOrionAbilityWidget::HideLock()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionAbilityWidget", "HideLock");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.OrionAbilityWidget.HideStacks
// (Native, Event, Protected, BlueprintEvent)

void UOrionAbilityWidget::HideStacks()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionAbilityWidget", "HideStacks");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.OrionAbilityWidget.HideUpgrades
// (Native, Event, Public, BlueprintEvent)

void UOrionAbilityWidget::HideUpgrades()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionAbilityWidget", "HideUpgrades");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.OrionAbilityWidget.OnAbilityDisengaged
// (Native, Event, Protected, BlueprintEvent)

void UOrionAbilityWidget::OnAbilityDisengaged()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionAbilityWidget", "OnAbilityDisengaged");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.OrionAbilityWidget.OnAbilityEngaged
// (Native, Event, Protected, BlueprintEvent)

void UOrionAbilityWidget::OnAbilityEngaged()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionAbilityWidget", "OnAbilityEngaged");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.OrionAbilityWidget.OnAbilityLevelUp
// (Native, Event, Protected, BlueprintEvent)
// Parameters:
// int32                                   NewLevel                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   OldLevel                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   LevelMax                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bCanStillUpgrade                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOrionAbilityWidget::OnAbilityLevelUp(int32 NewLevel, int32 OldLevel, int32 LevelMax, bool bCanStillUpgrade)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionAbilityWidget", "OnAbilityLevelUp");

	Params::OrionAbilityWidget_OnAbilityLevelUp Parms{};

	Parms.NewLevel = NewLevel;
	Parms.OldLevel = OldLevel;
	Parms.LevelMax = LevelMax;
	Parms.bCanStillUpgrade = bCanStillUpgrade;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.OrionAbilityWidget.OnSilenced
// (Native, Event, Protected, BlueprintEvent)

void UOrionAbilityWidget::OnSilenced()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionAbilityWidget", "OnSilenced");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.OrionAbilityWidget.OnStackAdded
// (Native, Event, Protected, BlueprintEvent)

void UOrionAbilityWidget::OnStackAdded()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionAbilityWidget", "OnStackAdded");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.OrionAbilityWidget.OnUnSilenced
// (Native, Event, Protected, BlueprintEvent)

void UOrionAbilityWidget::OnUnSilenced()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionAbilityWidget", "OnUnSilenced");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.OrionAbilityWidget.ShowStacks
// (Native, Event, Protected, BlueprintEvent)

void UOrionAbilityWidget::ShowStacks()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionAbilityWidget", "ShowStacks");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.OrionAbilityWidget.ShowUpgrades
// (Native, Event, Protected, BlueprintEvent)
// Parameters:
// int32                                   CurrentLevel                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   MaxLevel                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOrionAbilityWidget::ShowUpgrades(int32 CurrentLevel, int32 MaxLevel)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionAbilityWidget", "ShowUpgrades");

	Params::OrionAbilityWidget_ShowUpgrades Parms{};

	Parms.CurrentLevel = CurrentLevel;
	Parms.MaxLevel = MaxLevel;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.OrionAbilityWidget.StartCooldown
// (Native, Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bIsSpecial                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOrionAbilityWidget::StartCooldown(bool bIsSpecial)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionAbilityWidget", "StartCooldown");

	Params::OrionAbilityWidget_StartCooldown Parms{};

	Parms.bIsSpecial = bIsSpecial;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.OrionAbilityWidget.StopCooldown
// (Native, Event, Protected, BlueprintEvent)

void UOrionAbilityWidget::StopCooldown()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionAbilityWidget", "StopCooldown");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.OrionAbilityWidget.UnhideLock
// (Native, Event, Protected, BlueprintEvent)

void UOrionAbilityWidget::UnhideLock()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionAbilityWidget", "UnhideLock");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.OrionAFKWarning.HideAFKWarning
// (Native, Event, Protected, BlueprintCallable, BlueprintEvent)

void UOrionAFKWarning::HideAFKWarning()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionAFKWarning", "HideAFKWarning");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.OrionAFKWarning.ShowAFKWarning
// (Native, Event, Protected, BlueprintCallable, BlueprintEvent)

void UOrionAFKWarning::ShowAFKWarning()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionAFKWarning", "ShowAFKWarning");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.OrionArcadeHeroBuff.HideWidget
// (Native, Event, Public, BlueprintEvent)

void UOrionArcadeHeroBuff::HideWidget()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionArcadeHeroBuff", "HideWidget");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.OrionArcadeHeroBuff.ShowWidget
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// TSubclassOf<class UGameplayEffect>      InGameplayEffect                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOrionArcadeHeroBuff::ShowWidget(TSubclassOf<class UGameplayEffect> InGameplayEffect)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionArcadeHeroBuff", "ShowWidget");

	Params::OrionArcadeHeroBuff_ShowWidget Parms{};

	Parms.InGameplayEffect = InGameplayEffect;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.OrionArcadeHeroContainer.ProcessEvents
// (Final, Native, Public, BlueprintCallable)

void UOrionArcadeHeroContainer::ProcessEvents()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionArcadeHeroContainer", "ProcessEvents");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.ArcadeEquipmentCard.HideCard
// (Native, Event, Public, BlueprintEvent)

void UArcadeEquipmentCard::HideCard()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ArcadeEquipmentCard", "HideCard");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.ArcadeEquipmentCard.ShowCard
// (Native, Event, Public, BlueprintEvent)

void UArcadeEquipmentCard::ShowCard()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ArcadeEquipmentCard", "ShowCard");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.ArcadeEquipmentCard.UpdateCard
// (Final, Native, Public, BlueprintCallable)

void UArcadeEquipmentCard::UpdateCard()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ArcadeEquipmentCard", "UpdateCard");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.ArcadeHandCard.DisableCard
// (Native, Event, Public, BlueprintEvent)

void UArcadeHandCard::DisableCard()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ArcadeHandCard", "DisableCard");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.ArcadeHandCard.EnableCard
// (Native, Event, Public, BlueprintEvent)

void UArcadeHandCard::EnableCard()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ArcadeHandCard", "EnableCard");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.ArcadeHandCard.UpdateCard
// (Final, Native, Public, BlueprintCallable)

void UArcadeHandCard::UpdateCard()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ArcadeHandCard", "UpdateCard");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.ArcadeHandCard.GetHandIndex
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UArcadeHandCard::GetHandIndex() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ArcadeHandCard", "GetHandIndex");

	Params::ArcadeHandCard_GetHandIndex Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function OrionUI.OrionArcadeCardSelection.OnCardSelected
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// class UArcadeHandCard*                  HandCardWidget                                         (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOrionArcadeCardSelection::OnCardSelected(class UArcadeHandCard* HandCardWidget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionArcadeCardSelection", "OnCardSelected");

	Params::OrionArcadeCardSelection_OnCardSelected Parms{};

	Parms.HandCardWidget = HandCardWidget;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.OrionArcadeCardSelection.UpdateCardStates
// (Final, Native, Public, BlueprintCallable)

void UOrionArcadeCardSelection::UpdateCardStates()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionArcadeCardSelection", "UpdateCardStates");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.OrionScoreboardPlayerRow.OnIsFrozenChanged
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bIsFrozen                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOrionScoreboardPlayerRow::OnIsFrozenChanged(bool bIsFrozen)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionScoreboardPlayerRow", "OnIsFrozenChanged");

	Params::OrionScoreboardPlayerRow_OnIsFrozenChanged Parms{};

	Parms.bIsFrozen = bIsFrozen;

	UObject::ProcessEvent(Func, &Parms);
}


// Function OrionUI.OrionScoreboardPlayerRow.OnPlayerInfoSet
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bIsLocalPlayer                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOrionScoreboardPlayerRow::OnPlayerInfoSet(bool bIsLocalPlayer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionScoreboardPlayerRow", "OnPlayerInfoSet");

	Params::OrionScoreboardPlayerRow_OnPlayerInfoSet Parms{};

	Parms.bIsLocalPlayer = bIsLocalPlayer;

	UObject::ProcessEvent(Func, &Parms);
}


// Function OrionUI.OrionScoreboardPlayerRow.OnSetBotInfo
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bIsBot                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EAIBotDifficulty                        BotDifficulty                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOrionScoreboardPlayerRow::OnSetBotInfo(bool bIsBot, EAIBotDifficulty BotDifficulty)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionScoreboardPlayerRow", "OnSetBotInfo");

	Params::OrionScoreboardPlayerRow_OnSetBotInfo Parms{};

	Parms.bIsBot = bIsBot;
	Parms.BotDifficulty = BotDifficulty;

	UObject::ProcessEvent(Func, &Parms);
}


// Function OrionUI.OrionScoreboardPlayerRow.OnSetPositionInfo
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    bIsFirst                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bIsLast                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOrionScoreboardPlayerRow::OnSetPositionInfo(bool bIsFirst, bool bIsLast)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionScoreboardPlayerRow", "OnSetPositionInfo");

	Params::OrionScoreboardPlayerRow_OnSetPositionInfo Parms{};

	Parms.bIsFirst = bIsFirst;
	Parms.bIsLast = bIsLast;

	UObject::ProcessEvent(Func, &Parms);
}


// Function OrionUI.OrionArcadeOvertimeScreen.OnContinuePressed
// (Final, Native, Protected, BlueprintCallable)

void UOrionArcadeOvertimeScreen::OnContinuePressed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionArcadeOvertimeScreen", "OnContinuePressed");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.OrionArcadeReadyScreen.HideScore
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)

void UOrionArcadeReadyScreen::HideScore()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionArcadeReadyScreen", "HideScore");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.OrionArcadeReadyScreen.OnReadyPressed
// (Final, Native, Protected, BlueprintCallable)

void UOrionArcadeReadyScreen::OnReadyPressed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionArcadeReadyScreen", "OnReadyPressed");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.OrionArcadeReadyScreen.ProcessEvents
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)

void UOrionArcadeReadyScreen::ProcessEvents()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionArcadeReadyScreen", "ProcessEvents");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.OrionArcadeReadyScreen.SetKills
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// EOrionTeam                              TeamNum                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Kills                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOrionArcadeReadyScreen::SetKills(EOrionTeam TeamNum, int32 Kills)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionArcadeReadyScreen", "SetKills");

	Params::OrionArcadeReadyScreen_SetKills Parms{};

	Parms.TeamNum = TeamNum;
	Parms.Kills = Kills;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.OrionArcadeReadyScreen.SetVictorPointMargin
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   VPMargin                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOrionArcadeReadyScreen::SetVictorPointMargin(int32 VPMargin)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionArcadeReadyScreen", "SetVictorPointMargin");

	Params::OrionArcadeReadyScreen_SetVictorPointMargin Parms{};

	Parms.VPMargin = VPMargin;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.OrionArcadeReadyScreen.ShowScore
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)

void UOrionArcadeReadyScreen::ShowScore()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionArcadeReadyScreen", "ShowScore");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.OrionArcadeReadyScreen.UpdateValues
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)

void UOrionArcadeReadyScreen::UpdateValues()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionArcadeReadyScreen", "UpdateValues");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.OrionArcadeRestartScreen.OnContinuePressed
// (Final, Native, Protected, BlueprintCallable)

void UOrionArcadeRestartScreen::OnContinuePressed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionArcadeRestartScreen", "OnContinuePressed");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.OrionArcadeRestartScreen.OnRestartPressed
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// bool                                    bWithBuff                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOrionArcadeRestartScreen::OnRestartPressed(bool bWithBuff)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionArcadeRestartScreen", "OnRestartPressed");

	Params::OrionArcadeRestartScreen_OnRestartPressed Parms{};

	Parms.bWithBuff = bWithBuff;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.OrionArcadeRoundPrompt.HidePrompt
// (Final, Native, Protected, BlueprintCallable)

void UOrionArcadeRoundPrompt::HidePrompt()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionArcadeRoundPrompt", "HidePrompt");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.OrionArcadeRoundPrompt.OnCardSelected
// (Native, Event, Protected, BlueprintEvent)

void UOrionArcadeRoundPrompt::OnCardSelected()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionArcadeRoundPrompt", "OnCardSelected");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.OrionArcadeRoundPrompt.OnReady
// (Native, Event, Protected, BlueprintCallable, BlueprintEvent)

void UOrionArcadeRoundPrompt::OnReady()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionArcadeRoundPrompt", "OnReady");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.OrionArcadeRoundPrompt.OnRoundState_InRound
// (Native, Event, Protected, BlueprintEvent)

void UOrionArcadeRoundPrompt::OnRoundState_InRound()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionArcadeRoundPrompt", "OnRoundState_InRound");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.OrionArcadeRoundPrompt.OnRoundState_MatchOver
// (Native, Event, Protected, BlueprintEvent)

void UOrionArcadeRoundPrompt::OnRoundState_MatchOver()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionArcadeRoundPrompt", "OnRoundState_MatchOver");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.OrionArcadeRoundPrompt.OnRoundState_Overtime
// (Native, Event, Protected, BlueprintEvent)

void UOrionArcadeRoundPrompt::OnRoundState_Overtime()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionArcadeRoundPrompt", "OnRoundState_Overtime");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.OrionArcadeRoundPrompt.OnRoundState_PostRound
// (Native, Event, Protected, BlueprintEvent)

void UOrionArcadeRoundPrompt::OnRoundState_PostRound()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionArcadeRoundPrompt", "OnRoundState_PostRound");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.OrionArcadeRoundPrompt.OnRoundState_PreMatch
// (Native, Event, Protected, BlueprintEvent)

void UOrionArcadeRoundPrompt::OnRoundState_PreMatch()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionArcadeRoundPrompt", "OnRoundState_PreMatch");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.OrionArcadeRoundPrompt.OnRoundState_PreRound
// (Native, Event, Protected, BlueprintEvent)

void UOrionArcadeRoundPrompt::OnRoundState_PreRound()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionArcadeRoundPrompt", "OnRoundState_PreRound");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.OrionArcadeRoundPrompt.OnRoundState_Restarting
// (Native, Event, Protected, BlueprintEvent)

void UOrionArcadeRoundPrompt::OnRoundState_Restarting()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionArcadeRoundPrompt", "OnRoundState_Restarting");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.OrionArcadeRoundPrompt.OnRoundState_RoundsOver
// (Native, Event, Protected, BlueprintEvent)

void UOrionArcadeRoundPrompt::OnRoundState_RoundsOver()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionArcadeRoundPrompt", "OnRoundState_RoundsOver");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.OrionArcadeRoundPrompt.OnRoundState_WaitingForRecall
// (Native, Event, Protected, BlueprintEvent)

void UOrionArcadeRoundPrompt::OnRoundState_WaitingForRecall()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionArcadeRoundPrompt", "OnRoundState_WaitingForRecall");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.OrionArcadeRoundPrompt.OnRoundStateChange
// (Native, Event, Protected, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FArcadeRoundState                NewState                                               (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void UOrionArcadeRoundPrompt::OnRoundStateChange(const struct FArcadeRoundState& NewState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionArcadeRoundPrompt", "OnRoundStateChange");

	Params::OrionArcadeRoundPrompt_OnRoundStateChange Parms{};

	Parms.NewState = std::move(NewState);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.OrionArcadeRoundPrompt.RestartScreen_OnContinue
// (Native, Event, Protected, BlueprintCallable, BlueprintEvent)

void UOrionArcadeRoundPrompt::RestartScreen_OnContinue()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionArcadeRoundPrompt", "RestartScreen_OnContinue");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.OrionArcadeRoundPrompt.RestartScreen_OnRestart
// (Native, Event, Protected, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bWithBuff                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOrionArcadeRoundPrompt::RestartScreen_OnRestart(bool bWithBuff)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionArcadeRoundPrompt", "RestartScreen_OnRestart");

	Params::OrionArcadeRoundPrompt_RestartScreen_OnRestart Parms{};

	Parms.bWithBuff = bWithBuff;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.OrionArcadeRoundPrompt.ShowPrompt
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// class UWidget*                          ScreenToShow                                           (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOrionArcadeRoundPrompt::ShowPrompt(class UWidget* ScreenToShow)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionArcadeRoundPrompt", "ShowPrompt");

	Params::OrionArcadeRoundPrompt_ShowPrompt Parms{};

	Parms.ScreenToShow = ScreenToShow;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.OrionScoreboardRow.OnAddFriendPressed
// (Final, Native, Protected, BlueprintCallable)

void UOrionScoreboardRow::OnAddFriendPressed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionScoreboardRow", "OnAddFriendPressed");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.OrionScoreboardRow.OnDeath
// (Native, Event, Protected, BlueprintEvent)

void UOrionScoreboardRow::OnDeath()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionScoreboardRow", "OnDeath");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.OrionScoreboardRow.OnDisconnectedChange
// (Native, Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bIsDisconnected                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOrionScoreboardRow::OnDisconnectedChange(bool bIsDisconnected)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionScoreboardRow", "OnDisconnectedChange");

	Params::OrionScoreboardRow_OnDisconnectedChange Parms{};

	Parms.bIsDisconnected = bIsDisconnected;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.OrionScoreboardRow.OnRespawned
// (Native, Event, Protected, BlueprintEvent)

void UOrionScoreboardRow::OnRespawned()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionScoreboardRow", "OnRespawned");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.OrionScoreboardRow.ShowAddFriendButton
// (Native, Event, Public, BlueprintEvent)

void UOrionScoreboardRow::ShowAddFriendButton()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionScoreboardRow", "ShowAddFriendButton");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.OrionScoreboardRow.UpdateIsLocalPlayer
// (Native, Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bIsLocalPlayer                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOrionScoreboardRow::UpdateIsLocalPlayer(bool bIsLocalPlayer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionScoreboardRow", "UpdateIsLocalPlayer");

	Params::OrionScoreboardRow_UpdateIsLocalPlayer Parms{};

	Parms.bIsLocalPlayer = bIsLocalPlayer;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.OrionScoreboardRow.UpdateVisibleToLocalPlayer
// (Native, Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bVisibleToLocalPlayer                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOrionScoreboardRow::UpdateVisibleToLocalPlayer(bool bVisibleToLocalPlayer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionScoreboardRow", "UpdateVisibleToLocalPlayer");

	Params::OrionScoreboardRow_UpdateVisibleToLocalPlayer Parms{};

	Parms.bVisibleToLocalPlayer = bVisibleToLocalPlayer;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.OrionArcadeRoundsOverScreen.OnEndOfMatch
// (Native, Event, Public, BlueprintEvent)

void UOrionArcadeRoundsOverScreen::OnEndOfMatch()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionArcadeRoundsOverScreen", "OnEndOfMatch");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.OrionArcadeRoundTimerWidget.HideTimer
// (Event, Protected, BlueprintCallable, BlueprintEvent)

void UOrionArcadeRoundTimerWidget::HideTimer()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionArcadeRoundTimerWidget", "HideTimer");

	UObject::ProcessEvent(Func, nullptr);
}


// Function OrionUI.OrionArcadeRoundTimerWidget.ShowTimer
// (Event, Protected, BlueprintCallable, BlueprintEvent)

void UOrionArcadeRoundTimerWidget::ShowTimer()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionArcadeRoundTimerWidget", "ShowTimer");

	UObject::ProcessEvent(Func, nullptr);
}


// Function OrionUI.OrionArcadeScoreboardRow.OnDeath
// (Native, Event, Protected, BlueprintEvent)

void UOrionArcadeScoreboardRow::OnDeath()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionArcadeScoreboardRow", "OnDeath");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.OrionArcadeScoreboardRow.OnRespawned
// (Native, Event, Protected, BlueprintEvent)

void UOrionArcadeScoreboardRow::OnRespawned()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionArcadeScoreboardRow", "OnRespawned");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.OrionArcadeScoreboardRow.UpdateIsLocalPlayer
// (Native, Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bIsLocalPlayer                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOrionArcadeScoreboardRow::UpdateIsLocalPlayer(bool bIsLocalPlayer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionArcadeScoreboardRow", "UpdateIsLocalPlayer");

	Params::OrionArcadeScoreboardRow_UpdateIsLocalPlayer Parms{};

	Parms.bIsLocalPlayer = bIsLocalPlayer;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.OrionArcadeScoreWidget.OnRoundStateUpdate
// (Native, Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// struct FArcadeRoundState                NewRoundState                                          (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void UOrionArcadeScoreWidget::OnRoundStateUpdate(const struct FArcadeRoundState& NewRoundState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionArcadeScoreWidget", "OnRoundStateUpdate");

	Params::OrionArcadeScoreWidget_OnRoundStateUpdate Parms{};

	Parms.NewRoundState = std::move(NewRoundState);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.OrionArcadeVictoryMarginWidget.OnMarginUpdate
// (Native, Event, Protected, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Margin                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOrionArcadeVictoryMarginWidget::OnMarginUpdate(int32 Margin)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionArcadeVictoryMarginWidget", "OnMarginUpdate");

	Params::OrionArcadeVictoryMarginWidget_OnMarginUpdate Parms{};

	Parms.Margin = Margin;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.OrionAsyncAction_ModalError.ShowModalError
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          InWorldContextObject                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FText                             ErrorMessage                                           (Parm, NativeAccessSpecifierPublic)
// class UOrionAsyncAction_ModalError*     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UOrionAsyncAction_ModalError* UOrionAsyncAction_ModalError::ShowModalError(class UObject* InWorldContextObject, const class FText& ErrorMessage)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("OrionAsyncAction_ModalError", "ShowModalError");

	Params::OrionAsyncAction_ModalError_ShowModalError Parms{};

	Parms.InWorldContextObject = InWorldContextObject;
	Parms.ErrorMessage = std::move(ErrorMessage);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function OrionUI.OrionAsyncAction_InteractiveNotification.ShowInteractiveNotification
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          Context                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FText                             TitleText                                              (Parm, NativeAccessSpecifierPublic)
// class FText                             BodyText                                               (Parm, NativeAccessSpecifierPublic)
// class FText                             LeftButton                                             (Parm, NativeAccessSpecifierPublic)
// class FText                             RightButton                                            (Parm, NativeAccessSpecifierPublic)
// struct FSlateBrush                      Brush                                                  (Parm, NativeAccessSpecifierPublic)
// class FName                             Identifier                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UOrionAsyncAction_InteractiveNotification*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UOrionAsyncAction_InteractiveNotification* UOrionAsyncAction_InteractiveNotification::ShowInteractiveNotification(class UObject* Context, const class FText& TitleText, const class FText& BodyText, const class FText& LeftButton, const class FText& RightButton, const struct FSlateBrush& Brush, class FName Identifier)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("OrionAsyncAction_InteractiveNotification", "ShowInteractiveNotification");

	Params::OrionAsyncAction_InteractiveNotification_ShowInteractiveNotification Parms{};

	Parms.Context = Context;
	Parms.TitleText = std::move(TitleText);
	Parms.BodyText = std::move(BodyText);
	Parms.LeftButton = std::move(LeftButton);
	Parms.RightButton = std::move(RightButton);
	Parms.Brush = std::move(Brush);
	Parms.Identifier = Identifier;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function OrionUI.OrionAsyncAction_ShowConfirmation.ShowConfirmationDialog
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          InWorldContextObject                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FText                             Title                                                  (Parm, NativeAccessSpecifierPublic)
// class FText                             MESSAGE                                                (Parm, NativeAccessSpecifierPublic)
// class FText                             ConfirmButtonText                                      (Parm, NativeAccessSpecifierPublic)
// class FText                             DeclineButtonText                                      (Parm, NativeAccessSpecifierPublic)
// float                                   InDisplayTime                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bShowCancelButton                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UOrionAsyncAction_ShowConfirmation*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UOrionAsyncAction_ShowConfirmation* UOrionAsyncAction_ShowConfirmation::ShowConfirmationDialog(class UObject* InWorldContextObject, const class FText& Title, const class FText& MESSAGE, const class FText& ConfirmButtonText, const class FText& DeclineButtonText, float InDisplayTime, bool bShowCancelButton)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("OrionAsyncAction_ShowConfirmation", "ShowConfirmationDialog");

	Params::OrionAsyncAction_ShowConfirmation_ShowConfirmationDialog Parms{};

	Parms.InWorldContextObject = InWorldContextObject;
	Parms.Title = std::move(Title);
	Parms.MESSAGE = std::move(MESSAGE);
	Parms.ConfirmButtonText = std::move(ConfirmButtonText);
	Parms.DeclineButtonText = std::move(DeclineButtonText);
	Parms.InDisplayTime = InDisplayTime;
	Parms.bShowCancelButton = bShowCancelButton;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function OrionUI.OrionAsyncAction_TimedLerp.TimedLerp
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContext_0                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   StartValue                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   EndValue                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   LerpDuration                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   EaseOutExp                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bWholeNumbersOnly                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UOrionAsyncAction_TimedLerp*      ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UOrionAsyncAction_TimedLerp* UOrionAsyncAction_TimedLerp::TimedLerp(class UObject* WorldContext_0, float StartValue, float EndValue, float LerpDuration, float EaseOutExp, bool bWholeNumbersOnly)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("OrionAsyncAction_TimedLerp", "TimedLerp");

	Params::OrionAsyncAction_TimedLerp_TimedLerp Parms{};

	Parms.WorldContext_0 = WorldContext_0;
	Parms.StartValue = StartValue;
	Parms.EndValue = EndValue;
	Parms.LerpDuration = LerpDuration;
	Parms.EaseOutExp = EaseOutExp;
	Parms.bWholeNumbersOnly = bWholeNumbersOnly;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function OrionUI.OrionAttributeDisplay.GetFlyingPip
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// class UWidget*                          ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UWidget* UOrionAttributeDisplay::GetFlyingPip()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionAttributeDisplay", "GetFlyingPip");

	Params::OrionAttributeDisplay_GetFlyingPip Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function OrionUI.OrionAttributeDisplay.GetFlyingPipOrigin
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// class UWidget*                          ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UWidget* UOrionAttributeDisplay::GetFlyingPipOrigin()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionAttributeDisplay", "GetFlyingPipOrigin");

	Params::OrionAttributeDisplay_GetFlyingPipOrigin Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function OrionUI.OrionAttributeDisplay.HandleClicked
// (Final, Native, Public, BlueprintCallable)

void UOrionAttributeDisplay::HandleClicked()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionAttributeDisplay", "HandleClicked");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.OrionAttributeDisplay.OnBranchTypeChanged
// (Event, Protected, BlueprintEvent)
// Parameters:
// EOrionGemBranchType                     NewBranchType                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOrionAttributeDisplay::OnBranchTypeChanged(EOrionGemBranchType NewBranchType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionAttributeDisplay", "OnBranchTypeChanged");

	Params::OrionAttributeDisplay_OnBranchTypeChanged Parms{};

	Parms.NewBranchType = NewBranchType;

	UObject::ProcessEvent(Func, &Parms);
}


// Function OrionUI.OrionAttributeDisplay.OnPipPurchased
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bMajorPip                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bHasGemAssigned                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOrionAttributeDisplay::OnPipPurchased(bool bMajorPip, bool bHasGemAssigned)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionAttributeDisplay", "OnPipPurchased");

	Params::OrionAttributeDisplay_OnPipPurchased Parms{};

	Parms.bMajorPip = bMajorPip;
	Parms.bHasGemAssigned = bHasGemAssigned;

	UObject::ProcessEvent(Func, &Parms);
}


// Function OrionUI.OrionAttributeDisplay.OnPurchasabilityChanged
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bIsPurchasable                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOrionAttributeDisplay::OnPurchasabilityChanged(bool bIsPurchasable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionAttributeDisplay", "OnPurchasabilityChanged");

	Params::OrionAttributeDisplay_OnPurchasabilityChanged Parms{};

	Parms.bIsPurchasable = bIsPurchasable;

	UObject::ProcessEvent(Func, &Parms);
}


// Function OrionUI.OrionAttributeDisplay.OnRowInitialized
// (Event, Protected, BlueprintEvent)
// Parameters:
// EOrionGemBranchType                     AttributeType                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOrionAttributeDisplay::OnRowInitialized(EOrionGemBranchType AttributeType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionAttributeDisplay", "OnRowInitialized");

	Params::OrionAttributeDisplay_OnRowInitialized Parms{};

	Parms.AttributeType = AttributeType;

	UObject::ProcessEvent(Func, &Parms);
}


// Function OrionUI.OrionBannerInventory.DynamicHandleBannerSelected
// (Final, Native, Private)
// Parameters:
// class UObject*                          SelectedItem                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bSelected                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOrionBannerInventory::DynamicHandleBannerSelected(class UObject* SelectedItem, bool bSelected)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionBannerInventory", "DynamicHandleBannerSelected");

	Params::OrionBannerInventory_DynamicHandleBannerSelected Parms{};

	Parms.SelectedItem = SelectedItem;
	Parms.bSelected = bSelected;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.OrionBannerInventoryListItem.BP_OnBannerPurchased
// (Event, Protected, BlueprintEvent)

void UOrionBannerInventoryListItem::BP_OnBannerPurchased()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionBannerInventoryListItem", "BP_OnBannerPurchased");

	UObject::ProcessEvent(Func, nullptr);
}


// Function OrionUI.OrionBannerInventoryListItem.EquipBanner
// (Final, Native, Public, BlueprintCallable)

void UOrionBannerInventoryListItem::EquipBanner()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionBannerInventoryListItem", "EquipBanner");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.OrionBannerInventoryListItem.OnBannerEquipped
// (Event, Protected, BlueprintEvent)

void UOrionBannerInventoryListItem::OnBannerEquipped()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionBannerInventoryListItem", "OnBannerEquipped");

	UObject::ProcessEvent(Func, nullptr);
}


// Function OrionUI.OrionBannerInventoryListItem.OnBannerSet
// (Event, Protected, BlueprintEvent)
// Parameters:
// class UOrionMcpBannerItem*              BannerItem                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EBannerListItemType                     ListItemType                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOrionBannerInventoryListItem::OnBannerSet(class UOrionMcpBannerItem* BannerItem, EBannerListItemType ListItemType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionBannerInventoryListItem", "OnBannerSet");

	Params::OrionBannerInventoryListItem_OnBannerSet Parms{};

	Parms.BannerItem = BannerItem;
	Parms.ListItemType = ListItemType;

	UObject::ProcessEvent(Func, &Parms);
}


// Function OrionUI.OrionBannerInventoryListItem.OnBannerUnequipped
// (Event, Protected, BlueprintEvent)

void UOrionBannerInventoryListItem::OnBannerUnequipped()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionBannerInventoryListItem", "OnBannerUnequipped");

	UObject::ProcessEvent(Func, nullptr);
}


// Function OrionUI.OrionBannerInventoryListItem.UnequipBanner
// (Final, Native, Public, BlueprintCallable)

void UOrionBannerInventoryListItem::UnequipBanner()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionBannerInventoryListItem", "UnequipBanner");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.OrionBannerInventoryListItem.IsEquipped
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UOrionBannerInventoryListItem::IsEquipped() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionBannerInventoryListItem", "IsEquipped");

	Params::OrionBannerInventoryListItem_IsEquipped Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function OrionUI.OrionBannerInventoryListItem.IsForSale
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UOrionBannerInventoryListItem::IsForSale() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionBannerInventoryListItem", "IsForSale");

	Params::OrionBannerInventoryListItem_IsForSale Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function OrionUI.OrionBannerInventoryListItem.IsOwned
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UOrionBannerInventoryListItem::IsOwned() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionBannerInventoryListItem", "IsOwned");

	Params::OrionBannerInventoryListItem_IsOwned Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function OrionUI.OrionBannerInventoryListItem.IsPlayable
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UOrionBannerInventoryListItem::IsPlayable() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionBannerInventoryListItem", "IsPlayable");

	Params::OrionBannerInventoryListItem_IsPlayable Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function OrionUI.OrionBaseButton_Group.DeselectAll
// (Final, Native, Public, BlueprintCallable)

void UOrionBaseButton_Group::DeselectAll()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionBaseButton_Group", "DeselectAll");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.OrionBaseButton_Group.GetSelectedButtonIndex
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UOrionBaseButton_Group::GetSelectedButtonIndex()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionBaseButton_Group", "GetSelectedButtonIndex");

	Params::OrionBaseButton_Group_GetSelectedButtonIndex Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function OrionUI.OrionBaseButton_Group.OnSelectionStateChanged
// (Final, Native, Private)
// Parameters:
// class UOrionBaseButton*                 BaseButton                                             (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bIsSelected                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOrionBaseButton_Group::OnSelectionStateChanged(class UOrionBaseButton* BaseButton, bool bIsSelected)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionBaseButton_Group", "OnSelectionStateChanged");

	Params::OrionBaseButton_Group_OnSelectionStateChanged Parms{};

	Parms.BaseButton = BaseButton;
	Parms.bIsSelected = bIsSelected;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.OrionBaseButton_Group.SelectButtonAtIndex
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   ButtonIndex                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOrionBaseButton_Group::SelectButtonAtIndex(int32 ButtonIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionBaseButton_Group", "SelectButtonAtIndex");

	Params::OrionBaseButton_Group_SelectButtonAtIndex Parms{};

	Parms.ButtonIndex = ButtonIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.OrionBaseButton_Group.SelectNextButton
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bAllowWrap                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOrionBaseButton_Group::SelectNextButton(bool bAllowWrap)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionBaseButton_Group", "SelectNextButton");

	Params::OrionBaseButton_Group_SelectNextButton Parms{};

	Parms.bAllowWrap = bAllowWrap;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.OrionBaseButton_Group.SelectPreviousButton
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bAllowWrap                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOrionBaseButton_Group::SelectPreviousButton(bool bAllowWrap)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionBaseButton_Group", "SelectPreviousButton");

	Params::OrionBaseButton_Group_SelectPreviousButton Parms{};

	Parms.bAllowWrap = bAllowWrap;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.OrionBaseButton_Group.SetSelectionRequired
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bRequireSelection                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOrionBaseButton_Group::SetSelectionRequired(bool bRequireSelection)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionBaseButton_Group", "SetSelectionRequired");

	Params::OrionBaseButton_Group_SetSelectionRequired Parms{};

	Parms.bRequireSelection = bRequireSelection;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.OrionBaseHUDWidget.DisableToolTips
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)

void UOrionBaseHUDWidget::DisableToolTips()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionBaseHUDWidget", "DisableToolTips");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.OrionBaseHUDWidget.EnableToolTips
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)

void UOrionBaseHUDWidget::EnableToolTips()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionBaseHUDWidget", "EnableToolTips");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.OrionBaseTile.DynamicHandleCurrencyChanged
// (Final, Native, Protected)

void UOrionBaseTile::DynamicHandleCurrencyChanged()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionBaseTile", "DynamicHandleCurrencyChanged");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.OrionBaseTile.Launch
// (Native, Protected, BlueprintCallable)

void UOrionBaseTile::Launch()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionBaseTile", "Launch");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.OrionBlurWidget.SetColorAndOpacity
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct FLinearColor                     InColorAndOpacity                                      (Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOrionBlurWidget::SetColorAndOpacity(const struct FLinearColor& InColorAndOpacity)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionBlurWidget", "SetColorAndOpacity");

	Params::OrionBlurWidget_SetColorAndOpacity Parms{};

	Parms.InColorAndOpacity = std::move(InColorAndOpacity);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.OrionBundlePurchaseScreen.SetBundleScreenTitle
// (Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// class FText                             BundleTitle                                            (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UOrionBundlePurchaseScreen::SetBundleScreenTitle(const class FText& BundleTitle)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionBundlePurchaseScreen", "SetBundleScreenTitle");

	Params::OrionBundlePurchaseScreen_SetBundleScreenTitle Parms{};

	Parms.BundleTitle = std::move(BundleTitle);

	UObject::ProcessEvent(Func, &Parms);
}


// Function OrionUI.OrionBundlePurchaseScreen.SetStoreOfferAndContext
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FString                           OfferId                                                (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             InPurchaseContext                                      (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOrionBundlePurchaseScreen::SetStoreOfferAndContext(const class FString& OfferId, const class FName InPurchaseContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionBundlePurchaseScreen", "SetStoreOfferAndContext");

	Params::OrionBundlePurchaseScreen_SetStoreOfferAndContext Parms{};

	Parms.OfferId = std::move(OfferId);
	Parms.InPurchaseContext = InPurchaseContext;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.OrionButton.OnStateChanged
// (Event, Protected, BlueprintEvent)
// Parameters:
// EOrionButtonState                       NewState                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOrionButton::OnStateChanged(EOrionButtonState NewState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionButton", "OnStateChanged");

	Params::OrionButton_OnStateChanged Parms{};

	Parms.NewState = NewState;

	UObject::ProcessEvent(Func, &Parms);
}


// DelegateFunction OrionUI.OrionButton.SimpleButtonDelegate__DelegateSignature
// (Public, Delegate)
// Parameters:
// class UOrionButton*                     Button                                                 (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FEventReply                      ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FEventReply UOrionButton::SimpleButtonDelegate__DelegateSignature(class UOrionButton* Button)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionButton", "SimpleButtonDelegate__DelegateSignature");

	Params::OrionButton_SimpleButtonDelegate__DelegateSignature Parms{};

	Parms.Button = Button;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function OrionUI.OrionCardCollectionScreen.DynamicCardClicked
// (Final, Native, Protected)
// Parameters:
// class UObject*                          Obj                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOrionCardCollectionScreen::DynamicCardClicked(class UObject* Obj)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionCardCollectionScreen", "DynamicCardClicked");

	Params::OrionCardCollectionScreen_DynamicCardClicked Parms{};

	Parms.Obj = Obj;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.OrionCardCollectionScreen.HandleCardHovered
// (Final, Native, Protected)
// Parameters:
// class UObject*                          HoveredItem                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bIsHovered                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOrionCardCollectionScreen::HandleCardHovered(class UObject* HoveredItem, bool bIsHovered)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionCardCollectionScreen", "HandleCardHovered");

	Params::OrionCardCollectionScreen_HandleCardHovered Parms{};

	Parms.HoveredItem = HoveredItem;
	Parms.bIsHovered = bIsHovered;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.OrionCardFilterHeader.DynamicChaosSelected
// (Final, Native, Protected)
// Parameters:
// bool                                    bSelected                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOrionCardFilterHeader::DynamicChaosSelected(bool bSelected)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionCardFilterHeader", "DynamicChaosSelected");

	Params::OrionCardFilterHeader_DynamicChaosSelected Parms{};

	Parms.bSelected = bSelected;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.OrionCardFilterHeader.DynamicDeathSelected
// (Final, Native, Protected)
// Parameters:
// bool                                    bSelected                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOrionCardFilterHeader::DynamicDeathSelected(bool bSelected)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionCardFilterHeader", "DynamicDeathSelected");

	Params::OrionCardFilterHeader_DynamicDeathSelected Parms{};

	Parms.bSelected = bSelected;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.OrionCardFilterHeader.DynamicGrowthSelected
// (Final, Native, Protected)
// Parameters:
// bool                                    bSelected                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOrionCardFilterHeader::DynamicGrowthSelected(bool bSelected)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionCardFilterHeader", "DynamicGrowthSelected");

	Params::OrionCardFilterHeader_DynamicGrowthSelected Parms{};

	Parms.bSelected = bSelected;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.OrionCardFilterHeader.DynamicKnowledgeSelected
// (Final, Native, Protected)
// Parameters:
// bool                                    bSelected                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOrionCardFilterHeader::DynamicKnowledgeSelected(bool bSelected)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionCardFilterHeader", "DynamicKnowledgeSelected");

	Params::OrionCardFilterHeader_DynamicKnowledgeSelected Parms{};

	Parms.bSelected = bSelected;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.OrionCardFilterHeader.DynamicOrderSelected
// (Final, Native, Protected)
// Parameters:
// bool                                    bSelected                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOrionCardFilterHeader::DynamicOrderSelected(bool bSelected)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionCardFilterHeader", "DynamicOrderSelected");

	Params::OrionCardFilterHeader_DynamicOrderSelected Parms{};

	Parms.bSelected = bSelected;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.OrionCardFilterHeader.DynamicSearchTextChanged
// (Final, Native, Protected, HasOutParams)
// Parameters:
// class FText                             NewText                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UOrionCardFilterHeader::DynamicSearchTextChanged(const class FText& NewText)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionCardFilterHeader", "DynamicSearchTextChanged");

	Params::OrionCardFilterHeader_DynamicSearchTextChanged Parms{};

	Parms.NewText = std::move(NewText);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.OrionCardFilterHeader.DynamicSearchTextCommitted
// (Final, Native, Protected, HasOutParams)
// Parameters:
// class FText                             NewText                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// ETextCommit                             CommitMethod                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOrionCardFilterHeader::DynamicSearchTextCommitted(const class FText& NewText, ETextCommit CommitMethod)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionCardFilterHeader", "DynamicSearchTextCommitted");

	Params::OrionCardFilterHeader_DynamicSearchTextCommitted Parms{};

	Parms.NewText = std::move(NewText);
	Parms.CommitMethod = CommitMethod;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.OrionCardFilterHeader.HandleToggleButtonSort
// (Final, Native, Protected)

void UOrionCardFilterHeader::HandleToggleButtonSort()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionCardFilterHeader", "HandleToggleButtonSort");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.OrionCardInspectScreen.OnLeftNav
// (Event, Protected, BlueprintEvent)

void UOrionCardInspectScreen::OnLeftNav()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionCardInspectScreen", "OnLeftNav");

	UObject::ProcessEvent(Func, nullptr);
}


// Function OrionUI.OrionCardInspectScreen.OnLevelUp
// (Event, Protected, BlueprintEvent)

void UOrionCardInspectScreen::OnLevelUp()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionCardInspectScreen", "OnLevelUp");

	UObject::ProcessEvent(Func, nullptr);
}


// Function OrionUI.OrionCardInspectScreen.OnRightNav
// (Event, Protected, BlueprintEvent)

void UOrionCardInspectScreen::OnRightNav()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionCardInspectScreen", "OnRightNav");

	UObject::ProcessEvent(Func, nullptr);
}


// Function OrionUI.OrionCardInspectScreen.OnScreenActivated
// (Event, Protected, BlueprintEvent)

void UOrionCardInspectScreen::OnScreenActivated()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionCardInspectScreen", "OnScreenActivated");

	UObject::ProcessEvent(Func, nullptr);
}


// Function OrionUI.OrionCardInspectScreen.OnScreenDeactivated
// (Event, Protected, BlueprintEvent)

void UOrionCardInspectScreen::OnScreenDeactivated()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionCardInspectScreen", "OnScreenDeactivated");

	UObject::ProcessEvent(Func, nullptr);
}


// Function OrionUI.OrionCardInspectScreen.SetCardVisuals
// (Event, Protected, BlueprintEvent)

void UOrionCardInspectScreen::SetCardVisuals()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionCardInspectScreen", "SetCardVisuals");

	UObject::ProcessEvent(Func, nullptr);
}


// Function OrionUI.OrionCardInspectScreen.SetGemVisuals
// (Event, Protected, BlueprintEvent)

void UOrionCardInspectScreen::SetGemVisuals()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionCardInspectScreen", "SetGemVisuals");

	UObject::ProcessEvent(Func, nullptr);
}


// Function OrionUI.OrionCardOnboardCard.OnCardClicked
// (Final, Native, Private)

void UOrionCardOnboardCard::OnCardClicked()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionCardOnboardCard", "OnCardClicked");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.OrionTimedFillWidget.BeginFill
// (Native, Public, BlueprintCallable)

void UOrionTimedFillWidget::BeginFill()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionTimedFillWidget", "BeginFill");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.OrionTimedFillWidget.GetMaxFillTime
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UOrionTimedFillWidget::GetMaxFillTime()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionTimedFillWidget", "GetMaxFillTime");

	Params::OrionTimedFillWidget_GetMaxFillTime Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function OrionUI.OrionTimedFillWidget.JumpToEnd
// (Native, Public, BlueprintCallable)

void UOrionTimedFillWidget::JumpToEnd()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionTimedFillWidget", "JumpToEnd");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.OrionTimedFillWidget.OnFillCompleted
// (Event, Protected, BlueprintEvent)

void UOrionTimedFillWidget::OnFillCompleted()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionTimedFillWidget", "OnFillCompleted");

	UObject::ProcessEvent(Func, nullptr);
}


// Function OrionUI.OrionTimedFillWidget.OnReset
// (Event, Protected, BlueprintEvent)

void UOrionTimedFillWidget::OnReset()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionTimedFillWidget", "OnReset");

	UObject::ProcessEvent(Func, nullptr);
}


// Function OrionUI.OrionTimedFillWidget.OnUpdateCurrentValue
// (Event, Protected, BlueprintEvent)
// Parameters:
// float                                   Value                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOrionTimedFillWidget::OnUpdateCurrentValue(float Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionTimedFillWidget", "OnUpdateCurrentValue");

	Params::OrionTimedFillWidget_OnUpdateCurrentValue Parms{};

	Parms.Value = Value;

	UObject::ProcessEvent(Func, &Parms);
}


// Function OrionUI.OrionTimedFillWidget.Reset
// (Native, Public, BlueprintCallable)

void UOrionTimedFillWidget::Reset()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionTimedFillWidget", "Reset");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.OrionTimedFillWidget.SetMaxFillTime
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   InMaxFillTime                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOrionTimedFillWidget::SetMaxFillTime(float InMaxFillTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionTimedFillWidget", "SetMaxFillTime");

	Params::OrionTimedFillWidget_SetMaxFillTime Parms{};

	Parms.InMaxFillTime = InMaxFillTime;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.OrionTimedFillWidget.SetRange
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   StartValue                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   EndValue                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOrionTimedFillWidget::SetRange(float StartValue, float EndValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionTimedFillWidget", "SetRange");

	Params::OrionTimedFillWidget_SetRange Parms{};

	Parms.StartValue = StartValue;
	Parms.EndValue = EndValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.OrionPossibleRewardsArray.SetPossibleRewardWidgets
// (Final, Native, Protected, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<class UOrionRewardWidget*>       InPossibleRewardWidgets                                (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, ContainsInstancedReference, NativeAccessSpecifierPublic)

void UOrionPossibleRewardsArray::SetPossibleRewardWidgets(const TArray<class UOrionRewardWidget*>& InPossibleRewardWidgets)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionPossibleRewardsArray", "SetPossibleRewardWidgets");

	Params::OrionPossibleRewardsArray_SetPossibleRewardWidgets Parms{};

	Parms.InPossibleRewardWidgets = std::move(InPossibleRewardWidgets);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.OrionCardProgressBar.SetPreviewLevelDisplay
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    bIsVisible                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOrionCardProgressBar::SetPreviewLevelDisplay(bool bIsVisible)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionCardProgressBar", "SetPreviewLevelDisplay");

	Params::OrionCardProgressBar_SetPreviewLevelDisplay Parms{};

	Parms.bIsVisible = bIsVisible;

	UObject::ProcessEvent(Func, &Parms);
}


// Function OrionUI.OrionCardShop.DynamicHandleCanShopChanged
// (Final, Native, Private)
// Parameters:
// bool                                    bCanShop                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOrionCardShop::DynamicHandleCanShopChanged(bool bCanShop)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionCardShop", "DynamicHandleCanShopChanged");

	Params::OrionCardShop_DynamicHandleCanShopChanged Parms{};

	Parms.bCanShop = bCanShop;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.OrionCardShop.DynamicHandleEquipSlotSelected
// (Final, Native, Protected)
// Parameters:
// class UOrionBaseButton*                 SelectedButton                                         (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ButtonIndex                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOrionCardShop::DynamicHandleEquipSlotSelected(class UOrionBaseButton* SelectedButton, int32 ButtonIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionCardShop", "DynamicHandleEquipSlotSelected");

	Params::OrionCardShop_DynamicHandleEquipSlotSelected Parms{};

	Parms.SelectedButton = SelectedButton;
	Parms.ButtonIndex = ButtonIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.OrionCardShop.DynamicHandleEquipSlotSelectionCleared
// (Final, Native, Protected)

void UOrionCardShop::DynamicHandleEquipSlotSelectionCleared()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionCardShop", "DynamicHandleEquipSlotSelectionCleared");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.OrionCardShop.DynamicHandleHandCardSelected
// (Final, Native, Protected)
// Parameters:
// class UOrionBaseButton*                 SelectedButton                                         (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ButtonIndex                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOrionCardShop::DynamicHandleHandCardSelected(class UOrionBaseButton* SelectedButton, int32 ButtonIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionCardShop", "DynamicHandleHandCardSelected");

	Params::OrionCardShop_DynamicHandleHandCardSelected Parms{};

	Parms.SelectedButton = SelectedButton;
	Parms.ButtonIndex = ButtonIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.OrionCardShop.DynamicHandleHandCardSelectionCleared
// (Final, Native, Protected)

void UOrionCardShop::DynamicHandleHandCardSelectionCleared()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionCardShop", "DynamicHandleHandCardSelectionCleared");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.OrionCardShop.DynamicHandleIsAtBaseChange
// (Final, Native, Private)
// Parameters:
// bool                                    bIsAtBase                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOrionCardShop::DynamicHandleIsAtBaseChange(bool bIsAtBase)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionCardShop", "DynamicHandleIsAtBaseChange");

	Params::OrionCardShop_DynamicHandleIsAtBaseChange Parms{};

	Parms.bIsAtBase = bIsAtBase;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.OrionCardShop.HandleBackboardPressed
// (Final, Native, Protected, HasOutParams, BlueprintCallable)
// Parameters:
// struct FGeometry                        MyGeometry                                             (Parm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// struct FPointerEvent                    MouseEvent                                             (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// struct FEventReply                      ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FEventReply UOrionCardShop::HandleBackboardPressed(const struct FGeometry& MyGeometry, const struct FPointerEvent& MouseEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionCardShop", "HandleBackboardPressed");

	Params::OrionCardShop_HandleBackboardPressed Parms{};

	Parms.MyGeometry = std::move(MyGeometry);
	Parms.MouseEvent = std::move(MouseEvent);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function OrionUI.OrionCardShop.OnCardDiscarded
// (Event, Protected, BlueprintEvent)
// Parameters:
// int32                                   SlotIndex                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   DexCost                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   VitCost                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   IntCost                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOrionCardShop::OnCardDiscarded(int32 SlotIndex, int32 DexCost, int32 VitCost, int32 IntCost)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionCardShop", "OnCardDiscarded");

	Params::OrionCardShop_OnCardDiscarded Parms{};

	Parms.SlotIndex = SlotIndex;
	Parms.DexCost = DexCost;
	Parms.VitCost = VitCost;
	Parms.IntCost = IntCost;

	UObject::ProcessEvent(Func, &Parms);
}


// Function OrionUI.OrionCardShop.OnCardEquipped
// (Event, Protected, BlueprintEvent)
// Parameters:
// int32                                   SlotIndex                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   DexCost                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   VitCost                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   IntCost                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOrionCardShop::OnCardEquipped(int32 SlotIndex, int32 DexCost, int32 VitCost, int32 IntCost)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionCardShop", "OnCardEquipped");

	Params::OrionCardShop_OnCardEquipped Parms{};

	Parms.SlotIndex = SlotIndex;
	Parms.DexCost = DexCost;
	Parms.VitCost = VitCost;
	Parms.IntCost = IntCost;

	UObject::ProcessEvent(Func, &Parms);
}


// Function OrionUI.OrionCardShop.OnCardHovered
// (Event, Protected, BlueprintEvent)

void UOrionCardShop::OnCardHovered()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionCardShop", "OnCardHovered");

	UObject::ProcessEvent(Func, nullptr);
}


// Function OrionUI.OrionCardShop.OnCardShopOpened
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bHasDeck                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOrionCardShop::OnCardShopOpened(bool bHasDeck)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionCardShop", "OnCardShopOpened");

	Params::OrionCardShop_OnCardShopOpened Parms{};

	Parms.bHasDeck = bHasDeck;

	UObject::ProcessEvent(Func, &Parms);
}


// Function OrionUI.OrionCardShop.OnCardUnhovered
// (Event, Protected, BlueprintEvent)

void UOrionCardShop::OnCardUnhovered()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionCardShop", "OnCardUnhovered");

	UObject::ProcessEvent(Func, nullptr);
}


// Function OrionUI.OrionCardShop.OnDeckCleared
// (Event, Protected, BlueprintEvent)

void UOrionCardShop::OnDeckCleared()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionCardShop", "OnDeckCleared");

	UObject::ProcessEvent(Func, nullptr);
}


// Function OrionUI.OrionCardShop.OnDeckEstablished
// (Event, Protected, BlueprintEvent)

void UOrionCardShop::OnDeckEstablished()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionCardShop", "OnDeckEstablished");

	UObject::ProcessEvent(Func, nullptr);
}


// Function OrionUI.OrionCardShop.OnFadeWarningIcons
// (Event, Protected, BlueprintEvent)

void UOrionCardShop::OnFadeWarningIcons()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionCardShop", "OnFadeWarningIcons");

	UObject::ProcessEvent(Func, nullptr);
}


// Function OrionUI.OrionCardShop.OnFloatingCardSet
// (Event, Protected, BlueprintEvent)
// Parameters:
// EOrionItemRarity                        CardRarity                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bIsFromEquipSlot                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOrionCardShop::OnFloatingCardSet(EOrionItemRarity CardRarity, bool bIsFromEquipSlot)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionCardShop", "OnFloatingCardSet");

	Params::OrionCardShop_OnFloatingCardSet Parms{};

	Parms.CardRarity = CardRarity;
	Parms.bIsFromEquipSlot = bIsFromEquipSlot;

	UObject::ProcessEvent(Func, &Parms);
}


// Function OrionUI.OrionCardShop.OnFloatingCardVisualChange
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bIsVisible                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOrionCardShop::OnFloatingCardVisualChange(bool bIsVisible)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionCardShop", "OnFloatingCardVisualChange");

	Params::OrionCardShop_OnFloatingCardVisualChange Parms{};

	Parms.bIsVisible = bIsVisible;

	UObject::ProcessEvent(Func, &Parms);
}


// Function OrionUI.OrionCardShop.OnHandCardPurchasabilityChanged
// (Event, Protected, BlueprintEvent)

void UOrionCardShop::OnHandCardPurchasabilityChanged()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionCardShop", "OnHandCardPurchasabilityChanged");

	UObject::ProcessEvent(Func, nullptr);
}


// Function OrionUI.OrionCardShop.OnHandCardSelected
// (Event, Protected, BlueprintEvent)
// Parameters:
// class UOrionHandEntry*                  SelectedCard                                           (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOrionCardShop::OnHandCardSelected(class UOrionHandEntry* SelectedCard)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionCardShop", "OnHandCardSelected");

	Params::OrionCardShop_OnHandCardSelected Parms{};

	Parms.SelectedCard = SelectedCard;

	UObject::ProcessEvent(Func, &Parms);
}


// Function OrionUI.OrionCardShop.OnHandCardSelectionCleared
// (Event, Protected, BlueprintEvent)

void UOrionCardShop::OnHandCardSelectionCleared()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionCardShop", "OnHandCardSelectionCleared");

	UObject::ProcessEvent(Func, nullptr);
}


// Function OrionUI.OrionCardShop.OnOwnedPointsUpdated
// (Event, Protected, BlueprintEvent)
// Parameters:
// EOrionGemBranchType                     Type                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   NewOwnedPoints                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   OldOwnedPoints                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOrionCardShop::OnOwnedPointsUpdated(EOrionGemBranchType Type, int32 NewOwnedPoints, int32 OldOwnedPoints)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionCardShop", "OnOwnedPointsUpdated");

	Params::OrionCardShop_OnOwnedPointsUpdated Parms{};

	Parms.Type = Type;
	Parms.NewOwnedPoints = NewOwnedPoints;
	Parms.OldOwnedPoints = OldOwnedPoints;

	UObject::ProcessEvent(Func, &Parms);
}


// Function OrionUI.OrionCardShop.OnReadOnlyActionRejected
// (Event, Protected, BlueprintEvent)

void UOrionCardShop::OnReadOnlyActionRejected()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionCardShop", "OnReadOnlyActionRejected");

	UObject::ProcessEvent(Func, nullptr);
}


// Function OrionUI.OrionCardShop.OnReadOnlyStateChanged
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bReadOnly                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOrionCardShop::OnReadOnlyStateChanged(bool bReadOnly)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionCardShop", "OnReadOnlyStateChanged");

	Params::OrionCardShop_OnReadOnlyStateChanged Parms{};

	Parms.bReadOnly = bReadOnly;

	UObject::ProcessEvent(Func, &Parms);
}


// Function OrionUI.OrionCardShop.OnShowWarningIcons
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bShowGold                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bShowDex                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bShowVit                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bShowInt                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOrionCardShop::OnShowWarningIcons(bool bShowGold, bool bShowDex, bool bShowVit, bool bShowInt)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionCardShop", "OnShowWarningIcons");

	Params::OrionCardShop_OnShowWarningIcons Parms{};

	Parms.bShowGold = bShowGold;
	Parms.bShowDex = bShowDex;
	Parms.bShowVit = bShowVit;
	Parms.bShowInt = bShowInt;

	UObject::ProcessEvent(Func, &Parms);
}


// Function OrionUI.OrionCardShop.OnTutorialCompleted
// (Event, Protected, BlueprintEvent)

void UOrionCardShop::OnTutorialCompleted()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionCardShop", "OnTutorialCompleted");

	UObject::ProcessEvent(Func, nullptr);
}


// Function OrionUI.OrionCardShop.OnTutorialStarted
// (Event, Protected, BlueprintEvent)

void UOrionCardShop::OnTutorialStarted()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionCardShop", "OnTutorialStarted");

	UObject::ProcessEvent(Func, nullptr);
}


// Function OrionUI.OrionCardShop.PerformCancelRequest
// (Final, Native, Private, BlueprintCallable)
// Parameters:
// bool                                    bFromBackboard                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOrionCardShop::PerformCancelRequest(bool bFromBackboard)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionCardShop", "PerformCancelRequest");

	Params::OrionCardShop_PerformCancelRequest Parms{};

	Parms.bFromBackboard = bFromBackboard;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.OrionCardShopAttributePip.OnGemAssigned
// (Event, Protected, BlueprintEvent)
// Parameters:
// class UMaterialInstanceDynamic*         GemMaterial                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EOrionGemRank                           GemRank                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOrionCardShopAttributePip::OnGemAssigned(class UMaterialInstanceDynamic* GemMaterial, EOrionGemRank GemRank)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionCardShopAttributePip", "OnGemAssigned");

	Params::OrionCardShopAttributePip_OnGemAssigned Parms{};

	Parms.GemMaterial = GemMaterial;
	Parms.GemRank = GemRank;

	UObject::ProcessEvent(Func, &Parms);
}


// Function OrionUI.OrionCardShopAttributePip.OnPipSet
// (Event, Protected, HasDefaults, BlueprintEvent)
// Parameters:
// EOrionGemBranchType                     AttributeType                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FLinearColor                     PipColor                                               (Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bMajor                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bFilled                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bAffordable                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOrionCardShopAttributePip::OnPipSet(EOrionGemBranchType AttributeType, const struct FLinearColor& PipColor, bool bMajor, bool bFilled, bool bAffordable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionCardShopAttributePip", "OnPipSet");

	Params::OrionCardShopAttributePip_OnPipSet Parms{};

	Parms.AttributeType = AttributeType;
	Parms.PipColor = std::move(PipColor);
	Parms.bMajor = bMajor;
	Parms.bFilled = bFilled;
	Parms.bAffordable = bAffordable;

	UObject::ProcessEvent(Func, &Parms);
}


// Function OrionUI.OrionCardShopAttributePip.OnReset
// (Event, Protected, BlueprintEvent)

void UOrionCardShopAttributePip::OnReset()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionCardShopAttributePip", "OnReset");

	UObject::ProcessEvent(Func, nullptr);
}


// Function OrionUI.OrionPostGameTab.OnBeginPresentation
// (Event, Protected, BlueprintEvent)

void UOrionPostGameTab::OnBeginPresentation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionPostGameTab", "OnBeginPresentation");

	UObject::ProcessEvent(Func, nullptr);
}


// Function OrionUI.OrionPostGameTab.OnJumpToEnd
// (Event, Protected, BlueprintEvent)

void UOrionPostGameTab::OnJumpToEnd()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionPostGameTab", "OnJumpToEnd");

	UObject::ProcessEvent(Func, nullptr);
}


// Function OrionUI.OrionCardShopCannotAffordPopup.OnRefreshDisplay
// (Event, Public, BlueprintEvent)

void UOrionCardShopCannotAffordPopup::OnRefreshDisplay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionCardShopCannotAffordPopup", "OnRefreshDisplay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function OrionUI.OrionCardShopCard.GetCardRarity
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EOrionItemRarity                        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EOrionItemRarity UOrionCardShopCard::GetCardRarity()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionCardShopCard", "GetCardRarity");

	Params::OrionCardShopCard_GetCardRarity Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function OrionUI.OrionCardShopCard.OnCardSet
// (Event, Protected, BlueprintEvent)
// Parameters:
// class UOrionMcpCardItemDefinition*      CardItem                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOrionCardShopCard::OnCardSet(const class UOrionMcpCardItemDefinition* CardItem)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionCardShopCard", "OnCardSet");

	Params::OrionCardShopCard_OnCardSet Parms{};

	Parms.CardItem = CardItem;

	UObject::ProcessEvent(Func, &Parms);
}


// Function OrionUI.OrionCardShopDeckButton.OnDeckSet
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bIsCuratedDeck                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EAffinityType                           Affinity0                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EAffinityType                           Affinity1                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOrionCardShopDeckButton::OnDeckSet(bool bIsCuratedDeck, EAffinityType Affinity0, EAffinityType Affinity1)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionCardShopDeckButton", "OnDeckSet");

	Params::OrionCardShopDeckButton_OnDeckSet Parms{};

	Parms.bIsCuratedDeck = bIsCuratedDeck;
	Parms.Affinity0 = Affinity0;
	Parms.Affinity1 = Affinity1;

	UObject::ProcessEvent(Func, &Parms);
}


// Function OrionUI.OrionCardShopDeckButton.OnSetDistanceFromCenter
// (Event, Public, BlueprintEvent)
// Parameters:
// int32                                   OldValue                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   NewValue                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOrionCardShopDeckButton::OnSetDistanceFromCenter(int32 OldValue, int32 NewValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionCardShopDeckButton", "OnSetDistanceFromCenter");

	Params::OrionCardShopDeckButton_OnSetDistanceFromCenter Parms{};

	Parms.OldValue = OldValue;
	Parms.NewValue = NewValue;

	UObject::ProcessEvent(Func, &Parms);
}


// Function OrionUI.OrionPostGameTab_Mastery.HandleUnlockWidgetClose
// (Final, Native, Private)

void UOrionPostGameTab_Mastery::HandleUnlockWidgetClose()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionPostGameTab_Mastery", "HandleUnlockWidgetClose");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.OrionPostGameTab_Mastery.OnHideMasteryUnlockButton
// (Event, Protected, BlueprintEvent)

void UOrionPostGameTab_Mastery::OnHideMasteryUnlockButton()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionPostGameTab_Mastery", "OnHideMasteryUnlockButton");

	UObject::ProcessEvent(Func, nullptr);
}


// Function OrionUI.OrionPostGameTab_Mastery.OnHideXpToLevelText
// (Event, Protected, BlueprintEvent)

void UOrionPostGameTab_Mastery::OnHideXpToLevelText()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionPostGameTab_Mastery", "OnHideXpToLevelText");

	UObject::ProcessEvent(Func, nullptr);
}


// Function OrionUI.OrionPostGameTab_Mastery.OnShowMasteryLockedText
// (Event, Protected, BlueprintEvent)

void UOrionPostGameTab_Mastery::OnShowMasteryLockedText()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionPostGameTab_Mastery", "OnShowMasteryLockedText");

	UObject::ProcessEvent(Func, nullptr);
}


// Function OrionUI.OrionPostGameTab_Mastery.OnShowMasteryUnlockButton
// (Event, Protected, BlueprintEvent)

void UOrionPostGameTab_Mastery::OnShowMasteryUnlockButton()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionPostGameTab_Mastery", "OnShowMasteryUnlockButton");

	UObject::ProcessEvent(Func, nullptr);
}


// Function OrionUI.OrionPostGameTab_Mastery.OnShowNextRankedLockedText
// (Event, Protected, BlueprintEvent)

void UOrionPostGameTab_Mastery::OnShowNextRankedLockedText()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionPostGameTab_Mastery", "OnShowNextRankedLockedText");

	UObject::ProcessEvent(Func, nullptr);
}


// Function OrionUI.OrionPostGameTab_Mastery.OnShowXpToLevelText
// (Event, Protected, BlueprintEvent)

void UOrionPostGameTab_Mastery::OnShowXpToLevelText()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionPostGameTab_Mastery", "OnShowXpToLevelText");

	UObject::ProcessEvent(Func, nullptr);
}


// Function OrionUI.OrionPostGameTab_Mastery.UnlockButtonClicked
// (Final, Native, Private)

void UOrionPostGameTab_Mastery::UnlockButtonClicked()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionPostGameTab_Mastery", "UnlockButtonClicked");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.OrionCardShopEquipSlot.CanEquipCardIntoSlot
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UOrionHandEntry*                  EquippingCard                                          (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UOrionCardShopEquipSlot::CanEquipCardIntoSlot(class UOrionHandEntry* EquippingCard)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionCardShopEquipSlot", "CanEquipCardIntoSlot");

	Params::OrionCardShopEquipSlot_CanEquipCardIntoSlot Parms{};

	Parms.EquippingCard = EquippingCard;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function OrionUI.OrionCardShopEquipSlot.OnCardDiscarded
// (Event, Protected, BlueprintEvent)

void UOrionCardShopEquipSlot::OnCardDiscarded()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionCardShopEquipSlot", "OnCardDiscarded");

	UObject::ProcessEvent(Func, nullptr);
}


// Function OrionUI.OrionCardShopEquipSlot.OnCardSet
// (Event, Protected, BlueprintEvent)
// Parameters:
// class UOrionMcpCardItemDefinition*      CardItem                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOrionCardShopEquipSlot::OnCardSet(const class UOrionMcpCardItemDefinition* CardItem)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionCardShopEquipSlot", "OnCardSet");

	Params::OrionCardShopEquipSlot_OnCardSet Parms{};

	Parms.CardItem = CardItem;

	UObject::ProcessEvent(Func, &Parms);
}


// Function OrionUI.OrionCardShopEquipSlot.OnEquipSlotHovered
// (Event, Public, BlueprintEvent)

void UOrionCardShopEquipSlot::OnEquipSlotHovered()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionCardShopEquipSlot", "OnEquipSlotHovered");

	UObject::ProcessEvent(Func, nullptr);
}


// Function OrionUI.OrionCardShopEquipSlot.OnEquipSlotUnhovered
// (Event, Public, BlueprintEvent)

void UOrionCardShopEquipSlot::OnEquipSlotUnhovered()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionCardShopEquipSlot", "OnEquipSlotUnhovered");

	UObject::ProcessEvent(Func, nullptr);
}


// Function OrionUI.OrionCardShopEquipSlot.OnGhostCardVisibilityChanged
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bIsVisible                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOrionCardShopEquipSlot::OnGhostCardVisibilityChanged(bool bIsVisible)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionCardShopEquipSlot", "OnGhostCardVisibilityChanged");

	Params::OrionCardShopEquipSlot_OnGhostCardVisibilityChanged Parms{};

	Parms.bIsVisible = bIsVisible;

	UObject::ProcessEvent(Func, &Parms);
}


// Function OrionUI.OrionCardShopEquipSlot.OnGlowColorChanged
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    bIsFromEquipSlot                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOrionCardShopEquipSlot::OnGlowColorChanged(bool bIsFromEquipSlot)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionCardShopEquipSlot", "OnGlowColorChanged");

	Params::OrionCardShopEquipSlot_OnGlowColorChanged Parms{};

	Parms.bIsFromEquipSlot = bIsFromEquipSlot;

	UObject::ProcessEvent(Func, &Parms);
}


// Function OrionUI.OrionCardShopInfoPanel.OnCardSet
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bIsPurchasable                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bIsAffordable                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOrionCardShopInfoPanel::OnCardSet(bool bIsPurchasable, bool bIsAffordable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionCardShopInfoPanel", "OnCardSet");

	Params::OrionCardShopInfoPanel_OnCardSet Parms{};

	Parms.bIsPurchasable = bIsPurchasable;
	Parms.bIsAffordable = bIsAffordable;

	UObject::ProcessEvent(Func, &Parms);
}


// Function OrionUI.OrionCardShopToast.OnToastVisualsBegin
// (Event, Public, BlueprintEvent)

void UOrionCardShopToast::OnToastVisualsBegin()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionCardShopToast", "OnToastVisualsBegin");

	UObject::ProcessEvent(Func, nullptr);
}


// Function OrionUI.OrionCardShopToast.OnToastVisualsCompleted
// (Final, Native, Public, BlueprintCallable)

void UOrionCardShopToast::OnToastVisualsCompleted()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionCardShopToast", "OnToastVisualsCompleted");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.OrionMatchSummaryMastery.OnDestroyXP
// (Event, Public, BlueprintEvent)

void UOrionMatchSummaryMastery::OnDestroyXP()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionMatchSummaryMastery", "OnDestroyXP");

	UObject::ProcessEvent(Func, nullptr);
}


// Function OrionUI.OrionMatchSummaryMastery.OnXPSimulated
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    bIsSimulated                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOrionMatchSummaryMastery::OnXPSimulated(bool bIsSimulated)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionMatchSummaryMastery", "OnXPSimulated");

	Params::OrionMatchSummaryMastery_OnXPSimulated Parms{};

	Parms.bIsSimulated = bIsSimulated;

	UObject::ProcessEvent(Func, &Parms);
}


// Function OrionUI.OrionMatchSummaryMastery.ShowActualXP
// (Final, Native, Public, BlueprintCallable)

void UOrionMatchSummaryMastery::ShowActualXP()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionMatchSummaryMastery", "ShowActualXP");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.OrionMatchSummaryMastery.XPDestroyed
// (Final, Native, Public, BlueprintCallable)

void UOrionMatchSummaryMastery::XPDestroyed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionMatchSummaryMastery", "XPDestroyed");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.OrionCardSummaryWidget.OnCardDataSet
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bHasGoldCost                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bHasAttackCost                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bHasHealthCost                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bHasEnergyCost                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOrionCardSummaryWidget::OnCardDataSet(bool bHasGoldCost, bool bHasAttackCost, bool bHasHealthCost, bool bHasEnergyCost)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionCardSummaryWidget", "OnCardDataSet");

	Params::OrionCardSummaryWidget_OnCardDataSet Parms{};

	Parms.bHasGoldCost = bHasGoldCost;
	Parms.bHasAttackCost = bHasAttackCost;
	Parms.bHasHealthCost = bHasHealthCost;
	Parms.bHasEnergyCost = bHasEnergyCost;

	UObject::ProcessEvent(Func, &Parms);
}


// Function OrionUI.OrionCardSummaryWidget.OnRefreshPreviewLevelInfo
// (Event, Protected, BlueprintEvent)

void UOrionCardSummaryWidget::OnRefreshPreviewLevelInfo()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionCardSummaryWidget", "OnRefreshPreviewLevelInfo");

	UObject::ProcessEvent(Func, nullptr);
}


// Function OrionUI.OrionChestSelectionChestItem.OnSetActive
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    bActive                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bInstant                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOrionChestSelectionChestItem::OnSetActive(bool bActive, bool bInstant)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionChestSelectionChestItem", "OnSetActive");

	Params::OrionChestSelectionChestItem_OnSetActive Parms{};

	Parms.bActive = bActive;
	Parms.bInstant = bInstant;

	UObject::ProcessEvent(Func, &Parms);
}


// Function OrionUI.OrionChestSelectionChestItem.OnSetDistanceFromCenter
// (Event, Public, BlueprintEvent)
// Parameters:
// int32                                   OldValue                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   NewValue                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bInstant                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOrionChestSelectionChestItem::OnSetDistanceFromCenter(int32 OldValue, int32 NewValue, bool bInstant)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionChestSelectionChestItem", "OnSetDistanceFromCenter");

	Params::OrionChestSelectionChestItem_OnSetDistanceFromCenter Parms{};

	Parms.OldValue = OldValue;
	Parms.NewValue = NewValue;
	Parms.bInstant = bInstant;

	UObject::ProcessEvent(Func, &Parms);
}


// Function OrionUI.OrionChestSelectionScreen.OnChestsPopulated
// (Event, Protected, BlueprintEvent)
// Parameters:
// int32                                   NumChests                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOrionChestSelectionScreen::OnChestsPopulated(int32 NumChests)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionChestSelectionScreen", "OnChestsPopulated");

	Params::OrionChestSelectionScreen_OnChestsPopulated Parms{};

	Parms.NumChests = NumChests;

	UObject::ProcessEvent(Func, &Parms);
}


// Function OrionUI.OrionCMSDisplayWidget.RefreshTilesWithNoForceRefresh
// (Final, Native, Protected)

void UOrionCMSDisplayWidget::RefreshTilesWithNoForceRefresh()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionCMSDisplayWidget", "RefreshTilesWithNoForceRefresh");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.OrionCMSDisplayWidget.SetOnScreen
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    InOnScreen                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOrionCMSDisplayWidget::SetOnScreen(bool InOnScreen)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionCMSDisplayWidget", "SetOnScreen");

	Params::OrionCMSDisplayWidget_SetOnScreen Parms{};

	Parms.InOnScreen = InOnScreen;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.PageViewItem.Initialize
// (Native, Event, Public, BlueprintEvent)

void IPageViewItem::Initialize()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PageViewItem", "Initialize");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.PageViewItem.RegisterOnClicked
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TDelegate<void(class UUserWidget* Widget)>Callback                                               (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void IPageViewItem::RegisterOnClicked(const TDelegate<void(class UUserWidget* Widget)>& Callback)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PageViewItem", "RegisterOnClicked");

	Params::PageViewItem_RegisterOnClicked Parms{};

	Parms.Callback = Callback;

	UObject::ProcessEvent(Func, &Parms);
}


// Function OrionUI.PageViewItem.RegisterOnHover
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TDelegate<void(class UUserWidget* Widget, bool bIsHovered)>Callback                                               (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void IPageViewItem::RegisterOnHover(const TDelegate<void(class UUserWidget* Widget, bool bIsHovered)>& Callback)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PageViewItem", "RegisterOnHover");

	Params::PageViewItem_RegisterOnHover Parms{};

	Parms.Callback = Callback;

	UObject::ProcessEvent(Func, &Parms);
}


// Function OrionUI.PageViewItem.RegisterOnSelected
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TDelegate<void(class UUserWidget* Widget, bool Selected)>Callback                                               (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void IPageViewItem::RegisterOnSelected(const TDelegate<void(class UUserWidget* Widget, bool Selected)>& Callback)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PageViewItem", "RegisterOnSelected");

	Params::PageViewItem_RegisterOnSelected Parms{};

	Parms.Callback = Callback;

	UObject::ProcessEvent(Func, &Parms);
}


// Function OrionUI.PageViewItem.RegisterOnUnhover
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TDelegate<void(class UUserWidget* Widget, bool bIsHovered)>Callback                                               (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void IPageViewItem::RegisterOnUnhover(const TDelegate<void(class UUserWidget* Widget, bool bIsHovered)>& Callback)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PageViewItem", "RegisterOnUnhover");

	Params::PageViewItem_RegisterOnUnhover Parms{};

	Parms.Callback = Callback;

	UObject::ProcessEvent(Func, &Parms);
}


// Function OrionUI.PageViewItem.Reset
// (Native, Event, Public, BlueprintEvent)

void IPageViewItem::Reset()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PageViewItem", "Reset");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.PageViewItem.SetData
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          SourceData                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IPageViewItem::SetData(class UObject* SourceData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PageViewItem", "SetData");

	Params::PageViewItem_SetData Parms{};

	Parms.SourceData = SourceData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.PageViewItem.SetRowColumn
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Row                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Column                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IPageViewItem::SetRowColumn(int32 Row, int32 Column)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PageViewItem", "SetRowColumn");

	Params::PageViewItem_SetRowColumn Parms{};

	Parms.Row = Row;
	Parms.Column = Column;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.PageViewItem.GetData
// (Native, Event, Public, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// class UObject*                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UObject* IPageViewItem::GetData() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PageViewItem", "GetData");

	Params::PageViewItem_GetData Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function OrionUI.OrionCMSPopup.MarkCMSRevisionAsSeen
// (Final, Native, Protected, BlueprintCallable)

void UOrionCMSPopup::MarkCMSRevisionAsSeen()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionCMSPopup", "MarkCMSRevisionAsSeen");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.OrionCMSTile.Launch
// (Native, Protected, BlueprintCallable)

void UOrionCMSTile::Launch()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionCMSTile", "Launch");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.PlayerActionWidget.SetSlotIndex
// (Event, Public, BlueprintEvent)
// Parameters:
// int32                                   SlotIndex                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPlayerActionWidget::SetSlotIndex(int32 SlotIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerActionWidget", "SetSlotIndex");

	Params::PlayerActionWidget_SetSlotIndex Parms{};

	Parms.SlotIndex = SlotIndex;

	UObject::ProcessEvent(Func, &Parms);
}


// Function OrionUI.OrionCombatMessageManagerWidget.AddCombatMessageWidget
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// class UOrionCombatMessageWidget*        CombatMessageWidget                                    (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOrionCombatMessageManagerWidget::AddCombatMessageWidget(class UOrionCombatMessageWidget* CombatMessageWidget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionCombatMessageManagerWidget", "AddCombatMessageWidget");

	Params::OrionCombatMessageManagerWidget_AddCombatMessageWidget Parms{};

	Parms.CombatMessageWidget = CombatMessageWidget;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.OrionCombatMessageManagerWidget.OnBuffInfoAdded
// (Final, Native, Private)
// Parameters:
// struct FOrionJungleBuffInfo             BuffInfo                                               (Parm, NativeAccessSpecifierPublic)

void UOrionCombatMessageManagerWidget::OnBuffInfoAdded(const struct FOrionJungleBuffInfo& BuffInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionCombatMessageManagerWidget", "OnBuffInfoAdded");

	Params::OrionCombatMessageManagerWidget_OnBuffInfoAdded Parms{};

	Parms.BuffInfo = std::move(BuffInfo);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.OrionCombatMessageManagerWidget.OnBuffInfoRemoved
// (Final, Native, Private)
// Parameters:
// struct FOrionJungleBuffInfo             BuffInfo                                               (Parm, NativeAccessSpecifierPublic)

void UOrionCombatMessageManagerWidget::OnBuffInfoRemoved(const struct FOrionJungleBuffInfo& BuffInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionCombatMessageManagerWidget", "OnBuffInfoRemoved");

	Params::OrionCombatMessageManagerWidget_OnBuffInfoRemoved Parms{};

	Parms.BuffInfo = std::move(BuffInfo);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.OrionCombatMessageManagerWidget.OnCanShopChange
// (Final, Native, Private)
// Parameters:
// bool                                    bCanShop                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOrionCombatMessageManagerWidget::OnCanShopChange(bool bCanShop)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionCombatMessageManagerWidget", "OnCanShopChange");

	Params::OrionCombatMessageManagerWidget_OnCanShopChange Parms{};

	Parms.bCanShop = bCanShop;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.OrionCombatMessageManagerWidget.OnIsInBaseChange
// (Final, Native, Private)
// Parameters:
// bool                                    bIsInBase                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOrionCombatMessageManagerWidget::OnIsInBaseChange(bool bIsInBase)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionCombatMessageManagerWidget", "OnIsInBaseChange");

	Params::OrionCombatMessageManagerWidget_OnIsInBaseChange Parms{};

	Parms.bIsInBase = bIsInBase;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.OrionCombatMessageManagerWidget.OnShowVictoryScreen
// (Final, Native, Private)
// Parameters:
// bool                                    bScreenUp                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EOrionTeam                              WinningTeam                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOrionCombatMessageManagerWidget::OnShowVictoryScreen(bool bScreenUp, EOrionTeam WinningTeam)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionCombatMessageManagerWidget", "OnShowVictoryScreen");

	Params::OrionCombatMessageManagerWidget_OnShowVictoryScreen Parms{};

	Parms.bScreenUp = bScreenUp;
	Parms.WinningTeam = WinningTeam;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.OrionCombatMessageWidget.AttemptExit
// (Native, Event, Public, BlueprintEvent)

void UOrionCombatMessageWidget::AttemptExit()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionCombatMessageWidget", "AttemptExit");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.OrionCombatMessageWidget.Enter
// (Native, Event, Public, BlueprintEvent)

void UOrionCombatMessageWidget::Enter()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionCombatMessageWidget", "Enter");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.OrionCombatMessageWidget.Exit
// (Native, Event, Protected, BlueprintEvent)

void UOrionCombatMessageWidget::Exit()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionCombatMessageWidget", "Exit");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.OrionCombatMessageWidget.Idle
// (Native, Event, Public, BlueprintEvent)

void UOrionCombatMessageWidget::Idle()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionCombatMessageWidget", "Idle");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.OrionCombatMessageWidget.OnEnterFinished
// (Native, Event, Protected, BlueprintEvent)

void UOrionCombatMessageWidget::OnEnterFinished()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionCombatMessageWidget", "OnEnterFinished");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.OrionCombatMessageWidget.OnExitFinished
// (Native, Event, Protected, BlueprintEvent)

void UOrionCombatMessageWidget::OnExitFinished()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionCombatMessageWidget", "OnExitFinished");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.OrionCombatMessageWidget.OnIdleFinished
// (Native, Event, Protected, BlueprintEvent)

void UOrionCombatMessageWidget::OnIdleFinished()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionCombatMessageWidget", "OnIdleFinished");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.OrionCombatMessageWidget.SetUsingGamepad
// (Native, Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bUsingGamePad                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOrionCombatMessageWidget::SetUsingGamepad(bool bUsingGamePad)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionCombatMessageWidget", "SetUsingGamepad");

	Params::OrionCombatMessageWidget_SetUsingGamepad Parms{};

	Parms.bUsingGamePad = bUsingGamePad;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.OrionCombatMessageWidget.GetCombatMessageState
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EOrionCombatMessageState                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EOrionCombatMessageState UOrionCombatMessageWidget::GetCombatMessageState() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionCombatMessageWidget", "GetCombatMessageState");

	Params::OrionCombatMessageWidget_GetCombatMessageState Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function OrionUI.OrionCombatMessageWidget.GetCombatMessageType
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EOrionCombatMessageType                 ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EOrionCombatMessageType UOrionCombatMessageWidget::GetCombatMessageType() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionCombatMessageWidget", "GetCombatMessageType");

	Params::OrionCombatMessageWidget_GetCombatMessageType Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function OrionUI.OrionCombatMessageWidget.IsPersistentMessage
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UOrionCombatMessageWidget::IsPersistentMessage() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionCombatMessageWidget", "IsPersistentMessage");

	Params::OrionCombatMessageWidget_IsPersistentMessage Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function OrionUI.OrionCommunityScreen.OnTabChanged
// (Final, Native, Protected)
// Parameters:
// class FName                             TabId                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOrionCommunityScreen::OnTabChanged(class FName TabId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionCommunityScreen", "OnTabChanged");

	Params::OrionCommunityScreen_OnTabChanged Parms{};

	Parms.TabId = TabId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.OrionCoreWidget.OnCoreCritical
// (Event, Protected, BlueprintEvent)

void UOrionCoreWidget::OnCoreCritical()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionCoreWidget", "OnCoreCritical");

	UObject::ProcessEvent(Func, nullptr);
}


// Function OrionUI.OrionCoreWidget.OnCoreDamaged
// (Event, Protected, BlueprintEvent)

void UOrionCoreWidget::OnCoreDamaged()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionCoreWidget", "OnCoreDamaged");

	UObject::ProcessEvent(Func, nullptr);
}


// Function OrionUI.OrionCoreWidget.OnCoreExposed
// (Event, Protected, BlueprintEvent)

void UOrionCoreWidget::OnCoreExposed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionCoreWidget", "OnCoreExposed");

	UObject::ProcessEvent(Func, nullptr);
}


// Function OrionUI.OrionDailyLoginRewardScreen.OnClaim
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bDidPreviewDayChange                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOrionDailyLoginRewardScreen::OnClaim(bool bDidPreviewDayChange)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionDailyLoginRewardScreen", "OnClaim");

	Params::OrionDailyLoginRewardScreen_OnClaim Parms{};

	Parms.bDidPreviewDayChange = bDidPreviewDayChange;

	UObject::ProcessEvent(Func, &Parms);
}


// Function OrionUI.OrionDailyLoginRewardScreen.OnDataSet
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bCanClaim                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOrionDailyLoginRewardScreen::OnDataSet(bool bCanClaim)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionDailyLoginRewardScreen", "OnDataSet");

	Params::OrionDailyLoginRewardScreen_OnDataSet Parms{};

	Parms.bCanClaim = bCanClaim;

	UObject::ProcessEvent(Func, &Parms);
}


// Function OrionUI.OrionDailyLoginRewardScreen.OnNextPage
// (Event, Protected, BlueprintEvent)

void UOrionDailyLoginRewardScreen::OnNextPage()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionDailyLoginRewardScreen", "OnNextPage");

	UObject::ProcessEvent(Func, nullptr);
}


// Function OrionUI.OrionDailyLoginRewardScreen.OnPreviewDayChanged
// (Event, Protected, BlueprintEvent)

void UOrionDailyLoginRewardScreen::OnPreviewDayChanged()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionDailyLoginRewardScreen", "OnPreviewDayChanged");

	UObject::ProcessEvent(Func, nullptr);
}


// Function OrionUI.OrionDailyLoginRewardScreen.OnPreviewPercentSet
// (Event, Protected, BlueprintEvent)
// Parameters:
// float                                   Percent                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EOrionDailyRewardPreviewTotalDays       TotalDays                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOrionDailyLoginRewardScreen::OnPreviewPercentSet(float Percent, EOrionDailyRewardPreviewTotalDays TotalDays)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionDailyLoginRewardScreen", "OnPreviewPercentSet");

	Params::OrionDailyLoginRewardScreen_OnPreviewPercentSet Parms{};

	Parms.Percent = Percent;
	Parms.TotalDays = TotalDays;

	UObject::ProcessEvent(Func, &Parms);
}


// Function OrionUI.OrionDailyLoginRewardScreen.OnRefreshBegin
// (Event, Protected, BlueprintEvent)

void UOrionDailyLoginRewardScreen::OnRefreshBegin()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionDailyLoginRewardScreen", "OnRefreshBegin");

	UObject::ProcessEvent(Func, nullptr);
}


// Function OrionUI.OrionDailyLoginRewardScreen.RefreshData
// (Final, Native, Protected, BlueprintCallable)

void UOrionDailyLoginRewardScreen::RefreshData()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionDailyLoginRewardScreen", "RefreshData");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.OrionDailyLoginRewardScreen.SetRewardItems
// (Final, Native, Protected, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<class UOrionDailyRewardItem*>    DailyRewardItems                                       (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, ContainsInstancedReference, NativeAccessSpecifierPublic)

void UOrionDailyLoginRewardScreen::SetRewardItems(const TArray<class UOrionDailyRewardItem*>& DailyRewardItems)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionDailyLoginRewardScreen", "SetRewardItems");

	Params::OrionDailyLoginRewardScreen_SetRewardItems Parms{};

	Parms.DailyRewardItems = std::move(DailyRewardItems);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.OrionDailyQuestMissionProgress.OnQuestCompleted
// (Event, Public, BlueprintEvent)

void UOrionDailyQuestMissionProgress::OnQuestCompleted()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionDailyQuestMissionProgress", "OnQuestCompleted");

	UObject::ProcessEvent(Func, nullptr);
}


// Function OrionUI.OrionDailyQuestMissionProgress.OnQuestDataSet
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    bComplete                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOrionDailyQuestMissionProgress::OnQuestDataSet(bool bComplete)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionDailyQuestMissionProgress", "OnQuestDataSet");

	Params::OrionDailyQuestMissionProgress_OnQuestDataSet Parms{};

	Parms.bComplete = bComplete;

	UObject::ProcessEvent(Func, &Parms);
}


// Function OrionUI.OrionDailyQuestWidget.OnBonusAchieved
// (Event, Protected, BlueprintEvent)

void UOrionDailyQuestWidget::OnBonusAchieved()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionDailyQuestWidget", "OnBonusAchieved");

	UObject::ProcessEvent(Func, nullptr);
}


// Function OrionUI.OrionDailyQuestWidget.OnNewQuests
// (Event, Protected, BlueprintEvent)

void UOrionDailyQuestWidget::OnNewQuests()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionDailyQuestWidget", "OnNewQuests");

	UObject::ProcessEvent(Func, nullptr);
}


// Function OrionUI.OrionDailyQuestWidget.OnQuestRefreshBegun
// (Event, Protected, BlueprintEvent)

void UOrionDailyQuestWidget::OnQuestRefreshBegun()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionDailyQuestWidget", "OnQuestRefreshBegun");

	UObject::ProcessEvent(Func, nullptr);
}


// Function OrionUI.OrionDailyQuestWidget.OnQuestRefreshComplete
// (Event, Protected, BlueprintEvent)

void UOrionDailyQuestWidget::OnQuestRefreshComplete()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionDailyQuestWidget", "OnQuestRefreshComplete");

	UObject::ProcessEvent(Func, nullptr);
}


// Function OrionUI.OrionDailyQuestWidget.RefreshQuestProgress
// (Final, Native, Public, BlueprintCallable)

void UOrionDailyQuestWidget::RefreshQuestProgress()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionDailyQuestWidget", "RefreshQuestProgress");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.OrionDailyRewardItem.OnDataSet
// (Event, Protected, BlueprintEvent)
// Parameters:
// EOrionDailyRewardDayType                DayType                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOrionDailyRewardItem::OnDataSet(EOrionDailyRewardDayType DayType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionDailyRewardItem", "OnDataSet");

	Params::OrionDailyRewardItem_OnDataSet Parms{};

	Parms.DayType = DayType;

	UObject::ProcessEvent(Func, &Parms);
}


// Function OrionUI.OrionDamageOverlay.OnDamageUpdate
// (Final, Native, Protected)
// Parameters:
// struct FOrionUIDamageEventInfo          UIDamageEventInfo                                      (Parm, NoDestructor, NativeAccessSpecifierPublic)

void UOrionDamageOverlay::OnDamageUpdate(const struct FOrionUIDamageEventInfo& UIDamageEventInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionDamageOverlay", "OnDamageUpdate");

	Params::OrionDamageOverlay_OnDamageUpdate Parms{};

	Parms.UIDamageEventInfo = std::move(UIDamageEventInfo);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.OrionDeathCamWidget.OnDeathWithoutKillcam
// (Event, Protected, BlueprintEvent)

void UOrionDeathCamWidget::OnDeathWithoutKillcam()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionDeathCamWidget", "OnDeathWithoutKillcam");

	UObject::ProcessEvent(Func, nullptr);
}


// Function OrionUI.OrionDeathCamWidget.OnLocalHeroDeath
// (Final, Native, Protected)
// Parameters:
// struct FOrionHUDTeamStatusInfo          UpdatedTeamInfo                                        (Parm, NativeAccessSpecifierPublic)

void UOrionDeathCamWidget::OnLocalHeroDeath(const struct FOrionHUDTeamStatusInfo& UpdatedTeamInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionDeathCamWidget", "OnLocalHeroDeath");

	Params::OrionDeathCamWidget_OnLocalHeroDeath Parms{};

	Parms.UpdatedTeamInfo = std::move(UpdatedTeamInfo);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.OrionDeathCamWidget.OnLocalHeroSpawn
// (Final, Native, Protected)
// Parameters:
// struct FOrionHUDTeamStatusInfo          UpdatedTeamInfo                                        (Parm, NativeAccessSpecifierPublic)

void UOrionDeathCamWidget::OnLocalHeroSpawn(const struct FOrionHUDTeamStatusInfo& UpdatedTeamInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionDeathCamWidget", "OnLocalHeroSpawn");

	Params::OrionDeathCamWidget_OnLocalHeroSpawn Parms{};

	Parms.UpdatedTeamInfo = std::move(UpdatedTeamInfo);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.OrionDeathCamWidget.PlayReplay
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// TDelegate<void(bool bWasSuccessful)>    OnPlayReplayComplete                                   (Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)

void UOrionDeathCamWidget::PlayReplay(TDelegate<void(bool bWasSuccessful)> OnPlayReplayComplete)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionDeathCamWidget", "PlayReplay");

	Params::OrionDeathCamWidget_PlayReplay Parms{};

	Parms.OnPlayReplayComplete = OnPlayReplayComplete;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.OrionDeathCamWidget.StopReplay
// (Final, Native, Protected, BlueprintCallable)

void UOrionDeathCamWidget::StopReplay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionDeathCamWidget", "StopReplay");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.OrionDeathRecapPanel.OnInstantReplayDisabled
// (Event, Protected, BlueprintEvent)

void UOrionDeathRecapPanel::OnInstantReplayDisabled()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionDeathRecapPanel", "OnInstantReplayDisabled");

	UObject::ProcessEvent(Func, nullptr);
}


// Function OrionUI.OrionDeathRecapPanel.OnInstantReplayEnabled
// (Event, Protected, BlueprintEvent)

void UOrionDeathRecapPanel::OnInstantReplayEnabled()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionDeathRecapPanel", "OnInstantReplayEnabled");

	UObject::ProcessEvent(Func, nullptr);
}


// Function OrionUI.OrionDeathRecapPanel.OnLocalHeroDeath
// (Final, Native, Protected)
// Parameters:
// struct FOrionHUDTeamStatusInfo          UpdatedTeamInfo                                        (Parm, NativeAccessSpecifierPublic)

void UOrionDeathRecapPanel::OnLocalHeroDeath(const struct FOrionHUDTeamStatusInfo& UpdatedTeamInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionDeathRecapPanel", "OnLocalHeroDeath");

	Params::OrionDeathRecapPanel_OnLocalHeroDeath Parms{};

	Parms.UpdatedTeamInfo = std::move(UpdatedTeamInfo);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.OrionDeathRecapPanel.OnLocalHeroSpawn
// (Final, Native, Protected)
// Parameters:
// struct FOrionHUDTeamStatusInfo          UpdatedTeamInfo                                        (Parm, NativeAccessSpecifierPublic)

void UOrionDeathRecapPanel::OnLocalHeroSpawn(const struct FOrionHUDTeamStatusInfo& UpdatedTeamInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionDeathRecapPanel", "OnLocalHeroSpawn");

	Params::OrionDeathRecapPanel_OnLocalHeroSpawn Parms{};

	Parms.UpdatedTeamInfo = std::move(UpdatedTeamInfo);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.OrionDebugHeroSelect.HandleHeroSelected
// (Final, Native, Private)
// Parameters:
// class UObject*                          SelectedHero                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bSelected                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOrionDebugHeroSelect::HandleHeroSelected(class UObject* SelectedHero, bool bSelected)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionDebugHeroSelect", "HandleHeroSelected");

	Params::OrionDebugHeroSelect_HandleHeroSelected Parms{};

	Parms.SelectedHero = SelectedHero;
	Parms.bSelected = bSelected;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.OrionDebugHeroSelect.HandleSkinSelected
// (Final, Native, Private)
// Parameters:
// class UObject*                          SelectedSkin                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bSelected                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOrionDebugHeroSelect::HandleSkinSelected(class UObject* SelectedSkin, bool bSelected)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionDebugHeroSelect", "HandleSkinSelected");

	Params::OrionDebugHeroSelect_HandleSkinSelected Parms{};

	Parms.SelectedSkin = SelectedSkin;
	Parms.bSelected = bSelected;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.OrionDebugHeroSelect.HandleVariantSelected
// (Final, Native, Private)
// Parameters:
// class UObject*                          SelectedVariant                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bSelected                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOrionDebugHeroSelect::HandleVariantSelected(class UObject* SelectedVariant, bool bSelected)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionDebugHeroSelect", "HandleVariantSelected");

	Params::OrionDebugHeroSelect_HandleVariantSelected Parms{};

	Parms.SelectedVariant = SelectedVariant;
	Parms.bSelected = bSelected;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.OrionDeckBuilderPip.CustomMouseEnter
// (Event, Public, BlueprintEvent)

void UOrionDeckBuilderPip::CustomMouseEnter()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionDeckBuilderPip", "CustomMouseEnter");

	UObject::ProcessEvent(Func, nullptr);
}


// Function OrionUI.OrionDeckBuilderPip.CustomMouseExit
// (Event, Public, BlueprintEvent)

void UOrionDeckBuilderPip::CustomMouseExit()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionDeckBuilderPip", "CustomMouseExit");

	UObject::ProcessEvent(Func, nullptr);
}


// Function OrionUI.OrionDeckBuilderPip.CustomSelected
// (Event, Public, BlueprintEvent)

void UOrionDeckBuilderPip::CustomSelected()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionDeckBuilderPip", "CustomSelected");

	UObject::ProcessEvent(Func, nullptr);
}


// Function OrionUI.OrionDeckBuilderPip.GetGemMaterial
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UMaterialInstanceDynamic*         ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UMaterialInstanceDynamic* UOrionDeckBuilderPip::GetGemMaterial()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionDeckBuilderPip", "GetGemMaterial");

	Params::OrionDeckBuilderPip_GetGemMaterial Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function OrionUI.OrionDeckBuilderSummaryCardEntry.OnCardSlotted
// (Event, Public, BlueprintEvent)

void UOrionDeckBuilderSummaryCardEntry::OnCardSlotted()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionDeckBuilderSummaryCardEntry", "OnCardSlotted");

	UObject::ProcessEvent(Func, nullptr);
}


// Function OrionUI.OrionMcpTypeRewardImage.SetImageWithDefinition
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UOrionMcpItemDefinition*          ItemDefinition                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOrionMcpTypeRewardImage::SetImageWithDefinition(const class UOrionMcpItemDefinition* ItemDefinition)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionMcpTypeRewardImage", "SetImageWithDefinition");

	Params::OrionMcpTypeRewardImage_SetImageWithDefinition Parms{};

	Parms.ItemDefinition = ItemDefinition;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.OrionDeckBuilderTab_Cards.DynamicSearchTextChanged
// (Final, Native, Protected, HasOutParams)
// Parameters:
// class FText                             NewText                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UOrionDeckBuilderTab_Cards::DynamicSearchTextChanged(const class FText& NewText)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionDeckBuilderTab_Cards", "DynamicSearchTextChanged");

	Params::OrionDeckBuilderTab_Cards_DynamicSearchTextChanged Parms{};

	Parms.NewText = std::move(NewText);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.OrionDeckBuilderTab_Cards.DynamicSearchTextCommitted
// (Final, Native, Protected, HasOutParams)
// Parameters:
// class FText                             NewText                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// ETextCommit                             CommitMethod                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOrionDeckBuilderTab_Cards::DynamicSearchTextCommitted(const class FText& NewText, ETextCommit CommitMethod)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionDeckBuilderTab_Cards", "DynamicSearchTextCommitted");

	Params::OrionDeckBuilderTab_Cards_DynamicSearchTextCommitted Parms{};

	Parms.NewText = std::move(NewText);
	Parms.CommitMethod = CommitMethod;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.OrionDeckBuilderTab_Cards.HandleCardHovered
// (Final, Native, Protected)
// Parameters:
// class UObject*                          HoveredItem                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bIsHovered                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOrionDeckBuilderTab_Cards::HandleCardHovered(class UObject* HoveredItem, bool bIsHovered)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionDeckBuilderTab_Cards", "HandleCardHovered");

	Params::OrionDeckBuilderTab_Cards_HandleCardHovered Parms{};

	Parms.HoveredItem = HoveredItem;
	Parms.bIsHovered = bIsHovered;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.OrionDeckBuilderTab_Cards.HandleNewCardSelected
// (Final, Native, Protected)
// Parameters:
// class UObject*                          SelectedItem                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOrionDeckBuilderTab_Cards::HandleNewCardSelected(class UObject* SelectedItem)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionDeckBuilderTab_Cards", "HandleNewCardSelected");

	Params::OrionDeckBuilderTab_Cards_HandleNewCardSelected Parms{};

	Parms.SelectedItem = SelectedItem;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.OrionDeckBuilderTab_Cards.HandleToggleButtonSort
// (Final, Native, Protected)

void UOrionDeckBuilderTab_Cards::HandleToggleButtonSort()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionDeckBuilderTab_Cards", "HandleToggleButtonSort");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.OrionObjectListItem.Reset
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)

void IOrionObjectListItem::Reset()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionObjectListItem", "Reset");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.OrionObjectListItem.SetData
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          InData                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IOrionObjectListItem::SetData(class UObject* InData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionObjectListItem", "SetData");

	Params::OrionObjectListItem_SetData Parms{};

	Parms.InData = InData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.OrionObjectListItem.GetData
// (Native, Event, Public, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// class UObject*                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UObject* IOrionObjectListItem::GetData() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionObjectListItem", "GetData");

	Params::OrionObjectListItem_GetData Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function OrionUI.OrionDeckBuilderTab_DeckCustomize.DynamicNameChanged
// (Final, Native, Protected, HasOutParams)
// Parameters:
// class FText                             NewText                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UOrionDeckBuilderTab_DeckCustomize::DynamicNameChanged(const class FText& NewText)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionDeckBuilderTab_DeckCustomize", "DynamicNameChanged");

	Params::OrionDeckBuilderTab_DeckCustomize_DynamicNameChanged Parms{};

	Parms.NewText = std::move(NewText);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.OrionDeckBuilderTab_DeckCustomize.DynamicNameCommitted
// (Final, Native, Protected, HasOutParams)
// Parameters:
// class FText                             NewText                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// ETextCommit                             CommitMethod                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOrionDeckBuilderTab_DeckCustomize::DynamicNameCommitted(const class FText& NewText, ETextCommit CommitMethod)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionDeckBuilderTab_DeckCustomize", "DynamicNameCommitted");

	Params::OrionDeckBuilderTab_DeckCustomize_DynamicNameCommitted Parms{};

	Parms.NewText = std::move(NewText);
	Parms.CommitMethod = CommitMethod;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.OrionDeckBuilderTab_Gems.DynamicSearchTextChanged
// (Final, Native, Protected, HasOutParams)
// Parameters:
// class FText                             NewText                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UOrionDeckBuilderTab_Gems::DynamicSearchTextChanged(const class FText& NewText)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionDeckBuilderTab_Gems", "DynamicSearchTextChanged");

	Params::OrionDeckBuilderTab_Gems_DynamicSearchTextChanged Parms{};

	Parms.NewText = std::move(NewText);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.OrionDeckBuilderTab_Gems.DynamicSearchTextCommitted
// (Final, Native, Protected, HasOutParams)
// Parameters:
// class FText                             NewText                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// ETextCommit                             CommitMethod                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOrionDeckBuilderTab_Gems::DynamicSearchTextCommitted(const class FText& NewText, ETextCommit CommitMethod)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionDeckBuilderTab_Gems", "DynamicSearchTextCommitted");

	Params::OrionDeckBuilderTab_Gems_DynamicSearchTextCommitted Parms{};

	Parms.NewText = std::move(NewText);
	Parms.CommitMethod = CommitMethod;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.OrionDeckBuilderTab_Gems.HandleToggleButtonSort
// (Final, Native, Protected)

void UOrionDeckBuilderTab_Gems::HandleToggleButtonSort()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionDeckBuilderTab_Gems", "HandleToggleButtonSort");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.OrionDeckBuilderTab_Gems.OnGemRecount
// (Final, Native, Protected, HasOutParams)
// Parameters:
// TArray<class UOrionMcpGemItem*>         NewGems                                                (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void UOrionDeckBuilderTab_Gems::OnGemRecount(TArray<class UOrionMcpGemItem*>* NewGems)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionDeckBuilderTab_Gems", "OnGemRecount");

	Params::OrionDeckBuilderTab_Gems_OnGemRecount Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (NewGems != nullptr)
		*NewGems = std::move(Parms.NewGems);
}


// Function OrionUI.OrionRecipeCostDisplay.OnCanAffordLargeIcon
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bCanAfford                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOrionRecipeCostDisplay::OnCanAffordLargeIcon(bool bCanAfford)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionRecipeCostDisplay", "OnCanAffordLargeIcon");

	Params::OrionRecipeCostDisplay_OnCanAffordLargeIcon Parms{};

	Parms.bCanAfford = bCanAfford;

	UObject::ProcessEvent(Func, &Parms);
}


// Function OrionUI.OrionRecipeCostDisplay.OnCanAffordPrimary
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bCanAfford                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOrionRecipeCostDisplay::OnCanAffordPrimary(bool bCanAfford)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionRecipeCostDisplay", "OnCanAffordPrimary");

	Params::OrionRecipeCostDisplay_OnCanAffordPrimary Parms{};

	Parms.bCanAfford = bCanAfford;

	UObject::ProcessEvent(Func, &Parms);
}


// Function OrionUI.OrionTabButton.OnSetListType
// (Event, Public, BlueprintEvent)
// Parameters:
// EOrionTabListType                       ListType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOrionTabButton::OnSetListType(EOrionTabListType ListType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionTabButton", "OnSetListType");

	Params::OrionTabButton_OnSetListType Parms{};

	Parms.ListType = ListType;

	UObject::ProcessEvent(Func, &Parms);
}


// Function OrionUI.OrionTabButton.SetTabTitle
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class FText                             TitleText                                              (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UOrionTabButton::SetTabTitle(const class FText& TitleText)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionTabButton", "SetTabTitle");

	Params::OrionTabButton_SetTabTitle Parms{};

	Parms.TitleText = std::move(TitleText);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.OrionAbilityFeedbackDisplay.OnAbilityLockedError
// (Event, Protected, BlueprintEvent)

void UOrionAbilityFeedbackDisplay::OnAbilityLockedError()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionAbilityFeedbackDisplay", "OnAbilityLockedError");

	UObject::ProcessEvent(Func, nullptr);
}


// Function OrionUI.OrionAbilityFeedbackDisplay.OnCooldownError
// (Event, Protected, BlueprintEvent)

void UOrionAbilityFeedbackDisplay::OnCooldownError()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionAbilityFeedbackDisplay", "OnCooldownError");

	UObject::ProcessEvent(Func, nullptr);
}


// Function OrionUI.OrionAbilityFeedbackDisplay.OnGeneralAbilityFailError
// (Event, Protected, BlueprintEvent)

void UOrionAbilityFeedbackDisplay::OnGeneralAbilityFailError()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionAbilityFeedbackDisplay", "OnGeneralAbilityFailError");

	UObject::ProcessEvent(Func, nullptr);
}


// Function OrionUI.OrionAbilityFeedbackDisplay.OnNotEnoughManaError
// (Event, Protected, BlueprintEvent)

void UOrionAbilityFeedbackDisplay::OnNotEnoughManaError()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionAbilityFeedbackDisplay", "OnNotEnoughManaError");

	UObject::ProcessEvent(Func, nullptr);
}


// Function OrionUI.OrionAbilityFeedbackDisplay.OnPulseCurrentInfo
// (Event, Protected, BlueprintEvent)

void UOrionAbilityFeedbackDisplay::OnPulseCurrentInfo()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionAbilityFeedbackDisplay", "OnPulseCurrentInfo");

	UObject::ProcessEvent(Func, nullptr);
}


// Function OrionUI.OrionDeckBuilderWidget.RequestDeckBuilderClose
// (Final, Native, Public, BlueprintCallable)

void UOrionDeckBuilderWidget::RequestDeckBuilderClose()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionDeckBuilderWidget", "RequestDeckBuilderClose");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.OrionDeckBuilderWidget.SetActiveDeck
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UOrionMcpDeckItem*                DeckItem                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOrionDeckBuilderWidget::SetActiveDeck(class UOrionMcpDeckItem* DeckItem)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionDeckBuilderWidget", "SetActiveDeck");

	Params::OrionDeckBuilderWidget_SetActiveDeck Parms{};

	Parms.DeckItem = DeckItem;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.OrionDeckBuilderWidget.SetSavingText
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bIsSaving                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOrionDeckBuilderWidget::SetSavingText(bool bIsSaving)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionDeckBuilderWidget", "SetSavingText");

	Params::OrionDeckBuilderWidget_SetSavingText Parms{};

	Parms.bIsSaving = bIsSaving;

	UObject::ProcessEvent(Func, &Parms);
}


// Function OrionUI.OrionDeckCollection.DeckEntryClicked
// (Final, Native, Private)
// Parameters:
// class UObject*                          Item                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bIsSelected                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOrionDeckCollection::DeckEntryClicked(class UObject* Item, bool bIsSelected)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionDeckCollection", "DeckEntryClicked");

	Params::OrionDeckCollection_DeckEntryClicked Parms{};

	Parms.Item = Item;
	Parms.bIsSelected = bIsSelected;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.OrionDeckCollection.HandleUnlockWidgetClose
// (Final, Native, Private)

void UOrionDeckCollection::HandleUnlockWidgetClose()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionDeckCollection", "HandleUnlockWidgetClose");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.OrionMiniMap.OnTeamChanged
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EOrionTeam                              NewTeamNum                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOrionMiniMap::OnTeamChanged(EOrionTeam NewTeamNum)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionMiniMap", "OnTeamChanged");

	Params::OrionMiniMap_OnTeamChanged Parms{};

	Parms.NewTeamNum = NewTeamNum;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.OrionMiniMap.ResetMinimapScaling
// (Final, Native, Public, BlueprintCallable)

void UOrionMiniMap::ResetMinimapScaling()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionMiniMap", "ResetMinimapScaling");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.OrionMiniMap.SetLocalPlayerController
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class APlayerController*                LocalPlayerController                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOrionMiniMap::SetLocalPlayerController(class APlayerController* LocalPlayerController)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionMiniMap", "SetLocalPlayerController");

	Params::OrionMiniMap_SetLocalPlayerController Parms{};

	Parms.LocalPlayerController = LocalPlayerController;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.OrionMiniMap.SetMapModeIsLarge
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bIsLargeMap                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOrionMiniMap::SetMapModeIsLarge(bool bIsLargeMap)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionMiniMap", "SetMapModeIsLarge");

	Params::OrionMiniMap_SetMapModeIsLarge Parms{};

	Parms.bIsLargeMap = bIsLargeMap;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.OrionMiniMap.SetupMiniMap
// (Final, Native, Protected)

void UOrionMiniMap::SetupMiniMap()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionMiniMap", "SetupMiniMap");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.OrionMiniMap.GetMapModeIsLarge
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const bool                              ReturnValue                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

const bool UOrionMiniMap::GetMapModeIsLarge() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionMiniMap", "GetMapModeIsLarge");

	Params::OrionMiniMap_GetMapModeIsLarge Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function OrionUI.OrionDeckListEntry.OnDeckSet
// (Event, Protected, BlueprintEvent)
// Parameters:
// EAffinityType                           Affinity0                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EAffinityType                           Affinity1                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOrionDeckListEntry::OnDeckSet(EAffinityType Affinity0, EAffinityType Affinity1)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionDeckListEntry", "OnDeckSet");

	Params::OrionDeckListEntry_OnDeckSet Parms{};

	Parms.Affinity0 = Affinity0;
	Parms.Affinity1 = Affinity1;

	UObject::ProcessEvent(Func, &Parms);
}


// Function OrionUI.OrionSinglePlayerRating.CloseChildMenu
// (Event, Protected, BlueprintEvent)

void UOrionSinglePlayerRating::CloseChildMenu()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionSinglePlayerRating", "CloseChildMenu");

	UObject::ProcessEvent(Func, nullptr);
}


// Function OrionUI.OrionSinglePlayerRating.RecordNewRating
// (Final, Native, Public)
// Parameters:
// EPlayerRatingResult                     InRatingValue                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOrionSinglePlayerRating::RecordNewRating(EPlayerRatingResult InRatingValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionSinglePlayerRating", "RecordNewRating");

	Params::OrionSinglePlayerRating_RecordNewRating Parms{};

	Parms.InRatingValue = InRatingValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.OrionSinglePlayerRating.RecordRatingInternal
// (Final, Native, Private)
// Parameters:
// EPlayerRatingResult                     Rating                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOrionSinglePlayerRating::RecordRatingInternal(EPlayerRatingResult Rating)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionSinglePlayerRating", "RecordRatingInternal");

	Params::OrionSinglePlayerRating_RecordRatingInternal Parms{};

	Parms.Rating = Rating;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.OrionSinglePlayerRating.ResetRatingState
// (Final, Native, Public)

void UOrionSinglePlayerRating::ResetRatingState()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionSinglePlayerRating", "ResetRatingState");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.OrionSinglePlayerRating.RevertButtonGraphic
// (Final, Native, Protected, BlueprintCallable)

void UOrionSinglePlayerRating::RevertButtonGraphic()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionSinglePlayerRating", "RevertButtonGraphic");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.OrionSinglePlayerRating.UpdateButtonText
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// class FText                             _Text                                                  (Parm, NativeAccessSpecifierPublic)

void UOrionSinglePlayerRating::UpdateButtonText(const class FText& _Text)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionSinglePlayerRating", "UpdateButtonText");

	Params::OrionSinglePlayerRating_UpdateButtonText Parms{};

	Parms._Text = std::move(_Text);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.OrionDefaultButton.RefreshLayout
// (Final, Native, Public, BlueprintCallable)

void UOrionDefaultButton::RefreshLayout()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionDefaultButton", "RefreshLayout");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.OrionDefaultButton.SetHoveredContentColor
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EOrionTextColor                         InHoveredTextColor                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOrionDefaultButton::SetHoveredContentColor(EOrionTextColor InHoveredTextColor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionDefaultButton", "SetHoveredContentColor");

	Params::OrionDefaultButton_SetHoveredContentColor Parms{};

	Parms.InHoveredTextColor = InHoveredTextColor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.OrionDefaultButton.SetNormalContentColor
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EOrionTextColor                         InNormalTextColor                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOrionDefaultButton::SetNormalContentColor(EOrionTextColor InNormalTextColor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionDefaultButton", "SetNormalContentColor");

	Params::OrionDefaultButton_SetNormalContentColor Parms{};

	Parms.InNormalTextColor = InNormalTextColor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.OrionDefaultButton.UpdateIcon
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FSlateBrush                      Brush                                                  (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    bRetainBrushImageSize                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOrionDefaultButton::UpdateIcon(const struct FSlateBrush& Brush, bool bRetainBrushImageSize)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionDefaultButton", "UpdateIcon");

	Params::OrionDefaultButton_UpdateIcon Parms{};

	Parms.Brush = std::move(Brush);
	Parms.bRetainBrushImageSize = bRetainBrushImageSize;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.OrionDefaultButton.UpdateIconFromTexture
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UTexture2D*                       Texture                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOrionDefaultButton::UpdateIconFromTexture(class UTexture2D* Texture)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionDefaultButton", "UpdateIconFromTexture");

	Params::OrionDefaultButton_UpdateIconFromTexture Parms{};

	Parms.Texture = Texture;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.OrionDefaultButton.UpdateSpecificImageSize
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EOrionWidgetStyleSize                   Type                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   InSize                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOrionDefaultButton::UpdateSpecificImageSize(EOrionWidgetStyleSize Type, float InSize)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionDefaultButton", "UpdateSpecificImageSize");

	Params::OrionDefaultButton_UpdateSpecificImageSize Parms{};

	Parms.Type = Type;
	Parms.InSize = InSize;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.OrionDefaultButton.UpdateText
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class FText                             InText                                                 (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UOrionDefaultButton::UpdateText(const class FText& InText)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionDefaultButton", "UpdateText");

	Params::OrionDefaultButton_UpdateText Parms{};

	Parms.InText = std::move(InText);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.OrionMasteryRankDisplay.OnRankSet
// (Event, Public, BlueprintEvent)
// Parameters:
// int32                                   Rank                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ProgressPercent                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EOrionHeroRankTier                      RankTier                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOrionMasteryRankDisplay::OnRankSet(int32 Rank, float ProgressPercent, EOrionHeroRankTier RankTier)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionMasteryRankDisplay", "OnRankSet");

	Params::OrionMasteryRankDisplay_OnRankSet Parms{};

	Parms.Rank = Rank;
	Parms.ProgressPercent = ProgressPercent;
	Parms.RankTier = RankTier;

	UObject::ProcessEvent(Func, &Parms);
}


// Function OrionUI.OrionDigitalFlameWidget.InitInHUD
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UOrionBaseHUDWidget*              InHUDWidget                                            (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOrionDigitalFlameWidget::InitInHUD(class UOrionBaseHUDWidget* InHUDWidget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionDigitalFlameWidget", "InitInHUD");

	Params::OrionDigitalFlameWidget_InitInHUD Parms{};

	Parms.InHUDWidget = InHUDWidget;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.OrionSkinVariationListItem.BP_OnSkinPurchased
// (Event, Protected, BlueprintEvent)

void UOrionSkinVariationListItem::BP_OnSkinPurchased()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionSkinVariationListItem", "BP_OnSkinPurchased");

	UObject::ProcessEvent(Func, nullptr);
}


// Function OrionUI.OrionSkinVariationListItem.OnSkinVariationDefinitionSet
// (Event, Protected, BlueprintEvent)
// Parameters:
// class UOrionSkinVariationItemDefinition*SkinVariation                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOrionSkinVariationListItem::OnSkinVariationDefinitionSet(class UOrionSkinVariationItemDefinition* SkinVariation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionSkinVariationListItem", "OnSkinVariationDefinitionSet");

	Params::OrionSkinVariationListItem_OnSkinVariationDefinitionSet Parms{};

	Parms.SkinVariation = SkinVariation;

	UObject::ProcessEvent(Func, &Parms);
}


// Function OrionUI.OrionSkinVariationListItem.OnVariationUnlocked
// (Event, Protected, BlueprintEvent)

void UOrionSkinVariationListItem::OnVariationUnlocked()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionSkinVariationListItem", "OnVariationUnlocked");

	UObject::ProcessEvent(Func, nullptr);
}


// Function OrionUI.OrionSkinVariationListItem.IsOwned
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UOrionSkinVariationListItem::IsOwned() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionSkinVariationListItem", "IsOwned");

	Params::OrionSkinVariationListItem_IsOwned Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function OrionUI.OrionDraftHeroCustomization.OnSkinChanged
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    bSkinHasVariants                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOrionDraftHeroCustomization::OnSkinChanged(bool bSkinHasVariants)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionDraftHeroCustomization", "OnSkinChanged");

	Params::OrionDraftHeroCustomization_OnSkinChanged Parms{};

	Parms.bSkinHasVariants = bSkinHasVariants;

	UObject::ProcessEvent(Func, &Parms);
}


// Function OrionUI.OrionDraftMinimap.OnHidePosition
// (Event, Protected, BlueprintEvent)

void UOrionDraftMinimap::OnHidePosition()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionDraftMinimap", "OnHidePosition");

	UObject::ProcessEvent(Func, nullptr);
}


// Function OrionUI.OrionDraftMinimap.OnShowPosition
// (Event, Protected, BlueprintEvent)
// Parameters:
// EOrionPosition                          NewPosition                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOrionDraftMinimap::OnShowPosition(EOrionPosition NewPosition)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionDraftMinimap", "OnShowPosition");

	Params::OrionDraftMinimap_OnShowPosition Parms{};

	Parms.NewPosition = NewPosition;

	UObject::ProcessEvent(Func, &Parms);
}


// Function OrionUI.OrionChestReward.BeginFill
// (Final, Native, Public, BlueprintCallable)

void UOrionChestReward::BeginFill()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionChestReward", "BeginFill");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.OrionChestReward.OnReset
// (Event, Protected, BlueprintEvent)

void UOrionChestReward::OnReset()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionChestReward", "OnReset");

	UObject::ProcessEvent(Func, nullptr);
}


// Function OrionUI.OrionChestReward.OnReveal
// (Event, Public, BlueprintEvent)
// Parameters:
// int32                                   Index_0                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOrionChestReward::OnReveal(int32 Index_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionChestReward", "OnReveal");

	Params::OrionChestReward_OnReveal Parms{};

	Parms.Index_0 = Index_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function OrionUI.OrionChestReward.OnRewardAccepted
// (Event, Public, BlueprintEvent)

void UOrionChestReward::OnRewardAccepted()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionChestReward", "OnRewardAccepted");

	UObject::ProcessEvent(Func, nullptr);
}


// Function OrionUI.OrionChestReward.OnRewardSet
// (Event, Protected, BlueprintEvent)
// Parameters:
// EOrionItemRarity                        ItemRarity                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bIsNice                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EOrionItemFlyLocation                   ItemFlyLocation                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EOrionItemType                          ItemType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOrionChestReward::OnRewardSet(EOrionItemRarity ItemRarity, bool bIsNice, EOrionItemFlyLocation ItemFlyLocation, EOrionItemType ItemType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionChestReward", "OnRewardSet");

	Params::OrionChestReward_OnRewardSet Parms{};

	Parms.ItemRarity = ItemRarity;
	Parms.bIsNice = bIsNice;
	Parms.ItemFlyLocation = ItemFlyLocation;
	Parms.ItemType = ItemType;

	UObject::ProcessEvent(Func, &Parms);
}


// Function OrionUI.OrionDraftPositionButton.OnPositionFreeUp
// (Event, Public, BlueprintEvent)

void UOrionDraftPositionButton::OnPositionFreeUp()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionDraftPositionButton", "OnPositionFreeUp");

	UObject::ProcessEvent(Func, nullptr);
}


// Function OrionUI.OrionDraftPositionButton.OnPositionSelectedByTeammates
// (Event, Public, BlueprintEvent)

void UOrionDraftPositionButton::OnPositionSelectedByTeammates()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionDraftPositionButton", "OnPositionSelectedByTeammates");

	UObject::ProcessEvent(Func, nullptr);
}


// Function OrionUI.OrionSprintIndicator.OnSprintEmpty
// (Native, Event, Protected, BlueprintEvent)

void UOrionSprintIndicator::OnSprintEmpty()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionSprintIndicator", "OnSprintEmpty");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.OrionSprintIndicator.OnSprintFull
// (Native, Event, Protected, BlueprintEvent)

void UOrionSprintIndicator::OnSprintFull()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionSprintIndicator", "OnSprintFull");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.OrionSprintIndicator.OnSprintStartFill
// (Native, Event, Protected, BlueprintEvent)
// Parameters:
// float                                   Duration                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOrionSprintIndicator::OnSprintStartFill(float Duration)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionSprintIndicator", "OnSprintStartFill");

	Params::OrionSprintIndicator_OnSprintStartFill Parms{};

	Parms.Duration = Duration;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.OrionDraftTeamMember.OnMemberSet
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bIsLocalPlayer                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOrionDraftTeamMember::OnMemberSet(bool bIsLocalPlayer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionDraftTeamMember", "OnMemberSet");

	Params::OrionDraftTeamMember_OnMemberSet Parms{};

	Parms.bIsLocalPlayer = bIsLocalPlayer;

	UObject::ProcessEvent(Func, &Parms);
}


// Function OrionUI.OrionDraftTeamMember.OnPickStatusChanged
// (Event, Protected, BlueprintEvent)
// Parameters:
// EOrionDraftPickStatus                   PickStatus                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOrionDraftTeamMember::OnPickStatusChanged(EOrionDraftPickStatus PickStatus)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionDraftTeamMember", "OnPickStatusChanged");

	Params::OrionDraftTeamMember_OnPickStatusChanged Parms{};

	Parms.PickStatus = PickStatus;

	UObject::ProcessEvent(Func, &Parms);
}


// Function OrionUI.OrionCarouselRadioButtons.UpdateActivePip
// (Final, Native, Public)
// Parameters:
// int32                                   PipIdx                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bBroadcast                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOrionCarouselRadioButtons::UpdateActivePip(int32 PipIdx, bool bBroadcast)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionCarouselRadioButtons", "UpdateActivePip");

	Params::OrionCarouselRadioButtons_UpdateActivePip Parms{};

	Parms.PipIdx = PipIdx;
	Parms.bBroadcast = bBroadcast;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.OrionDraftTurnPlayerIcon.InitPlayerIcon
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bIsFriendly                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOrionDraftTurnPlayerIcon::InitPlayerIcon(bool bIsFriendly)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionDraftTurnPlayerIcon", "InitPlayerIcon");

	Params::OrionDraftTurnPlayerIcon_InitPlayerIcon Parms{};

	Parms.bIsFriendly = bIsFriendly;

	UObject::ProcessEvent(Func, &Parms);
}


// Function OrionUI.OrionDraftTurnPlayerIcon.OnPlayerPickStatusChanged
// (Event, Protected, BlueprintEvent)
// Parameters:
// EOrionDraftPickStatus                   PickStatus                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOrionDraftTurnPlayerIcon::OnPlayerPickStatusChanged(EOrionDraftPickStatus PickStatus)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionDraftTurnPlayerIcon", "OnPlayerPickStatusChanged");

	Params::OrionDraftTurnPlayerIcon_OnPlayerPickStatusChanged Parms{};

	Parms.PickStatus = PickStatus;

	UObject::ProcessEvent(Func, &Parms);
}


// Function OrionUI.OrionStateWidget_UpdateBase.OnUpdateFailed_Blueprint
// (Event, Protected, BlueprintEvent)

void UOrionStateWidget_UpdateBase::OnUpdateFailed_Blueprint()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionStateWidget_UpdateBase", "OnUpdateFailed_Blueprint");

	UObject::ProcessEvent(Func, nullptr);
}


// Function OrionUI.OrionStateWidget_UpdateBase.OnUpdateFailed_NotLoggedIn_Blueprint
// (Event, Protected, BlueprintEvent)

void UOrionStateWidget_UpdateBase::OnUpdateFailed_NotLoggedIn_Blueprint()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionStateWidget_UpdateBase", "OnUpdateFailed_NotLoggedIn_Blueprint");

	UObject::ProcessEvent(Func, nullptr);
}


// Function OrionUI.OrionStateWidget_UpdateBase.OnUpdateHotfixFileProcessed
// (Event, Protected, BlueprintEvent)
// Parameters:
// class FString                           FriendlyName                                           (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           CachedName                                             (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOrionStateWidget_UpdateBase::OnUpdateHotfixFileProcessed(const class FString& FriendlyName, const class FString& CachedName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionStateWidget_UpdateBase", "OnUpdateHotfixFileProcessed");

	Params::OrionStateWidget_UpdateBase_OnUpdateHotfixFileProcessed Parms{};

	Parms.FriendlyName = std::move(FriendlyName);
	Parms.CachedName = std::move(CachedName);

	UObject::ProcessEvent(Func, &Parms);
}


// Function OrionUI.OrionStateWidget_UpdateBase.OnUpdateHotfixProgress
// (Event, Protected, BlueprintEvent)
// Parameters:
// int32                                   NumDownloaded                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   TotalFiles                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   NumBytes                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   TotalBytes                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOrionStateWidget_UpdateBase::OnUpdateHotfixProgress(int32 NumDownloaded, int32 TotalFiles, int32 NumBytes, int32 TotalBytes)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionStateWidget_UpdateBase", "OnUpdateHotfixProgress");

	Params::OrionStateWidget_UpdateBase_OnUpdateHotfixProgress Parms{};

	Parms.NumDownloaded = NumDownloaded;
	Parms.TotalFiles = TotalFiles;
	Parms.NumBytes = NumBytes;
	Parms.TotalBytes = TotalBytes;

	UObject::ProcessEvent(Func, &Parms);
}


// Function OrionUI.OrionStateWidget_UpdateBase.OnUpdateStateChange
// (Event, Protected, BlueprintEvent)
// Parameters:
// EUpdateState                            NewState                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOrionStateWidget_UpdateBase::OnUpdateStateChange(EUpdateState NewState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionStateWidget_UpdateBase", "OnUpdateStateChange");

	Params::OrionStateWidget_UpdateBase_OnUpdateStateChange Parms{};

	Parms.NewState = NewState;

	UObject::ProcessEvent(Func, &Parms);
}


// Function OrionUI.OrionStateWidget_UpdateBase.OnUpdateSuccess_Blueprint
// (Event, Protected, BlueprintEvent)

void UOrionStateWidget_UpdateBase::OnUpdateSuccess_Blueprint()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionStateWidget_UpdateBase", "OnUpdateSuccess_Blueprint");

	UObject::ProcessEvent(Func, nullptr);
}


// Function OrionUI.OrionStateWidget_UpdateBase.OnUpdateSuccess_NeedsPatch_Blueprint
// (Event, Protected, BlueprintEvent)

void UOrionStateWidget_UpdateBase::OnUpdateSuccess_NeedsPatch_Blueprint()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionStateWidget_UpdateBase", "OnUpdateSuccess_NeedsPatch_Blueprint");

	UObject::ProcessEvent(Func, nullptr);
}


// Function OrionUI.OrionStateWidget_UpdateBase.OnUpdateSuccess_NeedsRelaunch_Blueprint
// (Event, Protected, BlueprintEvent)

void UOrionStateWidget_UpdateBase::OnUpdateSuccess_NeedsRelaunch_Blueprint()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionStateWidget_UpdateBase", "OnUpdateSuccess_NeedsRelaunch_Blueprint");

	UObject::ProcessEvent(Func, nullptr);
}


// Function OrionUI.OrionStateWidget_UpdateBase.OnUpdateSuccess_NeedsReload_Blueprint
// (Event, Protected, BlueprintEvent)

void UOrionStateWidget_UpdateBase::OnUpdateSuccess_NeedsReload_Blueprint()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionStateWidget_UpdateBase", "OnUpdateSuccess_NeedsReload_Blueprint");

	UObject::ProcessEvent(Func, nullptr);
}


// Function OrionUI.OrionStateWidget_UpdateBase.OnUpdateSuccess_NoChange_Blueprint
// (Event, Protected, BlueprintEvent)

void UOrionStateWidget_UpdateBase::OnUpdateSuccess_NoChange_Blueprint()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionStateWidget_UpdateBase", "OnUpdateSuccess_NoChange_Blueprint");

	UObject::ProcessEvent(Func, nullptr);
}


// Function OrionUI.OrionStateWidget_UpdateBase.ShowLoginPlatformUI
// (Final, Native, Protected, BlueprintCallable)

void UOrionStateWidget_UpdateBase::ShowLoginPlatformUI()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionStateWidget_UpdateBase", "ShowLoginPlatformUI");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.OrionStateWidget_UpdateBase.GetLoadProgress
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UOrionStateWidget_UpdateBase::GetLoadProgress() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionStateWidget_UpdateBase", "GetLoadProgress");

	Params::OrionStateWidget_UpdateBase_GetLoadProgress Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function OrionUI.OrionStateWidget_UpdateBase.GetUpdateState
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EUpdateState                            ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EUpdateState UOrionStateWidget_UpdateBase::GetUpdateState() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionStateWidget_UpdateBase", "GetUpdateState");

	Params::OrionStateWidget_UpdateBase_GetUpdateState Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function OrionUI.OrionStateWidget_UpdateBase.IsBlockingForInitialLoadEnabled
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UOrionStateWidget_UpdateBase::IsBlockingForInitialLoadEnabled() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionStateWidget_UpdateBase", "IsBlockingForInitialLoadEnabled");

	Params::OrionStateWidget_UpdateBase_IsBlockingForInitialLoadEnabled Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function OrionUI.OrionStateWidget_UpdateBase.IsUpdatingEnabled
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UOrionStateWidget_UpdateBase::IsUpdatingEnabled() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionStateWidget_UpdateBase", "IsUpdatingEnabled");

	Params::OrionStateWidget_UpdateBase_IsUpdatingEnabled Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function OrionUI.OrionDraftTimer.OnDraftComplete
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    bSuccess                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOrionDraftTimer::OnDraftComplete(bool bSuccess)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionDraftTimer", "OnDraftComplete");

	Params::OrionDraftTimer_OnDraftComplete Parms{};

	Parms.bSuccess = bSuccess;

	UObject::ProcessEvent(Func, &Parms);
}


// Function OrionUI.OrionDraftTimer.OnDraftStarted
// (Event, Public, BlueprintEvent)
// Parameters:
// EOrionTeamMemberType                    FirstPickerType                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOrionDraftTimer::OnDraftStarted(EOrionTeamMemberType FirstPickerType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionDraftTimer", "OnDraftStarted");

	Params::OrionDraftTimer_OnDraftStarted Parms{};

	Parms.FirstPickerType = FirstPickerType;

	UObject::ProcessEvent(Func, &Parms);
}


// Function OrionUI.OrionDraftTimer.OnTimerUpdated
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    bIsPlayerTurn                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   TimeLeftRatio                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOrionDraftTimer::OnTimerUpdated(bool bIsPlayerTurn, float TimeLeftRatio)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionDraftTimer", "OnTimerUpdated");

	Params::OrionDraftTimer_OnTimerUpdated Parms{};

	Parms.bIsPlayerTurn = bIsPlayerTurn;
	Parms.TimeLeftRatio = TimeLeftRatio;

	UObject::ProcessEvent(Func, &Parms);
}


// Function OrionUI.OrionDraftTimer.OnTurnComplete
// (Event, Public, BlueprintEvent)
// Parameters:
// EOrionTeamMemberType                    FinishedMemberType                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOrionDraftTimer::OnTurnComplete(EOrionTeamMemberType FinishedMemberType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionDraftTimer", "OnTurnComplete");

	Params::OrionDraftTimer_OnTurnComplete Parms{};

	Parms.FinishedMemberType = FinishedMemberType;

	UObject::ProcessEvent(Func, &Parms);
}


// Function OrionUI.OrionDraftTimer.OnTurnStarted
// (Event, Public, BlueprintEvent)
// Parameters:
// EOrionTeamMemberType                    PickingMemberType                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOrionDraftTimer::OnTurnStarted(EOrionTeamMemberType PickingMemberType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionDraftTimer", "OnTurnStarted");

	Params::OrionDraftTimer_OnTurnStarted Parms{};

	Parms.PickingMemberType = PickingMemberType;

	UObject::ProcessEvent(Func, &Parms);
}


// Function OrionUI.OrionPlayerStatusWidget.InitInHUD
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UOrionBaseHUDWidget*              InHUDWidget                                            (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOrionPlayerStatusWidget::InitInHUD(class UOrionBaseHUDWidget* InHUDWidget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionPlayerStatusWidget", "InitInHUD");

	Params::OrionPlayerStatusWidget_InitInHUD Parms{};

	Parms.InHUDWidget = InHUDWidget;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.OrionPlayerStatusWidget.OnShowNumbersSettingChanged
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    bWantsNumbers                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOrionPlayerStatusWidget::OnShowNumbersSettingChanged(bool bWantsNumbers)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionPlayerStatusWidget", "OnShowNumbersSettingChanged");

	Params::OrionPlayerStatusWidget_OnShowNumbersSettingChanged Parms{};

	Parms.bWantsNumbers = bWantsNumbers;

	UObject::ProcessEvent(Func, &Parms);
}


// Function OrionUI.OrionDynamicEntryBox.BP_CreateEntry
// (Final, Native, Private, BlueprintCallable)
// Parameters:
// class UUserWidget*                      ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UUserWidget* UOrionDynamicEntryBox::BP_CreateEntry()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionDynamicEntryBox", "BP_CreateEntry");

	Params::OrionDynamicEntryBox_BP_CreateEntry Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function OrionUI.OrionDynamicEntryBox.RemoveEntry
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UUserWidget*                      EntryWidget                                            (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOrionDynamicEntryBox::RemoveEntry(class UUserWidget* EntryWidget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionDynamicEntryBox", "RemoveEntry");

	Params::OrionDynamicEntryBox_RemoveEntry Parms{};

	Parms.EntryWidget = EntryWidget;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.OrionDynamicEntryBox.Reset
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bDeleteWidgets                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOrionDynamicEntryBox::Reset(bool bDeleteWidgets)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionDynamicEntryBox", "Reset");

	Params::OrionDynamicEntryBox_Reset Parms{};

	Parms.bDeleteWidgets = bDeleteWidgets;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.OrionDynamicEntryBox.SetEntrySpacing
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector2D                        InEntrySpacing                                         (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOrionDynamicEntryBox::SetEntrySpacing(const struct FVector2D& InEntrySpacing)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionDynamicEntryBox", "SetEntrySpacing");

	Params::OrionDynamicEntryBox_SetEntrySpacing Parms{};

	Parms.InEntrySpacing = std::move(InEntrySpacing);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.OrionDynamicEntryBox.GetAllEntries
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const TArray<class UUserWidget*>        ReturnValue                                            (ConstParm, ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm, ContainsInstancedReference, NativeAccessSpecifierPublic)

const TArray<class UUserWidget*> UOrionDynamicEntryBox::GetAllEntries() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionDynamicEntryBox", "GetAllEntries");

	Params::OrionDynamicEntryBox_GetAllEntries Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function OrionUI.OrionDynamicEntryBox.GetNumEntries
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UOrionDynamicEntryBox::GetNumEntries() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionDynamicEntryBox", "GetNumEntries");

	Params::OrionDynamicEntryBox_GetNumEntries Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function OrionUI.OrionEditableTextPopup.CommitText
// (Final, Native, Protected, HasOutParams, BlueprintCallable)
// Parameters:
// class FText                             TextToCommit                                           (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UOrionEditableTextPopup::CommitText(const class FText& TextToCommit)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionEditableTextPopup", "CommitText");

	Params::OrionEditableTextPopup_CommitText Parms{};

	Parms.TextToCommit = std::move(TextToCommit);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.OrionEditableTextPopup.HidePopup
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bCommitText                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOrionEditableTextPopup::HidePopup(bool bCommitText)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionEditableTextPopup", "HidePopup");

	Params::OrionEditableTextPopup_HidePopup Parms{};

	Parms.bCommitText = bCommitText;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.OrionEditableTextPopup.OnTextCommitted
// (Final, Native, Protected, HasOutParams)
// Parameters:
// class FText                             Text                                                   (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// ETextCommit                             CommitMethod                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOrionEditableTextPopup::OnTextCommitted(const class FText& Text, ETextCommit CommitMethod)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionEditableTextPopup", "OnTextCommitted");

	Params::OrionEditableTextPopup_OnTextCommitted Parms{};

	Parms.Text = std::move(Text);
	Parms.CommitMethod = CommitMethod;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.OrionEditableTextPopup.ShowPopup
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)

void UOrionEditableTextPopup::ShowPopup()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionEditableTextPopup", "ShowPopup");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.OrionEULAText.SetText
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FText                             InText                                                 (Parm, NativeAccessSpecifierPublic)

void UOrionEULAText::SetText(const class FText& InText)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionEULAText", "SetText");

	Params::OrionEULAText_SetText Parms{};

	Parms.InText = std::move(InText);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.OrionNotificationList.PopNotification
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UUserWidget*                      UserWidget                                             (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOrionNotificationList::PopNotification(class UUserWidget* UserWidget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionNotificationList", "PopNotification");

	Params::OrionNotificationList_PopNotification Parms{};

	Parms.UserWidget = UserWidget;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.OrionNotificationList.PushNotification
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UUserWidget*                      UserWidget                                             (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOrionNotificationList::PushNotification(class UUserWidget* UserWidget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionNotificationList", "PushNotification");

	Params::OrionNotificationList_PushNotification Parms{};

	Parms.UserWidget = UserWidget;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.OrionNotificationList.FindUserWidget
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FOrionNotification               Notification                                           (Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// class UUserWidget*                      ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UUserWidget* UOrionNotificationList::FindUserWidget(struct FOrionNotification& Notification) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionNotificationList", "FindUserWidget");

	Params::OrionNotificationList_FindUserWidget Parms{};

	Parms.Notification = std::move(Notification);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	Notification = std::move(Parms.Notification);

	return Parms.ReturnValue;
}


// Function OrionUI.OrionNotificationList.NumNotifications
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UOrionNotificationList::NumNotifications() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionNotificationList", "NumNotifications");

	Params::OrionNotificationList_NumNotifications Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function OrionUI.OrionFeaturedHeroWidget.OnActionStateSet
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bShow                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOrionFeaturedHeroWidget::OnActionStateSet(bool bShow)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionFeaturedHeroWidget", "OnActionStateSet");

	Params::OrionFeaturedHeroWidget_OnActionStateSet Parms{};

	Parms.bShow = bShow;

	UObject::ProcessEvent(Func, &Parms);
}


// Function OrionUI.OrionFeaturedHeroWidget.OnFeaturedHeroSet
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bShowSubtitle                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOrionFeaturedHeroWidget::OnFeaturedHeroSet(bool bShowSubtitle)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionFeaturedHeroWidget", "OnFeaturedHeroSet");

	Params::OrionFeaturedHeroWidget_OnFeaturedHeroSet Parms{};

	Parms.bShowSubtitle = bShowSubtitle;

	UObject::ProcessEvent(Func, &Parms);
}


// Function OrionUI.OrionFeaturedHeroWidget.UpdateActionButtonState
// (Final, Native, Protected)

void UOrionFeaturedHeroWidget::UpdateActionButtonState()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionFeaturedHeroWidget", "UpdateActionButtonState");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.OrionFilterToggleButton.HandleAnchorOpening
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// class UOrionFilterSelectorMenu*         ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UOrionFilterSelectorMenu* UOrionFilterToggleButton::HandleAnchorOpening()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionFilterToggleButton", "HandleAnchorOpening");

	Params::OrionFilterToggleButton_HandleAnchorOpening Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function OrionUI.OrionFilterToggleButton.OnFilterSelectorButtonClicked
// (Final, Native, Protected)
// Parameters:
// uint8                                   ActiveToggleIndex                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOrionFilterToggleButton::OnFilterSelectorButtonClicked(uint8 ActiveToggleIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionFilterToggleButton", "OnFilterSelectorButtonClicked");

	Params::OrionFilterToggleButton_OnFilterSelectorButtonClicked Parms{};

	Parms.ActiveToggleIndex = ActiveToggleIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.OrionFilterToggleButton.OnFilterSelectorReady
// (Final, Native, Protected)
// Parameters:
// class UOrionFilterSelectorMenu*         FilterSelectorMenuWidget                               (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOrionFilterToggleButton::OnFilterSelectorReady(class UOrionFilterSelectorMenu* FilterSelectorMenuWidget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionFilterToggleButton", "OnFilterSelectorReady");

	Params::OrionFilterToggleButton_OnFilterSelectorReady Parms{};

	Parms.FilterSelectorMenuWidget = FilterSelectorMenuWidget;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.OrionFilterToggleButton.OnGamePadChanged
// (Final, Native, Protected)
// Parameters:
// bool                                    bUsingGamePad                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOrionFilterToggleButton::OnGamePadChanged(bool bUsingGamePad)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionFilterToggleButton", "OnGamePadChanged");

	Params::OrionFilterToggleButton_OnGamePadChanged Parms{};

	Parms.bUsingGamePad = bUsingGamePad;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// DelegateFunction OrionUI.OrionFilterToggleButton.OnToggleStateChange__DelegateSignature
// (MulticastDelegate, Public, Delegate)

void UOrionFilterToggleButton::OnToggleStateChange__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionFilterToggleButton", "OnToggleStateChange__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function OrionUI.OrionFilterToggleButton.IsDropDownMode
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UOrionFilterToggleButton::IsDropDownMode() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionFilterToggleButton", "IsDropDownMode");

	Params::OrionFilterToggleButton_IsDropDownMode Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function OrionUI.OrionFlairPopup.AnimateIn
// (Event, Protected, BlueprintEvent)

void UOrionFlairPopup::AnimateIn()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionFlairPopup", "AnimateIn");

	UObject::ProcessEvent(Func, nullptr);
}


// Function OrionUI.OrionFlairPopup.AnimateOut
// (Event, Protected, BlueprintEvent)

void UOrionFlairPopup::AnimateOut()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionFlairPopup", "AnimateOut");

	UObject::ProcessEvent(Func, nullptr);
}


// Function OrionUI.OrionFlairPopup.HandleAcceptClicked
// (Final, Native, Private, BlueprintCallable)

void UOrionFlairPopup::HandleAcceptClicked()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionFlairPopup", "HandleAcceptClicked");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.OrionFlairPopup.ShowNextFlair
// (Final, Native, Public, BlueprintCallable)

void UOrionFlairPopup::ShowNextFlair()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionFlairPopup", "ShowNextFlair");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.OrionQuestAlert.AlertFinished
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)

void UOrionQuestAlert::AlertFinished()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionQuestAlert", "AlertFinished");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.OrionQuestAlert.ShowAlert
// (Native, Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// struct FOrionQuestAlertInfo             NewQuestAlert                                          (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UOrionQuestAlert::ShowAlert(const struct FOrionQuestAlertInfo& NewQuestAlert)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionQuestAlert", "ShowAlert");

	Params::OrionQuestAlert_ShowAlert Parms{};

	Parms.NewQuestAlert = std::move(NewQuestAlert);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.OrionFPSAndPing.SetPlayerController
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class APlayerController*                InController                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOrionFPSAndPing::SetPlayerController(class APlayerController* InController)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionFPSAndPing", "SetPlayerController");

	Params::OrionFPSAndPing_SetPlayerController Parms{};

	Parms.InController = InController;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.OrionFPSAndPing.UpdateForCurrentSettings
// (Final, Native, Public, BlueprintCallable)

void UOrionFPSAndPing::UpdateForCurrentSettings()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionFPSAndPing", "UpdateForCurrentSettings");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.OrionFrontEndCard.BeginFill
// (Final, Native, Public, BlueprintCallable)

void UOrionFrontEndCard::BeginFill()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionFrontEndCard", "BeginFill");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.OrionFrontEndCard.IsOwned
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UOrionFrontEndCard::IsOwned()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionFrontEndCard", "IsOwned");

	Params::OrionFrontEndCard_IsOwned Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function OrionUI.OrionFrontEndCard.OnProgressFillComplete
// (Event, Public, BlueprintEvent)

void UOrionFrontEndCard::OnProgressFillComplete()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionFrontEndCard", "OnProgressFillComplete");

	UObject::ProcessEvent(Func, nullptr);
}


// Function OrionUI.OrionFrontEndCard.SetCustomScale
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   InScale                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOrionFrontEndCard::SetCustomScale(float InScale)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionFrontEndCard", "SetCustomScale");

	Params::OrionFrontEndCard_SetCustomScale Parms{};

	Parms.InScale = InScale;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.OrionFrontEndCard.SetShowProgressBar
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    InShowProgessBar                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOrionFrontEndCard::SetShowProgressBar(bool InShowProgessBar)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionFrontEndCard", "SetShowProgressBar");

	Params::OrionFrontEndCard_SetShowProgressBar Parms{};

	Parms.InShowProgessBar = InShowProgessBar;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.OrionFrontEndCard.GetCardRarity
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EOrionItemRarity                        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EOrionItemRarity UOrionFrontEndCard::GetCardRarity() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionFrontEndCard", "GetCardRarity");

	Params::OrionFrontEndCard_GetCardRarity Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function OrionUI.OrionGamepadButtonLabel.GetSelectedKey
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FKey                             ReturnValue                                            (Parm, OutParm, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FKey UOrionGamepadButtonLabel::GetSelectedKey()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionGamepadButtonLabel", "GetSelectedKey");

	Params::OrionGamepadButtonLabel_GetSelectedKey Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function OrionUI.OrionGamepadButtonLabel.Refresh
// (Final, Native, Public, BlueprintCallable)

void UOrionGamepadButtonLabel::Refresh()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionGamepadButtonLabel", "Refresh");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.OrionGamepadButtonLabel.SetSelectedKey
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FKey                             NewValue                                               (Parm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOrionGamepadButtonLabel::SetSelectedKey(const struct FKey& NewValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionGamepadButtonLabel", "SetSelectedKey");

	Params::OrionGamepadButtonLabel_SetSelectedKey Parms{};

	Parms.NewValue = std::move(NewValue);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.OrionGamepadLayoutWidget.BP_OnGamepadTypeChange
// (Event, Protected, BlueprintEvent)
// Parameters:
// EOrionGamepadType                       NewType                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOrionGamepadLayoutWidget::BP_OnGamepadTypeChange(EOrionGamepadType NewType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionGamepadLayoutWidget", "BP_OnGamepadTypeChange");

	Params::OrionGamepadLayoutWidget_BP_OnGamepadTypeChange Parms{};

	Parms.NewType = NewType;

	UObject::ProcessEvent(Func, &Parms);
}


// Function OrionUI.OrionGamepadLayoutWidget.OnConfigChange
// (Native, Event, Protected, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Index_0                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOrionGamepadLayoutWidget::OnConfigChange(int32 Index_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionGamepadLayoutWidget", "OnConfigChange");

	Params::OrionGamepadLayoutWidget_OnConfigChange Parms{};

	Parms.Index_0 = Index_0;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.OrionGamepadLayoutWidget.RefreshLabels
// (Final, Native, Protected, BlueprintCallable)

void UOrionGamepadLayoutWidget::RefreshLabels()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionGamepadLayoutWidget", "RefreshLabels");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.OrionQuickShopPanel.CloseMenu
// (Native, Event, Protected, BlueprintCallable, BlueprintEvent)

void UOrionQuickShopPanel::CloseMenu()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionQuickShopPanel", "CloseMenu");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.OrionQuickShopPanel.OnClosedFinished
// (Native, Event, Protected, BlueprintCallable, BlueprintEvent)

void UOrionQuickShopPanel::OnClosedFinished()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionQuickShopPanel", "OnClosedFinished");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.OrionQuickShopPanel.OpenMenu
// (Native, Event, Protected, BlueprintCallable, BlueprintEvent)

void UOrionQuickShopPanel::OpenMenu()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionQuickShopPanel", "OpenMenu");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.OrionGameProgressBar.SetBarFillType
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// EProgressBarFillType                    InType                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOrionGameProgressBar::SetBarFillType(EProgressBarFillType InType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionGameProgressBar", "SetBarFillType");

	Params::OrionGameProgressBar_SetBarFillType Parms{};

	Parms.InType = InType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.OrionPostGameTab_Summary.HandleMasteryUnlockClicked
// (Final, Native, Protected)

void UOrionPostGameTab_Summary::HandleMasteryUnlockClicked()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionPostGameTab_Summary", "HandleMasteryUnlockClicked");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.OrionPostGameTab_Summary.HandleUnlockWidgetClose
// (Final, Native, Protected)

void UOrionPostGameTab_Summary::HandleUnlockWidgetClose()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionPostGameTab_Summary", "HandleUnlockWidgetClose");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.OrionPostGameTab_Summary.OnMasteryProgressLocked
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bProgressLocked                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOrionPostGameTab_Summary::OnMasteryProgressLocked(bool bProgressLocked)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionPostGameTab_Summary", "OnMasteryProgressLocked");

	Params::OrionPostGameTab_Summary_OnMasteryProgressLocked Parms{};

	Parms.bProgressLocked = bProgressLocked;

	UObject::ProcessEvent(Func, &Parms);
}


// Function OrionUI.OrionPostGameTab_Summary.OnMasteryUnlocked
// (Final, Native, Protected)

void UOrionPostGameTab_Summary::OnMasteryUnlocked()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionPostGameTab_Summary", "OnMasteryUnlocked");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.OrionGameTypeWidget.HideOptions
// (Final, Native, Public)

void UOrionGameTypeWidget::HideOptions()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionGameTypeWidget", "HideOptions");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.OrionGameTypeWidget.OnActivePlaylistChanged
// (Event, Public, BlueprintEvent)
// Parameters:
// int32                                   Playlist                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOrionGameTypeWidget::OnActivePlaylistChanged(int32 Playlist)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionGameTypeWidget", "OnActivePlaylistChanged");

	Params::OrionGameTypeWidget_OnActivePlaylistChanged Parms{};

	Parms.Playlist = Playlist;

	UObject::ProcessEvent(Func, &Parms);
}


// Function OrionUI.OrionGameTypeWidget.OnDifficultyChanged
// (Event, Public, BlueprintEvent)
// Parameters:
// EAIBotDifficulty                        InType                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOrionGameTypeWidget::OnDifficultyChanged(EAIBotDifficulty InType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionGameTypeWidget", "OnDifficultyChanged");

	Params::OrionGameTypeWidget_OnDifficultyChanged Parms{};

	Parms.InType = InType;

	UObject::ProcessEvent(Func, &Parms);
}


// Function OrionUI.OrionGameTypeWidget.OnDisableOptions
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    bDisable                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOrionGameTypeWidget::OnDisableOptions(bool bDisable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionGameTypeWidget", "OnDisableOptions");

	Params::OrionGameTypeWidget_OnDisableOptions Parms{};

	Parms.bDisable = bDisable;

	UObject::ProcessEvent(Func, &Parms);
}


// Function OrionUI.OrionGameTypeWidget.OnHideOptions
// (Event, Public, BlueprintEvent)

void UOrionGameTypeWidget::OnHideOptions()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionGameTypeWidget", "OnHideOptions");

	UObject::ProcessEvent(Func, nullptr);
}


// Function OrionUI.OrionGameTypeWidget.OnShowOptions
// (Event, Public, BlueprintEvent)

void UOrionGameTypeWidget::OnShowOptions()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionGameTypeWidget", "OnShowOptions");

	UObject::ProcessEvent(Func, nullptr);
}


// Function OrionUI.OrionGameTypeWidget.SetDesiredPlaylist
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   Playlist                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOrionGameTypeWidget::SetDesiredPlaylist(int32 Playlist)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionGameTypeWidget", "SetDesiredPlaylist");

	Params::OrionGameTypeWidget_SetDesiredPlaylist Parms{};

	Parms.Playlist = Playlist;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.OrionGameTypeWidget.SetDifficultySelectorEntriesText
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<class UOrionDefaultButton*>      DifficultyButtons                                      (Parm, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
// class FText                             CurrentDifficultyText                                  (Parm, NativeAccessSpecifierPublic)

void UOrionGameTypeWidget::SetDifficultySelectorEntriesText(const TArray<class UOrionDefaultButton*>& DifficultyButtons, const class FText& CurrentDifficultyText)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionGameTypeWidget", "SetDifficultySelectorEntriesText");

	Params::OrionGameTypeWidget_SetDifficultySelectorEntriesText Parms{};

	Parms.DifficultyButtons = std::move(DifficultyButtons);
	Parms.CurrentDifficultyText = std::move(CurrentDifficultyText);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.OrionGameTypeWidget.SetSelectedDifficulty
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EAIBotDifficulty                        InType                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOrionGameTypeWidget::SetSelectedDifficulty(EAIBotDifficulty InType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionGameTypeWidget", "SetSelectedDifficulty");

	Params::OrionGameTypeWidget_SetSelectedDifficulty Parms{};

	Parms.InType = InType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.OrionGameTypeWidget.ShowOptions
// (Final, Native, Public)

void UOrionGameTypeWidget::ShowOptions()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionGameTypeWidget", "ShowOptions");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.OrionGameTypeWidget.FindEnumFromDifficultySelectorText
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FText                             InText                                                 (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// EAIBotDifficulty                        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EAIBotDifficulty UOrionGameTypeWidget::FindEnumFromDifficultySelectorText(const class FText& InText) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionGameTypeWidget", "FindEnumFromDifficultySelectorText");

	Params::OrionGameTypeWidget_FindEnumFromDifficultySelectorText Parms{};

	Parms.InText = std::move(InText);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function OrionUI.OrionGameTypeWidget.GetDifficultyDisplayEntry
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EAIBotDifficulty                        InDifficulty                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FAIBotDifficultyDisplayEntryReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)

const struct FAIBotDifficultyDisplayEntry UOrionGameTypeWidget::GetDifficultyDisplayEntry(EAIBotDifficulty InDifficulty) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionGameTypeWidget", "GetDifficultyDisplayEntry");

	Params::OrionGameTypeWidget_GetDifficultyDisplayEntry Parms{};

	Parms.InDifficulty = InDifficulty;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function OrionUI.OrionGameTypeWidget.ShouldEnableDifficultySelector
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UOrionGameTypeWidget::ShouldEnableDifficultySelector() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionGameTypeWidget", "ShouldEnableDifficultySelector");

	Params::OrionGameTypeWidget_ShouldEnableDifficultySelector Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function OrionUI.OrionGameTypeWidget.ShouldShowDifficultySelector
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UOrionGameTypeWidget::ShouldShowDifficultySelector() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionGameTypeWidget", "ShouldShowDifficultySelector");

	Params::OrionGameTypeWidget_ShouldShowDifficultySelector Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function OrionUI.OrionGemCollectionScreen.DynamicGemClicked
// (Final, Native, Protected)
// Parameters:
// class UObject*                          Obj                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOrionGemCollectionScreen::DynamicGemClicked(class UObject* Obj)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionGemCollectionScreen", "DynamicGemClicked");

	Params::OrionGemCollectionScreen_DynamicGemClicked Parms{};

	Parms.Obj = Obj;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.OrionGemFilterHeader.DynamicSearchTextChanged
// (Final, Native, Protected, HasOutParams)
// Parameters:
// class FText                             NewText                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UOrionGemFilterHeader::DynamicSearchTextChanged(const class FText& NewText)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionGemFilterHeader", "DynamicSearchTextChanged");

	Params::OrionGemFilterHeader_DynamicSearchTextChanged Parms{};

	Parms.NewText = std::move(NewText);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.OrionGemFilterHeader.DynamicSearchTextCommitted
// (Final, Native, Protected, HasOutParams)
// Parameters:
// class FText                             NewText                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// ETextCommit                             CommitMethod                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOrionGemFilterHeader::DynamicSearchTextCommitted(const class FText& NewText, ETextCommit CommitMethod)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionGemFilterHeader", "DynamicSearchTextCommitted");

	Params::OrionGemFilterHeader_DynamicSearchTextCommitted Parms{};

	Parms.NewText = std::move(NewText);
	Parms.CommitMethod = CommitMethod;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.OrionGemFilterHeader.HandleToggleButtonSort
// (Final, Native, Protected)

void UOrionGemFilterHeader::HandleToggleButtonSort()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionGemFilterHeader", "HandleToggleButtonSort");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.OrionGemFilterHeader.OnFilterFiveSelected
// (Final, Native, Protected)
// Parameters:
// bool                                    bSelected                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOrionGemFilterHeader::OnFilterFiveSelected(bool bSelected)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionGemFilterHeader", "OnFilterFiveSelected");

	Params::OrionGemFilterHeader_OnFilterFiveSelected Parms{};

	Parms.bSelected = bSelected;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.OrionGemFilterHeader.OnFilterFourSelected
// (Final, Native, Protected)
// Parameters:
// bool                                    bSelected                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOrionGemFilterHeader::OnFilterFourSelected(bool bSelected)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionGemFilterHeader", "OnFilterFourSelected");

	Params::OrionGemFilterHeader_OnFilterFourSelected Parms{};

	Parms.bSelected = bSelected;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.OrionGemFilterHeader.OnFilterOneSelected
// (Final, Native, Protected)
// Parameters:
// bool                                    bSelected                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOrionGemFilterHeader::OnFilterOneSelected(bool bSelected)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionGemFilterHeader", "OnFilterOneSelected");

	Params::OrionGemFilterHeader_OnFilterOneSelected Parms{};

	Parms.bSelected = bSelected;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.OrionGemFilterHeader.OnFilterThreeSelected
// (Final, Native, Protected)
// Parameters:
// bool                                    bSelected                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOrionGemFilterHeader::OnFilterThreeSelected(bool bSelected)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionGemFilterHeader", "OnFilterThreeSelected");

	Params::OrionGemFilterHeader_OnFilterThreeSelected Parms{};

	Parms.bSelected = bSelected;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.OrionGemFilterHeader.OnFilterTwoSelected
// (Final, Native, Protected)
// Parameters:
// bool                                    bSelected                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOrionGemFilterHeader::OnFilterTwoSelected(bool bSelected)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionGemFilterHeader", "OnFilterTwoSelected");

	Params::OrionGemFilterHeader_OnFilterTwoSelected Parms{};

	Parms.bSelected = bSelected;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.OrionGemListItem.OnGemSelected
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    bIsSelected                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOrionGemListItem::OnGemSelected(bool bIsSelected)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionGemListItem", "OnGemSelected");

	Params::OrionGemListItem_OnGemSelected Parms{};

	Parms.bIsSelected = bIsSelected;

	UObject::ProcessEvent(Func, &Parms);
}


// Function OrionUI.OrionGemListItem.OnGemSet
// (Event, Protected, BlueprintEvent)
// Parameters:
// class UOrionMcpGemItem*                 Gem                                                    (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOrionGemListItem::OnGemSet(const class UOrionMcpGemItem* Gem)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionGemListItem", "OnGemSet");

	Params::OrionGemListItem_OnGemSet Parms{};

	Parms.Gem = Gem;

	UObject::ProcessEvent(Func, &Parms);
}


// Function OrionUI.OrionGemSelectionDisplay.DynamicHandleAffinityClicked
// (Final, Native, Private)
// Parameters:
// class UOrionBaseButton*                 SelectedButton                                         (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ButtonIndex                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOrionGemSelectionDisplay::DynamicHandleAffinityClicked(class UOrionBaseButton* SelectedButton, int32 ButtonIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionGemSelectionDisplay", "DynamicHandleAffinityClicked");

	Params::OrionGemSelectionDisplay_DynamicHandleAffinityClicked Parms{};

	Parms.SelectedButton = SelectedButton;
	Parms.ButtonIndex = ButtonIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.OrionGemSelectionDisplay.OnGemEquipped
// (Event, Protected, BlueprintEvent)

void UOrionGemSelectionDisplay::OnGemEquipped()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionGemSelectionDisplay", "OnGemEquipped");

	UObject::ProcessEvent(Func, nullptr);
}


// Function OrionUI.OrionGemSelectionDisplay.OnGemPicked
// (Final, Native, Protected)
// Parameters:
// class UOrionMcpGemItem*                 GemPicked                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOrionGemSelectionDisplay::OnGemPicked(class UOrionMcpGemItem* GemPicked)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionGemSelectionDisplay", "OnGemPicked");

	Params::OrionGemSelectionDisplay_OnGemPicked Parms{};

	Parms.GemPicked = GemPicked;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.OrionGemSelectionDisplay.OnGemUnequipped
// (Event, Protected, BlueprintEvent)

void UOrionGemSelectionDisplay::OnGemUnequipped()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionGemSelectionDisplay", "OnGemUnequipped");

	UObject::ProcessEvent(Func, nullptr);
}


// Function OrionUI.OrionGemSelector.OnGemChosen
// (Final, Native, Public)
// Parameters:
// class UObject*                          Item                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOrionGemSelector::OnGemChosen(class UObject* Item)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionGemSelector", "OnGemChosen");

	Params::OrionGemSelector_OnGemChosen Parms{};

	Parms.Item = Item;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.OrionQuestWidget.CompleteQuest
// (Native, Event, Public, BlueprintEvent)

void UOrionQuestWidget::CompleteQuest()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionQuestWidget", "CompleteQuest");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.OrionQuestWidget.HideQuestWidget
// (Native, Event, Public, BlueprintEvent)

void UOrionQuestWidget::HideQuestWidget()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionQuestWidget", "HideQuestWidget");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.OrionQuestWidget.OnProgressBarUpdated
// (Native, Event, Protected, BlueprintEvent)

void UOrionQuestWidget::OnProgressBarUpdated()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionQuestWidget", "OnProgressBarUpdated");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.OrionQuestWidget.ShowQuestWidget
// (Native, Event, Public, BlueprintEvent)

void UOrionQuestWidget::ShowQuestWidget()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionQuestWidget", "ShowQuestWidget");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.OrionGemSummaryWidget.OnDataSet
// (Event, Protected, BlueprintEvent)
// Parameters:
// EOrionItemRarity                        GemRarity                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOrionGemSummaryWidget::OnDataSet(EOrionItemRarity GemRarity)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionGemSummaryWidget", "OnDataSet");

	Params::OrionGemSummaryWidget_OnDataSet Parms{};

	Parms.GemRarity = GemRarity;

	UObject::ProcessEvent(Func, &Parms);
}


// Function OrionUI.OrionMatchScoreboard.OnShowAfterMatchEnd
// (Event, Protected, BlueprintEvent)

void UOrionMatchScoreboard::OnShowAfterMatchEnd()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionMatchScoreboard", "OnShowAfterMatchEnd");

	UObject::ProcessEvent(Func, nullptr);
}


// Function OrionUI.OrionGenericMarkingMenuNodeWidget.HideNode
// (Event, Public, BlueprintEvent)

void UOrionGenericMarkingMenuNodeWidget::HideNode()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionGenericMarkingMenuNodeWidget", "HideNode");

	UObject::ProcessEvent(Func, nullptr);
}


// Function OrionUI.OrionGenericMarkingMenuNodeWidget.HighlightNode
// (Event, Public, BlueprintEvent)

void UOrionGenericMarkingMenuNodeWidget::HighlightNode()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionGenericMarkingMenuNodeWidget", "HighlightNode");

	UObject::ProcessEvent(Func, nullptr);
}


// Function OrionUI.OrionGenericMarkingMenuNodeWidget.ResetNode
// (Event, Public, BlueprintEvent)

void UOrionGenericMarkingMenuNodeWidget::ResetNode()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionGenericMarkingMenuNodeWidget", "ResetNode");

	UObject::ProcessEvent(Func, nullptr);
}


// Function OrionUI.OrionGenericMarkingMenuNodeWidget.SelectNode
// (Event, Public, BlueprintEvent)

void UOrionGenericMarkingMenuNodeWidget::SelectNode()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionGenericMarkingMenuNodeWidget", "SelectNode");

	UObject::ProcessEvent(Func, nullptr);
}


// Function OrionUI.OrionGenericMarkingMenuNodeWidget.ShowNode
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    bUsingGamePad                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOrionGenericMarkingMenuNodeWidget::ShowNode(bool bUsingGamePad)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionGenericMarkingMenuNodeWidget", "ShowNode");

	Params::OrionGenericMarkingMenuNodeWidget_ShowNode Parms{};

	Parms.bUsingGamePad = bUsingGamePad;

	UObject::ProcessEvent(Func, &Parms);
}


// Function OrionUI.OrionGenericMarkingMenuNodeWidget.UnHighlightNode
// (Event, Public, BlueprintEvent)

void UOrionGenericMarkingMenuNodeWidget::UnHighlightNode()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionGenericMarkingMenuNodeWidget", "UnHighlightNode");

	UObject::ProcessEvent(Func, nullptr);
}


// Function OrionUI.OrionGenericMarkingMenuNodeWidget.UnSelectNode
// (Event, Public, BlueprintEvent)

void UOrionGenericMarkingMenuNodeWidget::UnSelectNode()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionGenericMarkingMenuNodeWidget", "UnSelectNode");

	UObject::ProcessEvent(Func, nullptr);
}


// Function OrionUI.OrionMarkingMenuLayerWidget.HideWidget
// (Native, Event, Public, BlueprintEvent)

void UOrionMarkingMenuLayerWidget::HideWidget()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionMarkingMenuLayerWidget", "HideWidget");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.OrionMarkingMenuLayerWidget.ResetWidget
// (Native, Event, Public, BlueprintEvent)

void UOrionMarkingMenuLayerWidget::ResetWidget()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionMarkingMenuLayerWidget", "ResetWidget");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.OrionMarkingMenuLayerWidget.ShowWidget
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// bool                                    bUsingGamePad                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOrionMarkingMenuLayerWidget::ShowWidget(bool bUsingGamePad)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionMarkingMenuLayerWidget", "ShowWidget");

	Params::OrionMarkingMenuLayerWidget_ShowWidget Parms{};

	Parms.bUsingGamePad = bUsingGamePad;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.OrionMarkingMenuLayerWidget_TeamComms.SetInEmoteMode
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    bInEmoteMode                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOrionMarkingMenuLayerWidget_TeamComms::SetInEmoteMode(bool bInEmoteMode)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionMarkingMenuLayerWidget_TeamComms", "SetInEmoteMode");

	Params::OrionMarkingMenuLayerWidget_TeamComms_SetInEmoteMode Parms{};

	Parms.bInEmoteMode = bInEmoteMode;

	UObject::ProcessEvent(Func, &Parms);
}


// Function OrionUI.OrionMarkingMenuLayerWidget_TeamComms.ShowEmoteTogglePrompt
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    bShowPrompt                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOrionMarkingMenuLayerWidget_TeamComms::ShowEmoteTogglePrompt(bool bShowPrompt)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionMarkingMenuLayerWidget_TeamComms", "ShowEmoteTogglePrompt");

	Params::OrionMarkingMenuLayerWidget_TeamComms_ShowEmoteTogglePrompt Parms{};

	Parms.bShowPrompt = bShowPrompt;

	UObject::ProcessEvent(Func, &Parms);
}


// Function OrionUI.OrionMeshWidget.GetDynamicMaterial
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UMaterialInstanceDynamic*         ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UMaterialInstanceDynamic* UOrionMeshWidget::GetDynamicMaterial()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionMeshWidget", "GetDynamicMaterial");

	Params::OrionMeshWidget_GetDynamicMaterial Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function OrionUI.OrionMeshWidget.SetDesiredSize
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector2D                        InDesiredSize                                          (Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOrionMeshWidget::SetDesiredSize(const struct FVector2D& InDesiredSize)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionMeshWidget", "SetDesiredSize");

	Params::OrionMeshWidget_SetDesiredSize Parms{};

	Parms.InDesiredSize = std::move(InDesiredSize);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.OrionMeshWidget.SetMeshHorizontalAlignment
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EHorizontalAlignment                    InHorizontalAlignment                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOrionMeshWidget::SetMeshHorizontalAlignment(EHorizontalAlignment InHorizontalAlignment)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionMeshWidget", "SetMeshHorizontalAlignment");

	Params::OrionMeshWidget_SetMeshHorizontalAlignment Parms{};

	Parms.InHorizontalAlignment = InHorizontalAlignment;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.OrionMeshWidget.SetMeshMargin
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FMargin                          InMargin                                               (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void UOrionMeshWidget::SetMeshMargin(const struct FMargin& InMargin)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionMeshWidget", "SetMeshMargin");

	Params::OrionMeshWidget_SetMeshMargin Parms{};

	Parms.InMargin = std::move(InMargin);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.OrionMeshWidget.SetMeshScale
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   InScale                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOrionMeshWidget::SetMeshScale(float InScale)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionMeshWidget", "SetMeshScale");

	Params::OrionMeshWidget_SetMeshScale Parms{};

	Parms.InScale = InScale;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.OrionMeshWidget.SetMeshVerticalAlignment
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EVerticalAlignment                      InVerticalAlignment                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOrionMeshWidget::SetMeshVerticalAlignment(EVerticalAlignment InVerticalAlignment)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionMeshWidget", "SetMeshVerticalAlignment");

	Params::OrionMeshWidget_SetMeshVerticalAlignment Parms{};

	Parms.InVerticalAlignment = InVerticalAlignment;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.OrionGenericMarkingMenuWidget.DownButtonPressed
// (Final, Native, Protected)

void UOrionGenericMarkingMenuWidget::DownButtonPressed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionGenericMarkingMenuWidget", "DownButtonPressed");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.OrionGenericMarkingMenuWidget.LeftButtonPressed
// (Final, Native, Protected)

void UOrionGenericMarkingMenuWidget::LeftButtonPressed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionGenericMarkingMenuWidget", "LeftButtonPressed");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.OrionGenericMarkingMenuWidget.NativeOnClose
// (Native, Protected, BlueprintCallable)

void UOrionGenericMarkingMenuWidget::NativeOnClose()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionGenericMarkingMenuWidget", "NativeOnClose");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.OrionGenericMarkingMenuWidget.NativeOnOpen
// (Native, Protected, BlueprintCallable)

void UOrionGenericMarkingMenuWidget::NativeOnOpen()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionGenericMarkingMenuWidget", "NativeOnOpen");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.OrionGenericMarkingMenuWidget.OnFaceButtonPressed
// (Native, Protected, BlueprintCallable)
// Parameters:
// EOrionGestureDirection                  Direction                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOrionGenericMarkingMenuWidget::OnFaceButtonPressed(EOrionGestureDirection Direction)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionGenericMarkingMenuWidget", "OnFaceButtonPressed");

	Params::OrionGenericMarkingMenuWidget_OnFaceButtonPressed Parms{};

	Parms.Direction = Direction;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.OrionGenericMarkingMenuWidget.RightButtonPressed
// (Final, Native, Protected)

void UOrionGenericMarkingMenuWidget::RightButtonPressed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionGenericMarkingMenuWidget", "RightButtonPressed");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.OrionGenericMarkingMenuWidget.ToggleButtonPressed
// (Final, Native, Protected)

void UOrionGenericMarkingMenuWidget::ToggleButtonPressed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionGenericMarkingMenuWidget", "ToggleButtonPressed");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.OrionGenericMarkingMenuWidget.UpButtonPressed
// (Final, Native, Protected)

void UOrionGenericMarkingMenuWidget::UpButtonPressed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionGenericMarkingMenuWidget", "UpButtonPressed");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.OrionGenericMarkingMenu_TeamComms.SetEmoteMode
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// bool                                    bNewInEmoteMode                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOrionGenericMarkingMenu_TeamComms::SetEmoteMode(bool bNewInEmoteMode)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionGenericMarkingMenu_TeamComms", "SetEmoteMode");

	Params::OrionGenericMarkingMenu_TeamComms_SetEmoteMode Parms{};

	Parms.bNewInEmoteMode = bNewInEmoteMode;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.OrionGenericMarkingMenu_TeamComms.ToggleAutoRun
// (Final, Native, Protected)

void UOrionGenericMarkingMenu_TeamComms::ToggleAutoRun()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionGenericMarkingMenu_TeamComms", "ToggleAutoRun");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.OrionGenericMarkingMenu_TeamComms.ToggleEmoteMode
// (Final, Native, Protected, BlueprintCallable)

void UOrionGenericMarkingMenu_TeamComms::ToggleEmoteMode()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionGenericMarkingMenu_TeamComms", "ToggleEmoteMode");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.OrionGenericMarkingMenu_TeamComms.EmotesAvailable
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UOrionGenericMarkingMenu_TeamComms::EmotesAvailable() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionGenericMarkingMenu_TeamComms", "EmotesAvailable");

	Params::OrionGenericMarkingMenu_TeamComms_EmotesAvailable Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function OrionUI.OrionGenericMarkingMenu_TeamComms.GetInEmoteMode
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UOrionGenericMarkingMenu_TeamComms::GetInEmoteMode() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionGenericMarkingMenu_TeamComms", "GetInEmoteMode");

	Params::OrionGenericMarkingMenu_TeamComms_GetInEmoteMode Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function OrionUI.OrionReplayBrowserList.OnReplaySearchButtonClicked
// (Final, Native, Public, BlueprintCallable)

void UOrionReplayBrowserList::OnReplaySearchButtonClicked()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionReplayBrowserList", "OnReplaySearchButtonClicked");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.OrionReplayBrowserList.OnReplaySearchTextCommitted
// (Final, Native, Public, BlueprintCallable)

void UOrionReplayBrowserList::OnReplaySearchTextCommitted()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionReplayBrowserList", "OnReplaySearchTextCommitted");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.OrionGlowingRarityText.SetRarityBP
// (Event, Public, BlueprintEvent)
// Parameters:
// EOrionItemRarity                        ItemRarity                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bHideGlowingText                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOrionGlowingRarityText::SetRarityBP(EOrionItemRarity ItemRarity, bool bHideGlowingText)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionGlowingRarityText", "SetRarityBP");

	Params::OrionGlowingRarityText_SetRarityBP Parms{};

	Parms.ItemRarity = ItemRarity;
	Parms.bHideGlowingText = bHideGlowingText;

	UObject::ProcessEvent(Func, &Parms);
}


// Function OrionUI.OrionMilestoneRewardProgress.ChestFanfareComplete
// (Final, Native, Protected, BlueprintCallable)

void UOrionMilestoneRewardProgress::ChestFanfareComplete()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionMilestoneRewardProgress", "ChestFanfareComplete");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.OrionMilestoneRewardProgress.OnNextChestReached
// (Event, Protected, BlueprintEvent)
// Parameters:
// class UOrionRewardProgressBar*          ActiveProgressBar_0                                    (ConstParm, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOrionMilestoneRewardProgress::OnNextChestReached(const class UOrionRewardProgressBar* ActiveProgressBar_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionMilestoneRewardProgress", "OnNextChestReached");

	Params::OrionMilestoneRewardProgress_OnNextChestReached Parms{};

	Parms.ActiveProgressBar_0 = ActiveProgressBar_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function OrionUI.OrionHandEntry.GetCurrentVisualState
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EHandEntryVisualState                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EHandEntryVisualState UOrionHandEntry::GetCurrentVisualState()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionHandEntry", "GetCurrentVisualState");

	Params::OrionHandEntry_GetCurrentVisualState Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function OrionUI.OrionHandEntry.OnIsAffordableChanged
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bIsAffordable                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOrionHandEntry::OnIsAffordableChanged(bool bIsAffordable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionHandEntry", "OnIsAffordableChanged");

	Params::OrionHandEntry_OnIsAffordableChanged Parms{};

	Parms.bIsAffordable = bIsAffordable;

	UObject::ProcessEvent(Func, &Parms);
}


// Function OrionUI.OrionHandEntry.OnIsPurchasableChanged
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bIsPurchasable                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOrionHandEntry::OnIsPurchasableChanged(bool bIsPurchasable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionHandEntry", "OnIsPurchasableChanged");

	Params::OrionHandEntry_OnIsPurchasableChanged Parms{};

	Parms.bIsPurchasable = bIsPurchasable;

	UObject::ProcessEvent(Func, &Parms);
}


// Function OrionUI.OrionHandEntry.OnUnequipTargetStateChanged
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bIsUnequipTarget                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOrionHandEntry::OnUnequipTargetStateChanged(bool bIsUnequipTarget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionHandEntry", "OnUnequipTargetStateChanged");

	Params::OrionHandEntry_OnUnequipTargetStateChanged Parms{};

	Parms.bIsUnequipTarget = bIsUnequipTarget;

	UObject::ProcessEvent(Func, &Parms);
}


// Function OrionUI.OrionHandEntry.GetIsPurchasable
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UOrionHandEntry::GetIsPurchasable() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionHandEntry", "GetIsPurchasable");

	Params::OrionHandEntry_GetIsPurchasable Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function OrionUI.OrionHandEntryTooltip.OnPurchasabilityChanged
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bIsPurchasable                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bIsAffordable                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOrionHandEntryTooltip::OnPurchasabilityChanged(bool bIsPurchasable, bool bIsAffordable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionHandEntryTooltip", "OnPurchasabilityChanged");

	Params::OrionHandEntryTooltip_OnPurchasabilityChanged Parms{};

	Parms.bIsPurchasable = bIsPurchasable;
	Parms.bIsAffordable = bIsAffordable;

	UObject::ProcessEvent(Func, &Parms);
}


// Function OrionUI.OrionProgressiveRewardWidgetBase.DynamicHandlePostMatchShown
// (Final, Native, Protected)

void UOrionProgressiveRewardWidgetBase::DynamicHandlePostMatchShown()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionProgressiveRewardWidgetBase", "DynamicHandlePostMatchShown");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.OrionProgressiveRewardWidgetBase.HandleRewardAnimationComplete
// (Final, Native, Protected, BlueprintCallable)

void UOrionProgressiveRewardWidgetBase::HandleRewardAnimationComplete()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionProgressiveRewardWidgetBase", "HandleRewardAnimationComplete");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.OrionProgressiveRewardWidgetBase.OnBeginProgressAnimation
// (Event, Protected, BlueprintEvent)

void UOrionProgressiveRewardWidgetBase::OnBeginProgressAnimation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionProgressiveRewardWidgetBase", "OnBeginProgressAnimation");

	UObject::ProcessEvent(Func, nullptr);
}


// Function OrionUI.OrionHeroAbilityDisplay.SetHero
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UOrionHeroData*                   HeroData                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOrionHeroAbilityDisplay::SetHero(class UOrionHeroData* HeroData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionHeroAbilityDisplay", "SetHero");

	Params::OrionHeroAbilityDisplay_SetHero Parms{};

	Parms.HeroData = HeroData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.OrionRewardWidget.BeginFill
// (Final, Native, Public, BlueprintCallable)

void UOrionRewardWidget::BeginFill()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionRewardWidget", "BeginFill");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.OrionRewardWidget.BP_SetRewardInfo
// (Final, Native, Private, BlueprintCallable)
// Parameters:
// class UOrionMcpItemDefinition*          ItemDefinition                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Quantity                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bIsEarned                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOrionRewardWidget::BP_SetRewardInfo(const class UOrionMcpItemDefinition* ItemDefinition, int32 Quantity, bool bIsEarned)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionRewardWidget", "BP_SetRewardInfo");

	Params::OrionRewardWidget_BP_SetRewardInfo Parms{};

	Parms.ItemDefinition = ItemDefinition;
	Parms.Quantity = Quantity;
	Parms.bIsEarned = bIsEarned;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.OrionRewardWidget.OnActiveStateSet
// (Event, Protected, BlueprintEvent)
// Parameters:
// EOrionRewardWidgetState                 State                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOrionRewardWidget::OnActiveStateSet(EOrionRewardWidgetState State)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionRewardWidget", "OnActiveStateSet");

	Params::OrionRewardWidget_OnActiveStateSet Parms{};

	Parms.State = State;

	UObject::ProcessEvent(Func, &Parms);
}


// Function OrionUI.OrionRewardWidget.OnDataSet
// (Event, Protected, BlueprintEvent)
// Parameters:
// EOrionItemRarity                        ItemRarity                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EOrionItemType                          ItemType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOrionRewardWidget::OnDataSet(EOrionItemRarity ItemRarity, EOrionItemType ItemType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionRewardWidget", "OnDataSet");

	Params::OrionRewardWidget_OnDataSet Parms{};

	Parms.ItemRarity = ItemRarity;
	Parms.ItemType = ItemType;

	UObject::ProcessEvent(Func, &Parms);
}


// Function OrionUI.OrionRewardWidget.OnVaultFlash
// (Event, Public, BlueprintEvent)
// Parameters:
// int32                                   RoundsRemaining                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOrionRewardWidget::OnVaultFlash(int32 RoundsRemaining)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionRewardWidget", "OnVaultFlash");

	Params::OrionRewardWidget_OnVaultFlash Parms{};

	Parms.RoundsRemaining = RoundsRemaining;

	UObject::ProcessEvent(Func, &Parms);
}


// Function OrionUI.OrionRewardWidget.OnVaultFlourish
// (Event, Public, BlueprintEvent)

void UOrionRewardWidget::OnVaultFlourish()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionRewardWidget", "OnVaultFlourish");

	UObject::ProcessEvent(Func, nullptr);
}


// Function OrionUI.OrionRewardWidget.SetActiveState
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EOrionRewardWidgetState                 State                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOrionRewardWidget::SetActiveState(EOrionRewardWidgetState State)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionRewardWidget", "SetActiveState");

	Params::OrionRewardWidget_SetActiveState Parms{};

	Parms.State = State;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.OrionRewardWidget.SetRewardScale
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   InScale                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOrionRewardWidget::SetRewardScale(float InScale)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionRewardWidget", "SetRewardScale");

	Params::OrionRewardWidget_SetRewardScale Parms{};

	Parms.InScale = InScale;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.OrionRewardWidget.ShowStinger
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bShowStinger                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOrionRewardWidget::ShowStinger(bool bShowStinger)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionRewardWidget", "ShowStinger");

	Params::OrionRewardWidget_ShowStinger Parms{};

	Parms.bShowStinger = bShowStinger;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.OrionRewardCarouselItem.OnRewardEarned
// (Event, Public, BlueprintEvent)

void UOrionRewardCarouselItem::OnRewardEarned()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionRewardCarouselItem", "OnRewardEarned");

	UObject::ProcessEvent(Func, nullptr);
}


// Function OrionUI.OrionRewardCarouselItem.RefreshLayout
// (Event, Protected, BlueprintEvent)

void UOrionRewardCarouselItem::RefreshLayout()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionRewardCarouselItem", "RefreshLayout");

	UObject::ProcessEvent(Func, nullptr);
}


// Function OrionUI.OrionHeroCollectionScreen.DynamicHandleItemSelected
// (Final, Native, Protected)
// Parameters:
// class UObject*                          Item                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOrionHeroCollectionScreen::DynamicHandleItemSelected(class UObject* Item)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionHeroCollectionScreen", "DynamicHandleItemSelected");

	Params::OrionHeroCollectionScreen_DynamicHandleItemSelected Parms{};

	Parms.Item = Item;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.OrionHeroDetails_Mastery.HandleUnlockWidgetClose
// (Final, Native, Protected)

void UOrionHeroDetails_Mastery::HandleUnlockWidgetClose()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionHeroDetails_Mastery", "HandleUnlockWidgetClose");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.OrionHeroDetails_Mastery.OnShowHeroLocked
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    bLocked                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOrionHeroDetails_Mastery::OnShowHeroLocked(bool bLocked)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionHeroDetails_Mastery", "OnShowHeroLocked");

	Params::OrionHeroDetails_Mastery_OnShowHeroLocked Parms{};

	Parms.bLocked = bLocked;

	UObject::ProcessEvent(Func, &Parms);
}


// Function OrionUI.OrionHeroDetails_Mastery.OnShowMasteryLocked
// (Event, Public, BlueprintEvent)

void UOrionHeroDetails_Mastery::OnShowMasteryLocked()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionHeroDetails_Mastery", "OnShowMasteryLocked");

	UObject::ProcessEvent(Func, nullptr);
}


// Function OrionUI.OrionHeroDetails_Mastery.OnShowNextRankedLocked
// (Event, Public, BlueprintEvent)

void UOrionHeroDetails_Mastery::OnShowNextRankedLocked()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionHeroDetails_Mastery", "OnShowNextRankedLocked");

	UObject::ProcessEvent(Func, nullptr);
}


// Function OrionUI.OrionHeroDetails_Mastery.OnShowXpToLevel
// (Event, Public, BlueprintEvent)

void UOrionHeroDetails_Mastery::OnShowXpToLevel()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionHeroDetails_Mastery", "OnShowXpToLevel");

	UObject::ProcessEvent(Func, nullptr);
}


// Function OrionUI.OrionHeroDetails_Mastery.SetHero
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UOrionMcpHeroItem*                HeroItem                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOrionHeroDetails_Mastery::SetHero(class UOrionMcpHeroItem* HeroItem)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionHeroDetails_Mastery", "SetHero");

	Params::OrionHeroDetails_Mastery_SetHero Parms{};

	Parms.HeroItem = HeroItem;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.OrionHeroDetails_Mastery.ShowRewardPopup
// (Final, Native, Private)

void UOrionHeroDetails_Mastery::ShowRewardPopup()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionHeroDetails_Mastery", "ShowRewardPopup");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.OrionHeroDetails_Mastery.UnlockButtonClicked
// (Final, Native, Protected)

void UOrionHeroDetails_Mastery::UnlockButtonClicked()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionHeroDetails_Mastery", "UnlockButtonClicked");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.OrionHeroDetailsMasteryLevelDisplay.OnLevelSet
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    bProgressLocked                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOrionHeroDetailsMasteryLevelDisplay::OnLevelSet(bool bProgressLocked)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionHeroDetailsMasteryLevelDisplay", "OnLevelSet");

	Params::OrionHeroDetailsMasteryLevelDisplay_OnLevelSet Parms{};

	Parms.bProgressLocked = bProgressLocked;

	UObject::ProcessEvent(Func, &Parms);
}


// Function OrionUI.OrionInfoFeedEntryBase.OnEntryInitialized
// (Event, Protected, BlueprintEvent)

void UOrionInfoFeedEntryBase::OnEntryInitialized()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionInfoFeedEntryBase", "OnEntryInitialized");

	UObject::ProcessEvent(Func, nullptr);
}


// Function OrionUI.OrionInfoFeedEntryBase.OnRemoveEntry
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bImmediate                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOrionInfoFeedEntryBase::OnRemoveEntry(bool bImmediate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionInfoFeedEntryBase", "OnRemoveEntry");

	Params::OrionInfoFeedEntryBase_OnRemoveEntry Parms{};

	Parms.bImmediate = bImmediate;

	UObject::ProcessEvent(Func, &Parms);
}


// Function OrionUI.OrionTeamCommMessageFeedEntry.OnDuplicateMessageReceived
// (Event, Protected, BlueprintEvent)

void UOrionTeamCommMessageFeedEntry::OnDuplicateMessageReceived()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionTeamCommMessageFeedEntry", "OnDuplicateMessageReceived");

	UObject::ProcessEvent(Func, nullptr);
}


// Function OrionUI.OrionHeroDetailsMasteryRankPurchaseModal.UpdateToTrueRank
// (Final, Native, Public, BlueprintCallable)

void UOrionHeroDetailsMasteryRankPurchaseModal::UpdateToTrueRank()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionHeroDetailsMasteryRankPurchaseModal", "UpdateToTrueRank");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.OrionHeroDetailsMasteryRewardTimeline.OnRankTierSet
// (Event, Public, BlueprintEvent)
// Parameters:
// EOrionHeroRankTier                      RankTier                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOrionHeroDetailsMasteryRewardTimeline::OnRankTierSet(EOrionHeroRankTier RankTier)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionHeroDetailsMasteryRewardTimeline", "OnRankTierSet");

	Params::OrionHeroDetailsMasteryRewardTimeline_OnRankTierSet Parms{};

	Parms.RankTier = RankTier;

	UObject::ProcessEvent(Func, &Parms);
}


// Function OrionUI.OrionHeroDetailsMasteryRewardTimelineEntry.OnFirstRank
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    bIsFirst                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOrionHeroDetailsMasteryRewardTimelineEntry::OnFirstRank(bool bIsFirst)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionHeroDetailsMasteryRewardTimelineEntry", "OnFirstRank");

	Params::OrionHeroDetailsMasteryRewardTimelineEntry_OnFirstRank Parms{};

	Parms.bIsFirst = bIsFirst;

	UObject::ProcessEvent(Func, &Parms);
}


// Function OrionUI.OrionHeroDetailsMasteryRewardTimelineEntry.OnRewardLocked
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    bIsLocked                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOrionHeroDetailsMasteryRewardTimelineEntry::OnRewardLocked(bool bIsLocked)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionHeroDetailsMasteryRewardTimelineEntry", "OnRewardLocked");

	Params::OrionHeroDetailsMasteryRewardTimelineEntry_OnRewardLocked Parms{};

	Parms.bIsLocked = bIsLocked;

	UObject::ProcessEvent(Func, &Parms);
}


// Function OrionUI.OrionHeroDetailsMasteryRewardTimelineEntry.SetRewardRenderTransformPivot
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   X                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Y                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOrionHeroDetailsMasteryRewardTimelineEntry::SetRewardRenderTransformPivot(float X, float Y)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionHeroDetailsMasteryRewardTimelineEntry", "SetRewardRenderTransformPivot");

	Params::OrionHeroDetailsMasteryRewardTimelineEntry_SetRewardRenderTransformPivot Parms{};

	Parms.X = X;
	Parms.Y = Y;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.OrionHeroDetailsMasteryRewardTimelineEntry.SetRewardScaleTooltipSafe
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   ScaleValue                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOrionHeroDetailsMasteryRewardTimelineEntry::SetRewardScaleTooltipSafe(float ScaleValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionHeroDetailsMasteryRewardTimelineEntry", "SetRewardScaleTooltipSafe");

	Params::OrionHeroDetailsMasteryRewardTimelineEntry_SetRewardScaleTooltipSafe Parms{};

	Parms.ScaleValue = ScaleValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.OrionHeroRewardTooltip.OnUpdateLock
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    bIsOwned                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOrionHeroRewardTooltip::OnUpdateLock(bool bIsOwned)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionHeroRewardTooltip", "OnUpdateLock");

	Params::OrionHeroRewardTooltip_OnUpdateLock Parms{};

	Parms.bIsOwned = bIsOwned;

	UObject::ProcessEvent(Func, &Parms);
}


// Function OrionUI.OrionHeroRewardTooltip.OnUpdateXPBonuses
// (Event, Protected, BlueprintEvent)
// Parameters:
// float                                   SelfBonus                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   TeammateBonus                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOrionHeroRewardTooltip::OnUpdateXPBonuses(float SelfBonus, float TeammateBonus)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionHeroRewardTooltip", "OnUpdateXPBonuses");

	Params::OrionHeroRewardTooltip_OnUpdateXPBonuses Parms{};

	Parms.SelfBonus = SelfBonus;
	Parms.TeammateBonus = TeammateBonus;

	UObject::ProcessEvent(Func, &Parms);
}


// Function OrionUI.OrionHeroDetails_Skins.DynamicHandleSkinSelected
// (Final, Native, Private)
// Parameters:
// class UObject*                          SelectedItem                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bSelected                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOrionHeroDetails_Skins::DynamicHandleSkinSelected(class UObject* SelectedItem, bool bSelected)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionHeroDetails_Skins", "DynamicHandleSkinSelected");

	Params::OrionHeroDetails_Skins_DynamicHandleSkinSelected Parms{};

	Parms.SelectedItem = SelectedItem;
	Parms.bSelected = bSelected;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.OrionHeroDetails_Skins.DynamicHandleSkinVariationSelected
// (Final, Native, Private)
// Parameters:
// class UObject*                          SelectedItem                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bSelected                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOrionHeroDetails_Skins::DynamicHandleSkinVariationSelected(class UObject* SelectedItem, bool bSelected)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionHeroDetails_Skins", "DynamicHandleSkinVariationSelected");

	Params::OrionHeroDetails_Skins_DynamicHandleSkinVariationSelected Parms{};

	Parms.SelectedItem = SelectedItem;
	Parms.bSelected = bSelected;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.OrionHeroDetails_Skins.OnSkinPurchased
// (Event, Protected, BlueprintEvent)

void UOrionHeroDetails_Skins::OnSkinPurchased()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionHeroDetails_Skins", "OnSkinPurchased");

	UObject::ProcessEvent(Func, nullptr);
}


// Function OrionUI.OrionHeroDetails_Skins.SetHero
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UOrionMcpHeroItem*                HeroItem                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOrionHeroDetails_Skins::SetHero(class UOrionMcpHeroItem* HeroItem)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionHeroDetails_Skins", "SetHero");

	Params::OrionHeroDetails_Skins_SetHero Parms{};

	Parms.HeroItem = HeroItem;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.OrionHeroDetailsRoot.NativeSetHero
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UOrionHeroData*                   NewHero                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOrionHeroDetailsRoot::NativeSetHero(const class UOrionHeroData* NewHero)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionHeroDetailsRoot", "NativeSetHero");

	Params::OrionHeroDetailsRoot_NativeSetHero Parms{};

	Parms.NewHero = NewHero;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.OrionHeroDetailsRoot.OnAbilityWidgetHovered
// (Event, Public, BlueprintEvent)

void UOrionHeroDetailsRoot::OnAbilityWidgetHovered()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionHeroDetailsRoot", "OnAbilityWidgetHovered");

	UObject::ProcessEvent(Func, nullptr);
}


// Function OrionUI.OrionHeroDetailsRoot.OnAbilityWidgetUnHovered
// (Event, Public, BlueprintEvent)

void UOrionHeroDetailsRoot::OnAbilityWidgetUnHovered()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionHeroDetailsRoot", "OnAbilityWidgetUnHovered");

	UObject::ProcessEvent(Func, nullptr);
}


// Function OrionUI.OrionHeroListItem.OnHeroDataSet
// (Event, Protected, BlueprintEvent)
// Parameters:
// EOrionHeroRankTier                      RankTier                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bRecommended                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOrionHeroListItem::OnHeroDataSet(EOrionHeroRankTier RankTier, bool bRecommended)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionHeroListItem", "OnHeroDataSet");

	Params::OrionHeroListItem_OnHeroDataSet Parms{};

	Parms.RankTier = RankTier;
	Parms.bRecommended = bRecommended;

	UObject::ProcessEvent(Func, &Parms);
}


// Function OrionUI.OrionReplayWidget.OnDetailStateChanged
// (Event, Protected, BlueprintEvent)
// Parameters:
// EReplayDetailsState                     NewState                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOrionReplayWidget::OnDetailStateChanged(EReplayDetailsState NewState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionReplayWidget", "OnDetailStateChanged");

	Params::OrionReplayWidget_OnDetailStateChanged Parms{};

	Parms.NewState = NewState;

	UObject::ProcessEvent(Func, &Parms);
}


// Function OrionUI.OrionReplayWidget.OnReplayClicked
// (Event, Protected, BlueprintEvent)

void UOrionReplayWidget::OnReplayClicked()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionReplayWidget", "OnReplayClicked");

	UObject::ProcessEvent(Func, nullptr);
}


// Function OrionUI.OrionReplayWidget.SetReplayStream
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UOrionReplayStreamInfo*           InStream                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOrionReplayWidget::SetReplayStream(class UOrionReplayStreamInfo* InStream)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionReplayWidget", "SetReplayStream");

	Params::OrionReplayWidget_SetReplayStream Parms{};

	Parms.InStream = InStream;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.OrionReplayWidget.SetShowSpoilers
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    InShowSpoilers                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOrionReplayWidget::SetShowSpoilers(bool InShowSpoilers)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionReplayWidget", "SetShowSpoilers");

	Params::OrionReplayWidget_SetShowSpoilers Parms{};

	Parms.InShowSpoilers = InShowSpoilers;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.OrionReplayWidget.GetHeroData
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EOrionTeam                              Team                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   SlotIndex                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UOrionHeroData*                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UOrionHeroData* UOrionReplayWidget::GetHeroData(EOrionTeam Team, int32 SlotIndex) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionReplayWidget", "GetHeroData");

	Params::OrionReplayWidget_GetHeroData Parms{};

	Parms.Team = Team;
	Parms.SlotIndex = SlotIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function OrionUI.OrionReplayWidget.GetKDA
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EOrionTeam                              Team                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   SlotIndex                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

class FText UOrionReplayWidget::GetKDA(EOrionTeam Team, int32 SlotIndex) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionReplayWidget", "GetKDA");

	Params::OrionReplayWidget_GetKDA Parms{};

	Parms.Team = Team;
	Parms.SlotIndex = SlotIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function OrionUI.OrionReplayWidget.GetName
// (Final, Native, Protected, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FString                           ResultString                                           (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOrionReplayWidget::GetName(class FString* ResultString) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionReplayWidget", "GetName");

	Params::OrionReplayWidget_GetName Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (ResultString != nullptr)
		*ResultString = std::move(Parms.ResultString);
}


// Function OrionUI.OrionReplayWidget.GetPlayerName
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EOrionTeam                              Team                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   SlotIndex                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

class FText UOrionReplayWidget::GetPlayerName(EOrionTeam Team, int32 SlotIndex) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionReplayWidget", "GetPlayerName");

	Params::OrionReplayWidget_GetPlayerName Parms{};

	Parms.Team = Team;
	Parms.SlotIndex = SlotIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function OrionUI.OrionHeroListItem_Matchmaking.OnPositionPreferenceChanged
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bHasPreference                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bIsPreferred                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOrionHeroListItem_Matchmaking::OnPositionPreferenceChanged(bool bHasPreference, bool bIsPreferred)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionHeroListItem_Matchmaking", "OnPositionPreferenceChanged");

	Params::OrionHeroListItem_Matchmaking_OnPositionPreferenceChanged Parms{};

	Parms.bHasPreference = bHasPreference;
	Parms.bIsPreferred = bIsPreferred;

	UObject::ProcessEvent(Func, &Parms);
}


// Function OrionUI.OrionHeroStatBar.OnStatEmphasized
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    bEmphasize                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOrionHeroStatBar::OnStatEmphasized(bool bEmphasize)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionHeroStatBar", "OnStatEmphasized");

	Params::OrionHeroStatBar_OnStatEmphasized Parms{};

	Parms.bEmphasize = bEmphasize;

	UObject::ProcessEvent(Func, &Parms);
}


// Function OrionUI.OrionHeroTooltip.OnHeroDataSet
// (Event, Protected, BlueprintEvent)
// Parameters:
// EOrionHeroRankTier                      RankTier                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EOrionHeroTooltipStatus                 Status                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOrionHeroTooltip::OnHeroDataSet(EOrionHeroRankTier RankTier, EOrionHeroTooltipStatus Status)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionHeroTooltip", "OnHeroDataSet");

	Params::OrionHeroTooltip_OnHeroDataSet Parms{};

	Parms.RankTier = RankTier;
	Parms.Status = Status;

	UObject::ProcessEvent(Func, &Parms);
}


// Function OrionUI.OrionScoreboardItemizationSummary.OnPlayerInfoSet
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    bIsLocalPlayer                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOrionScoreboardItemizationSummary::OnPlayerInfoSet(bool bIsLocalPlayer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionScoreboardItemizationSummary", "OnPlayerInfoSet");

	Params::OrionScoreboardItemizationSummary_OnPlayerInfoSet Parms{};

	Parms.bIsLocalPlayer = bIsLocalPlayer;

	UObject::ProcessEvent(Func, &Parms);
}


// Function OrionUI.OrionHomeScreen.DynamicHandleFrontEndContentFlowComplete
// (Final, Native, Protected)

void UOrionHomeScreen::DynamicHandleFrontEndContentFlowComplete()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionHomeScreen", "DynamicHandleFrontEndContentFlowComplete");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.OrionHomeScreen.DynamicHandleStoreCatalogChanged
// (Final, Native, Protected)

void UOrionHomeScreen::DynamicHandleStoreCatalogChanged()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionHomeScreen", "DynamicHandleStoreCatalogChanged");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.OrionHomeScreen.OnFrontEndContentFlowComplete
// (Event, Protected, BlueprintEvent)

void UOrionHomeScreen::OnFrontEndContentFlowComplete()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionHomeScreen", "OnFrontEndContentFlowComplete");

	UObject::ProcessEvent(Func, nullptr);
}


// Function OrionUI.OrionHomeScreen.UpdateScreenContent
// (Final, Native, Protected)

void UOrionHomeScreen::UpdateScreenContent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionHomeScreen", "UpdateScreenContent");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.OrionHomeTileCarousel.FireTileImpressionEvent
// (Final, Native, Protected)

void UOrionHomeTileCarousel::FireTileImpressionEvent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionHomeTileCarousel", "FireTileImpressionEvent");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.OrionHomeTileCarousel.NextPage
// (Final, Native, Protected)

void UOrionHomeTileCarousel::NextPage()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionHomeTileCarousel", "NextPage");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.OrionHomeTileCarousel.OnHideNavigationDisplay
// (Event, Protected, BlueprintEvent)

void UOrionHomeTileCarousel::OnHideNavigationDisplay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionHomeTileCarousel", "OnHideNavigationDisplay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function OrionUI.OrionHomeTileCarousel.OnShowNavigationDisplay
// (Event, Protected, BlueprintEvent)

void UOrionHomeTileCarousel::OnShowNavigationDisplay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionHomeTileCarousel", "OnShowNavigationDisplay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function OrionUI.OrionHomeTileCarousel.PreviousPage
// (Final, Native, Protected)

void UOrionHomeTileCarousel::PreviousPage()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionHomeTileCarousel", "PreviousPage");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.OrionHUDCard.NotifyRemovalAnimComplete
// (Final, Native, Protected, BlueprintCallable)

void UOrionHUDCard::NotifyRemovalAnimComplete()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionHUDCard", "NotifyRemovalAnimComplete");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.OrionHUDCard.OnCardEquipped
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bIsActivatable                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOrionHUDCard::OnCardEquipped(bool bIsActivatable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionHUDCard", "OnCardEquipped");

	Params::OrionHUDCard_OnCardEquipped Parms{};

	Parms.bIsActivatable = bIsActivatable;

	UObject::ProcessEvent(Func, &Parms);
}


// Function OrionUI.OrionHUDCard.OnEffectStackCountChanged
// (Event, Protected, BlueprintEvent)
// Parameters:
// int32                                   NumStacks                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOrionHUDCard::OnEffectStackCountChanged(int32 NumStacks)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionHUDCard", "OnEffectStackCountChanged");

	Params::OrionHUDCard_OnEffectStackCountChanged Parms{};

	Parms.NumStacks = NumStacks;

	UObject::ProcessEvent(Func, &Parms);
}


// Function OrionUI.OrionRewardProgressBar.OnBarFilled
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bImmediate                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOrionRewardProgressBar::OnBarFilled(bool bImmediate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionRewardProgressBar", "OnBarFilled");

	Params::OrionRewardProgressBar_OnBarFilled Parms{};

	Parms.bImmediate = bImmediate;

	UObject::ProcessEvent(Func, &Parms);
}


// Function OrionUI.OrionRewardProgressBar.OnFanfaresCompleted
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bImmediate                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bWasProgressReset                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOrionRewardProgressBar::OnFanfaresCompleted(bool bImmediate, bool bWasProgressReset)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionRewardProgressBar", "OnFanfaresCompleted");

	Params::OrionRewardProgressBar_OnFanfaresCompleted Parms{};

	Parms.bImmediate = bImmediate;
	Parms.bWasProgressReset = bWasProgressReset;

	UObject::ProcessEvent(Func, &Parms);
}


// Function OrionUI.OrionRewardProgressBar.SetProgressBarColorAndOpacity
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// struct FLinearColor                     InColorAndOpacity                                      (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOrionRewardProgressBar::SetProgressBarColorAndOpacity(const struct FLinearColor& InColorAndOpacity)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionRewardProgressBar", "SetProgressBarColorAndOpacity");

	Params::OrionRewardProgressBar_SetProgressBarColorAndOpacity Parms{};

	Parms.InColorAndOpacity = std::move(InColorAndOpacity);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.OrionHUDGold.HandleCardXPUpdate
// (Final, Native, Public)
// Parameters:
// float                                   NewGold                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   MaxGold                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOrionHUDGold::HandleCardXPUpdate(float NewGold, float MaxGold)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionHUDGold", "HandleCardXPUpdate");

	Params::OrionHUDGold_HandleCardXPUpdate Parms{};

	Parms.NewGold = NewGold;
	Parms.MaxGold = MaxGold;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.OrionHUDGold.HandleDamageUpdate
// (Final, Native, Public)
// Parameters:
// struct FOrionUIDamageEventInfo          UIDamageEventInfo                                      (Parm, NoDestructor, NativeAccessSpecifierPublic)

void UOrionHUDGold::HandleDamageUpdate(const struct FOrionUIDamageEventInfo& UIDamageEventInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionHUDGold", "HandleDamageUpdate");

	Params::OrionHUDGold_HandleDamageUpdate Parms{};

	Parms.UIDamageEventInfo = std::move(UIDamageEventInfo);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.OrionHUDGold.InitInHUD
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UOrionBaseHUDWidget*              InHUDWidget                                            (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOrionHUDGold::InitInHUD(class UOrionBaseHUDWidget* InHUDWidget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionHUDGold", "InitInHUD");

	Params::OrionHUDGold_InitInHUD Parms{};

	Parms.InHUDWidget = InHUDWidget;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.OrionHUDGold.OnGoldReceived
// (Event, Public, BlueprintEvent)
// Parameters:
// int32                                   Amount                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOrionHUDGold::OnGoldReceived(int32 Amount)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionHUDGold", "OnGoldReceived");

	Params::OrionHUDGold_OnGoldReceived Parms{};

	Parms.Amount = Amount;

	UObject::ProcessEvent(Func, &Parms);
}


// Function OrionUI.OrionHUDGold.OnGoldSpent
// (Event, Public, BlueprintEvent)

void UOrionHUDGold::OnGoldSpent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionHUDGold", "OnGoldSpent");

	UObject::ProcessEvent(Func, nullptr);
}


// Function OrionUI.OrionHUDGold.OnThresholdPassed
// (Event, Public, BlueprintEvent)

void UOrionHUDGold::OnThresholdPassed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionHUDGold", "OnThresholdPassed");

	UObject::ProcessEvent(Func, nullptr);
}


// Function OrionUI.OrionHUDRespawnTimer.HideWidget
// (Native, Event, Protected, BlueprintEvent)

void UOrionHUDRespawnTimer::HideWidget()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionHUDRespawnTimer", "HideWidget");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.OrionHUDRespawnTimer.SetTextVisibility
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// ESlateVisibility                        TextVisibility                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOrionHUDRespawnTimer::SetTextVisibility(ESlateVisibility TextVisibility)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionHUDRespawnTimer", "SetTextVisibility");

	Params::OrionHUDRespawnTimer_SetTextVisibility Parms{};

	Parms.TextVisibility = TextVisibility;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.OrionHUDRespawnTimer.ShowWidget
// (Native, Event, Protected, BlueprintEvent)

void UOrionHUDRespawnTimer::ShowWidget()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionHUDRespawnTimer", "ShowWidget");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.OrionHUDWidget.HideKillCamWidgets
// (Event, Public, BlueprintCallable, BlueprintEvent)

void UOrionHUDWidget::HideKillCamWidgets()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionHUDWidget", "HideKillCamWidgets");

	UObject::ProcessEvent(Func, nullptr);
}


// Function OrionUI.OrionHUDWidget.OnFadeHUDIn_BlueprintEvent
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bFadeFast                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOrionHUDWidget::OnFadeHUDIn_BlueprintEvent(bool bFadeFast)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionHUDWidget", "OnFadeHUDIn_BlueprintEvent");

	Params::OrionHUDWidget_OnFadeHUDIn_BlueprintEvent Parms{};

	Parms.bFadeFast = bFadeFast;

	UObject::ProcessEvent(Func, &Parms);
}


// Function OrionUI.OrionHUDWidget.OnFadeHUDOut_BlueprintEvent
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bFadeFast                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOrionHUDWidget::OnFadeHUDOut_BlueprintEvent(bool bFadeFast)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionHUDWidget", "OnFadeHUDOut_BlueprintEvent");

	Params::OrionHUDWidget_OnFadeHUDOut_BlueprintEvent Parms{};

	Parms.bFadeFast = bFadeFast;

	UObject::ProcessEvent(Func, &Parms);
}


// Function OrionUI.OrionHUDWidget.OnFlashOutOfRangeIndicator
// (Event, Public, BlueprintEvent)

void UOrionHUDWidget::OnFlashOutOfRangeIndicator()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionHUDWidget", "OnFlashOutOfRangeIndicator");

	UObject::ProcessEvent(Func, nullptr);
}


// Function OrionUI.OrionHUDWidget.OnHideKillCam_BlueprintEvent
// (Event, Protected, BlueprintEvent)
// Parameters:
// EOrionHUDShowKillCamMode                Mode                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOrionHUDWidget::OnHideKillCam_BlueprintEvent(EOrionHUDShowKillCamMode Mode)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionHUDWidget", "OnHideKillCam_BlueprintEvent");

	Params::OrionHUDWidget_OnHideKillCam_BlueprintEvent Parms{};

	Parms.Mode = Mode;

	UObject::ProcessEvent(Func, &Parms);
}


// Function OrionUI.OrionHUDWidget.OnMatchEnd_BlueprintEvent
// (Event, Protected, BlueprintEvent)

void UOrionHUDWidget::OnMatchEnd_BlueprintEvent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionHUDWidget", "OnMatchEnd_BlueprintEvent");

	UObject::ProcessEvent(Func, nullptr);
}


// Function OrionUI.OrionHUDWidget.OnShowKillCam_BlueprintEvent
// (Event, Protected, BlueprintEvent)
// Parameters:
// EOrionHUDShowKillCamMode                Mode                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOrionHUDWidget::OnShowKillCam_BlueprintEvent(EOrionHUDShowKillCamMode Mode)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionHUDWidget", "OnShowKillCam_BlueprintEvent");

	Params::OrionHUDWidget_OnShowKillCam_BlueprintEvent Parms{};

	Parms.Mode = Mode;

	UObject::ProcessEvent(Func, &Parms);
}


// Function OrionUI.OrionHUDWidget.SetHUDWidget
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// EOrionHUDWidgetType                     WidgetType                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UWidget*                          Widget                                                 (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOrionHUDWidget::SetHUDWidget(EOrionHUDWidgetType WidgetType, class UWidget* Widget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionHUDWidget", "SetHUDWidget");

	Params::OrionHUDWidget_SetHUDWidget Parms{};

	Parms.WidgetType = WidgetType;
	Parms.Widget = Widget;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.OrionHUDWidget.SetWidgetVisibilityDuringDeath
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bIsPlayerDead                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOrionHUDWidget::SetWidgetVisibilityDuringDeath(bool bIsPlayerDead)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionHUDWidget", "SetWidgetVisibilityDuringDeath");

	Params::OrionHUDWidget_SetWidgetVisibilityDuringDeath Parms{};

	Parms.bIsPlayerDead = bIsPlayerDead;

	UObject::ProcessEvent(Func, &Parms);
}


// Function OrionUI.OrionHUDWidget.ShowKillCamWidgets
// (Event, Public, BlueprintCallable, BlueprintEvent)

void UOrionHUDWidget::ShowKillCamWidgets()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionHUDWidget", "ShowKillCamWidgets");

	UObject::ProcessEvent(Func, nullptr);
}


// Function OrionUI.OrionHUDWidget_Arcade.OnStartCountdown
// (Native, Event, Protected, BlueprintEvent)

void UOrionHUDWidget_Arcade::OnStartCountdown()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionHUDWidget_Arcade", "OnStartCountdown");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.OrionRoundGemGrid.OnGemRecount
// (Final, Native, Public, HasOutParams)
// Parameters:
// TArray<class UOrionMcpGemItem*>         CurrentGems                                            (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void UOrionRoundGemGrid::OnGemRecount(TArray<class UOrionMcpGemItem*>* CurrentGems)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionRoundGemGrid", "OnGemRecount");

	Params::OrionRoundGemGrid_OnGemRecount Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (CurrentGems != nullptr)
		*CurrentGems = std::move(Parms.CurrentGems);
}


// Function OrionUI.OrionInfoPanelAbilityRow.HandleDeckEstablished
// (Final, Native, Private)

void UOrionInfoPanelAbilityRow::HandleDeckEstablished()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionInfoPanelAbilityRow", "HandleDeckEstablished");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.OrionInfoPanelAbilityRow.InitializeActiveState
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    bIsActive                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOrionInfoPanelAbilityRow::InitializeActiveState(bool bIsActive)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionInfoPanelAbilityRow", "InitializeActiveState");

	Params::OrionInfoPanelAbilityRow_InitializeActiveState Parms{};

	Parms.bIsActive = bIsActive;

	UObject::ProcessEvent(Func, &Parms);
}


// Function OrionUI.OrionInfoPanelAbilityRow.OnAlreadyActivated
// (Event, Public, BlueprintEvent)

void UOrionInfoPanelAbilityRow::OnAlreadyActivated()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionInfoPanelAbilityRow", "OnAlreadyActivated");

	UObject::ProcessEvent(Func, nullptr);
}


// Function OrionUI.OrionInfoPanelAbilityRow.OnCardEquipped
// (Event, Protected, BlueprintEvent)

void UOrionInfoPanelAbilityRow::OnCardEquipped()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionInfoPanelAbilityRow", "OnCardEquipped");

	UObject::ProcessEvent(Func, nullptr);
}


// Function OrionUI.OrionInfoPanelAbilityRow.OnCardRemoved
// (Event, Protected, BlueprintEvent)

void UOrionInfoPanelAbilityRow::OnCardRemoved()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionInfoPanelAbilityRow", "OnCardRemoved");

	UObject::ProcessEvent(Func, nullptr);
}


// Function OrionUI.OrionInfoPanelAbilityRow.OnGemActivated
// (Event, Public, BlueprintEvent)

void UOrionInfoPanelAbilityRow::OnGemActivated()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionInfoPanelAbilityRow", "OnGemActivated");

	UObject::ProcessEvent(Func, nullptr);
}


// Function OrionUI.OrionInfoPanelAbilityRow.OnInitializedFromCard
// (Event, Protected, BlueprintEvent)

void UOrionInfoPanelAbilityRow::OnInitializedFromCard()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionInfoPanelAbilityRow", "OnInitializedFromCard");

	UObject::ProcessEvent(Func, nullptr);
}


// Function OrionUI.OrionInfoPanelAbilityRow.OnInitializedFromGem
// (Event, Protected, HasOutParams, HasDefaults, BlueprintEvent)
// Parameters:
// struct FLinearColor                     Color                                                  (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOrionInfoPanelAbilityRow::OnInitializedFromGem(const struct FLinearColor& Color)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionInfoPanelAbilityRow", "OnInitializedFromGem");

	Params::OrionInfoPanelAbilityRow_OnInitializedFromGem Parms{};

	Parms.Color = std::move(Color);

	UObject::ProcessEvent(Func, &Parms);
}


// Function OrionUI.OrionInfoPanelStatRow.OnMenuOpenStateChange
// (Final, Native, Public)
// Parameters:
// EOrionMenuSlotTypes                     MenuSlot                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bNewIsOpenState                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOrionInfoPanelStatRow::OnMenuOpenStateChange(EOrionMenuSlotTypes MenuSlot, bool bNewIsOpenState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionInfoPanelStatRow", "OnMenuOpenStateChange");

	Params::OrionInfoPanelStatRow_OnMenuOpenStateChange Parms{};

	Parms.MenuSlot = MenuSlot;
	Parms.bNewIsOpenState = bNewIsOpenState;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.OrionInfoPanelStatRow.StatValueChanged
// (Event, Public, BlueprintEvent)

void UOrionInfoPanelStatRow::StatValueChanged()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionInfoPanelStatRow", "StatValueChanged");

	UObject::ProcessEvent(Func, nullptr);
}


// Function OrionUI.OrionItemizedCounter.OnShowBonusAmount
// (Event, Protected, BlueprintEvent)
// Parameters:
// int32                                   BonusAmount                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOrionItemizedCounter::OnShowBonusAmount(int32 BonusAmount)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionItemizedCounter", "OnShowBonusAmount");

	Params::OrionItemizedCounter_OnShowBonusAmount Parms{};

	Parms.BonusAmount = BonusAmount;

	UObject::ProcessEvent(Func, &Parms);
}


// Function OrionUI.OrionStateWidget_DraftLobby.HandleBannerSelected
// (Final, Native, Private)
// Parameters:
// class UOrionMcpBannerItem*              BannerItem                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOrionStateWidget_DraftLobby::HandleBannerSelected(class UOrionMcpBannerItem* BannerItem)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionStateWidget_DraftLobby", "HandleBannerSelected");

	Params::OrionStateWidget_DraftLobby_HandleBannerSelected Parms{};

	Parms.BannerItem = BannerItem;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.OrionStateWidget_DraftLobby.HandleCustomizeClicked
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// bool                                    bIsCustomizing                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOrionStateWidget_DraftLobby::HandleCustomizeClicked(bool bIsCustomizing)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionStateWidget_DraftLobby", "HandleCustomizeClicked");

	Params::OrionStateWidget_DraftLobby_HandleCustomizeClicked Parms{};

	Parms.bIsCustomizing = bIsCustomizing;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.OrionStateWidget_DraftLobby.HandleHeroSelected
// (Final, Native, Private)
// Parameters:
// class UObject*                          SelectedHero                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bSelected                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOrionStateWidget_DraftLobby::HandleHeroSelected(class UObject* SelectedHero, bool bSelected)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionStateWidget_DraftLobby", "HandleHeroSelected");

	Params::OrionStateWidget_DraftLobby_HandleHeroSelected Parms{};

	Parms.SelectedHero = SelectedHero;
	Parms.bSelected = bSelected;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.OrionStateWidget_DraftLobby.HandlePositionSelected
// (Final, Native, Private)
// Parameters:
// class UOrionBaseButton*                 Button                                                 (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Index_0                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOrionStateWidget_DraftLobby::HandlePositionSelected(class UOrionBaseButton* Button, int32 Index_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionStateWidget_DraftLobby", "HandlePositionSelected");

	Params::OrionStateWidget_DraftLobby_HandlePositionSelected Parms{};

	Parms.Button = Button;
	Parms.Index_0 = Index_0;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.OrionStateWidget_DraftLobby.OnBeginLocalPlayerTurn
// (Event, Protected, BlueprintEvent)

void UOrionStateWidget_DraftLobby::OnBeginLocalPlayerTurn()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionStateWidget_DraftLobby", "OnBeginLocalPlayerTurn");

	UObject::ProcessEvent(Func, nullptr);
}


// Function OrionUI.OrionStateWidget_DraftLobby.OnDraftComplete
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bSuccess                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOrionStateWidget_DraftLobby::OnDraftComplete(bool bSuccess)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionStateWidget_DraftLobby", "OnDraftComplete");

	Params::OrionStateWidget_DraftLobby_OnDraftComplete Parms{};

	Parms.bSuccess = bSuccess;

	UObject::ProcessEvent(Func, &Parms);
}


// Function OrionUI.OrionStateWidget_DraftLobby.OnDraftStarted
// (Event, Protected, BlueprintEvent)
// Parameters:
// EOrionTeamMemberType                    FirstPickerType                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOrionStateWidget_DraftLobby::OnDraftStarted(EOrionTeamMemberType FirstPickerType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionStateWidget_DraftLobby", "OnDraftStarted");

	Params::OrionStateWidget_DraftLobby_OnDraftStarted Parms{};

	Parms.FirstPickerType = FirstPickerType;

	UObject::ProcessEvent(Func, &Parms);
}


// Function OrionUI.OrionStateWidget_DraftLobby.OnEndLocalPlayerTurn
// (Event, Protected, BlueprintEvent)

void UOrionStateWidget_DraftLobby::OnEndLocalPlayerTurn()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionStateWidget_DraftLobby", "OnEndLocalPlayerTurn");

	UObject::ProcessEvent(Func, nullptr);
}


// Function OrionUI.OrionStateWidget_DraftLobby.OnFirstHeroSelected
// (Event, Protected, BlueprintEvent)

void UOrionStateWidget_DraftLobby::OnFirstHeroSelected()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionStateWidget_DraftLobby", "OnFirstHeroSelected");

	UObject::ProcessEvent(Func, nullptr);
}


// Function OrionUI.OrionStateWidget_DraftLobby.OnHeroLockedIn
// (Event, Protected, BlueprintEvent)
// Parameters:
// class UOrionHeroData*                   HeroData                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOrionStateWidget_DraftLobby::OnHeroLockedIn(class UOrionHeroData* HeroData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionStateWidget_DraftLobby", "OnHeroLockedIn");

	Params::OrionStateWidget_DraftLobby_OnHeroLockedIn Parms{};

	Parms.HeroData = HeroData;

	UObject::ProcessEvent(Func, &Parms);
}


// Function OrionUI.OrionStateWidget_DraftLobby.OnLocalPlayerTurnUpNext
// (Event, Protected, BlueprintEvent)

void UOrionStateWidget_DraftLobby::OnLocalPlayerTurnUpNext()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionStateWidget_DraftLobby", "OnLocalPlayerTurnUpNext");

	UObject::ProcessEvent(Func, nullptr);
}


// Function OrionUI.OrionStateWidget_DraftLobby.OnLockInButtonEnabledChanged
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bLockInEnabled                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOrionStateWidget_DraftLobby::OnLockInButtonEnabledChanged(bool bLockInEnabled)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionStateWidget_DraftLobby", "OnLockInButtonEnabledChanged");

	Params::OrionStateWidget_DraftLobby_OnLockInButtonEnabledChanged Parms{};

	Parms.bLockInEnabled = bLockInEnabled;

	UObject::ProcessEvent(Func, &Parms);
}


// Function OrionUI.OrionStateWidget_DraftLobby.OnLockInFailed
// (Event, Protected, BlueprintEvent)

void UOrionStateWidget_DraftLobby::OnLockInFailed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionStateWidget_DraftLobby", "OnLockInFailed");

	UObject::ProcessEvent(Func, nullptr);
}


// Function OrionUI.OrionStateWidget_DraftLobby.OnPositionSelected
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bIsFirstSelection                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOrionStateWidget_DraftLobby::OnPositionSelected(bool bIsFirstSelection)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionStateWidget_DraftLobby", "OnPositionSelected");

	Params::OrionStateWidget_DraftLobby_OnPositionSelected Parms{};

	Parms.bIsFirstSelection = bIsFirstSelection;

	UObject::ProcessEvent(Func, &Parms);
}


// Function OrionUI.OrionStateWidget_DraftLobby.OnTeamSet
// (Event, Protected, BlueprintEvent)
// Parameters:
// EOrionTeam                              Team                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOrionStateWidget_DraftLobby::OnTeamSet(EOrionTeam Team)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionStateWidget_DraftLobby", "OnTeamSet");

	Params::OrionStateWidget_DraftLobby_OnTeamSet Parms{};

	Parms.Team = Team;

	UObject::ProcessEvent(Func, &Parms);
}


// Function OrionUI.OrionStateWidget_DraftLobby.OnTurnComplete
// (Event, Protected, BlueprintEvent)
// Parameters:
// EOrionTeamMemberType                    FinishedMemberType                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOrionStateWidget_DraftLobby::OnTurnComplete(EOrionTeamMemberType FinishedMemberType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionStateWidget_DraftLobby", "OnTurnComplete");

	Params::OrionStateWidget_DraftLobby_OnTurnComplete Parms{};

	Parms.FinishedMemberType = FinishedMemberType;

	UObject::ProcessEvent(Func, &Parms);
}


// Function OrionUI.OrionStateWidget_DraftLobby.OnTurnStarted
// (Event, Protected, BlueprintEvent)
// Parameters:
// EOrionTeamMemberType                    PickingMemberType                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOrionStateWidget_DraftLobby::OnTurnStarted(EOrionTeamMemberType PickingMemberType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionStateWidget_DraftLobby", "OnTurnStarted");

	Params::OrionStateWidget_DraftLobby_OnTurnStarted Parms{};

	Parms.PickingMemberType = PickingMemberType;

	UObject::ProcessEvent(Func, &Parms);
}


// Function OrionUI.OrionItemPackOpeningScreen.OnActivePackSet
// (Event, Protected, BlueprintEvent)

void UOrionItemPackOpeningScreen::OnActivePackSet()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionItemPackOpeningScreen", "OnActivePackSet");

	UObject::ProcessEvent(Func, nullptr);
}


// Function OrionUI.OrionItemPackOpeningScreen.OnBeginPackOpen
// (Event, Protected, BlueprintEvent)

void UOrionItemPackOpeningScreen::OnBeginPackOpen()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionItemPackOpeningScreen", "OnBeginPackOpen");

	UObject::ProcessEvent(Func, nullptr);
}


// Function OrionUI.OrionItemPackOpeningScreen.OnPackOpened
// (Event, Protected, BlueprintEvent)
// Parameters:
// EOrionItemRarity                        Rarity                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UOrionMcpCardPackItemDefinition*  PackTypeOpened                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOrionItemPackOpeningScreen::OnPackOpened(EOrionItemRarity Rarity, const class UOrionMcpCardPackItemDefinition* PackTypeOpened)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionItemPackOpeningScreen", "OnPackOpened");

	Params::OrionItemPackOpeningScreen_OnPackOpened Parms{};

	Parms.Rarity = Rarity;
	Parms.PackTypeOpened = PackTypeOpened;

	UObject::ProcessEvent(Func, &Parms);
}


// Function OrionUI.OrionItemPackOpeningScreen.OnResetForNextPack
// (Event, Protected, BlueprintEvent)

void UOrionItemPackOpeningScreen::OnResetForNextPack()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionItemPackOpeningScreen", "OnResetForNextPack");

	UObject::ProcessEvent(Func, nullptr);
}


// Function OrionUI.OrionItemPackOpeningScreen.SetPackToOpen
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UOrionMcpCardPackItem*            PackItem                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOrionItemPackOpeningScreen::SetPackToOpen(class UOrionMcpCardPackItem* PackItem)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionItemPackOpeningScreen", "SetPackToOpen");

	Params::OrionItemPackOpeningScreen_SetPackToOpen Parms{};

	Parms.PackItem = PackItem;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.OrionItemPackOpeningScreen.GetNumAvailableActivePacks
// (Final, Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UOrionItemPackOpeningScreen::GetNumAvailableActivePacks() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionItemPackOpeningScreen", "GetNumAvailableActivePacks");

	Params::OrionItemPackOpeningScreen_GetNumAvailableActivePacks Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function OrionUI.OrionStoreScreen.NavigateToStoreItem
// (Final, Native, Protected)
// Parameters:
// class FString                           OfferId                                                (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOrionStoreScreen::NavigateToStoreItem(const class FString& OfferId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionStoreScreen", "NavigateToStoreItem");

	Params::OrionStoreScreen_NavigateToStoreItem Parms{};

	Parms.OfferId = std::move(OfferId);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.OrionStoreScreen.OnTabChanged
// (Final, Native, Protected)
// Parameters:
// class FName                             TabId                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOrionStoreScreen::OnTabChanged(class FName TabId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionStoreScreen", "OnTabChanged");

	Params::OrionStoreScreen_OnTabChanged Parms{};

	Parms.TabId = TabId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.OrionJungleBuffWidgetContainer.OnBuffAdded
// (Final, Native, Protected)
// Parameters:
// struct FOrionJungleBuffInfo             BuffInfo                                               (Parm, NativeAccessSpecifierPublic)

void UOrionJungleBuffWidgetContainer::OnBuffAdded(const struct FOrionJungleBuffInfo& BuffInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionJungleBuffWidgetContainer", "OnBuffAdded");

	Params::OrionJungleBuffWidgetContainer_OnBuffAdded Parms{};

	Parms.BuffInfo = std::move(BuffInfo);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.OrionJungleBuffWidgetContainer.OnBuffRemoved
// (Final, Native, Protected)
// Parameters:
// struct FOrionJungleBuffInfo             BuffInfo                                               (Parm, NativeAccessSpecifierPublic)

void UOrionJungleBuffWidgetContainer::OnBuffRemoved(const struct FOrionJungleBuffInfo& BuffInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionJungleBuffWidgetContainer", "OnBuffRemoved");

	Params::OrionJungleBuffWidgetContainer_OnBuffRemoved Parms{};

	Parms.BuffInfo = std::move(BuffInfo);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.OrionJungleBuffWidgetContainer.OnBuffUpdated
// (Final, Native, Protected)
// Parameters:
// struct FOrionJungleBuffInfo             BuffInfo                                               (Parm, NativeAccessSpecifierPublic)

void UOrionJungleBuffWidgetContainer::OnBuffUpdated(const struct FOrionJungleBuffInfo& BuffInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionJungleBuffWidgetContainer", "OnBuffUpdated");

	Params::OrionJungleBuffWidgetContainer_OnBuffUpdated Parms{};

	Parms.BuffInfo = std::move(BuffInfo);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.OrionKDAWidget.OnKDAUpdate
// (Final, Native, Protected)
// Parameters:
// int32                                   Kills                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Deaths                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Assists                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Minions                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOrionKDAWidget::OnKDAUpdate(int32 Kills, int32 Deaths, int32 Assists, int32 Minions)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionKDAWidget", "OnKDAUpdate");

	Params::OrionKDAWidget_OnKDAUpdate Parms{};

	Parms.Kills = Kills;
	Parms.Deaths = Deaths;
	Parms.Assists = Assists;
	Parms.Minions = Minions;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.OrionPlayerFeedbackMessageArea.OnShowDetailedMessage
// (Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// class FText                             BuffMessage                                            (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    bCanAutoFade                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOrionPlayerFeedbackMessageArea::OnShowDetailedMessage(const class FText& BuffMessage, bool bCanAutoFade)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionPlayerFeedbackMessageArea", "OnShowDetailedMessage");

	Params::OrionPlayerFeedbackMessageArea_OnShowDetailedMessage Parms{};

	Parms.BuffMessage = std::move(BuffMessage);
	Parms.bCanAutoFade = bCanAutoFade;

	UObject::ProcessEvent(Func, &Parms);
}


// Function OrionUI.OrionKeyboardBinding.HandleOnPrimaryKeySelected
// (Final, Native, Private)
// Parameters:
// struct FInputChord                      SelectedKey                                            (Parm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOrionKeyboardBinding::HandleOnPrimaryKeySelected(const struct FInputChord& SelectedKey)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionKeyboardBinding", "HandleOnPrimaryKeySelected");

	Params::OrionKeyboardBinding_HandleOnPrimaryKeySelected Parms{};

	Parms.SelectedKey = std::move(SelectedKey);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.OrionKeyboardBinding.HandleOnSecondaryKeySelected
// (Final, Native, Private)
// Parameters:
// struct FInputChord                      SelectedKey                                            (Parm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOrionKeyboardBinding::HandleOnSecondaryKeySelected(const struct FInputChord& SelectedKey)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionKeyboardBinding", "HandleOnSecondaryKeySelected");

	Params::OrionKeyboardBinding_HandleOnSecondaryKeySelected Parms{};

	Parms.SelectedKey = std::move(SelectedKey);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.OrionKeyboardSettingsTab.OnHideConflictBindings
// (Event, Public, BlueprintEvent)

void UOrionKeyboardSettingsTab::OnHideConflictBindings()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionKeyboardSettingsTab", "OnHideConflictBindings");

	UObject::ProcessEvent(Func, nullptr);
}


// Function OrionUI.OrionKeyboardSettingsTab.OnShowConflictBindings
// (Event, Public, BlueprintEvent)

void UOrionKeyboardSettingsTab::OnShowConflictBindings()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionKeyboardSettingsTab", "OnShowConflictBindings");

	UObject::ProcessEvent(Func, nullptr);
}


// Function OrionUI.OrionKeyboardSettingsTab.ResetSettings
// (Final, Native, Public, BlueprintCallable)

void UOrionKeyboardSettingsTab::ResetSettings()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionKeyboardSettingsTab", "ResetSettings");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.OrionKillFeedEntryPortrait.OnPortraitSet
// (Event, Protected, BlueprintEvent)
// Parameters:
// EKillFeedParticipantType                Type                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOrionKillFeedEntryPortrait::OnPortraitSet(EKillFeedParticipantType Type)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionKillFeedEntryPortrait", "OnPortraitSet");

	Params::OrionKillFeedEntryPortrait_OnPortraitSet Parms{};

	Parms.Type = Type;

	UObject::ProcessEvent(Func, &Parms);
}


// Function OrionUI.OrionTeamFrame.UpdateBuffCount
// (Event, Protected, BlueprintEvent)
// Parameters:
// int32                                   NewCount                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOrionTeamFrame::UpdateBuffCount(int32 NewCount)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionTeamFrame", "UpdateBuffCount");

	Params::OrionTeamFrame_UpdateBuffCount Parms{};

	Parms.NewCount = NewCount;

	UObject::ProcessEvent(Func, &Parms);
}


// Function OrionUI.OrionLazyImage.SetBrushFromItemDefinition
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UOrionMcpItemDefinition*          ItemDefinition                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bMatchTextureSize                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOrionLazyImage::SetBrushFromItemDefinition(class UOrionMcpItemDefinition* ItemDefinition, bool bMatchTextureSize)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionLazyImage", "SetBrushFromItemDefinition");

	Params::OrionLazyImage_SetBrushFromItemDefinition Parms{};

	Parms.ItemDefinition = ItemDefinition;
	Parms.bMatchTextureSize = bMatchTextureSize;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.OrionLazyImage.SetBrushFromLazyDisplayAsset
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TSoftObjectPtr<class UObject>           LazyObject                                             (ConstParm, Parm, OutParm, ReferenceParm, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bMatchTextureSize                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOrionLazyImage::SetBrushFromLazyDisplayAsset(const TSoftObjectPtr<class UObject>& LazyObject, bool bMatchTextureSize)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionLazyImage", "SetBrushFromLazyDisplayAsset");

	Params::OrionLazyImage_SetBrushFromLazyDisplayAsset Parms{};

	Parms.LazyObject = LazyObject;
	Parms.bMatchTextureSize = bMatchTextureSize;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.OrionLazyImage.SetBrushFromLazyMaterial
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TSoftObjectPtr<class UMaterialInterface>LazyMaterial                                           (ConstParm, Parm, OutParm, ReferenceParm, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOrionLazyImage::SetBrushFromLazyMaterial(const TSoftObjectPtr<class UMaterialInterface>& LazyMaterial)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionLazyImage", "SetBrushFromLazyMaterial");

	Params::OrionLazyImage_SetBrushFromLazyMaterial Parms{};

	Parms.LazyMaterial = LazyMaterial;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.OrionLazyImage.SetBrushFromLazyTexture
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TSoftObjectPtr<class UTexture2D>        LazyTexture                                            (ConstParm, Parm, OutParm, ReferenceParm, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bMatchSize                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOrionLazyImage::SetBrushFromLazyTexture(const TSoftObjectPtr<class UTexture2D>& LazyTexture, bool bMatchSize)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionLazyImage", "SetBrushFromLazyTexture");

	Params::OrionLazyImage_SetBrushFromLazyTexture Parms{};

	Parms.LazyTexture = LazyTexture;
	Parms.bMatchSize = bMatchSize;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.OrionLazyImage.IsLoading
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UOrionLazyImage::IsLoading() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionLazyImage", "IsLoading");

	Params::OrionLazyImage_IsLoading Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function OrionUI.OrionLegacySlateWidget.SetOnCloseHandler
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TDelegate<void()>                       OnCloseHandler                                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void UOrionLegacySlateWidget::SetOnCloseHandler(const TDelegate<void()>& OnCloseHandler)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionLegacySlateWidget", "SetOnCloseHandler");

	Params::OrionLegacySlateWidget_SetOnCloseHandler Parms{};

	Parms.OnCloseHandler = OnCloseHandler;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.OrionLegacySlateWidget.UpdateSlateWidget
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EOrionLegacySlateWidgetType             SlateWidgetType                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOrionLegacySlateWidget::UpdateSlateWidget(EOrionLegacySlateWidgetType SlateWidgetType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionLegacySlateWidget", "UpdateSlateWidget");

	Params::OrionLegacySlateWidget_UpdateSlateWidget Parms{};

	Parms.SlateWidgetType = SlateWidgetType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.OrionSpectatorViewOptions.OnButtonClicked
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UOrionUserWidgetBase*             Button                                                 (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOrionSpectatorViewOptions::OnButtonClicked(class UOrionUserWidgetBase* Button)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionSpectatorViewOptions", "OnButtonClicked");

	Params::OrionSpectatorViewOptions_OnButtonClicked Parms{};

	Parms.Button = Button;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.OrionSpectatorViewOptions.OnRefreshButtonStateFromSpectator
// (Final, Native, Public, BlueprintCallable)

void UOrionSpectatorViewOptions::OnRefreshButtonStateFromSpectator()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionSpectatorViewOptions", "OnRefreshButtonStateFromSpectator");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// DelegateFunction OrionUI.OrionSpectatorViewOptions.OnSetButtonSelected__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// class UOrionUserWidgetBase*             Button                                                 (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bIsSelected                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOrionSpectatorViewOptions::OnSetButtonSelected__DelegateSignature(class UOrionUserWidgetBase* Button, bool bIsSelected)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionSpectatorViewOptions", "OnSetButtonSelected__DelegateSignature");

	Params::OrionSpectatorViewOptions_OnSetButtonSelected__DelegateSignature Parms{};

	Parms.Button = Button;
	Parms.bIsSelected = bIsSelected;

	UObject::ProcessEvent(Func, &Parms);
}


// Function OrionUI.OrionLevelProgressDisplay.OnLevelUp
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bImmediate                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOrionLevelProgressDisplay::OnLevelUp(bool bImmediate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionLevelProgressDisplay", "OnLevelUp");

	Params::OrionLevelProgressDisplay_OnLevelUp Parms{};

	Parms.bImmediate = bImmediate;

	UObject::ProcessEvent(Func, &Parms);
}


// Function OrionUI.OrionLevelProgressDisplay.OnSetProgressLocked
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    ProgressLocked                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOrionLevelProgressDisplay::OnSetProgressLocked(bool ProgressLocked)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionLevelProgressDisplay", "OnSetProgressLocked");

	Params::OrionLevelProgressDisplay_OnSetProgressLocked Parms{};

	Parms.ProgressLocked = ProgressLocked;

	UObject::ProcessEvent(Func, &Parms);
}


// Function OrionUI.OrionLevelUpDisplay.OnLeveledUp
// (Event, Protected, BlueprintEvent)

void UOrionLevelUpDisplay::OnLeveledUp()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionLevelUpDisplay", "OnLeveledUp");

	UObject::ProcessEvent(Func, nullptr);
}


// Function OrionUI.OrionReplayCurrentlySelected.OnCancelClicked
// (Final, Native, Public, BlueprintCallable)

void UOrionReplayCurrentlySelected::OnCancelClicked()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionReplayCurrentlySelected", "OnCancelClicked");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.OrionReplayCurrentlySelected.OnPlayClicked
// (Final, Native, Public, BlueprintCallable)

void UOrionReplayCurrentlySelected::OnPlayClicked()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionReplayCurrentlySelected", "OnPlayClicked");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.OrionReplayCurrentlySelected.OnSkipDraftClicked
// (Final, Native, Public, BlueprintCallable)

void UOrionReplayCurrentlySelected::OnSkipDraftClicked()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionReplayCurrentlySelected", "OnSkipDraftClicked");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.LoadGuardSlot.SetHorizontalAlignment
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EHorizontalAlignment                    InHorizontalAlignment                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ULoadGuardSlot::SetHorizontalAlignment(EHorizontalAlignment InHorizontalAlignment)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LoadGuardSlot", "SetHorizontalAlignment");

	Params::LoadGuardSlot_SetHorizontalAlignment Parms{};

	Parms.InHorizontalAlignment = InHorizontalAlignment;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.LoadGuardSlot.SetPadding
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FMargin                          InPadding                                              (Parm, NoDestructor, NativeAccessSpecifierPublic)

void ULoadGuardSlot::SetPadding(const struct FMargin& InPadding)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LoadGuardSlot", "SetPadding");

	Params::LoadGuardSlot_SetPadding Parms{};

	Parms.InPadding = std::move(InPadding);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.LoadGuardSlot.SetVerticalAlignment
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EVerticalAlignment                      InVerticalAlignment                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ULoadGuardSlot::SetVerticalAlignment(EVerticalAlignment InVerticalAlignment)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LoadGuardSlot", "SetVerticalAlignment");

	Params::LoadGuardSlot_SetVerticalAlignment Parms{};

	Parms.InVerticalAlignment = InVerticalAlignment;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.OrionTableView.ClearSelection
// (Final, Native, Public, BlueprintCallable)

void UOrionTableView::ClearSelection()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionTableView", "ClearSelection");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.OrionTableView.OnItemClicked
// (Final, Native, Protected)
// Parameters:
// class UUserWidget*                      Widget                                                 (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOrionTableView::OnItemClicked(class UUserWidget* Widget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionTableView", "OnItemClicked");

	Params::OrionTableView_OnItemClicked Parms{};

	Parms.Widget = Widget;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.OrionTableView.OnItemHover
// (Final, Native, Protected)
// Parameters:
// class UUserWidget*                      Widget                                                 (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bUnused                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOrionTableView::OnItemHover(class UUserWidget* Widget, bool bUnused)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionTableView", "OnItemHover");

	Params::OrionTableView_OnItemHover Parms{};

	Parms.Widget = Widget;
	Parms.bUnused = bUnused;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.OrionTableView.OnItemSelected
// (Final, Native, Protected)
// Parameters:
// class UUserWidget*                      Widget                                                 (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bSelected                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOrionTableView::OnItemSelected(class UUserWidget* Widget, bool bSelected)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionTableView", "OnItemSelected");

	Params::OrionTableView_OnItemSelected Parms{};

	Parms.Widget = Widget;
	Parms.bSelected = bSelected;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.OrionTableView.OnItemUnhover
// (Final, Native, Protected)
// Parameters:
// class UUserWidget*                      Widget                                                 (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bUnused                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOrionTableView::OnItemUnhover(class UUserWidget* Widget, bool bUnused)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionTableView", "OnItemUnhover");

	Params::OrionTableView_OnItemUnhover Parms{};

	Parms.Widget = Widget;
	Parms.bUnused = bUnused;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// DelegateFunction OrionUI.OrionTableView.OnTableViewItemEvent__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// class UUserWidget*                      Widget                                                 (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOrionTableView::OnTableViewItemEvent__DelegateSignature(class UUserWidget* Widget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionTableView", "OnTableViewItemEvent__DelegateSignature");

	Params::OrionTableView_OnTableViewItemEvent__DelegateSignature Parms{};

	Parms.Widget = Widget;

	UObject::ProcessEvent(Func, &Parms);
}


// Function OrionUI.OrionTableView.SetDataProvider
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<class UObject*>                  InDataProvider                                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void UOrionTableView::SetDataProvider(const TArray<class UObject*>& InDataProvider)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionTableView", "SetDataProvider");

	Params::OrionTableView_SetDataProvider Parms{};

	Parms.InDataProvider = std::move(InDataProvider);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.OrionTableView.SetSelection
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UUserWidget*                      Widget                                                 (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOrionTableView::SetSelection(class UUserWidget* Widget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionTableView", "SetSelection");

	Params::OrionTableView_SetSelection Parms{};

	Parms.Widget = Widget;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.OrionTableView.GetSelection
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UUserWidget*                      ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UUserWidget* UOrionTableView::GetSelection() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionTableView", "GetSelection");

	Params::OrionTableView_GetSelection Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function OrionUI.OrionLoadGuard.BP_GuardAndLoadAsset
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TSoftObjectPtr<class UObject>           InLazyAsset                                            (ConstParm, Parm, OutParm, ReferenceParm, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TDelegate<void(class UObject* Object)>  OnAssetLoaded                                          (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void UOrionLoadGuard::BP_GuardAndLoadAsset(const TSoftObjectPtr<class UObject>& InLazyAsset, const TDelegate<void(class UObject* Object)>& OnAssetLoaded)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionLoadGuard", "BP_GuardAndLoadAsset");

	Params::OrionLoadGuard_BP_GuardAndLoadAsset Parms{};

	Parms.InLazyAsset = InLazyAsset;
	Parms.OnAssetLoaded = OnAssetLoaded;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// DelegateFunction OrionUI.OrionLoadGuard.OnAssetLoaded__DelegateSignature
// (Public, Delegate)
// Parameters:
// class UObject*                          Object                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOrionLoadGuard::OnAssetLoaded__DelegateSignature(class UObject* Object)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionLoadGuard", "OnAssetLoaded__DelegateSignature");

	Params::OrionLoadGuard_OnAssetLoaded__DelegateSignature Parms{};

	Parms.Object = Object;

	UObject::ProcessEvent(Func, &Parms);
}


// Function OrionUI.OrionLoadGuard.SetIsLoading
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bInIsLoading                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOrionLoadGuard::SetIsLoading(bool bInIsLoading)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionLoadGuard", "SetIsLoading");

	Params::OrionLoadGuard_SetIsLoading Parms{};

	Parms.bInIsLoading = bInIsLoading;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.OrionLoadGuard.SetLoadingText
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class FText                             InLoadingText                                          (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UOrionLoadGuard::SetLoadingText(const class FText& InLoadingText)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionLoadGuard", "SetLoadingText");

	Params::OrionLoadGuard_SetLoadingText Parms{};

	Parms.InLoadingText = std::move(InLoadingText);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.OrionLoadGuard.IsLoading
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UOrionLoadGuard::IsLoading() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionLoadGuard", "IsLoading");

	Params::OrionLoadGuard_IsLoading Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function OrionUI.OrionLoadingScreenProgress.DynamicHandleLoadingProgressUpdated
// (Final, Native, Protected)
// Parameters:
// float                                   InLoadingPercent                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOrionLoadingScreenProgress::DynamicHandleLoadingProgressUpdated(float InLoadingPercent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionLoadingScreenProgress", "DynamicHandleLoadingProgressUpdated");

	Params::OrionLoadingScreenProgress_DynamicHandleLoadingProgressUpdated Parms{};

	Parms.InLoadingPercent = InLoadingPercent;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.OrionLoadingScreenProgress.HideTip
// (Final, Native, Public, BlueprintCallable)

void UOrionLoadingScreenProgress::HideTip()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionLoadingScreenProgress", "HideTip");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.OrionLoadingScreenProgress.OnProgressUpdate
// (Event, Protected, BlueprintEvent)

void UOrionLoadingScreenProgress::OnProgressUpdate()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionLoadingScreenProgress", "OnProgressUpdate");

	UObject::ProcessEvent(Func, nullptr);
}


// Function OrionUI.OrionLoadingScreenProgress.OnTipChanged
// (Event, Protected, BlueprintEvent)

void UOrionLoadingScreenProgress::OnTipChanged()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionLoadingScreenProgress", "OnTipChanged");

	UObject::ProcessEvent(Func, nullptr);
}


// Function OrionUI.OrionLoadingScreenProgress.ShowTip
// (Final, Native, Public, BlueprintCallable)

void UOrionLoadingScreenProgress::ShowTip()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionLoadingScreenProgress", "ShowTip");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.OrionRespawnTimerWidget.OnAdvantageBegun
// (Event, Protected, BlueprintEvent)
// Parameters:
// int32                                   AdvantageSize                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   AdvantageTimeRemaining                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOrionRespawnTimerWidget::OnAdvantageBegun(int32 AdvantageSize, float AdvantageTimeRemaining)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionRespawnTimerWidget", "OnAdvantageBegun");

	Params::OrionRespawnTimerWidget_OnAdvantageBegun Parms{};

	Parms.AdvantageSize = AdvantageSize;
	Parms.AdvantageTimeRemaining = AdvantageTimeRemaining;

	UObject::ProcessEvent(Func, &Parms);
}


// Function OrionUI.OrionRespawnTimerWidget.OnAdvantageChanged
// (Event, Protected, BlueprintEvent)
// Parameters:
// int32                                   NewAdvantageSize                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   NewAdvantageTimeRemaining                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOrionRespawnTimerWidget::OnAdvantageChanged(int32 NewAdvantageSize, float NewAdvantageTimeRemaining)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionRespawnTimerWidget", "OnAdvantageChanged");

	Params::OrionRespawnTimerWidget_OnAdvantageChanged Parms{};

	Parms.NewAdvantageSize = NewAdvantageSize;
	Parms.NewAdvantageTimeRemaining = NewAdvantageTimeRemaining;

	UObject::ProcessEvent(Func, &Parms);
}


// Function OrionUI.OrionRespawnTimerWidget.OnAdvantageEnded
// (Event, Protected, BlueprintEvent)

void UOrionRespawnTimerWidget::OnAdvantageEnded()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionRespawnTimerWidget", "OnAdvantageEnded");

	UObject::ProcessEvent(Func, nullptr);
}


// Function OrionUI.OrionRespawnTimerWidget.OnHeroDeath
// (Native, Event, Protected, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FOrionHUDTeamStatusInfo          UpdatedTeamInfo                                        (Parm, NativeAccessSpecifierPublic)

void UOrionRespawnTimerWidget::OnHeroDeath(const struct FOrionHUDTeamStatusInfo& UpdatedTeamInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionRespawnTimerWidget", "OnHeroDeath");

	Params::OrionRespawnTimerWidget_OnHeroDeath Parms{};

	Parms.UpdatedTeamInfo = std::move(UpdatedTeamInfo);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.OrionLoadingScreenRoles.DisplayRole
// (Event, Protected, BlueprintEvent)
// Parameters:
// EOrionPosition                          Position                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EOrionTeam                              Team                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOrionLoadingScreenRoles::DisplayRole(EOrionPosition Position, EOrionTeam Team)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionLoadingScreenRoles", "DisplayRole");

	Params::OrionLoadingScreenRoles_DisplayRole Parms{};

	Parms.Position = Position;
	Parms.Team = Team;

	UObject::ProcessEvent(Func, &Parms);
}


// Function OrionUI.OrionLoadingScreenRoles.ReadyToDisplay
// (Final, Native, Public, BlueprintCallable)

void UOrionLoadingScreenRoles::ReadyToDisplay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionLoadingScreenRoles", "ReadyToDisplay");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.OrionLootCrateOpeningScreen.BeginOpen
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// bool                                    bGolden                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOrionLootCrateOpeningScreen::BeginOpen(bool bGolden)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionLootCrateOpeningScreen", "BeginOpen");

	Params::OrionLootCrateOpeningScreen_BeginOpen Parms{};

	Parms.bGolden = bGolden;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.OrionLootCrateOpeningScreen.BeginSpinnerSlowdown
// (Final, Native, Protected, BlueprintCallable)

void UOrionLootCrateOpeningScreen::BeginSpinnerSlowdown()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionLootCrateOpeningScreen", "BeginSpinnerSlowdown");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.OrionLootCrateOpeningScreen.FinalSpinnerStop
// (Event, Protected, BlueprintEvent)
// Parameters:
// EOrionItemRarity                        ItemRarity                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOrionLootCrateOpeningScreen::FinalSpinnerStop(EOrionItemRarity ItemRarity)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionLootCrateOpeningScreen", "FinalSpinnerStop");

	Params::OrionLootCrateOpeningScreen_FinalSpinnerStop Parms{};

	Parms.ItemRarity = ItemRarity;

	UObject::ProcessEvent(Func, &Parms);
}


// Function OrionUI.OrionLootCrateOpeningScreen.FireSpinner
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// class UOrionMcpCardPackItem*            PackToOpen                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<struct FMcpLootEntry>            RewardArray                                            (ConstParm, Parm, ZeroConstructor, NativeAccessSpecifierPublic)

void UOrionLootCrateOpeningScreen::FireSpinner(const class UOrionMcpCardPackItem* PackToOpen, const TArray<struct FMcpLootEntry>& RewardArray)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionLootCrateOpeningScreen", "FireSpinner");

	Params::OrionLootCrateOpeningScreen_FireSpinner Parms{};

	Parms.PackToOpen = PackToOpen;
	Parms.RewardArray = std::move(RewardArray);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.OrionLootCrateOpeningScreen.NativeReset
// (Final, Native, Protected, BlueprintCallable)

void UOrionLootCrateOpeningScreen::NativeReset()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionLootCrateOpeningScreen", "NativeReset");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.OrionLootCrateOpeningScreen.OnLootCratesUpdated
// (Event, Protected, BlueprintEvent)

void UOrionLootCrateOpeningScreen::OnLootCratesUpdated()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionLootCrateOpeningScreen", "OnLootCratesUpdated");

	UObject::ProcessEvent(Func, nullptr);
}


// Function OrionUI.OrionLootCrateOpeningScreen.OnNextItemShown
// (Event, Protected, BlueprintEvent)
// Parameters:
// EOrionItemRarity                        ItemRarity                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EOrionSpinState                         SpinState                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bIsFinal                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOrionLootCrateOpeningScreen::OnNextItemShown(EOrionItemRarity ItemRarity, EOrionSpinState SpinState, bool bIsFinal)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionLootCrateOpeningScreen", "OnNextItemShown");

	Params::OrionLootCrateOpeningScreen_OnNextItemShown Parms{};

	Parms.ItemRarity = ItemRarity;
	Parms.SpinState = SpinState;
	Parms.bIsFinal = bIsFinal;

	UObject::ProcessEvent(Func, &Parms);
}


// Function OrionUI.OrionLootCrateOpeningScreen.OnPurchaseConfirmationClosed
// (Final, Native, Private, HasOutParams)
// Parameters:
// bool                                    bSuccess                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<struct FStorePurchase>           PurchasedItems                                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void UOrionLootCrateOpeningScreen::OnPurchaseConfirmationClosed(bool bSuccess, const TArray<struct FStorePurchase>& PurchasedItems)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionLootCrateOpeningScreen", "OnPurchaseConfirmationClosed");

	Params::OrionLootCrateOpeningScreen_OnPurchaseConfirmationClosed Parms{};

	Parms.bSuccess = bSuccess;
	Parms.PurchasedItems = std::move(PurchasedItems);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.OrionLootCrateOpeningScreen.SetItemRarities
// (Event, Protected, BlueprintEvent)
// Parameters:
// EOrionItemRarity                        ItemRarity                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOrionLootCrateOpeningScreen::SetItemRarities(EOrionItemRarity ItemRarity)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionLootCrateOpeningScreen", "SetItemRarities");

	Params::OrionLootCrateOpeningScreen_SetItemRarities Parms{};

	Parms.ItemRarity = ItemRarity;

	UObject::ProcessEvent(Func, &Parms);
}


// Function OrionUI.OrionLootCrateOpeningScreen.SetScreenState
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// EOrionSpinState                         NewState                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOrionLootCrateOpeningScreen::SetScreenState(EOrionSpinState NewState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionLootCrateOpeningScreen", "SetScreenState");

	Params::OrionLootCrateOpeningScreen_SetScreenState Parms{};

	Parms.NewState = NewState;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.OrionLootCrateAllItems.HandleItemClicked
// (Final, Native, Protected)
// Parameters:
// class UObject*                          Item                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOrionLootCrateAllItems::HandleItemClicked(class UObject* Item)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionLootCrateAllItems", "HandleItemClicked");

	Params::OrionLootCrateAllItems_HandleItemClicked Parms{};

	Parms.Item = Item;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.OrionLootCrateRewardItem.OnSetActive
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    bActive                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOrionLootCrateRewardItem::OnSetActive(bool bActive)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionLootCrateRewardItem", "OnSetActive");

	Params::OrionLootCrateRewardItem_OnSetActive Parms{};

	Parms.bActive = bActive;

	UObject::ProcessEvent(Func, &Parms);
}


// Function OrionUI.OrionTileDataBlock.ApplyTextPositionPreference
// (Final, Native, Private)

void UOrionTileDataBlock::ApplyTextPositionPreference()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionTileDataBlock", "ApplyTextPositionPreference");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.OrionTileDataBlock.DynamicHandleIconLoadingStateChanged
// (Final, Native, Private)
// Parameters:
// bool                                    bIsLoading                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOrionTileDataBlock::DynamicHandleIconLoadingStateChanged(bool bIsLoading)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionTileDataBlock", "DynamicHandleIconLoadingStateChanged");

	Params::OrionTileDataBlock_DynamicHandleIconLoadingStateChanged Parms{};

	Parms.bIsLoading = bIsLoading;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.OrionMajorGameEventDisplay.NotifyDisplayComplete
// (Final, Native, Protected, BlueprintCallable)

void UOrionMajorGameEventDisplay::NotifyDisplayComplete()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionMajorGameEventDisplay", "NotifyDisplayComplete");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.OrionMajorGameEventDisplay.OnShowEventMessage
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bIsGoodForTeam                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOrionMajorGameEventDisplay::OnShowEventMessage(bool bIsGoodForTeam)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionMajorGameEventDisplay", "OnShowEventMessage");

	Params::OrionMajorGameEventDisplay_OnShowEventMessage Parms{};

	Parms.bIsGoodForTeam = bIsGoodForTeam;

	UObject::ProcessEvent(Func, &Parms);
}


// Function OrionUI.OrionMapMessageFeedEntry.OnCampSpawned
// (Event, Protected, BlueprintEvent)

void UOrionMapMessageFeedEntry::OnCampSpawned()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionMapMessageFeedEntry", "OnCampSpawned");

	UObject::ProcessEvent(Func, nullptr);
}


// Function OrionUI.OrionRewardTooltipItem.LoadPossibleRewards
// (Final, Native, Protected, BlueprintCallable)

void UOrionRewardTooltipItem::LoadPossibleRewards()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionRewardTooltipItem", "LoadPossibleRewards");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.OrionRewardTooltipItem.OnDataSet
// (Event, Protected, BlueprintEvent)
// Parameters:
// EOrionItemRarity                        ItemRarity                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOrionRewardTooltipItem::OnDataSet(EOrionItemRarity ItemRarity)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionRewardTooltipItem", "OnDataSet");

	Params::OrionRewardTooltipItem_OnDataSet Parms{};

	Parms.ItemRarity = ItemRarity;

	UObject::ProcessEvent(Func, &Parms);
}


// Function OrionUI.OrionMasteryLevelDisplay.OnLevelSet
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    bProgressLocked                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOrionMasteryLevelDisplay::OnLevelSet(bool bProgressLocked)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionMasteryLevelDisplay", "OnLevelSet");

	Params::OrionMasteryLevelDisplay_OnLevelSet Parms{};

	Parms.bProgressLocked = bProgressLocked;

	UObject::ProcessEvent(Func, &Parms);
}


// Function OrionUI.OrionStorefront.HandleOfferConfirmed
// (Native, Protected)
// Parameters:
// bool                                    bSuccess                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOrionStorefront::HandleOfferConfirmed(bool bSuccess)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionStorefront", "HandleOfferConfirmed");

	Params::OrionStorefront_HandleOfferConfirmed Parms{};

	Parms.bSuccess = bSuccess;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.OrionStorefront.MoveToItem
// (Final, Native, Private)

void UOrionStorefront::MoveToItem()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionStorefront", "MoveToItem");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.OrionStorefront.OnCatalogFlushed
// (Final, Native, Protected)

void UOrionStorefront::OnCatalogFlushed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionStorefront", "OnCatalogFlushed");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.OrionStorefront.OnOfferConfirmed
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    bSuccess                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOrionStorefront::OnOfferConfirmed(bool bSuccess)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionStorefront", "OnOfferConfirmed");

	Params::OrionStorefront_OnOfferConfirmed Parms{};

	Parms.bSuccess = bSuccess;

	UObject::ProcessEvent(Func, &Parms);
}


// Function OrionUI.OrionStorefront.OnRefreshStorefront
// (Event, Public, BlueprintEvent)

void UOrionStorefront::OnRefreshStorefront()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionStorefront", "OnRefreshStorefront");

	UObject::ProcessEvent(Func, nullptr);
}


// Function OrionUI.OrionStorefront.RefreshStorefront
// (Native, Protected)

void UOrionStorefront::RefreshStorefront()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionStorefront", "RefreshStorefront");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.OrionStorefront.SetStorefrontType
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EOrionStoreFront                        InStorefrontType                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOrionStorefront::SetStorefrontType(EOrionStoreFront InStorefrontType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionStorefront", "SetStorefrontType");

	Params::OrionStorefront_SetStorefrontType Parms{};

	Parms.InStorefrontType = InStorefrontType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.OrionMasteryOnboardPopupRoot.OnShowConfirmationPage
// (Event, Public, BlueprintEvent)

void UOrionMasteryOnboardPopupRoot::OnShowConfirmationPage()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionMasteryOnboardPopupRoot", "OnShowConfirmationPage");

	UObject::ProcessEvent(Func, nullptr);
}


// Function OrionUI.OrionMasteryOnboardPopupRoot.OnShowCongratulationsPage
// (Event, Public, BlueprintEvent)

void UOrionMasteryOnboardPopupRoot::OnShowCongratulationsPage()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionMasteryOnboardPopupRoot", "OnShowCongratulationsPage");

	UObject::ProcessEvent(Func, nullptr);
}


// Function OrionUI.OrionMasteryOnboardPopupRoot.OnShowSelectionPage
// (Event, Public, BlueprintEvent)

void UOrionMasteryOnboardPopupRoot::OnShowSelectionPage()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionMasteryOnboardPopupRoot", "OnShowSelectionPage");

	UObject::ProcessEvent(Func, nullptr);
}


// Function OrionUI.OrionMasteryOnboardPopupSelectRole.GetNumFreeMasteriesUsed
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UOrionMasteryOnboardPopupSelectRole::GetNumFreeMasteriesUsed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionMasteryOnboardPopupSelectRole", "GetNumFreeMasteriesUsed");

	Params::OrionMasteryOnboardPopupSelectRole_GetNumFreeMasteriesUsed Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function OrionUI.OrionMasteryOnboardPopupSelectRole.SetRoleWidgetsArray
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<class UOrionMasteryOnboardHeroRolePair*>InHeroRolePairWidgets                                  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, ContainsInstancedReference, NativeAccessSpecifierPublic)

void UOrionMasteryOnboardPopupSelectRole::SetRoleWidgetsArray(const TArray<class UOrionMasteryOnboardHeroRolePair*>& InHeroRolePairWidgets)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionMasteryOnboardPopupSelectRole", "SetRoleWidgetsArray");

	Params::OrionMasteryOnboardPopupSelectRole_SetRoleWidgetsArray Parms{};

	Parms.InHeroRolePairWidgets = std::move(InHeroRolePairWidgets);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.OrionMasteryOnboardHeroRolePair.HeroMasteryOwned
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UOrionMasteryOnboardHeroRolePair::HeroMasteryOwned()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionMasteryOnboardHeroRolePair", "HeroMasteryOwned");

	Params::OrionMasteryOnboardHeroRolePair_HeroMasteryOwned Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function OrionUI.OrionMasteryOnboardHeroRolePair.OnChangeInHeroSelectability
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    bIsSelectable                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOrionMasteryOnboardHeroRolePair::OnChangeInHeroSelectability(bool bIsSelectable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionMasteryOnboardHeroRolePair", "OnChangeInHeroSelectability");

	Params::OrionMasteryOnboardHeroRolePair_OnChangeInHeroSelectability Parms{};

	Parms.bIsSelectable = bIsSelectable;

	UObject::ProcessEvent(Func, &Parms);
}


// Function OrionUI.OrionMasteryOnboardHeroRolePair.OnRecommendChange
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    bIsRecommended                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOrionMasteryOnboardHeroRolePair::OnRecommendChange(bool bIsRecommended)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionMasteryOnboardHeroRolePair", "OnRecommendChange");

	Params::OrionMasteryOnboardHeroRolePair_OnRecommendChange Parms{};

	Parms.bIsRecommended = bIsRecommended;

	UObject::ProcessEvent(Func, &Parms);
}


// Function OrionUI.OrionMasteryOnboardHeroRolePair.SetHero
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UOrionHeroData*                   InHeroPtr                                              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOrionMasteryOnboardHeroRolePair::SetHero(const class UOrionHeroData* InHeroPtr)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionMasteryOnboardHeroRolePair", "SetHero");

	Params::OrionMasteryOnboardHeroRolePair_SetHero Parms{};

	Parms.InHeroPtr = InHeroPtr;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.OrionMasteryOnboardHeroRolePair.SetRoleText
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class FText                             NewRoleText                                            (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UOrionMasteryOnboardHeroRolePair::SetRoleText(const class FText& NewRoleText)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionMasteryOnboardHeroRolePair", "SetRoleText");

	Params::OrionMasteryOnboardHeroRolePair_SetRoleText Parms{};

	Parms.NewRoleText = std::move(NewRoleText);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.OrionMcpUIUtils.ClearNewItem
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UUserWidget*                      Widget                                                 (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UOrionMcpItem*                    InItem                                                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UOrionMcpUIUtils::ClearNewItem(class UUserWidget* Widget, const class UOrionMcpItem* InItem)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("OrionMcpUIUtils", "ClearNewItem");

	Params::OrionMcpUIUtils_ClearNewItem Parms{};

	Parms.Widget = Widget;
	Parms.InItem = InItem;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function OrionUI.OrionMcpUIUtils.IsItemNew
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UUserWidget*                      Widget                                                 (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UOrionMcpItem*                    InItem                                                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UOrionMcpUIUtils::IsItemNew(class UUserWidget* Widget, const class UOrionMcpItem* InItem)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("OrionMcpUIUtils", "IsItemNew");

	Params::OrionMcpUIUtils_IsItemNew Parms{};

	Parms.Widget = Widget;
	Parms.InItem = InItem;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function OrionUI.OrionMilestoneRewardCarousel.OnLeftClicked
// (Final, Native, Protected)

void UOrionMilestoneRewardCarousel::OnLeftClicked()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionMilestoneRewardCarousel", "OnLeftClicked");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.OrionMilestoneRewardCarousel.OnPipClicked
// (Final, Native, Protected)
// Parameters:
// int32                                   PipIdx                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOrionMilestoneRewardCarousel::OnPipClicked(int32 PipIdx)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionMilestoneRewardCarousel", "OnPipClicked");

	Params::OrionMilestoneRewardCarousel_OnPipClicked Parms{};

	Parms.PipIdx = PipIdx;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.OrionMilestoneRewardCarousel.OnRightClicked
// (Final, Native, Protected)

void UOrionMilestoneRewardCarousel::OnRightClicked()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionMilestoneRewardCarousel", "OnRightClicked");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.OrionMilestoneRewardCarousel.OnScroll
// (Final, Native, Protected)

void UOrionMilestoneRewardCarousel::OnScroll()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionMilestoneRewardCarousel", "OnScroll");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.OrionMilestoneRewardWidgetBase.AnimateInClaimState
// (Event, Protected, BlueprintEvent)

void UOrionMilestoneRewardWidgetBase::AnimateInClaimState()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionMilestoneRewardWidgetBase", "AnimateInClaimState");

	UObject::ProcessEvent(Func, nullptr);
}


// Function OrionUI.OrionMilestoneRewardWidgetBase.AnimateOutClaimState
// (Event, Protected, BlueprintEvent)

void UOrionMilestoneRewardWidgetBase::AnimateOutClaimState()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionMilestoneRewardWidgetBase", "AnimateOutClaimState");

	UObject::ProcessEvent(Func, nullptr);
}


// Function OrionUI.OrionMilestoneRewardWidgetBase.DynamicHandlePostMatchShown
// (Final, Native, Protected)

void UOrionMilestoneRewardWidgetBase::DynamicHandlePostMatchShown()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionMilestoneRewardWidgetBase", "DynamicHandlePostMatchShown");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.OrionMilestoneRewardWidgetBase.OnBeginPips
// (Event, Protected, BlueprintEvent)

void UOrionMilestoneRewardWidgetBase::OnBeginPips()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionMilestoneRewardWidgetBase", "OnBeginPips");

	UObject::ProcessEvent(Func, nullptr);
}


// Function OrionUI.OrionMuteMenuRow.OnMutePressed
// (Final, Native, Protected, BlueprintCallable)

void UOrionMuteMenuRow::OnMutePressed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionMuteMenuRow", "OnMutePressed");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.OrionNewCardsUpdatePopup.GetMasteryChestCount
// (Final, Native, Private, BlueprintCallable)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UOrionNewCardsUpdatePopup::GetMasteryChestCount()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionNewCardsUpdatePopup", "GetMasteryChestCount");

	Params::OrionNewCardsUpdatePopup_GetMasteryChestCount Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function OrionUI.OrionNewCardsUpdatePopup.OnNext
// (Event, Protected, BlueprintEvent)

void UOrionNewCardsUpdatePopup::OnNext()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionNewCardsUpdatePopup", "OnNext");

	UObject::ProcessEvent(Func, nullptr);
}


// Function OrionUI.OrionNewCardsUpdatePopup.OnPrevious
// (Event, Protected, BlueprintEvent)

void UOrionNewCardsUpdatePopup::OnPrevious()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionNewCardsUpdatePopup", "OnPrevious");

	UObject::ProcessEvent(Func, nullptr);
}


// Function OrionUI.OrionNumberPicker.OnValueChanged_BP
// (Event, Protected, BlueprintEvent)
// Parameters:
// int32                                   NewValue                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bIncreased                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOrionNumberPicker::OnValueChanged_BP(int32 NewValue, bool bIncreased)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionNumberPicker", "OnValueChanged_BP");

	Params::OrionNumberPicker_OnValueChanged_BP Parms{};

	Parms.NewValue = NewValue;
	Parms.bIncreased = bIncreased;

	UObject::ProcessEvent(Func, &Parms);
}


// Function OrionUI.OrionNumberPicker.GetCurrentValue
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UOrionNumberPicker::GetCurrentValue() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionNumberPicker", "GetCurrentValue");

	Params::OrionNumberPicker_GetCurrentValue Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function OrionUI.OrionPackOpenScreen_Chests.NotifyRewardAccepted
// (Final, Native, Protected, BlueprintCallable)

void UOrionPackOpenScreen_Chests::NotifyRewardAccepted()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionPackOpenScreen_Chests", "NotifyRewardAccepted");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.OrionPackOpenScreen_Chests.NotifyRewardOutroComplete
// (Final, Native, Protected, BlueprintCallable)

void UOrionPackOpenScreen_Chests::NotifyRewardOutroComplete()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionPackOpenScreen_Chests", "NotifyRewardOutroComplete");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.OrionPackOpenScreen_Chests.OnLargeRewardCount
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bUseLargeRewardBox                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOrionPackOpenScreen_Chests::OnLargeRewardCount(bool bUseLargeRewardBox)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionPackOpenScreen_Chests", "OnLargeRewardCount");

	Params::OrionPackOpenScreen_Chests_OnLargeRewardCount Parms{};

	Parms.bUseLargeRewardBox = bUseLargeRewardBox;

	UObject::ProcessEvent(Func, &Parms);
}


// Function OrionUI.OrionPlayerActionPrompt.DynamicHandlePlayerDeath
// (Final, Native, Private)
// Parameters:
// struct FOrionHUDTeamStatusInfo          NewTeamInfo                                            (Parm, NativeAccessSpecifierPublic)

void UOrionPlayerActionPrompt::DynamicHandlePlayerDeath(const struct FOrionHUDTeamStatusInfo& NewTeamInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionPlayerActionPrompt", "DynamicHandlePlayerDeath");

	Params::OrionPlayerActionPrompt_DynamicHandlePlayerDeath Parms{};

	Parms.NewTeamInfo = std::move(NewTeamInfo);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.OrionPlayerActionPrompt.SetCallToAction
// (Event, Protected, BlueprintEvent)
// Parameters:
// EPlayerActionPromptMessage              ActionPrompt                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOrionPlayerActionPrompt::SetCallToAction(EPlayerActionPromptMessage ActionPrompt)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionPlayerActionPrompt", "SetCallToAction");

	Params::OrionPlayerActionPrompt_SetCallToAction Parms{};

	Parms.ActionPrompt = ActionPrompt;

	UObject::ProcessEvent(Func, &Parms);
}


// Function OrionUI.OrionPlayerRateMenu.SetMyParent
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UOrionSinglePlayerRating*         _NewParent                                             (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOrionPlayerRateMenu::SetMyParent(class UOrionSinglePlayerRating* _NewParent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionPlayerRateMenu", "SetMyParent");

	Params::OrionPlayerRateMenu_SetMyParent Parms{};

	Parms._NewParent = _NewParent;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.OrionPlayRoot.HandleAIDifficultySelected
// (Final, Native, Private)
// Parameters:
// EAIBotDifficulty                        SelectedDifficulty                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOrionPlayRoot::HandleAIDifficultySelected(EAIBotDifficulty SelectedDifficulty)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionPlayRoot", "HandleAIDifficultySelected");

	Params::OrionPlayRoot_HandleAIDifficultySelected Parms{};

	Parms.SelectedDifficulty = SelectedDifficulty;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.OrionPlayRoot.HandleGameTypeSelected
// (Final, Native, Private)
// Parameters:
// class UOrionBaseButton*                 SelectedButton                                         (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ButtonIndex                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOrionPlayRoot::HandleGameTypeSelected(class UOrionBaseButton* SelectedButton, int32 ButtonIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionPlayRoot", "HandleGameTypeSelected");

	Params::OrionPlayRoot_HandleGameTypeSelected Parms{};

	Parms.SelectedButton = SelectedButton;
	Parms.ButtonIndex = ButtonIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.OrionPostGameRoot.GetTabList
// (Event, Protected, BlueprintEvent)
// Parameters:
// class UOrionTabListWidget*              ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UOrionTabListWidget* UOrionPostGameRoot::GetTabList()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionPostGameRoot", "GetTabList");

	Params::OrionPostGameRoot_GetTabList Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function OrionUI.OrionPostGameRoot.HandleRatePlayersClicked
// (Final, Native, Protected, BlueprintCallable)

void UOrionPostGameRoot::HandleRatePlayersClicked()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionPostGameRoot", "HandleRatePlayersClicked");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.OrionPostGameRoot.OnAutomaticFlowComplete
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bShowPlayerRatingCallout                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOrionPostGameRoot::OnAutomaticFlowComplete(bool bShowPlayerRatingCallout)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionPostGameRoot", "OnAutomaticFlowComplete");

	Params::OrionPostGameRoot_OnAutomaticFlowComplete Parms{};

	Parms.bShowPlayerRatingCallout = bShowPlayerRatingCallout;

	UObject::ProcessEvent(Func, &Parms);
}


// Function OrionUI.OrionPostGameRoot.DidPlayerWin
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UOrionPostGameRoot::DidPlayerWin() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionPostGameRoot", "DidPlayerWin");

	Params::OrionPostGameRoot_DidPlayerWin Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function OrionUI.OrionPostGameRoot.GetHeroUsedInLastMatch
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UOrionHeroData*                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UOrionHeroData* UOrionPostGameRoot::GetHeroUsedInLastMatch() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionPostGameRoot", "GetHeroUsedInLastMatch");

	Params::OrionPostGameRoot_GetHeroUsedInLastMatch Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function OrionUI.OrionMatchSummaryReward.OnReveal
// (Event, Protected, BlueprintEvent)

void UOrionMatchSummaryReward::OnReveal()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionMatchSummaryReward", "OnReveal");

	UObject::ProcessEvent(Func, nullptr);
}


// Function OrionUI.OrionProfileInventoryItem.UpdateQuantity
// (Final, Native, Public, BlueprintCallable)

void UOrionProfileInventoryItem::UpdateQuantity()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionProfileInventoryItem", "UpdateQuantity");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.OrionProgressiveRewardProgress.HandleRewardFanfareComplete
// (Final, Native, Protected, BlueprintCallable)

void UOrionProgressiveRewardProgress::HandleRewardFanfareComplete()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionProgressiveRewardProgress", "HandleRewardFanfareComplete");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.OrionProgressiveRewardProgress.OnNextRewardReached
// (Event, Protected, BlueprintEvent)
// Parameters:
// class UOrionRewardProgressBar*          ActiveProgressBar_0                                    (ConstParm, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOrionProgressiveRewardProgress::OnNextRewardReached(const class UOrionRewardProgressBar* ActiveProgressBar_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionProgressiveRewardProgress", "OnNextRewardReached");

	Params::OrionProgressiveRewardProgress_OnNextRewardReached Parms{};

	Parms.ActiveProgressBar_0 = ActiveProgressBar_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function OrionUI.OrionPurchaseConfirmationWidget.DynamicHandleCurrencyChanged
// (Final, Native, Private)

void UOrionPurchaseConfirmationWidget::DynamicHandleCurrencyChanged()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionPurchaseConfirmationWidget", "DynamicHandleCurrencyChanged");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.OrionPurchaseConfirmationWidget.DynamicHandleIconLoadingStateChanged
// (Final, Native, Private)
// Parameters:
// bool                                    bIsLoading                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOrionPurchaseConfirmationWidget::DynamicHandleIconLoadingStateChanged(bool bIsLoading)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionPurchaseConfirmationWidget", "DynamicHandleIconLoadingStateChanged");

	Params::OrionPurchaseConfirmationWidget_DynamicHandleIconLoadingStateChanged Parms{};

	Parms.bIsLoading = bIsLoading;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.OrionPurchaseConfirmationWidget.OnBeginPurchase
// (Event, Protected, BlueprintEvent)

void UOrionPurchaseConfirmationWidget::OnBeginPurchase()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionPurchaseConfirmationWidget", "OnBeginPurchase");

	UObject::ProcessEvent(Func, nullptr);
}


// Function OrionUI.OrionPurchaseConfirmationWidget.OnPurchaseComplete
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bSuccessful                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOrionPurchaseConfirmationWidget::OnPurchaseComplete(bool bSuccessful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionPurchaseConfirmationWidget", "OnPurchaseComplete");

	Params::OrionPurchaseConfirmationWidget_OnPurchaseComplete Parms{};

	Parms.bSuccessful = bSuccessful;

	UObject::ProcessEvent(Func, &Parms);
}


// Function OrionUI.OrionPurchaseConfirmationWidget.OnShow
// (Event, Protected, BlueprintEvent)

void UOrionPurchaseConfirmationWidget::OnShow()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionPurchaseConfirmationWidget", "OnShow");

	UObject::ProcessEvent(Func, nullptr);
}


// Function OrionUI.OrionQuestLog.AddRandomQuest
// (Final, Native, Protected, BlueprintCallable)

void UOrionQuestLog::AddRandomQuest()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionQuestLog", "AddRandomQuest");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.OrionQuestLog.CompleteRandomTest
// (Final, Native, Protected, BlueprintCallable)

void UOrionQuestLog::CompleteRandomTest()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionQuestLog", "CompleteRandomTest");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.OrionQuestLog.OnLocalHeroDeath
// (Final, Native, Protected)
// Parameters:
// struct FOrionHUDTeamStatusInfo          UpdatedTeamInfo                                        (Parm, NativeAccessSpecifierPublic)

void UOrionQuestLog::OnLocalHeroDeath(const struct FOrionHUDTeamStatusInfo& UpdatedTeamInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionQuestLog", "OnLocalHeroDeath");

	Params::OrionQuestLog_OnLocalHeroDeath Parms{};

	Parms.UpdatedTeamInfo = std::move(UpdatedTeamInfo);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.OrionQuestLog.OnLocalHeroSpawn
// (Final, Native, Protected)
// Parameters:
// struct FOrionHUDTeamStatusInfo          UpdatedTeamInfo                                        (Parm, NativeAccessSpecifierPublic)

void UOrionQuestLog::OnLocalHeroSpawn(const struct FOrionHUDTeamStatusInfo& UpdatedTeamInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionQuestLog", "OnLocalHeroSpawn");

	Params::OrionQuestLog_OnLocalHeroSpawn Parms{};

	Parms.UpdatedTeamInfo = std::move(UpdatedTeamInfo);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.OrionQuestLog.UpdateRandomQuest
// (Final, Native, Protected, BlueprintCallable)

void UOrionQuestLog::UpdateRandomQuest()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionQuestLog", "UpdateRandomQuest");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.OrionReachRewardWidgetBase.BeginFill
// (Final, Native, Protected, BlueprintCallable)

void UOrionReachRewardWidgetBase::BeginFill()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionReachRewardWidgetBase", "BeginFill");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.OrionReachRewardWidgetBase.DynamicHandleGiftBoxOpened
// (Final, Native, Protected, HasOutParams)
// Parameters:
// struct FOrionLootNotification           LootNotification                                       (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    bShowFanfare                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOrionReachRewardWidgetBase::DynamicHandleGiftBoxOpened(const struct FOrionLootNotification& LootNotification, bool bShowFanfare)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionReachRewardWidgetBase", "DynamicHandleGiftBoxOpened");

	Params::OrionReachRewardWidgetBase_DynamicHandleGiftBoxOpened Parms{};

	Parms.LootNotification = std::move(LootNotification);
	Parms.bShowFanfare = bShowFanfare;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.OrionReachRewardWidgetBase.DynamicHandlePostMatchShown
// (Final, Native, Protected)

void UOrionReachRewardWidgetBase::DynamicHandlePostMatchShown()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionReachRewardWidgetBase", "DynamicHandlePostMatchShown");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.OrionReachRewardWidgetBase.FanfareOutComplete
// (Final, Native, Protected, BlueprintCallable)

void UOrionReachRewardWidgetBase::FanfareOutComplete()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionReachRewardWidgetBase", "FanfareOutComplete");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.OrionReachRewardWidgetBase.OnChestClaimBegun
// (Event, Protected, BlueprintEvent)

void UOrionReachRewardWidgetBase::OnChestClaimBegun()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionReachRewardWidgetBase", "OnChestClaimBegun");

	UObject::ProcessEvent(Func, nullptr);
}


// Function OrionUI.OrionReachRewardWidgetBase.OnChestClaimComplete
// (Event, Protected, BlueprintEvent)

void UOrionReachRewardWidgetBase::OnChestClaimComplete()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionReachRewardWidgetBase", "OnChestClaimComplete");

	UObject::ProcessEvent(Func, nullptr);
}


// Function OrionUI.OrionReachRewardWidgetBase.OnChestDataSet
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bComplete                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bCanClaim                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bInitial                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bShouldShowStars                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOrionReachRewardWidgetBase::OnChestDataSet(bool bComplete, bool bCanClaim, bool bInitial, bool bShouldShowStars)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionReachRewardWidgetBase", "OnChestDataSet");

	Params::OrionReachRewardWidgetBase_OnChestDataSet Parms{};

	Parms.bComplete = bComplete;
	Parms.bCanClaim = bCanClaim;
	Parms.bInitial = bInitial;
	Parms.bShouldShowStars = bShouldShowStars;

	UObject::ProcessEvent(Func, &Parms);
}


// Function OrionUI.OrionReachRewardWidgetBase.OnChestTimeExpireBegun
// (Event, Protected, BlueprintEvent)

void UOrionReachRewardWidgetBase::OnChestTimeExpireBegun()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionReachRewardWidgetBase", "OnChestTimeExpireBegun");

	UObject::ProcessEvent(Func, nullptr);
}


// Function OrionUI.OrionReachRewardWidgetBase.OnChestTimeExpireComplete
// (Event, Protected, BlueprintEvent)

void UOrionReachRewardWidgetBase::OnChestTimeExpireComplete()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionReachRewardWidgetBase", "OnChestTimeExpireComplete");

	UObject::ProcessEvent(Func, nullptr);
}


// Function OrionUI.OrionReachRewardWidgetBase.OnShowBonusStart
// (Event, Protected, BlueprintEvent)

void UOrionReachRewardWidgetBase::OnShowBonusStart()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionReachRewardWidgetBase", "OnShowBonusStart");

	UObject::ProcessEvent(Func, nullptr);
}


// Function OrionUI.OrionReachRewardWidgetBase.RefreshData
// (Final, Native, Protected, BlueprintCallable)

void UOrionReachRewardWidgetBase::RefreshData()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionReachRewardWidgetBase", "RefreshData");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.OrionRefineGemScreen.SetGemToRefine
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// class UOrionMcpGemItem*                 GemToRefine                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UOrionCardInspectScreen*          InCardInspectScreen                                    (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOrionRefineGemScreen::SetGemToRefine(const class UOrionMcpGemItem* GemToRefine, class UOrionCardInspectScreen* InCardInspectScreen)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionRefineGemScreen", "SetGemToRefine");

	Params::OrionRefineGemScreen_SetGemToRefine Parms{};

	Parms.GemToRefine = GemToRefine;
	Parms.InCardInspectScreen = InCardInspectScreen;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.OrionRegionListScreen.DynamicHandleItemSelected
// (Final, Native, Protected)
// Parameters:
// class UObject*                          Item                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bIsSelected                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOrionRegionListScreen::DynamicHandleItemSelected(class UObject* Item, bool bIsSelected)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionRegionListScreen", "DynamicHandleItemSelected");

	Params::OrionRegionListScreen_DynamicHandleItemSelected Parms{};

	Parms.Item = Item;
	Parms.bIsSelected = bIsSelected;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.OrionRegionListScreen.DynamicRefreshRegionPingComplete
// (Final, Native, Protected)

void UOrionRegionListScreen::DynamicRefreshRegionPingComplete()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionRegionListScreen", "DynamicRefreshRegionPingComplete");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.OrionRespawnTimerHeroIconWidget.SetCountdownText
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                                   SecondsRemaining                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOrionRespawnTimerHeroIconWidget::SetCountdownText(float SecondsRemaining)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionRespawnTimerHeroIconWidget", "SetCountdownText");

	Params::OrionRespawnTimerHeroIconWidget_SetCountdownText Parms{};

	Parms.SecondsRemaining = SecondsRemaining;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.OrionRespawnTimerHeroIconWidget.SetHeroIcon
// (Event, Public, BlueprintEvent)
// Parameters:
// class UTexture2D*                       HeroIconTexture                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOrionRespawnTimerHeroIconWidget::SetHeroIcon(class UTexture2D* HeroIconTexture)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionRespawnTimerHeroIconWidget", "SetHeroIcon");

	Params::OrionRespawnTimerHeroIconWidget_SetHeroIcon Parms{};

	Parms.HeroIconTexture = HeroIconTexture;

	UObject::ProcessEvent(Func, &Parms);
}


// Function OrionUI.OrionRespawnTimerHeroIconWidget.SetIsFriendly
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    bIsFriendly                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOrionRespawnTimerHeroIconWidget::SetIsFriendly(bool bIsFriendly)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionRespawnTimerHeroIconWidget", "SetIsFriendly");

	Params::OrionRespawnTimerHeroIconWidget_SetIsFriendly Parms{};

	Parms.bIsFriendly = bIsFriendly;

	UObject::ProcessEvent(Func, &Parms);
}


// Function OrionUI.OrionRespawnTimerHeroIconWidget.StartRemoving
// (Native, Event, Public, BlueprintEvent)

void UOrionRespawnTimerHeroIconWidget::StartRemoving()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionRespawnTimerHeroIconWidget", "StartRemoving");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.OrionReticleContainer.OnAddedNewReticle
// (Final, Native, Protected)
// Parameters:
// class UOrionUserWidget_Reticle*         NewReticleWidget                                       (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOrionReticleContainer::OnAddedNewReticle(class UOrionUserWidget_Reticle* NewReticleWidget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionReticleContainer", "OnAddedNewReticle");

	Params::OrionReticleContainer_OnAddedNewReticle Parms{};

	Parms.NewReticleWidget = NewReticleWidget;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.OrionReticleContainer.SetupDefaultReticle
// (Final, Native, Protected)
// Parameters:
// TSubclassOf<class UOrionUserWidget_Reticle>ReticleClass                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOrionReticleContainer::SetupDefaultReticle(TSubclassOf<class UOrionUserWidget_Reticle> ReticleClass)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionReticleContainer", "SetupDefaultReticle");

	Params::OrionReticleContainer_SetupDefaultReticle Parms{};

	Parms.ReticleClass = ReticleClass;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.OrionReticleContainer.UpdateVisuals
// (Final, Native, Protected)

void UOrionReticleContainer::UpdateVisuals()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionReticleContainer", "UpdateVisuals");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.OrionReticleContainer.DumpReticleInfo
// (Native, Event, Protected, BlueprintEvent, Const)

void UOrionReticleContainer::DumpReticleInfo() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionReticleContainer", "DumpReticleInfo");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.OrionProgressCompletionReward.OnFadeInReward
// (Event, Public, BlueprintEvent)

void UOrionProgressCompletionReward::OnFadeInReward()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionProgressCompletionReward", "OnFadeInReward");

	UObject::ProcessEvent(Func, nullptr);
}


// Function OrionUI.OrionProgressCompletionReward.OnHovered
// (Event, Public, BlueprintEvent)

void UOrionProgressCompletionReward::OnHovered()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionProgressCompletionReward", "OnHovered");

	UObject::ProcessEvent(Func, nullptr);
}


// Function OrionUI.OrionProgressCompletionReward.OnRewardEarned
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    bImmediate                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOrionProgressCompletionReward::OnRewardEarned(bool bImmediate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionProgressCompletionReward", "OnRewardEarned");

	Params::OrionProgressCompletionReward_OnRewardEarned Parms{};

	Parms.bImmediate = bImmediate;

	UObject::ProcessEvent(Func, &Parms);
}


// Function OrionUI.OrionProgressCompletionReward.OnUnhovered
// (Event, Public, BlueprintEvent)

void UOrionProgressCompletionReward::OnUnhovered()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionProgressCompletionReward", "OnUnhovered");

	UObject::ProcessEvent(Func, nullptr);
}


// Function OrionUI.OrionProgressCompletionReward.SetCompletedState
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    bIsCompleted                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOrionProgressCompletionReward::SetCompletedState(bool bIsCompleted)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionProgressCompletionReward", "SetCompletedState");

	Params::OrionProgressCompletionReward_SetCompletedState Parms{};

	Parms.bIsCompleted = bIsCompleted;

	UObject::ProcessEvent(Func, &Parms);
}


// Function OrionUI.OrionRewardProgressWidget.ChestFanfareComplete
// (Final, Native, Protected, BlueprintCallable)

void UOrionRewardProgressWidget::ChestFanfareComplete()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionRewardProgressWidget", "ChestFanfareComplete");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.OrionRewardProgressWidget.OnNextChestReached
// (Event, Protected, BlueprintEvent)
// Parameters:
// class UOrionRewardProgressBar*          ActiveProgressBar                                      (ConstParm, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOrionRewardProgressWidget::OnNextChestReached(const class UOrionRewardProgressBar* ActiveProgressBar)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionRewardProgressWidget", "OnNextChestReached");

	Params::OrionRewardProgressWidget_OnNextChestReached Parms{};

	Parms.ActiveProgressBar = ActiveProgressBar;

	UObject::ProcessEvent(Func, &Parms);
}


// Function OrionUI.OrionRollingTextWidget.ChangeState
// (Final, Native, Private, BlueprintCallable)
// Parameters:
// ERollingTextWidgetState                 NewState                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOrionRollingTextWidget::ChangeState(ERollingTextWidgetState NewState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionRollingTextWidget", "ChangeState");

	Params::OrionRollingTextWidget_ChangeState Parms{};

	Parms.NewState = NewState;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.OrionRollingTextWidget.OnTextChangeRequested
// (Event, Protected, BlueprintEvent)

void UOrionRollingTextWidget::OnTextChangeRequested()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionRollingTextWidget", "OnTextChangeRequested");

	UObject::ProcessEvent(Func, nullptr);
}


// Function OrionUI.OrionRollingTextWidget.PerformTextSwap
// (Final, Native, Protected, BlueprintCallable)

void UOrionRollingTextWidget::PerformTextSwap()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionRollingTextWidget", "PerformTextSwap");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.OrionRollingTextWidget.RequestTextChange
// (Final, Native, Public, HasOutParams)
// Parameters:
// class FText                             NewText                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    bImmediate                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOrionRollingTextWidget::RequestTextChange(const class FText& NewText, bool bImmediate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionRollingTextWidget", "RequestTextChange");

	Params::OrionRollingTextWidget_RequestTextChange Parms{};

	Parms.NewText = std::move(NewText);
	Parms.bImmediate = bImmediate;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.OrionScoreDisplayWidget.OnScoreDisplayEnemyTextSet
// (Final, Native, Protected)
// Parameters:
// class FText                             NewText                                                (Parm, NativeAccessSpecifierPublic)

void UOrionScoreDisplayWidget::OnScoreDisplayEnemyTextSet(const class FText& NewText)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionScoreDisplayWidget", "OnScoreDisplayEnemyTextSet");

	Params::OrionScoreDisplayWidget_OnScoreDisplayEnemyTextSet Parms{};

	Parms.NewText = std::move(NewText);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.OrionScoreDisplayWidget.OnScoreDisplayFriendlyTextSet
// (Final, Native, Protected)
// Parameters:
// class FText                             NewText                                                (Parm, NativeAccessSpecifierPublic)

void UOrionScoreDisplayWidget::OnScoreDisplayFriendlyTextSet(const class FText& NewText)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionScoreDisplayWidget", "OnScoreDisplayFriendlyTextSet");

	Params::OrionScoreDisplayWidget_OnScoreDisplayFriendlyTextSet Parms{};

	Parms.NewText = std::move(NewText);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.OrionSkinListItem.BP_OnSkinPurchased
// (Event, Protected, BlueprintEvent)

void UOrionSkinListItem::BP_OnSkinPurchased()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionSkinListItem", "BP_OnSkinPurchased");

	UObject::ProcessEvent(Func, nullptr);
}


// Function OrionUI.OrionSkinListItem.OnSkinDefinitionSet
// (Event, Protected, BlueprintEvent)
// Parameters:
// class UOrionSkinItemDefinition*         Skin                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOrionSkinListItem::OnSkinDefinitionSet(class UOrionSkinItemDefinition* Skin)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionSkinListItem", "OnSkinDefinitionSet");

	Params::OrionSkinListItem_OnSkinDefinitionSet Parms{};

	Parms.Skin = Skin;

	UObject::ProcessEvent(Func, &Parms);
}


// Function OrionUI.OrionSkinListItem.IsForSale
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UOrionSkinListItem::IsForSale() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionSkinListItem", "IsForSale");

	Params::OrionSkinListItem_IsForSale Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function OrionUI.OrionSkinListItem.IsOwned
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UOrionSkinListItem::IsOwned() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionSkinListItem", "IsOwned");

	Params::OrionSkinListItem_IsOwned Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function OrionUI.OrionSkinListItem.IsPlayable
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UOrionSkinListItem::IsPlayable() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionSkinListItem", "IsPlayable");

	Params::OrionSkinListItem_IsPlayable Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function OrionUI.OrionStatDisplay.OnStatValueChanged
// (Event, Public, BlueprintEvent)

void UOrionStatDisplay::OnStatValueChanged()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionStatDisplay", "OnStatValueChanged");

	UObject::ProcessEvent(Func, nullptr);
}


// Function OrionUI.OrionStateWidget_FrontEnd.CheckGiftBoxes
// (Final, Native, Protected)

void UOrionStateWidget_FrontEnd::CheckGiftBoxes()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionStateWidget_FrontEnd", "CheckGiftBoxes");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.OrionStateWidget_FrontEnd.DynamicHandleGameLostFocus
// (Final, Native, Protected)

void UOrionStateWidget_FrontEnd::DynamicHandleGameLostFocus()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionStateWidget_FrontEnd", "DynamicHandleGameLostFocus");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.OrionStateWidget_FrontEnd.DynamicHandleGameReceivedFocus
// (Final, Native, Protected)

void UOrionStateWidget_FrontEnd::DynamicHandleGameReceivedFocus()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionStateWidget_FrontEnd", "DynamicHandleGameReceivedFocus");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.OrionStateWidget_FrontEnd.DynamicHandleGiftBoxOpened
// (Final, Native, Protected, HasOutParams)
// Parameters:
// struct FOrionLootNotification           LootNotification                                       (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    bShowFanfare                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOrionStateWidget_FrontEnd::DynamicHandleGiftBoxOpened(const struct FOrionLootNotification& LootNotification, bool bShowFanfare)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionStateWidget_FrontEnd", "DynamicHandleGiftBoxOpened");

	Params::OrionStateWidget_FrontEnd_DynamicHandleGiftBoxOpened Parms{};

	Parms.LootNotification = std::move(LootNotification);
	Parms.bShowFanfare = bShowFanfare;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.OrionStateWidget_FrontEnd.DynamicHandlePurchaseConfirmationActivated
// (Final, Native, Protected)

void UOrionStateWidget_FrontEnd::DynamicHandlePurchaseConfirmationActivated()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionStateWidget_FrontEnd", "DynamicHandlePurchaseConfirmationActivated");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.OrionStateWidget_FrontEnd.DynamicHandlePurchaseConfirmationDeactivated
// (Final, Native, Protected)

void UOrionStateWidget_FrontEnd::DynamicHandlePurchaseConfirmationDeactivated()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionStateWidget_FrontEnd", "DynamicHandlePurchaseConfirmationDeactivated");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.OrionStateWidget_FrontEnd.DynamicHandlePurchaseConfirmationMTXReplenish
// (Final, Native, Protected)

void UOrionStateWidget_FrontEnd::DynamicHandlePurchaseConfirmationMTXReplenish()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionStateWidget_FrontEnd", "DynamicHandlePurchaseConfirmationMTXReplenish");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.OrionStateWidget_FrontEnd.DynamicHandleVideoOnEndReached
// (Final, Native, Protected)

void UOrionStateWidget_FrontEnd::DynamicHandleVideoOnEndReached()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionStateWidget_FrontEnd", "DynamicHandleVideoOnEndReached");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.OrionStateWidget_FrontEnd.DynamicHandleVideoOnOpenFailed
// (Final, Native, Protected)
// Parameters:
// class FString                           OpenedUrl                                              (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOrionStateWidget_FrontEnd::DynamicHandleVideoOnOpenFailed(const class FString& OpenedUrl)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionStateWidget_FrontEnd", "DynamicHandleVideoOnOpenFailed");

	Params::OrionStateWidget_FrontEnd_DynamicHandleVideoOnOpenFailed Parms{};

	Parms.OpenedUrl = std::move(OpenedUrl);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.OrionStateWidget_FrontEnd.OnGameLostFocus
// (Event, Protected, BlueprintEvent)

void UOrionStateWidget_FrontEnd::OnGameLostFocus()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionStateWidget_FrontEnd", "OnGameLostFocus");

	UObject::ProcessEvent(Func, nullptr);
}


// Function OrionUI.OrionStateWidget_FrontEnd.OnGameReceivedFocus
// (Event, Protected, BlueprintEvent)

void UOrionStateWidget_FrontEnd::OnGameReceivedFocus()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionStateWidget_FrontEnd", "OnGameReceivedFocus");

	UObject::ProcessEvent(Func, nullptr);
}


// Function OrionUI.OrionStateWidget_FrontEnd.OnMatchmakingStateChanged
// (Event, Protected, BlueprintEvent)
// Parameters:
// EOrionPartyMatchmakingState             NewState                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOrionStateWidget_FrontEnd::OnMatchmakingStateChanged(EOrionPartyMatchmakingState NewState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionStateWidget_FrontEnd", "OnMatchmakingStateChanged");

	Params::OrionStateWidget_FrontEnd_OnMatchmakingStateChanged Parms{};

	Parms.NewState = NewState;

	UObject::ProcessEvent(Func, &Parms);
}


// Function OrionUI.OrionStateWidget_FrontEnd.ShowContentFlowState
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EOrionFrontEndContentFlow               FlowState                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UOrionStateWidget_FrontEnd::ShowContentFlowState(EOrionFrontEndContentFlow FlowState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionStateWidget_FrontEnd", "ShowContentFlowState");

	Params::OrionStateWidget_FrontEnd_ShowContentFlowState Parms{};

	Parms.FlowState = FlowState;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function OrionUI.OrionStateWidget_HotfixAndLoad.HotfixFinished
// (Final, Native, Protected, BlueprintCallable)

void UOrionStateWidget_HotfixAndLoad::HotfixFinished()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionStateWidget_HotfixAndLoad", "HotfixFinished");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.OrionSurrenderWidget.HideWidget
// (Native, Event, Protected, BlueprintCallable, BlueprintEvent)

void UOrionSurrenderWidget::HideWidget()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionSurrenderWidget", "HideWidget");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.OrionSurrenderWidget.OnPlayerSurrenderStatusChange
// (Final, Native, Protected)
// Parameters:
// class AOrionPlayerState_Game*           PlayerState                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ESurrenderVote                          Vote                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOrionSurrenderWidget::OnPlayerSurrenderStatusChange(const class AOrionPlayerState_Game* PlayerState, ESurrenderVote Vote)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionSurrenderWidget", "OnPlayerSurrenderStatusChange");

	Params::OrionSurrenderWidget_OnPlayerSurrenderStatusChange Parms{};

	Parms.PlayerState = PlayerState;
	Parms.Vote = Vote;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.OrionSurrenderWidget.OnTeamSurrenderStatusChange
// (Final, Native, Protected)
// Parameters:
// class AOrionTeamInfo*                   SurrenderTeam                                          (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ETeamSurrenderStatus                    TeamVoteStatus                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOrionSurrenderWidget::OnTeamSurrenderStatusChange(const class AOrionTeamInfo* SurrenderTeam, ETeamSurrenderStatus TeamVoteStatus)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionSurrenderWidget", "OnTeamSurrenderStatusChange");

	Params::OrionSurrenderWidget_OnTeamSurrenderStatusChange Parms{};

	Parms.SurrenderTeam = SurrenderTeam;
	Parms.TeamVoteStatus = TeamVoteStatus;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.OrionSurrenderWidget.ShowWidget
// (Native, Event, Protected, BlueprintCallable, BlueprintEvent)

void UOrionSurrenderWidget::ShowWidget()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionSurrenderWidget", "ShowWidget");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.OrionTabListWidget.DisableTabWithReason
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class FName                             TabNameID                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FText                             Reason                                                 (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UOrionTabListWidget::DisableTabWithReason(class FName TabNameID, const class FText& Reason)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionTabListWidget", "DisableTabWithReason");

	Params::OrionTabListWidget_DisableTabWithReason Parms{};

	Parms.TabNameID = TabNameID;
	Parms.Reason = std::move(Reason);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.OrionTabListWidget.GetTabButtonByID
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             TabNameID                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UOrionTabButton*                  ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UOrionTabButton* UOrionTabListWidget::GetTabButtonByID(class FName TabNameID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionTabListWidget", "GetTabButtonByID");

	Params::OrionTabListWidget_GetTabButtonByID Parms{};

	Parms.TabNameID = TabNameID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function OrionUI.OrionTabListWidget.HandleTabButtonSelected
// (Final, Native, Private)
// Parameters:
// class UOrionBaseButton*                 SelectedTabButton                                      (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ButtonIndex                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOrionTabListWidget::HandleTabButtonSelected(class UOrionBaseButton* SelectedTabButton, int32 ButtonIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionTabListWidget", "HandleTabButtonSelected");

	Params::OrionTabListWidget_HandleTabButtonSelected Parms{};

	Parms.SelectedTabButton = SelectedTabButton;
	Parms.ButtonIndex = ButtonIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.OrionTabListWidget.HandleTabLeft
// (Final, Native, Public, BlueprintCallable)

void UOrionTabListWidget::HandleTabLeft()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionTabListWidget", "HandleTabLeft");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.OrionTabListWidget.HandleTabRight
// (Final, Native, Public, BlueprintCallable)

void UOrionTabListWidget::HandleTabRight()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionTabListWidget", "HandleTabRight");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.OrionTabListWidget.RegisterAssetID
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             TabId                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FText                             TabName                                                (Parm, NativeAccessSpecifierPublic)
// TSoftClassPtr<class UClass>             WidgetAssetID                                          (Parm, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             SceneName                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             TutorialID                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TSubclassOf<class UOrionTabButton>      ButtonClass                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bLoadNow                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOrionTabListWidget::RegisterAssetID(class FName TabId, const class FText& TabName, TSoftClassPtr<class UClass> WidgetAssetID, class FName SceneName, class FName TutorialID, TSubclassOf<class UOrionTabButton> ButtonClass, bool bLoadNow)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionTabListWidget", "RegisterAssetID");

	Params::OrionTabListWidget_RegisterAssetID Parms{};

	Parms.TabId = TabId;
	Parms.TabName = std::move(TabName);
	Parms.WidgetAssetID = WidgetAssetID;
	Parms.SceneName = SceneName;
	Parms.TutorialID = TutorialID;
	Parms.ButtonClass = ButtonClass;
	Parms.bLoadNow = bLoadNow;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.OrionTabListWidget.RegisterInstance
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             TabId                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FText                             TabName                                                (Parm, NativeAccessSpecifierPublic)
// class UWidget*                          Widget                                                 (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             SceneName                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             TutorialID                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TSubclassOf<class UOrionTabButton>      ButtonClass                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOrionTabListWidget::RegisterInstance(class FName TabId, const class FText& TabName, class UWidget* Widget, class FName SceneName, class FName TutorialID, TSubclassOf<class UOrionTabButton> ButtonClass)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionTabListWidget", "RegisterInstance");

	Params::OrionTabListWidget_RegisterInstance Parms{};

	Parms.TabId = TabId;
	Parms.TabName = std::move(TabName);
	Parms.Widget = Widget;
	Parms.SceneName = SceneName;
	Parms.TutorialID = TutorialID;
	Parms.ButtonClass = ButtonClass;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.OrionTabListWidget.RegisterInstanceByIndex
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             TabId                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FText                             TabName                                                (Parm, NativeAccessSpecifierPublic)
// int32                                   LinkedSwitcherIndex                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             SceneName                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TSubclassOf<class UOrionTabButton>      ButtonClass                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOrionTabListWidget::RegisterInstanceByIndex(class FName TabId, const class FText& TabName, int32 LinkedSwitcherIndex, class FName SceneName, TSubclassOf<class UOrionTabButton> ButtonClass)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionTabListWidget", "RegisterInstanceByIndex");

	Params::OrionTabListWidget_RegisterInstanceByIndex Parms{};

	Parms.TabId = TabId;
	Parms.TabName = std::move(TabName);
	Parms.LinkedSwitcherIndex = LinkedSwitcherIndex;
	Parms.SceneName = SceneName;
	Parms.ButtonClass = ButtonClass;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.OrionTabListWidget.SelectTabByContent
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UWidget*                          TabContent                                             (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UOrionTabListWidget::SelectTabByContent(class UWidget* TabContent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionTabListWidget", "SelectTabByContent");

	Params::OrionTabListWidget_SelectTabByContent Parms{};

	Parms.TabContent = TabContent;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function OrionUI.OrionTabListWidget.SelectTabByID
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             TabNameID                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UOrionTabListWidget::SelectTabByID(class FName TabNameID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionTabListWidget", "SelectTabByID");

	Params::OrionTabListWidget_SelectTabByID Parms{};

	Parms.TabNameID = TabNameID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function OrionUI.OrionTabListWidget.SetLinkedSwitcher
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UOrionWidgetSwitcher*             OrionSwitcher                                          (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOrionTabListWidget::SetLinkedSwitcher(class UOrionWidgetSwitcher* OrionSwitcher)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionTabListWidget", "SetLinkedSwitcher");

	Params::OrionTabListWidget_SetLinkedSwitcher Parms{};

	Parms.OrionSwitcher = OrionSwitcher;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.OrionTabListWidget.SetListeningForInput
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bShouldListen                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOrionTabListWidget::SetListeningForInput(bool bShouldListen)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionTabListWidget", "SetListeningForInput");

	Params::OrionTabListWidget_SetListeningForInput Parms{};

	Parms.bShouldListen = bShouldListen;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.OrionTabListWidget.SetSelectionRequired
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bRequireSelection                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bClearCurrentSelection                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOrionTabListWidget::SetSelectionRequired(bool bRequireSelection, bool bClearCurrentSelection)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionTabListWidget", "SetSelectionRequired");

	Params::OrionTabListWidget_SetSelectionRequired Parms{};

	Parms.bRequireSelection = bRequireSelection;
	Parms.bClearCurrentSelection = bClearCurrentSelection;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.OrionTabListWidget.SetTabEnabled
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FName                             TabNameID                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bEnable                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOrionTabListWidget::SetTabEnabled(class FName TabNameID, bool bEnable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionTabListWidget", "SetTabEnabled");

	Params::OrionTabListWidget_SetTabEnabled Parms{};

	Parms.TabNameID = TabNameID;
	Parms.bEnable = bEnable;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.OrionTabListWidget.SetTabSelectionBehavior
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EButtonSelectionBehavior                SelectionBehavior                                      (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOrionTabListWidget::SetTabSelectionBehavior(const EButtonSelectionBehavior SelectionBehavior)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionTabListWidget", "SetTabSelectionBehavior");

	Params::OrionTabListWidget_SetTabSelectionBehavior Parms{};

	Parms.SelectionBehavior = SelectionBehavior;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.OrionTabListWidget.UpdateTabInputSettings
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EOrionTabListType                       InListType                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   InInputPriority                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOrionTabListWidget::UpdateTabInputSettings(EOrionTabListType InListType, int32 InInputPriority)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionTabListWidget", "UpdateTabInputSettings");

	Params::OrionTabListWidget_UpdateTabInputSettings Parms{};

	Parms.InListType = InListType;
	Parms.InInputPriority = InInputPriority;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.OrionTabListWidget.BroadcastSceneChange
// (Final, Native, Public, BlueprintCallable, Const)

void UOrionTabListWidget::BroadcastSceneChange() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionTabListWidget", "BroadcastSceneChange");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.OrionTabListWidget.GetActiveTab
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FName                             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FName UOrionTabListWidget::GetActiveTab() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionTabListWidget", "GetActiveTab");

	Params::OrionTabListWidget_GetActiveTab Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function OrionUI.OrionTeamFramePlayer.OnPlayerConnectionChange
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bIsPlayerDisconnected                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOrionTeamFramePlayer::OnPlayerConnectionChange(bool bIsPlayerDisconnected)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionTeamFramePlayer", "OnPlayerConnectionChange");

	Params::OrionTeamFramePlayer_OnPlayerConnectionChange Parms{};

	Parms.bIsPlayerDisconnected = bIsPlayerDisconnected;

	UObject::ProcessEvent(Func, &Parms);
}


// Function OrionUI.OrionTeamFramePlayer.OnPlayerCriticalChange
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bIsPlayerCritical                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOrionTeamFramePlayer::OnPlayerCriticalChange(bool bIsPlayerCritical)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionTeamFramePlayer", "OnPlayerCriticalChange");

	Params::OrionTeamFramePlayer_OnPlayerCriticalChange Parms{};

	Parms.bIsPlayerCritical = bIsPlayerCritical;

	UObject::ProcessEvent(Func, &Parms);
}


// Function OrionUI.OrionTeamFramePlayer.OnPlayerLifeChange
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bIsNowDead                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOrionTeamFramePlayer::OnPlayerLifeChange(bool bIsNowDead)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionTeamFramePlayer", "OnPlayerLifeChange");

	Params::OrionTeamFramePlayer_OnPlayerLifeChange Parms{};

	Parms.bIsNowDead = bIsNowDead;

	UObject::ProcessEvent(Func, &Parms);
}


// Function OrionUI.OrionTeamFramePlayer.OnSetEnergy
// (Event, Protected, BlueprintEvent)
// Parameters:
// float                                   EnergyPercent                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOrionTeamFramePlayer::OnSetEnergy(float EnergyPercent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionTeamFramePlayer", "OnSetEnergy");

	Params::OrionTeamFramePlayer_OnSetEnergy Parms{};

	Parms.EnergyPercent = EnergyPercent;

	UObject::ProcessEvent(Func, &Parms);
}


// Function OrionUI.OrionTeamFramePlayer.OnSetHealth
// (Event, Protected, BlueprintEvent)
// Parameters:
// float                                   HealthPercent                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOrionTeamFramePlayer::OnSetHealth(float HealthPercent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionTeamFramePlayer", "OnSetHealth");

	Params::OrionTeamFramePlayer_OnSetHealth Parms{};

	Parms.HealthPercent = HealthPercent;

	UObject::ProcessEvent(Func, &Parms);
}


// Function OrionUI.OrionTeamFramePlayer.OnSetPlayerState
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bIsFriendly                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bIsLocalPlayer                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOrionTeamFramePlayer::OnSetPlayerState(bool bIsFriendly, bool bIsLocalPlayer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionTeamFramePlayer", "OnSetPlayerState");

	Params::OrionTeamFramePlayer_OnSetPlayerState Parms{};

	Parms.bIsFriendly = bIsFriendly;
	Parms.bIsLocalPlayer = bIsLocalPlayer;

	UObject::ProcessEvent(Func, &Parms);
}


// Function OrionUI.OrionTeamFramePlayer.OnUltReadyChanged
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bIsNowReady                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOrionTeamFramePlayer::OnUltReadyChanged(bool bIsNowReady)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionTeamFramePlayer", "OnUltReadyChanged");

	Params::OrionTeamFramePlayer_OnUltReadyChanged Parms{};

	Parms.bIsNowReady = bIsNowReady;

	UObject::ProcessEvent(Func, &Parms);
}


// Function OrionUI.OrionTeamFramePlayer.OnVisibilityChanged
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bIsNowFrozen                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOrionTeamFramePlayer::OnVisibilityChanged(bool bIsNowFrozen)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionTeamFramePlayer", "OnVisibilityChanged");

	Params::OrionTeamFramePlayer_OnVisibilityChanged Parms{};

	Parms.bIsNowFrozen = bIsNowFrozen;

	UObject::ProcessEvent(Func, &Parms);
}


// Function OrionUI.OrionTowerHealthBar.HandleSetMinionCount
// (Final, Native, Private)
// Parameters:
// class AActor*                           Actor                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   MinionCount                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOrionTowerHealthBar::HandleSetMinionCount(class AActor* Actor, int32 MinionCount)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionTowerHealthBar", "HandleSetMinionCount");

	Params::OrionTowerHealthBar_HandleSetMinionCount Parms{};

	Parms.Actor = Actor;
	Parms.MinionCount = MinionCount;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.OrionTowerHealthBar.HandleSetPlayerTargetingTowerState
// (Final, Native, Private)
// Parameters:
// class AActor*                           Actor                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bIsTargeted                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOrionTowerHealthBar::HandleSetPlayerTargetingTowerState(class AActor* Actor, bool bIsTargeted)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionTowerHealthBar", "HandleSetPlayerTargetingTowerState");

	Params::OrionTowerHealthBar_HandleSetPlayerTargetingTowerState Parms{};

	Parms.Actor = Actor;
	Parms.bIsTargeted = bIsTargeted;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.OrionTowerHealthBar.HandleSetTowerHealth
// (Final, Native, Private)
// Parameters:
// class AActor*                           Actor                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOrionTowerHealthBar::HandleSetTowerHealth(class AActor* Actor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionTowerHealthBar", "HandleSetTowerHealth");

	Params::OrionTowerHealthBar_HandleSetTowerHealth Parms{};

	Parms.Actor = Actor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.OrionTowerHealthBar.HandleShowTowerMeter
// (Final, Native, Private)
// Parameters:
// class AActor*                           Actor                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOrionTowerHealthBar::HandleShowTowerMeter(class AActor* Actor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionTowerHealthBar", "HandleShowTowerMeter");

	Params::OrionTowerHealthBar_HandleShowTowerMeter Parms{};

	Parms.Actor = Actor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.OrionTowerHealthBar.OnChangeTargetedStatus
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bIsTargetingPlayer                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOrionTowerHealthBar::OnChangeTargetedStatus(bool bIsTargetingPlayer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionTowerHealthBar", "OnChangeTargetedStatus");

	Params::OrionTowerHealthBar_OnChangeTargetedStatus Parms{};

	Parms.bIsTargetingPlayer = bIsTargetingPlayer;

	UObject::ProcessEvent(Func, &Parms);
}


// Function OrionUI.OrionTowerHealthBar.OnHideMeter
// (Event, Protected, BlueprintEvent)

void UOrionTowerHealthBar::OnHideMeter()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionTowerHealthBar", "OnHideMeter");

	UObject::ProcessEvent(Func, nullptr);
}


// Function OrionUI.OrionTowerHealthBar.OnLocalHeroDeath
// (Final, Native, Private)
// Parameters:
// struct FOrionHUDTeamStatusInfo          UpdatedTeamInfo                                        (Parm, NativeAccessSpecifierPublic)

void UOrionTowerHealthBar::OnLocalHeroDeath(const struct FOrionHUDTeamStatusInfo& UpdatedTeamInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionTowerHealthBar", "OnLocalHeroDeath");

	Params::OrionTowerHealthBar_OnLocalHeroDeath Parms{};

	Parms.UpdatedTeamInfo = std::move(UpdatedTeamInfo);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.OrionTowerHealthBar.OnLowMinionWarning
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bInWarningRange                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOrionTowerHealthBar::OnLowMinionWarning(bool bInWarningRange)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionTowerHealthBar", "OnLowMinionWarning");

	Params::OrionTowerHealthBar_OnLowMinionWarning Parms{};

	Parms.bInWarningRange = bInWarningRange;

	UObject::ProcessEvent(Func, &Parms);
}


// Function OrionUI.OrionTowerHealthBar.OnShowMeter
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bIsTowerFriendly_0                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bIsTargetingPlayer                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOrionTowerHealthBar::OnShowMeter(bool bIsTowerFriendly_0, bool bIsTargetingPlayer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionTowerHealthBar", "OnShowMeter");

	Params::OrionTowerHealthBar_OnShowMeter Parms{};

	Parms.bIsTowerFriendly_0 = bIsTowerFriendly_0;
	Parms.bIsTargetingPlayer = bIsTargetingPlayer;

	UObject::ProcessEvent(Func, &Parms);
}


// Function OrionUI.OrionTowerHealthBar.OnTargetTower
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bIsPlayerTargetingTower                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOrionTowerHealthBar::OnTargetTower(bool bIsPlayerTargetingTower)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionTowerHealthBar", "OnTargetTower");

	Params::OrionTowerHealthBar_OnTargetTower Parms{};

	Parms.bIsPlayerTargetingTower = bIsPlayerTargetingTower;

	UObject::ProcessEvent(Func, &Parms);
}


// Function OrionUI.OrionUnlockRankWidget.OnCanAffordTimeCurrency
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    bCanAfford                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOrionUnlockRankWidget::OnCanAffordTimeCurrency(bool bCanAfford)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionUnlockRankWidget", "OnCanAffordTimeCurrency");

	Params::OrionUnlockRankWidget_OnCanAffordTimeCurrency Parms{};

	Parms.bCanAfford = bCanAfford;

	UObject::ProcessEvent(Func, &Parms);
}


// Function OrionUI.OrionUnlockRankWidget.OnUnlockTypeSet
// (Event, Public, BlueprintEvent)
// Parameters:
// EUnlockType                             SelectedRankType                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOrionUnlockRankWidget::OnUnlockTypeSet(EUnlockType SelectedRankType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionUnlockRankWidget", "OnUnlockTypeSet");

	Params::OrionUnlockRankWidget_OnUnlockTypeSet Parms{};

	Parms.SelectedRankType = SelectedRankType;

	UObject::ProcessEvent(Func, &Parms);
}


// Function OrionUI.OrionUnlockRankWidget.UpdatePurchaseButtons
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    bShowCoins                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bShowFreeButton                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOrionUnlockRankWidget::UpdatePurchaseButtons(bool bShowCoins, bool bShowFreeButton)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionUnlockRankWidget", "UpdatePurchaseButtons");

	Params::OrionUnlockRankWidget_UpdatePurchaseButtons Parms{};

	Parms.bShowCoins = bShowCoins;
	Parms.bShowFreeButton = bShowFreeButton;

	UObject::ProcessEvent(Func, &Parms);
}


// Function OrionUI.OrionUnlockRankWidget.GetUnlockType
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// EUnlockType                             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EUnlockType UOrionUnlockRankWidget::GetUnlockType() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionUnlockRankWidget", "GetUnlockType");

	Params::OrionUnlockRankWidget_GetUnlockType Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function OrionUI.OrionUserWidgetHost.GetRawContent
// (Final, Native, Public)
// Parameters:
// class UUserWidget*                      ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UUserWidget* UOrionUserWidgetHost::GetRawContent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionUserWidgetHost", "GetRawContent");

	Params::OrionUserWidgetHost_GetRawContent Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function OrionUI.OrionUserWidgetHost.SetContent
// (Final, Native, Public)
// Parameters:
// class UUserWidget*                      NewContent                                             (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOrionUserWidgetHost::SetContent(class UUserWidget* NewContent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionUserWidgetHost", "SetContent");

	Params::OrionUserWidgetHost_SetContent Parms{};

	Parms.NewContent = NewContent;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.OrionVaultTokenPurchaseWidget.OnShowOpen
// (Event, Protected, BlueprintEvent)

void UOrionVaultTokenPurchaseWidget::OnShowOpen()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionVaultTokenPurchaseWidget", "OnShowOpen");

	UObject::ProcessEvent(Func, nullptr);
}


// Function OrionUI.OrionVaultTokenPurchaseWidget.OnShowPurchase
// (Event, Protected, BlueprintEvent)

void UOrionVaultTokenPurchaseWidget::OnShowPurchase()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionVaultTokenPurchaseWidget", "OnShowPurchase");

	UObject::ProcessEvent(Func, nullptr);
}


// Function OrionUI.OrionVideoTitles.AddTitleEvent
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct FTimespan                        Time                                                   (ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UWidgetAnimation*                 Animation                                              (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOrionVideoTitles::AddTitleEvent(const struct FTimespan& Time, class UWidgetAnimation* Animation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionVideoTitles", "AddTitleEvent");

	Params::OrionVideoTitles_AddTitleEvent Parms{};

	Parms.Time = std::move(Time);
	Parms.Animation = Animation;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.OrionVideoTitles.OnTitleEvent
// (Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// struct FOrionVideoTitleEvent            TitleEvent                                             (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)

void UOrionVideoTitles::OnTitleEvent(const struct FOrionVideoTitleEvent& TitleEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionVideoTitles", "OnTitleEvent");

	Params::OrionVideoTitles_OnTitleEvent Parms{};

	Parms.TitleEvent = std::move(TitleEvent);

	UObject::ProcessEvent(Func, &Parms);
}


// Function OrionUI.OrionVideoTitles.SetPlayer
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UMediaPlayer*                     InMediaPlayer                                          (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOrionVideoTitles::SetPlayer(const class UMediaPlayer* InMediaPlayer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionVideoTitles", "SetPlayer");

	Params::OrionVideoTitles_SetPlayer Parms{};

	Parms.InMediaPlayer = InMediaPlayer;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.OrionWidgetSwitcher.HandleActiveWidgetDeactivated
// (Final, Native, Private)

void UOrionWidgetSwitcher::HandleActiveWidgetDeactivated()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionWidgetSwitcher", "HandleActiveWidgetDeactivated");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.OrionXpAssembly.InitInHUD
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UOrionBaseHUDWidget*              InHUDWidget                                            (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOrionXpAssembly::InitInHUD(class UOrionBaseHUDWidget* InHUDWidget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionXpAssembly", "InitInHUD");

	Params::OrionXpAssembly_InitInHUD Parms{};

	Parms.InHUDWidget = InHUDWidget;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.OrionXpAssembly.OnCardPointsUpdate
// (Final, Native, Protected)
// Parameters:
// int32                                   NewCardPointsSpent                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   NewCardPointsMax                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOrionXpAssembly::OnCardPointsUpdate(int32 NewCardPointsSpent, int32 NewCardPointsMax)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionXpAssembly", "OnCardPointsUpdate");

	Params::OrionXpAssembly_OnCardPointsUpdate Parms{};

	Parms.NewCardPointsSpent = NewCardPointsSpent;
	Parms.NewCardPointsMax = NewCardPointsMax;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.OrionXpAssembly.OnCardXPUpdate
// (Final, Native, Protected)
// Parameters:
// float                                   XP                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   MaxXP                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOrionXpAssembly::OnCardXPUpdate(float XP, float MaxXP)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionXpAssembly", "OnCardXPUpdate");

	Params::OrionXpAssembly_OnCardXPUpdate Parms{};

	Parms.XP = XP;
	Parms.MaxXP = MaxXP;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.OrionXpAssembly.OnPlayerLevelUp
// (Final, Native, Protected)
// Parameters:
// int32                                   NewLevel                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOrionXpAssembly::OnPlayerLevelUp(int32 NewLevel)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionXpAssembly", "OnPlayerLevelUp");

	Params::OrionXpAssembly_OnPlayerLevelUp Parms{};

	Parms.NewLevel = NewLevel;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.OrionXpAssembly.OnPlayerXPUpdate
// (Final, Native, Protected)
// Parameters:
// int32                                   XP                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   MaxXP                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UOrionXpAssembly::OnPlayerXPUpdate(int32 XP, int32 MaxXP)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OrionXpAssembly", "OnPlayerXPUpdate");

	Params::OrionXpAssembly_OnPlayerXPUpdate Parms{};

	Parms.XP = XP;
	Parms.MaxXP = MaxXP;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.OutlinePanel.AddChildToOutline
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UWidget*                          Content                                                (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPanelSlot*                       ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UPanelSlot* UOutlinePanel::AddChildToOutline(class UWidget* Content)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OutlinePanel", "AddChildToOutline");

	Params::OutlinePanel_AddChildToOutline Parms{};

	Parms.Content = Content;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function OrionUI.OutlinePanel.SetOutlineSize
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FMargin                          InOutlineSize                                          (Parm, NoDestructor, NativeAccessSpecifierPublic)

void UOutlinePanel::SetOutlineSize(const struct FMargin& InOutlineSize)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("OutlinePanel", "SetOutlineSize");

	Params::OutlinePanel_SetOutlineSize Parms{};

	Parms.InOutlineSize = std::move(InOutlineSize);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.PageView.DynamicOnItemClicked
// (Final, Native, Protected)
// Parameters:
// class UUserWidget*                      Widget                                                 (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPageView::DynamicOnItemClicked(class UUserWidget* Widget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PageView", "DynamicOnItemClicked");

	Params::PageView_DynamicOnItemClicked Parms{};

	Parms.Widget = Widget;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.PageView.DynamicOnItemHover
// (Final, Native, Protected)
// Parameters:
// class UUserWidget*                      Widget                                                 (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bUnused                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPageView::DynamicOnItemHover(class UUserWidget* Widget, bool bUnused)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PageView", "DynamicOnItemHover");

	Params::PageView_DynamicOnItemHover Parms{};

	Parms.Widget = Widget;
	Parms.bUnused = bUnused;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.PageView.DynamicOnItemSelected
// (Final, Native, Protected)
// Parameters:
// class UUserWidget*                      Widget                                                 (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bSelected                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPageView::DynamicOnItemSelected(class UUserWidget* Widget, bool bSelected)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PageView", "DynamicOnItemSelected");

	Params::PageView_DynamicOnItemSelected Parms{};

	Parms.Widget = Widget;
	Parms.bSelected = bSelected;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.PageView.DynamicOnItemUnhover
// (Final, Native, Protected)
// Parameters:
// class UUserWidget*                      Widget                                                 (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bUnused                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPageView::DynamicOnItemUnhover(class UUserWidget* Widget, bool bUnused)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PageView", "DynamicOnItemUnhover");

	Params::PageView_DynamicOnItemUnhover Parms{};

	Parms.Widget = Widget;
	Parms.bUnused = bUnused;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.PageView.DynamicOnPageLeft
// (Final, Native, Protected)
// Parameters:
// class UOrionBaseButton*                 Button                                                 (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPageView::DynamicOnPageLeft(class UOrionBaseButton* Button)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PageView", "DynamicOnPageLeft");

	Params::PageView_DynamicOnPageLeft Parms{};

	Parms.Button = Button;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.PageView.DynamicOnPagePicked
// (Final, Native, Protected)
// Parameters:
// class UOrionBaseButton*                 SelectedButton                                         (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ButtonIndex                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPageView::DynamicOnPagePicked(class UOrionBaseButton* SelectedButton, int32 ButtonIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PageView", "DynamicOnPagePicked");

	Params::PageView_DynamicOnPagePicked Parms{};

	Parms.SelectedButton = SelectedButton;
	Parms.ButtonIndex = ButtonIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.PageView.DynamicOnPageRight
// (Final, Native, Protected)
// Parameters:
// class UOrionBaseButton*                 Button                                                 (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPageView::DynamicOnPageRight(class UOrionBaseButton* Button)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PageView", "DynamicOnPageRight");

	Params::PageView_DynamicOnPageRight Parms{};

	Parms.Button = Button;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// DelegateFunction OrionUI.PageView.PageViewOnItemClicked__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// class UUserWidget*                      Widget                                                 (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPageView::PageViewOnItemClicked__DelegateSignature(class UUserWidget* Widget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PageView", "PageViewOnItemClicked__DelegateSignature");

	Params::PageView_PageViewOnItemClicked__DelegateSignature Parms{};

	Parms.Widget = Widget;

	UObject::ProcessEvent(Func, &Parms);
}


// DelegateFunction OrionUI.PageView.PageViewOnItemHovered__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// class UUserWidget*                      Widget                                                 (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPageView::PageViewOnItemHovered__DelegateSignature(class UUserWidget* Widget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PageView", "PageViewOnItemHovered__DelegateSignature");

	Params::PageView_PageViewOnItemHovered__DelegateSignature Parms{};

	Parms.Widget = Widget;

	UObject::ProcessEvent(Func, &Parms);
}


// DelegateFunction OrionUI.PageView.PageViewOnItemSelected__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// class UUserWidget*                      Widget                                                 (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bSelected                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPageView::PageViewOnItemSelected__DelegateSignature(class UUserWidget* Widget, bool bSelected)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PageView", "PageViewOnItemSelected__DelegateSignature");

	Params::PageView_PageViewOnItemSelected__DelegateSignature Parms{};

	Parms.Widget = Widget;
	Parms.bSelected = bSelected;

	UObject::ProcessEvent(Func, &Parms);
}


// Function OrionUI.PageView.RequestRefresh
// (Final, Native, Public, BlueprintCallable)

void UPageView::RequestRefresh()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PageView", "RequestRefresh");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.PageView.SetPage
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   Page                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPageView::SetPage(int32 Page)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PageView", "SetPage");

	Params::PageView_SetPage Parms{};

	Parms.Page = Page;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.PageView.GetPage
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UPageView::GetPage() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PageView", "GetPage");

	Params::PageView_GetPage Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function OrionUI.PopupAnchor.Close
// (Final, Native, Public, BlueprintCallable)

void UPopupAnchor::Close()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PopupAnchor", "Close");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// DelegateFunction OrionUI.PopupAnchor.OnPopupOpenChanged__DelegateSignature
// (Public, Delegate)
// Parameters:
// bool                                    bOpen                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPopupAnchor::OnPopupOpenChanged__DelegateSignature(bool bOpen)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PopupAnchor", "OnPopupOpenChanged__DelegateSignature");

	Params::PopupAnchor_OnPopupOpenChanged__DelegateSignature Parms{};

	Parms.bOpen = bOpen;

	UObject::ProcessEvent(Func, &Parms);
}


// Function OrionUI.PopupAnchor.Open
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    bFocus                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UPopupAnchor::Open(bool bFocus)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PopupAnchor", "Open");

	Params::PopupAnchor_Open Parms{};

	Parms.bFocus = bFocus;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function OrionUI.PopupAnchor.IsOpen
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UPopupAnchor::IsOpen() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PopupAnchor", "IsOpen");

	Params::PopupAnchor_IsOpen Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}

}

