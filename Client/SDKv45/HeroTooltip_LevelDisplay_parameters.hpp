#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: HeroTooltip_LevelDisplay

#include "Basic.hpp"


namespace SDK::Params
{

// Function HeroTooltip_LevelDisplay.HeroTooltip_LevelDisplay_C.ExecuteUbergraph_HeroTooltip_LevelDisplay
// 0x0018 (0x0018 - 0x0000)
struct HeroTooltip_LevelDisplay_C_ExecuteUbergraph_HeroTooltip_LevelDisplay final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable2;                                // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bProgressLocked;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Select_Default;                             // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(HeroTooltip_LevelDisplay_C_ExecuteUbergraph_HeroTooltip_LevelDisplay) == 0x000004, "Wrong alignment on HeroTooltip_LevelDisplay_C_ExecuteUbergraph_HeroTooltip_LevelDisplay");
static_assert(sizeof(HeroTooltip_LevelDisplay_C_ExecuteUbergraph_HeroTooltip_LevelDisplay) == 0x000018, "Wrong size on HeroTooltip_LevelDisplay_C_ExecuteUbergraph_HeroTooltip_LevelDisplay");
static_assert(offsetof(HeroTooltip_LevelDisplay_C_ExecuteUbergraph_HeroTooltip_LevelDisplay, EntryPoint) == 0x000000, "Member 'HeroTooltip_LevelDisplay_C_ExecuteUbergraph_HeroTooltip_LevelDisplay::EntryPoint' has a wrong offset!");
static_assert(offsetof(HeroTooltip_LevelDisplay_C_ExecuteUbergraph_HeroTooltip_LevelDisplay, Temp_bool_Variable) == 0x000004, "Member 'HeroTooltip_LevelDisplay_C_ExecuteUbergraph_HeroTooltip_LevelDisplay::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(HeroTooltip_LevelDisplay_C_ExecuteUbergraph_HeroTooltip_LevelDisplay, Temp_int_Variable) == 0x000008, "Member 'HeroTooltip_LevelDisplay_C_ExecuteUbergraph_HeroTooltip_LevelDisplay::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(HeroTooltip_LevelDisplay_C_ExecuteUbergraph_HeroTooltip_LevelDisplay, Temp_int_Variable2) == 0x00000C, "Member 'HeroTooltip_LevelDisplay_C_ExecuteUbergraph_HeroTooltip_LevelDisplay::Temp_int_Variable2' has a wrong offset!");
static_assert(offsetof(HeroTooltip_LevelDisplay_C_ExecuteUbergraph_HeroTooltip_LevelDisplay, K2Node_Event_bProgressLocked) == 0x000010, "Member 'HeroTooltip_LevelDisplay_C_ExecuteUbergraph_HeroTooltip_LevelDisplay::K2Node_Event_bProgressLocked' has a wrong offset!");
static_assert(offsetof(HeroTooltip_LevelDisplay_C_ExecuteUbergraph_HeroTooltip_LevelDisplay, K2Node_Select_Default) == 0x000014, "Member 'HeroTooltip_LevelDisplay_C_ExecuteUbergraph_HeroTooltip_LevelDisplay::K2Node_Select_Default' has a wrong offset!");

// Function HeroTooltip_LevelDisplay.HeroTooltip_LevelDisplay_C.OnLevelSet
// 0x0001 (0x0001 - 0x0000)
struct HeroTooltip_LevelDisplay_C_OnLevelSet final
{
public:
	bool                                          bProgressLocked;                                   // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(HeroTooltip_LevelDisplay_C_OnLevelSet) == 0x000001, "Wrong alignment on HeroTooltip_LevelDisplay_C_OnLevelSet");
static_assert(sizeof(HeroTooltip_LevelDisplay_C_OnLevelSet) == 0x000001, "Wrong size on HeroTooltip_LevelDisplay_C_OnLevelSet");
static_assert(offsetof(HeroTooltip_LevelDisplay_C_OnLevelSet, bProgressLocked) == 0x000000, "Member 'HeroTooltip_LevelDisplay_C_OnLevelSet::bProgressLocked' has a wrong offset!");

}

