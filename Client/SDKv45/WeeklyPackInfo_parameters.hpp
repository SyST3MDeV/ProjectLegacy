#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WeeklyPackInfo

#include "Basic.hpp"

#include "BlueprintContext_structs.hpp"


namespace SDK::Params
{

// Function WeeklyPackInfo.WeeklyPackInfo_C.ExecuteUbergraph_WeeklyPackInfo
// 0x0168 (0x0168 - 0x0000)
struct WeeklyPackInfo_C_ExecuteUbergraph_WeeklyPackInfo final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FStoreOfferBP                          K2Node_Event_InOffer;                              // 0x0008(0x0130)()
	class UObject*                                K2Node_CustomEvent_Loaded;                         // 0x0138(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UObject* Loaded)>        K2Node_CreateDelegate_OutputDelegate;              // 0x0140(0x0010)(ZeroConstructor, NoDestructor)
	class UObject*                                Temp_object_Variable;                              // 0x0150(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UOrionMcpCardPackItemDefinition*        K2Node_DynamicCast_AsOrion_Mcp_Card_Pack_Item_Definition; // 0x0158(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0160(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WeeklyPackInfo_C_ExecuteUbergraph_WeeklyPackInfo) == 0x000008, "Wrong alignment on WeeklyPackInfo_C_ExecuteUbergraph_WeeklyPackInfo");
static_assert(sizeof(WeeklyPackInfo_C_ExecuteUbergraph_WeeklyPackInfo) == 0x000168, "Wrong size on WeeklyPackInfo_C_ExecuteUbergraph_WeeklyPackInfo");
static_assert(offsetof(WeeklyPackInfo_C_ExecuteUbergraph_WeeklyPackInfo, EntryPoint) == 0x000000, "Member 'WeeklyPackInfo_C_ExecuteUbergraph_WeeklyPackInfo::EntryPoint' has a wrong offset!");
static_assert(offsetof(WeeklyPackInfo_C_ExecuteUbergraph_WeeklyPackInfo, K2Node_Event_InOffer) == 0x000008, "Member 'WeeklyPackInfo_C_ExecuteUbergraph_WeeklyPackInfo::K2Node_Event_InOffer' has a wrong offset!");
static_assert(offsetof(WeeklyPackInfo_C_ExecuteUbergraph_WeeklyPackInfo, K2Node_CustomEvent_Loaded) == 0x000138, "Member 'WeeklyPackInfo_C_ExecuteUbergraph_WeeklyPackInfo::K2Node_CustomEvent_Loaded' has a wrong offset!");
static_assert(offsetof(WeeklyPackInfo_C_ExecuteUbergraph_WeeklyPackInfo, K2Node_CreateDelegate_OutputDelegate) == 0x000140, "Member 'WeeklyPackInfo_C_ExecuteUbergraph_WeeklyPackInfo::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WeeklyPackInfo_C_ExecuteUbergraph_WeeklyPackInfo, Temp_object_Variable) == 0x000150, "Member 'WeeklyPackInfo_C_ExecuteUbergraph_WeeklyPackInfo::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(WeeklyPackInfo_C_ExecuteUbergraph_WeeklyPackInfo, K2Node_DynamicCast_AsOrion_Mcp_Card_Pack_Item_Definition) == 0x000158, "Member 'WeeklyPackInfo_C_ExecuteUbergraph_WeeklyPackInfo::K2Node_DynamicCast_AsOrion_Mcp_Card_Pack_Item_Definition' has a wrong offset!");
static_assert(offsetof(WeeklyPackInfo_C_ExecuteUbergraph_WeeklyPackInfo, K2Node_DynamicCast_bSuccess) == 0x000160, "Member 'WeeklyPackInfo_C_ExecuteUbergraph_WeeklyPackInfo::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function WeeklyPackInfo.WeeklyPackInfo_C.OnOfferSet
// 0x0130 (0x0130 - 0x0000)
struct WeeklyPackInfo_C_OnOfferSet final
{
public:
	struct FStoreOfferBP                          InOffer;                                           // 0x0000(0x0130)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(WeeklyPackInfo_C_OnOfferSet) == 0x000008, "Wrong alignment on WeeklyPackInfo_C_OnOfferSet");
static_assert(sizeof(WeeklyPackInfo_C_OnOfferSet) == 0x000130, "Wrong size on WeeklyPackInfo_C_OnOfferSet");
static_assert(offsetof(WeeklyPackInfo_C_OnOfferSet, InOffer) == 0x000000, "Member 'WeeklyPackInfo_C_OnOfferSet::InOffer' has a wrong offset!");

// Function WeeklyPackInfo.WeeklyPackInfo_C.OnLoaded_9E0F18934046E07FEF6F4EAEE2D4D84F
// 0x0008 (0x0008 - 0x0000)
struct WeeklyPackInfo_C_OnLoaded_9E0F18934046E07FEF6F4EAEE2D4D84F final
{
public:
	class UObject*                                Loaded;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WeeklyPackInfo_C_OnLoaded_9E0F18934046E07FEF6F4EAEE2D4D84F) == 0x000008, "Wrong alignment on WeeklyPackInfo_C_OnLoaded_9E0F18934046E07FEF6F4EAEE2D4D84F");
static_assert(sizeof(WeeklyPackInfo_C_OnLoaded_9E0F18934046E07FEF6F4EAEE2D4D84F) == 0x000008, "Wrong size on WeeklyPackInfo_C_OnLoaded_9E0F18934046E07FEF6F4EAEE2D4D84F");
static_assert(offsetof(WeeklyPackInfo_C_OnLoaded_9E0F18934046E07FEF6F4EAEE2D4D84F, Loaded) == 0x000000, "Member 'WeeklyPackInfo_C_OnLoaded_9E0F18934046E07FEF6F4EAEE2D4D84F::Loaded' has a wrong offset!");

// Function WeeklyPackInfo.WeeklyPackInfo_C.SetPackData
// 0x0020 (0x0020 - 0x0000)
struct WeeklyPackInfo_C_SetPackData final
{
public:
	class UOrionMcpCardPackItemDefinition*        Card_Pack;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UOrionLegacyCardItemDefinition*> CallFunc_GetExplicitCards_Cards;                   // 0x0008(0x0010)(ZeroConstructor, ReferenceParm)
	bool                                          CallFunc_GetExplicitCards_ReturnValue;             // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WeeklyPackInfo_C_SetPackData) == 0x000008, "Wrong alignment on WeeklyPackInfo_C_SetPackData");
static_assert(sizeof(WeeklyPackInfo_C_SetPackData) == 0x000020, "Wrong size on WeeklyPackInfo_C_SetPackData");
static_assert(offsetof(WeeklyPackInfo_C_SetPackData, Card_Pack) == 0x000000, "Member 'WeeklyPackInfo_C_SetPackData::Card_Pack' has a wrong offset!");
static_assert(offsetof(WeeklyPackInfo_C_SetPackData, CallFunc_GetExplicitCards_Cards) == 0x000008, "Member 'WeeklyPackInfo_C_SetPackData::CallFunc_GetExplicitCards_Cards' has a wrong offset!");
static_assert(offsetof(WeeklyPackInfo_C_SetPackData, CallFunc_GetExplicitCards_ReturnValue) == 0x000018, "Member 'WeeklyPackInfo_C_SetPackData::CallFunc_GetExplicitCards_ReturnValue' has a wrong offset!");

}

