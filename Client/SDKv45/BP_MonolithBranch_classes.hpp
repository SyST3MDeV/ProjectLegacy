#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_MonolithBranch

#include "Basic.hpp"

#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_MonolithBranch.BP_MonolithBranch_C
// 0x0028 (0x0340 - 0x0318)
class ABP_MonolithBranch_C final : public AActor
{
public:
	class UStaticMeshComponent*                   SM_Monolith_Branch01;                              // 0x0318(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        Scene;                                             // 0x0320(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_CoverTree_02_ShadowCaster;                      // 0x0328(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x0330(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         MaxDrawDistance;                                   // 0x0338(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void UserConstructionScript();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_MonolithBranch_C">();
	}
	static class ABP_MonolithBranch_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_MonolithBranch_C>();
	}
};
static_assert(alignof(ABP_MonolithBranch_C) == 0x000008, "Wrong alignment on ABP_MonolithBranch_C");
static_assert(sizeof(ABP_MonolithBranch_C) == 0x000340, "Wrong size on ABP_MonolithBranch_C");
static_assert(offsetof(ABP_MonolithBranch_C, SM_Monolith_Branch01) == 0x000318, "Member 'ABP_MonolithBranch_C::SM_Monolith_Branch01' has a wrong offset!");
static_assert(offsetof(ABP_MonolithBranch_C, Scene) == 0x000320, "Member 'ABP_MonolithBranch_C::Scene' has a wrong offset!");
static_assert(offsetof(ABP_MonolithBranch_C, SM_CoverTree_02_ShadowCaster) == 0x000328, "Member 'ABP_MonolithBranch_C::SM_CoverTree_02_ShadowCaster' has a wrong offset!");
static_assert(offsetof(ABP_MonolithBranch_C, DefaultSceneRoot) == 0x000330, "Member 'ABP_MonolithBranch_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(ABP_MonolithBranch_C, MaxDrawDistance) == 0x000338, "Member 'ABP_MonolithBranch_C::MaxDrawDistance' has a wrong offset!");

}

