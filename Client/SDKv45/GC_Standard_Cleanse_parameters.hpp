#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GC_Standard_Cleanse

#include "Basic.hpp"

#include "GameplayAbilities_structs.hpp"


namespace SDK::Params
{

// Function GC_Standard_Cleanse.GC_Standard_Cleanse_C.ExecuteUbergraph_GC_Standard_Cleanse
// 0x0008 (0x0008 - 0x0000)
struct GC_Standard_Cleanse_C_ExecuteUbergraph_GC_Standard_Cleanse final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue2;                     // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(GC_Standard_Cleanse_C_ExecuteUbergraph_GC_Standard_Cleanse) == 0x000004, "Wrong alignment on GC_Standard_Cleanse_C_ExecuteUbergraph_GC_Standard_Cleanse");
static_assert(sizeof(GC_Standard_Cleanse_C_ExecuteUbergraph_GC_Standard_Cleanse) == 0x000008, "Wrong size on GC_Standard_Cleanse_C_ExecuteUbergraph_GC_Standard_Cleanse");
static_assert(offsetof(GC_Standard_Cleanse_C_ExecuteUbergraph_GC_Standard_Cleanse, EntryPoint) == 0x000000, "Member 'GC_Standard_Cleanse_C_ExecuteUbergraph_GC_Standard_Cleanse::EntryPoint' has a wrong offset!");
static_assert(offsetof(GC_Standard_Cleanse_C_ExecuteUbergraph_GC_Standard_Cleanse, CallFunc_IsValid_ReturnValue) == 0x000004, "Member 'GC_Standard_Cleanse_C_ExecuteUbergraph_GC_Standard_Cleanse::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(GC_Standard_Cleanse_C_ExecuteUbergraph_GC_Standard_Cleanse, CallFunc_IsValid_ReturnValue2) == 0x000005, "Member 'GC_Standard_Cleanse_C_ExecuteUbergraph_GC_Standard_Cleanse::CallFunc_IsValid_ReturnValue2' has a wrong offset!");

// Function GC_Standard_Cleanse.GC_Standard_Cleanse_C.WhileActive
// 0x00D8 (0x00D8 - 0x0000)
struct GC_Standard_Cleanse_C_WhileActive final
{
public:
	class AActor*                                 MyTarget;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayCueParameters                 Parameters;                                        // 0x0008(0x00B8)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
	bool                                          ReturnValue;                                       // 0x00C0(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_WhileActive_ReturnValue;                  // 0x00C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C2[0x6];                                       // 0x00C2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_Hero_C*                             K2Node_DynamicCast_AsBP_Hero;                      // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(GC_Standard_Cleanse_C_WhileActive) == 0x000008, "Wrong alignment on GC_Standard_Cleanse_C_WhileActive");
static_assert(sizeof(GC_Standard_Cleanse_C_WhileActive) == 0x0000D8, "Wrong size on GC_Standard_Cleanse_C_WhileActive");
static_assert(offsetof(GC_Standard_Cleanse_C_WhileActive, MyTarget) == 0x000000, "Member 'GC_Standard_Cleanse_C_WhileActive::MyTarget' has a wrong offset!");
static_assert(offsetof(GC_Standard_Cleanse_C_WhileActive, Parameters) == 0x000008, "Member 'GC_Standard_Cleanse_C_WhileActive::Parameters' has a wrong offset!");
static_assert(offsetof(GC_Standard_Cleanse_C_WhileActive, ReturnValue) == 0x0000C0, "Member 'GC_Standard_Cleanse_C_WhileActive::ReturnValue' has a wrong offset!");
static_assert(offsetof(GC_Standard_Cleanse_C_WhileActive, CallFunc_WhileActive_ReturnValue) == 0x0000C1, "Member 'GC_Standard_Cleanse_C_WhileActive::CallFunc_WhileActive_ReturnValue' has a wrong offset!");
static_assert(offsetof(GC_Standard_Cleanse_C_WhileActive, K2Node_DynamicCast_AsBP_Hero) == 0x0000C8, "Member 'GC_Standard_Cleanse_C_WhileActive::K2Node_DynamicCast_AsBP_Hero' has a wrong offset!");
static_assert(offsetof(GC_Standard_Cleanse_C_WhileActive, K2Node_DynamicCast_bSuccess) == 0x0000D0, "Member 'GC_Standard_Cleanse_C_WhileActive::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function GC_Standard_Cleanse.GC_Standard_Cleanse_C.OnRemove
// 0x00C8 (0x00C8 - 0x0000)
struct GC_Standard_Cleanse_C_OnRemove final
{
public:
	class AActor*                                 MyTarget;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayCueParameters                 Parameters;                                        // 0x0008(0x00B8)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
	bool                                          ReturnValue;                                       // 0x00C0(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_OnRemove_ReturnValue;                     // 0x00C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(GC_Standard_Cleanse_C_OnRemove) == 0x000008, "Wrong alignment on GC_Standard_Cleanse_C_OnRemove");
static_assert(sizeof(GC_Standard_Cleanse_C_OnRemove) == 0x0000C8, "Wrong size on GC_Standard_Cleanse_C_OnRemove");
static_assert(offsetof(GC_Standard_Cleanse_C_OnRemove, MyTarget) == 0x000000, "Member 'GC_Standard_Cleanse_C_OnRemove::MyTarget' has a wrong offset!");
static_assert(offsetof(GC_Standard_Cleanse_C_OnRemove, Parameters) == 0x000008, "Member 'GC_Standard_Cleanse_C_OnRemove::Parameters' has a wrong offset!");
static_assert(offsetof(GC_Standard_Cleanse_C_OnRemove, ReturnValue) == 0x0000C0, "Member 'GC_Standard_Cleanse_C_OnRemove::ReturnValue' has a wrong offset!");
static_assert(offsetof(GC_Standard_Cleanse_C_OnRemove, CallFunc_OnRemove_ReturnValue) == 0x0000C1, "Member 'GC_Standard_Cleanse_C_OnRemove::CallFunc_OnRemove_ReturnValue' has a wrong offset!");

}

