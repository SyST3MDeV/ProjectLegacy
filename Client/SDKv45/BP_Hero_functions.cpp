#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Hero

#include "Basic.hpp"

#include "BP_Hero_classes.hpp"
#include "BP_Hero_parameters.hpp"


namespace SDK
{

// Function BP_Hero.BP_Hero_C.ExecuteUbergraph_BP_Hero
// (HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Hero_C::ExecuteUbergraph_BP_Hero(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Hero_C", "ExecuteUbergraph_BP_Hero");

	Params::BP_Hero_C_ExecuteUbergraph_BP_Hero Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Hero.BP_Hero_C.OnCrownReady
// (Event, Public, BlueprintEvent)

void ABP_Hero_C::OnCrownReady()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Hero_C", "OnCrownReady");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Hero.BP_Hero_C.OnShowMasteryCrown
// (BlueprintCallable, BlueprintEvent)

void ABP_Hero_C::OnShowMasteryCrown()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Hero_C", "OnShowMasteryCrown");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Hero.BP_Hero_C.GameplayCue.Damage
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// EGameplayCueEvent                       EventType                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FGameplayCueParameters           Parameters                                             (BlueprintVisible, BlueprintReadOnly, Parm, ContainsInstancedReference)

void ABP_Hero_C::GameplayCue_Damage(EGameplayCueEvent EventType, const struct FGameplayCueParameters& Parameters)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Hero_C", "GameplayCue.Damage");

	Params::BP_Hero_C_GameplayCue_Damage Parms{};

	Parms.EventType = EventType;
	Parms.Parameters = std::move(Parameters);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Hero.BP_Hero_C.DoDamageReaction
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FGameplayCueParameters           Parameters                                             (BlueprintVisible, BlueprintReadOnly, Parm, ContainsInstancedReference)

void ABP_Hero_C::DoDamageReaction(const struct FGameplayCueParameters& Parameters)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Hero_C", "DoDamageReaction");

	Params::BP_Hero_C_DoDamageReaction Parms{};

	Parms.Parameters = std::move(Parameters);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Hero.BP_Hero_C.GameplayCue.Damage.Hero
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// EGameplayCueEvent                       EventType                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FGameplayCueParameters           Parameters                                             (BlueprintVisible, BlueprintReadOnly, Parm, ContainsInstancedReference)

void ABP_Hero_C::GameplayCue_Damage_Hero(EGameplayCueEvent EventType, const struct FGameplayCueParameters& Parameters)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Hero_C", "GameplayCue.Damage.Hero");

	Params::BP_Hero_C_GameplayCue_Damage_Hero Parms{};

	Parms.EventType = EventType;
	Parms.Parameters = std::move(Parameters);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Hero.BP_Hero_C.OnTeamChanged
// (Event, Public, BlueprintEvent)
// Parameters:
// EOrionTeam                              NewTeamIdx                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Hero_C::OnTeamChanged(EOrionTeam NewTeamIdx)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Hero_C", "OnTeamChanged");

	Params::BP_Hero_C_OnTeamChanged Parms{};

	Parms.NewTeamIdx = NewTeamIdx;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Hero.BP_Hero_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void ABP_Hero_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Hero_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Hero.BP_Hero_C.GameplayCue.Death
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// EGameplayCueEvent                       EventType                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FGameplayCueParameters           Parameters                                             (BlueprintVisible, BlueprintReadOnly, Parm, ContainsInstancedReference)

void ABP_Hero_C::GameplayCue_Death(EGameplayCueEvent EventType, const struct FGameplayCueParameters& Parameters)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Hero_C", "GameplayCue.Death");

	Params::BP_Hero_C_GameplayCue_Death Parms{};

	Parms.EventType = EventType;
	Parms.Parameters = std::move(Parameters);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Hero.BP_Hero_C.OnDeath_Bind
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class AOrionChar*                       DeadChar                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AController*                      Killer                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           DamageCauser                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Hero_C::OnDeath_Bind(class AOrionChar* DeadChar, class AController* Killer, class AActor* DamageCauser)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Hero_C", "OnDeath_Bind");

	Params::BP_Hero_C_OnDeath_Bind Parms{};

	Parms.DeadChar = DeadChar;
	Parms.Killer = Killer;
	Parms.DamageCauser = DamageCauser;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Hero.BP_Hero_C.GameplayCue.RecallTeleport
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// EGameplayCueEvent                       EventType                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FGameplayCueParameters           Parameters                                             (BlueprintVisible, BlueprintReadOnly, Parm, ContainsInstancedReference)

void ABP_Hero_C::GameplayCue_RecallTeleport(EGameplayCueEvent EventType, const struct FGameplayCueParameters& Parameters)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Hero_C", "GameplayCue.RecallTeleport");

	Params::BP_Hero_C_GameplayCue_RecallTeleport Parms{};

	Parms.EventType = EventType;
	Parms.Parameters = std::move(Parameters);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Hero.BP_Hero_C.GameplayCue.Damage.CriticalHit
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// EGameplayCueEvent                       EventType                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FGameplayCueParameters           Parameters                                             (BlueprintVisible, BlueprintReadOnly, Parm, ContainsInstancedReference)

void ABP_Hero_C::GameplayCue_Damage_CriticalHit(EGameplayCueEvent EventType, const struct FGameplayCueParameters& Parameters)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Hero_C", "GameplayCue.Damage.CriticalHit");

	Params::BP_Hero_C_GameplayCue_Damage_CriticalHit Parms{};

	Parms.EventType = EventType;
	Parms.Parameters = std::move(Parameters);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Hero.BP_Hero_C.ApplyShadowPlaneMaterials
// (Event, Public, BlueprintEvent)

void ABP_Hero_C::ApplyShadowPlaneMaterials()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Hero_C", "ApplyShadowPlaneMaterials");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Hero.BP_Hero_C.GameplayCue.ShieldDamage
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// EGameplayCueEvent                       EventType                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FGameplayCueParameters           Parameters                                             (BlueprintVisible, BlueprintReadOnly, Parm, ContainsInstancedReference)

void ABP_Hero_C::GameplayCue_ShieldDamage(EGameplayCueEvent EventType, const struct FGameplayCueParameters& Parameters)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Hero_C", "GameplayCue.ShieldDamage");

	Params::BP_Hero_C_GameplayCue_ShieldDamage Parms{};

	Parms.EventType = EventType;
	Parms.Parameters = std::move(Parameters);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Hero.BP_Hero_C.RemoveShadowPlaneMaterials
// (Event, Public, BlueprintEvent)

void ABP_Hero_C::RemoveShadowPlaneMaterials()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Hero_C", "RemoveShadowPlaneMaterials");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Hero.BP_Hero_C.GameplayCue.KnockBack
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// EGameplayCueEvent                       EventType                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FGameplayCueParameters           Parameters                                             (BlueprintVisible, BlueprintReadOnly, Parm, ContainsInstancedReference)

void ABP_Hero_C::GameplayCue_KnockBack(EGameplayCueEvent EventType, const struct FGameplayCueParameters& Parameters)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Hero_C", "GameplayCue.KnockBack");

	Params::BP_Hero_C_GameplayCue_KnockBack Parms{};

	Parms.EventType = EventType;
	Parms.Parameters = std::move(Parameters);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Hero.BP_Hero_C.InpActEvt_Shift_L_K2Node_InputKeyEvent_0
// (BlueprintEvent)
// Parameters:
// struct FKey                             Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void ABP_Hero_C::InpActEvt_Shift_L_K2Node_InputKeyEvent_0(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Hero_C", "InpActEvt_Shift_L_K2Node_InputKeyEvent_0");

	Params::BP_Hero_C_InpActEvt_Shift_L_K2Node_InputKeyEvent_0 Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Hero.BP_Hero_C.InpActEvt_L_K2Node_InputKeyEvent_1
// (BlueprintEvent)
// Parameters:
// struct FKey                             Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void ABP_Hero_C::InpActEvt_L_K2Node_InputKeyEvent_1(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Hero_C", "InpActEvt_L_K2Node_InputKeyEvent_1");

	Params::BP_Hero_C_InpActEvt_L_K2Node_InputKeyEvent_1 Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Hero.BP_Hero_C.UserConstructionScript
// (Event, Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_Hero_C::UserConstructionScript()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Hero_C", "UserConstructionScript");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Hero.BP_Hero_C.SetupTeamColors
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_Hero_C::SetupTeamColors()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Hero_C", "SetupTeamColors");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Hero.BP_Hero_C.DirectionalCameraHitFeedback
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FGameplayCueParameters           CueParams                                              (BlueprintVisible, BlueprintReadOnly, Parm, ContainsInstancedReference)
// class UCameraAnim*                      Anim                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Hero_C::DirectionalCameraHitFeedback(const struct FGameplayCueParameters& CueParams, class UCameraAnim* Anim)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Hero_C", "DirectionalCameraHitFeedback");

	Params::BP_Hero_C_DirectionalCameraHitFeedback Parms{};

	Parms.CueParams = std::move(CueParams);
	Parms.Anim = Anim;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Hero.BP_Hero_C.OnRep_MasteryHatEnabled
// (BlueprintCallable, BlueprintEvent)

void ABP_Hero_C::OnRep_MasteryHatEnabled()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Hero_C", "OnRep_MasteryHatEnabled");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Hero.BP_Hero_C.SetupCrown
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_Hero_C::SetupCrown()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Hero_C", "SetupCrown");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Hero.BP_Hero_C.OnRep_isFlying
// (BlueprintCallable, BlueprintEvent)

void ABP_Hero_C::OnRep_isFlying()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Hero_C", "OnRep_isFlying");

	UObject::ProcessEvent(Func, nullptr);
}

}

