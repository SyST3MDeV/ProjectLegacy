#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: SpawnPad_Manager

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "OrionGame_structs.hpp"


namespace SDK::Params
{

// Function SpawnPad_Manager.SpawnPad_Manager_C.ExecuteUbergraph_SpawnPad_Manager
// 0x0008 (0x0008 - 0x0000)
struct SpawnPad_Manager_C_ExecuteUbergraph_SpawnPad_Manager final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EOrionTeam                                    K2Node_Event_NewTeamIdx;                           // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SpawnPad_Manager_C_ExecuteUbergraph_SpawnPad_Manager) == 0x000004, "Wrong alignment on SpawnPad_Manager_C_ExecuteUbergraph_SpawnPad_Manager");
static_assert(sizeof(SpawnPad_Manager_C_ExecuteUbergraph_SpawnPad_Manager) == 0x000008, "Wrong size on SpawnPad_Manager_C_ExecuteUbergraph_SpawnPad_Manager");
static_assert(offsetof(SpawnPad_Manager_C_ExecuteUbergraph_SpawnPad_Manager, EntryPoint) == 0x000000, "Member 'SpawnPad_Manager_C_ExecuteUbergraph_SpawnPad_Manager::EntryPoint' has a wrong offset!");
static_assert(offsetof(SpawnPad_Manager_C_ExecuteUbergraph_SpawnPad_Manager, K2Node_Event_NewTeamIdx) == 0x000004, "Member 'SpawnPad_Manager_C_ExecuteUbergraph_SpawnPad_Manager::K2Node_Event_NewTeamIdx' has a wrong offset!");

// Function SpawnPad_Manager.SpawnPad_Manager_C.OnTeamChanged
// 0x0001 (0x0001 - 0x0000)
struct SpawnPad_Manager_C_OnTeamChanged final
{
public:
	EOrionTeam                                    NewTeamIdx;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SpawnPad_Manager_C_OnTeamChanged) == 0x000001, "Wrong alignment on SpawnPad_Manager_C_OnTeamChanged");
static_assert(sizeof(SpawnPad_Manager_C_OnTeamChanged) == 0x000001, "Wrong size on SpawnPad_Manager_C_OnTeamChanged");
static_assert(offsetof(SpawnPad_Manager_C_OnTeamChanged, NewTeamIdx) == 0x000000, "Member 'SpawnPad_Manager_C_OnTeamChanged::NewTeamIdx' has a wrong offset!");

// Function SpawnPad_Manager.SpawnPad_Manager_C.UserConstructionScript
// 0x0008 (0x0008 - 0x0000)
struct SpawnPad_Manager_C_UserConstructionScript final
{
public:
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue; // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SpawnPad_Manager_C_UserConstructionScript) == 0x000008, "Wrong alignment on SpawnPad_Manager_C_UserConstructionScript");
static_assert(sizeof(SpawnPad_Manager_C_UserConstructionScript) == 0x000008, "Wrong size on SpawnPad_Manager_C_UserConstructionScript");
static_assert(offsetof(SpawnPad_Manager_C_UserConstructionScript, CallFunc_CreateDynamicMaterialInstance_ReturnValue) == 0x000000, "Member 'SpawnPad_Manager_C_UserConstructionScript::CallFunc_CreateDynamicMaterialInstance_ReturnValue' has a wrong offset!");

// Function SpawnPad_Manager.SpawnPad_Manager_C.HandleTeamColors
// 0x0010 (0x0010 - 0x0000)
struct SpawnPad_Manager_C_HandleTeamColors final
{
public:
	struct FLinearColor                           CallFunc_GetTeamColorFromMPC_ReturnValue;          // 0x0000(0x0010)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SpawnPad_Manager_C_HandleTeamColors) == 0x000004, "Wrong alignment on SpawnPad_Manager_C_HandleTeamColors");
static_assert(sizeof(SpawnPad_Manager_C_HandleTeamColors) == 0x000010, "Wrong size on SpawnPad_Manager_C_HandleTeamColors");
static_assert(offsetof(SpawnPad_Manager_C_HandleTeamColors, CallFunc_GetTeamColorFromMPC_ReturnValue) == 0x000000, "Member 'SpawnPad_Manager_C_HandleTeamColors::CallFunc_GetTeamColorFromMPC_ReturnValue' has a wrong offset!");

// Function SpawnPad_Manager.SpawnPad_Manager_C.DrivePad
// 0x00E0 (0x00E0 - 0x0000)
struct SpawnPad_Manager_C_DrivePad final
{
public:
	float                                         DriverValue;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Pad_ID;                                            // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ID;                                                // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Driver;                                            // 0x000C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   MaterialParameter;                                 // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPointLightComponent*                   RimLight6;                                         // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPointLightComponent*                   RimLight5;                                         // 0x0020(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPointLightComponent*                   RimLight4;                                         // 0x0028(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPointLightComponent*                   RimLight3;                                         // 0x0030(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPointLightComponent*                   RimLight2;                                         // 0x0038(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPointLightComponent*                   RimLight1;                                         // 0x0040(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPointLightComponent*                   CentralLight;                                      // 0x0048(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable2;                                // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable3;                                // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable4;                                // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable5;                                // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable6;                                // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Lerp_ReturnValue;                         // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Lerp_ReturnValue2;                        // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Lerp_ReturnValue3;                        // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_74[0x4];                                       // 0x0074(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPointLightComponent*                   K2Node_Select_Default;                             // 0x0078(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPointLightComponent*                   K2Node_Select2_Default;                            // 0x0080(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPointLightComponent*                   K2Node_Select3_Default;                            // 0x0088(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPointLightComponent*                   K2Node_Select4_Default;                            // 0x0090(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPointLightComponent*                   K2Node_Select5_Default;                            // 0x0098(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable7;                                // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A4[0x4];                                       // 0x00A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPointLightComponent*                   K2Node_Select6_Default;                            // 0x00A8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue;             // 0x00B0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x00C0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Conv_StringToName_ReturnValue;            // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPointLightComponent*                   K2Node_Select7_Default;                            // 0x00D8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SpawnPad_Manager_C_DrivePad) == 0x000008, "Wrong alignment on SpawnPad_Manager_C_DrivePad");
static_assert(sizeof(SpawnPad_Manager_C_DrivePad) == 0x0000E0, "Wrong size on SpawnPad_Manager_C_DrivePad");
static_assert(offsetof(SpawnPad_Manager_C_DrivePad, DriverValue) == 0x000000, "Member 'SpawnPad_Manager_C_DrivePad::DriverValue' has a wrong offset!");
static_assert(offsetof(SpawnPad_Manager_C_DrivePad, Pad_ID) == 0x000004, "Member 'SpawnPad_Manager_C_DrivePad::Pad_ID' has a wrong offset!");
static_assert(offsetof(SpawnPad_Manager_C_DrivePad, ID) == 0x000008, "Member 'SpawnPad_Manager_C_DrivePad::ID' has a wrong offset!");
static_assert(offsetof(SpawnPad_Manager_C_DrivePad, Driver) == 0x00000C, "Member 'SpawnPad_Manager_C_DrivePad::Driver' has a wrong offset!");
static_assert(offsetof(SpawnPad_Manager_C_DrivePad, MaterialParameter) == 0x000010, "Member 'SpawnPad_Manager_C_DrivePad::MaterialParameter' has a wrong offset!");
static_assert(offsetof(SpawnPad_Manager_C_DrivePad, RimLight6) == 0x000018, "Member 'SpawnPad_Manager_C_DrivePad::RimLight6' has a wrong offset!");
static_assert(offsetof(SpawnPad_Manager_C_DrivePad, RimLight5) == 0x000020, "Member 'SpawnPad_Manager_C_DrivePad::RimLight5' has a wrong offset!");
static_assert(offsetof(SpawnPad_Manager_C_DrivePad, RimLight4) == 0x000028, "Member 'SpawnPad_Manager_C_DrivePad::RimLight4' has a wrong offset!");
static_assert(offsetof(SpawnPad_Manager_C_DrivePad, RimLight3) == 0x000030, "Member 'SpawnPad_Manager_C_DrivePad::RimLight3' has a wrong offset!");
static_assert(offsetof(SpawnPad_Manager_C_DrivePad, RimLight2) == 0x000038, "Member 'SpawnPad_Manager_C_DrivePad::RimLight2' has a wrong offset!");
static_assert(offsetof(SpawnPad_Manager_C_DrivePad, RimLight1) == 0x000040, "Member 'SpawnPad_Manager_C_DrivePad::RimLight1' has a wrong offset!");
static_assert(offsetof(SpawnPad_Manager_C_DrivePad, CentralLight) == 0x000048, "Member 'SpawnPad_Manager_C_DrivePad::CentralLight' has a wrong offset!");
static_assert(offsetof(SpawnPad_Manager_C_DrivePad, Temp_int_Variable) == 0x000050, "Member 'SpawnPad_Manager_C_DrivePad::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(SpawnPad_Manager_C_DrivePad, Temp_int_Variable2) == 0x000054, "Member 'SpawnPad_Manager_C_DrivePad::Temp_int_Variable2' has a wrong offset!");
static_assert(offsetof(SpawnPad_Manager_C_DrivePad, Temp_int_Variable3) == 0x000058, "Member 'SpawnPad_Manager_C_DrivePad::Temp_int_Variable3' has a wrong offset!");
static_assert(offsetof(SpawnPad_Manager_C_DrivePad, Temp_int_Variable4) == 0x00005C, "Member 'SpawnPad_Manager_C_DrivePad::Temp_int_Variable4' has a wrong offset!");
static_assert(offsetof(SpawnPad_Manager_C_DrivePad, Temp_int_Variable5) == 0x000060, "Member 'SpawnPad_Manager_C_DrivePad::Temp_int_Variable5' has a wrong offset!");
static_assert(offsetof(SpawnPad_Manager_C_DrivePad, Temp_int_Variable6) == 0x000064, "Member 'SpawnPad_Manager_C_DrivePad::Temp_int_Variable6' has a wrong offset!");
static_assert(offsetof(SpawnPad_Manager_C_DrivePad, CallFunc_Lerp_ReturnValue) == 0x000068, "Member 'SpawnPad_Manager_C_DrivePad::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(SpawnPad_Manager_C_DrivePad, CallFunc_Lerp_ReturnValue2) == 0x00006C, "Member 'SpawnPad_Manager_C_DrivePad::CallFunc_Lerp_ReturnValue2' has a wrong offset!");
static_assert(offsetof(SpawnPad_Manager_C_DrivePad, CallFunc_Lerp_ReturnValue3) == 0x000070, "Member 'SpawnPad_Manager_C_DrivePad::CallFunc_Lerp_ReturnValue3' has a wrong offset!");
static_assert(offsetof(SpawnPad_Manager_C_DrivePad, K2Node_Select_Default) == 0x000078, "Member 'SpawnPad_Manager_C_DrivePad::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(SpawnPad_Manager_C_DrivePad, K2Node_Select2_Default) == 0x000080, "Member 'SpawnPad_Manager_C_DrivePad::K2Node_Select2_Default' has a wrong offset!");
static_assert(offsetof(SpawnPad_Manager_C_DrivePad, K2Node_Select3_Default) == 0x000088, "Member 'SpawnPad_Manager_C_DrivePad::K2Node_Select3_Default' has a wrong offset!");
static_assert(offsetof(SpawnPad_Manager_C_DrivePad, K2Node_Select4_Default) == 0x000090, "Member 'SpawnPad_Manager_C_DrivePad::K2Node_Select4_Default' has a wrong offset!");
static_assert(offsetof(SpawnPad_Manager_C_DrivePad, K2Node_Select5_Default) == 0x000098, "Member 'SpawnPad_Manager_C_DrivePad::K2Node_Select5_Default' has a wrong offset!");
static_assert(offsetof(SpawnPad_Manager_C_DrivePad, Temp_int_Variable7) == 0x0000A0, "Member 'SpawnPad_Manager_C_DrivePad::Temp_int_Variable7' has a wrong offset!");
static_assert(offsetof(SpawnPad_Manager_C_DrivePad, K2Node_Select6_Default) == 0x0000A8, "Member 'SpawnPad_Manager_C_DrivePad::K2Node_Select6_Default' has a wrong offset!");
static_assert(offsetof(SpawnPad_Manager_C_DrivePad, CallFunc_Conv_IntToString_ReturnValue) == 0x0000B0, "Member 'SpawnPad_Manager_C_DrivePad::CallFunc_Conv_IntToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(SpawnPad_Manager_C_DrivePad, CallFunc_Concat_StrStr_ReturnValue) == 0x0000C0, "Member 'SpawnPad_Manager_C_DrivePad::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(SpawnPad_Manager_C_DrivePad, CallFunc_Conv_StringToName_ReturnValue) == 0x0000D0, "Member 'SpawnPad_Manager_C_DrivePad::CallFunc_Conv_StringToName_ReturnValue' has a wrong offset!");
static_assert(offsetof(SpawnPad_Manager_C_DrivePad, K2Node_Select7_Default) == 0x0000D8, "Member 'SpawnPad_Manager_C_DrivePad::K2Node_Select7_Default' has a wrong offset!");

}

