#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: TM_Sphere

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function TM_Sphere.TM_Sphere_C.ExecuteUbergraph_TM_Sphere
// 0x0160 (0x0160 - 0x0000)
struct TM_Sphere_C_ExecuteUbergraph_TM_Sphere final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable;                              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable2;                             // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable3;                             // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable4;                             // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture*                               Temp_object_Variable5;                             // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetVectorParameterValue_ReturnValue;      // 0x0038(0x0010)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_Radius;                               // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue2;           // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_54[0x4];                                       // 0x0054(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_K2_SetRelativeLocation_SweepHitResult;    // 0x0058(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class UTexture*                               K2Node_Select_Default;                             // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               K2Node_Select2_Default;                            // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SelectFloat_ReturnValue;                  // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x00F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SelectFloat_ReturnValue2;                 // 0x00F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x00FC(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0110(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue2;         // 0x011C(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable2;                                // 0x0128(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x012C(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VSize_ReturnValue;                        // 0x0138(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x013C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue3;           // 0x0140(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Round_ReturnValue;                        // 0x0144(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetVectorParameterValue_ReturnValue2;     // 0x0148(0x0010)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0158(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x015C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(TM_Sphere_C_ExecuteUbergraph_TM_Sphere) == 0x000008, "Wrong alignment on TM_Sphere_C_ExecuteUbergraph_TM_Sphere");
static_assert(sizeof(TM_Sphere_C_ExecuteUbergraph_TM_Sphere) == 0x000160, "Wrong size on TM_Sphere_C_ExecuteUbergraph_TM_Sphere");
static_assert(offsetof(TM_Sphere_C_ExecuteUbergraph_TM_Sphere, EntryPoint) == 0x000000, "Member 'TM_Sphere_C_ExecuteUbergraph_TM_Sphere::EntryPoint' has a wrong offset!");
static_assert(offsetof(TM_Sphere_C_ExecuteUbergraph_TM_Sphere, Temp_int_Variable) == 0x000004, "Member 'TM_Sphere_C_ExecuteUbergraph_TM_Sphere::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(TM_Sphere_C_ExecuteUbergraph_TM_Sphere, Temp_object_Variable) == 0x000008, "Member 'TM_Sphere_C_ExecuteUbergraph_TM_Sphere::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(TM_Sphere_C_ExecuteUbergraph_TM_Sphere, Temp_object_Variable2) == 0x000010, "Member 'TM_Sphere_C_ExecuteUbergraph_TM_Sphere::Temp_object_Variable2' has a wrong offset!");
static_assert(offsetof(TM_Sphere_C_ExecuteUbergraph_TM_Sphere, Temp_object_Variable3) == 0x000018, "Member 'TM_Sphere_C_ExecuteUbergraph_TM_Sphere::Temp_object_Variable3' has a wrong offset!");
static_assert(offsetof(TM_Sphere_C_ExecuteUbergraph_TM_Sphere, Temp_object_Variable4) == 0x000020, "Member 'TM_Sphere_C_ExecuteUbergraph_TM_Sphere::Temp_object_Variable4' has a wrong offset!");
static_assert(offsetof(TM_Sphere_C_ExecuteUbergraph_TM_Sphere, Temp_bool_Variable) == 0x000028, "Member 'TM_Sphere_C_ExecuteUbergraph_TM_Sphere::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(TM_Sphere_C_ExecuteUbergraph_TM_Sphere, Temp_object_Variable5) == 0x000030, "Member 'TM_Sphere_C_ExecuteUbergraph_TM_Sphere::Temp_object_Variable5' has a wrong offset!");
static_assert(offsetof(TM_Sphere_C_ExecuteUbergraph_TM_Sphere, CallFunc_GetVectorParameterValue_ReturnValue) == 0x000038, "Member 'TM_Sphere_C_ExecuteUbergraph_TM_Sphere::CallFunc_GetVectorParameterValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(TM_Sphere_C_ExecuteUbergraph_TM_Sphere, K2Node_Event_Radius) == 0x000048, "Member 'TM_Sphere_C_ExecuteUbergraph_TM_Sphere::K2Node_Event_Radius' has a wrong offset!");
static_assert(offsetof(TM_Sphere_C_ExecuteUbergraph_TM_Sphere, CallFunc_Divide_FloatFloat_ReturnValue) == 0x00004C, "Member 'TM_Sphere_C_ExecuteUbergraph_TM_Sphere::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(TM_Sphere_C_ExecuteUbergraph_TM_Sphere, CallFunc_Divide_FloatFloat_ReturnValue2) == 0x000050, "Member 'TM_Sphere_C_ExecuteUbergraph_TM_Sphere::CallFunc_Divide_FloatFloat_ReturnValue2' has a wrong offset!");
static_assert(offsetof(TM_Sphere_C_ExecuteUbergraph_TM_Sphere, CallFunc_K2_SetRelativeLocation_SweepHitResult) == 0x000058, "Member 'TM_Sphere_C_ExecuteUbergraph_TM_Sphere::CallFunc_K2_SetRelativeLocation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(TM_Sphere_C_ExecuteUbergraph_TM_Sphere, K2Node_Select_Default) == 0x0000E0, "Member 'TM_Sphere_C_ExecuteUbergraph_TM_Sphere::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(TM_Sphere_C_ExecuteUbergraph_TM_Sphere, K2Node_Select2_Default) == 0x0000E8, "Member 'TM_Sphere_C_ExecuteUbergraph_TM_Sphere::K2Node_Select2_Default' has a wrong offset!");
static_assert(offsetof(TM_Sphere_C_ExecuteUbergraph_TM_Sphere, CallFunc_SelectFloat_ReturnValue) == 0x0000F0, "Member 'TM_Sphere_C_ExecuteUbergraph_TM_Sphere::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(TM_Sphere_C_ExecuteUbergraph_TM_Sphere, K2Node_Event_DeltaSeconds) == 0x0000F4, "Member 'TM_Sphere_C_ExecuteUbergraph_TM_Sphere::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(TM_Sphere_C_ExecuteUbergraph_TM_Sphere, CallFunc_SelectFloat_ReturnValue2) == 0x0000F8, "Member 'TM_Sphere_C_ExecuteUbergraph_TM_Sphere::CallFunc_SelectFloat_ReturnValue2' has a wrong offset!");
static_assert(offsetof(TM_Sphere_C_ExecuteUbergraph_TM_Sphere, CallFunc_MakeVector_ReturnValue) == 0x0000FC, "Member 'TM_Sphere_C_ExecuteUbergraph_TM_Sphere::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(TM_Sphere_C_ExecuteUbergraph_TM_Sphere, CallFunc_GetOwner_ReturnValue) == 0x000108, "Member 'TM_Sphere_C_ExecuteUbergraph_TM_Sphere::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(TM_Sphere_C_ExecuteUbergraph_TM_Sphere, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000110, "Member 'TM_Sphere_C_ExecuteUbergraph_TM_Sphere::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(TM_Sphere_C_ExecuteUbergraph_TM_Sphere, CallFunc_K2_GetActorLocation_ReturnValue2) == 0x00011C, "Member 'TM_Sphere_C_ExecuteUbergraph_TM_Sphere::CallFunc_K2_GetActorLocation_ReturnValue2' has a wrong offset!");
static_assert(offsetof(TM_Sphere_C_ExecuteUbergraph_TM_Sphere, Temp_int_Variable2) == 0x000128, "Member 'TM_Sphere_C_ExecuteUbergraph_TM_Sphere::Temp_int_Variable2' has a wrong offset!");
static_assert(offsetof(TM_Sphere_C_ExecuteUbergraph_TM_Sphere, CallFunc_Subtract_VectorVector_ReturnValue) == 0x00012C, "Member 'TM_Sphere_C_ExecuteUbergraph_TM_Sphere::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(TM_Sphere_C_ExecuteUbergraph_TM_Sphere, CallFunc_VSize_ReturnValue) == 0x000138, "Member 'TM_Sphere_C_ExecuteUbergraph_TM_Sphere::CallFunc_VSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(TM_Sphere_C_ExecuteUbergraph_TM_Sphere, CallFunc_Add_IntInt_ReturnValue) == 0x00013C, "Member 'TM_Sphere_C_ExecuteUbergraph_TM_Sphere::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(TM_Sphere_C_ExecuteUbergraph_TM_Sphere, CallFunc_Divide_FloatFloat_ReturnValue3) == 0x000140, "Member 'TM_Sphere_C_ExecuteUbergraph_TM_Sphere::CallFunc_Divide_FloatFloat_ReturnValue3' has a wrong offset!");
static_assert(offsetof(TM_Sphere_C_ExecuteUbergraph_TM_Sphere, CallFunc_Round_ReturnValue) == 0x000144, "Member 'TM_Sphere_C_ExecuteUbergraph_TM_Sphere::CallFunc_Round_ReturnValue' has a wrong offset!");
static_assert(offsetof(TM_Sphere_C_ExecuteUbergraph_TM_Sphere, CallFunc_GetVectorParameterValue_ReturnValue2) == 0x000148, "Member 'TM_Sphere_C_ExecuteUbergraph_TM_Sphere::CallFunc_GetVectorParameterValue_ReturnValue2' has a wrong offset!");
static_assert(offsetof(TM_Sphere_C_ExecuteUbergraph_TM_Sphere, CallFunc_Subtract_IntInt_ReturnValue) == 0x000158, "Member 'TM_Sphere_C_ExecuteUbergraph_TM_Sphere::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(TM_Sphere_C_ExecuteUbergraph_TM_Sphere, CallFunc_LessEqual_IntInt_ReturnValue) == 0x00015C, "Member 'TM_Sphere_C_ExecuteUbergraph_TM_Sphere::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");

// Function TM_Sphere.TM_Sphere_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct TM_Sphere_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TM_Sphere_C_ReceiveTick) == 0x000004, "Wrong alignment on TM_Sphere_C_ReceiveTick");
static_assert(sizeof(TM_Sphere_C_ReceiveTick) == 0x000004, "Wrong size on TM_Sphere_C_ReceiveTick");
static_assert(offsetof(TM_Sphere_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'TM_Sphere_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function TM_Sphere.TM_Sphere_C.OnFacetSphereBuilt
// 0x0004 (0x0004 - 0x0000)
struct TM_Sphere_C_OnFacetSphereBuilt final
{
public:
	float                                         Radius;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TM_Sphere_C_OnFacetSphereBuilt) == 0x000004, "Wrong alignment on TM_Sphere_C_OnFacetSphereBuilt");
static_assert(sizeof(TM_Sphere_C_OnFacetSphereBuilt) == 0x000004, "Wrong size on TM_Sphere_C_OnFacetSphereBuilt");
static_assert(offsetof(TM_Sphere_C_OnFacetSphereBuilt, Radius) == 0x000000, "Member 'TM_Sphere_C_OnFacetSphereBuilt::Radius' has a wrong offset!");

// Function TM_Sphere.TM_Sphere_C.UserConstructionScript
// 0x0020 (0x0020 - 0x0000)
struct TM_Sphere_C_UserConstructionScript final
{
public:
	float                                         CallFunc_Conv_BoolToFloat_ReturnValue;             // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetVectorParameterValue_ReturnValue;      // 0x0004(0x0010)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue; // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TM_Sphere_C_UserConstructionScript) == 0x000008, "Wrong alignment on TM_Sphere_C_UserConstructionScript");
static_assert(sizeof(TM_Sphere_C_UserConstructionScript) == 0x000020, "Wrong size on TM_Sphere_C_UserConstructionScript");
static_assert(offsetof(TM_Sphere_C_UserConstructionScript, CallFunc_Conv_BoolToFloat_ReturnValue) == 0x000000, "Member 'TM_Sphere_C_UserConstructionScript::CallFunc_Conv_BoolToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(TM_Sphere_C_UserConstructionScript, CallFunc_GetVectorParameterValue_ReturnValue) == 0x000004, "Member 'TM_Sphere_C_UserConstructionScript::CallFunc_GetVectorParameterValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(TM_Sphere_C_UserConstructionScript, CallFunc_CreateDynamicMaterialInstance_ReturnValue) == 0x000018, "Member 'TM_Sphere_C_UserConstructionScript::CallFunc_CreateDynamicMaterialInstance_ReturnValue' has a wrong offset!");

}

