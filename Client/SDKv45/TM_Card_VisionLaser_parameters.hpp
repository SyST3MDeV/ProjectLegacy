#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: TM_Card_VisionLaser

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function TM_Card_VisionLaser.TM_Card_VisionLaser_C.ExecuteUbergraph_TM_Card_VisionLaser
// 0x01F0 (0x01F0 - 0x0000)
struct TM_Card_VisionLaser_C_ExecuteUbergraph_TM_Card_VisionLaser final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         K2Node_MakeArray_Array;                            // 0x0010(0x0010)(ZeroConstructor, ReferenceParm)
	struct FVector                                CallFunc_GetActorForwardVector_ReturnValue;        // 0x0020(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x002C(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0038(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0044(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_LineTraceSingle_OutHit;                   // 0x0050(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_LineTraceSingle_ReturnValue;              // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x00D9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x00DA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_DB[0x1];                                       // 0x00DB(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x00DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x00E4(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x00F0(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x00FC(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x0108(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_114[0x4];                                      // 0x0114(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x0118(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x0120(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x0128(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x0130(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x0138(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x013C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x0140(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x014C(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_Conv_VectorToRotator_ReturnValue;         // 0x0158(0x000C)(IsPlainOldData, NoDestructor)
	uint8                                         Pad_164[0x4];                                      // 0x0164(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_K2_SetWorldLocationAndRotation_SweepHitResult; // 0x0168(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(TM_Card_VisionLaser_C_ExecuteUbergraph_TM_Card_VisionLaser) == 0x000008, "Wrong alignment on TM_Card_VisionLaser_C_ExecuteUbergraph_TM_Card_VisionLaser");
static_assert(sizeof(TM_Card_VisionLaser_C_ExecuteUbergraph_TM_Card_VisionLaser) == 0x0001F0, "Wrong size on TM_Card_VisionLaser_C_ExecuteUbergraph_TM_Card_VisionLaser");
static_assert(offsetof(TM_Card_VisionLaser_C_ExecuteUbergraph_TM_Card_VisionLaser, EntryPoint) == 0x000000, "Member 'TM_Card_VisionLaser_C_ExecuteUbergraph_TM_Card_VisionLaser::EntryPoint' has a wrong offset!");
static_assert(offsetof(TM_Card_VisionLaser_C_ExecuteUbergraph_TM_Card_VisionLaser, K2Node_Event_DeltaSeconds) == 0x000004, "Member 'TM_Card_VisionLaser_C_ExecuteUbergraph_TM_Card_VisionLaser::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(TM_Card_VisionLaser_C_ExecuteUbergraph_TM_Card_VisionLaser, CallFunc_GetOwner_ReturnValue) == 0x000008, "Member 'TM_Card_VisionLaser_C_ExecuteUbergraph_TM_Card_VisionLaser::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(TM_Card_VisionLaser_C_ExecuteUbergraph_TM_Card_VisionLaser, K2Node_MakeArray_Array) == 0x000010, "Member 'TM_Card_VisionLaser_C_ExecuteUbergraph_TM_Card_VisionLaser::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(TM_Card_VisionLaser_C_ExecuteUbergraph_TM_Card_VisionLaser, CallFunc_GetActorForwardVector_ReturnValue) == 0x000020, "Member 'TM_Card_VisionLaser_C_ExecuteUbergraph_TM_Card_VisionLaser::CallFunc_GetActorForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(TM_Card_VisionLaser_C_ExecuteUbergraph_TM_Card_VisionLaser, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x00002C, "Member 'TM_Card_VisionLaser_C_ExecuteUbergraph_TM_Card_VisionLaser::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(TM_Card_VisionLaser_C_ExecuteUbergraph_TM_Card_VisionLaser, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000038, "Member 'TM_Card_VisionLaser_C_ExecuteUbergraph_TM_Card_VisionLaser::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(TM_Card_VisionLaser_C_ExecuteUbergraph_TM_Card_VisionLaser, CallFunc_Add_VectorVector_ReturnValue) == 0x000044, "Member 'TM_Card_VisionLaser_C_ExecuteUbergraph_TM_Card_VisionLaser::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(TM_Card_VisionLaser_C_ExecuteUbergraph_TM_Card_VisionLaser, CallFunc_LineTraceSingle_OutHit) == 0x000050, "Member 'TM_Card_VisionLaser_C_ExecuteUbergraph_TM_Card_VisionLaser::CallFunc_LineTraceSingle_OutHit' has a wrong offset!");
static_assert(offsetof(TM_Card_VisionLaser_C_ExecuteUbergraph_TM_Card_VisionLaser, CallFunc_LineTraceSingle_ReturnValue) == 0x0000D8, "Member 'TM_Card_VisionLaser_C_ExecuteUbergraph_TM_Card_VisionLaser::CallFunc_LineTraceSingle_ReturnValue' has a wrong offset!");
static_assert(offsetof(TM_Card_VisionLaser_C_ExecuteUbergraph_TM_Card_VisionLaser, CallFunc_BreakHitResult_bBlockingHit) == 0x0000D9, "Member 'TM_Card_VisionLaser_C_ExecuteUbergraph_TM_Card_VisionLaser::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(TM_Card_VisionLaser_C_ExecuteUbergraph_TM_Card_VisionLaser, CallFunc_BreakHitResult_bInitialOverlap) == 0x0000DA, "Member 'TM_Card_VisionLaser_C_ExecuteUbergraph_TM_Card_VisionLaser::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(TM_Card_VisionLaser_C_ExecuteUbergraph_TM_Card_VisionLaser, CallFunc_BreakHitResult_Time) == 0x0000DC, "Member 'TM_Card_VisionLaser_C_ExecuteUbergraph_TM_Card_VisionLaser::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(TM_Card_VisionLaser_C_ExecuteUbergraph_TM_Card_VisionLaser, CallFunc_BreakHitResult_Distance) == 0x0000E0, "Member 'TM_Card_VisionLaser_C_ExecuteUbergraph_TM_Card_VisionLaser::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(TM_Card_VisionLaser_C_ExecuteUbergraph_TM_Card_VisionLaser, CallFunc_BreakHitResult_Location) == 0x0000E4, "Member 'TM_Card_VisionLaser_C_ExecuteUbergraph_TM_Card_VisionLaser::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(TM_Card_VisionLaser_C_ExecuteUbergraph_TM_Card_VisionLaser, CallFunc_BreakHitResult_ImpactPoint) == 0x0000F0, "Member 'TM_Card_VisionLaser_C_ExecuteUbergraph_TM_Card_VisionLaser::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(TM_Card_VisionLaser_C_ExecuteUbergraph_TM_Card_VisionLaser, CallFunc_BreakHitResult_Normal) == 0x0000FC, "Member 'TM_Card_VisionLaser_C_ExecuteUbergraph_TM_Card_VisionLaser::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(TM_Card_VisionLaser_C_ExecuteUbergraph_TM_Card_VisionLaser, CallFunc_BreakHitResult_ImpactNormal) == 0x000108, "Member 'TM_Card_VisionLaser_C_ExecuteUbergraph_TM_Card_VisionLaser::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(TM_Card_VisionLaser_C_ExecuteUbergraph_TM_Card_VisionLaser, CallFunc_BreakHitResult_PhysMat) == 0x000118, "Member 'TM_Card_VisionLaser_C_ExecuteUbergraph_TM_Card_VisionLaser::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(TM_Card_VisionLaser_C_ExecuteUbergraph_TM_Card_VisionLaser, CallFunc_BreakHitResult_HitActor) == 0x000120, "Member 'TM_Card_VisionLaser_C_ExecuteUbergraph_TM_Card_VisionLaser::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(TM_Card_VisionLaser_C_ExecuteUbergraph_TM_Card_VisionLaser, CallFunc_BreakHitResult_HitComponent) == 0x000128, "Member 'TM_Card_VisionLaser_C_ExecuteUbergraph_TM_Card_VisionLaser::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(TM_Card_VisionLaser_C_ExecuteUbergraph_TM_Card_VisionLaser, CallFunc_BreakHitResult_HitBoneName) == 0x000130, "Member 'TM_Card_VisionLaser_C_ExecuteUbergraph_TM_Card_VisionLaser::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(TM_Card_VisionLaser_C_ExecuteUbergraph_TM_Card_VisionLaser, CallFunc_BreakHitResult_HitItem) == 0x000138, "Member 'TM_Card_VisionLaser_C_ExecuteUbergraph_TM_Card_VisionLaser::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(TM_Card_VisionLaser_C_ExecuteUbergraph_TM_Card_VisionLaser, CallFunc_BreakHitResult_FaceIndex) == 0x00013C, "Member 'TM_Card_VisionLaser_C_ExecuteUbergraph_TM_Card_VisionLaser::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(TM_Card_VisionLaser_C_ExecuteUbergraph_TM_Card_VisionLaser, CallFunc_BreakHitResult_TraceStart) == 0x000140, "Member 'TM_Card_VisionLaser_C_ExecuteUbergraph_TM_Card_VisionLaser::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(TM_Card_VisionLaser_C_ExecuteUbergraph_TM_Card_VisionLaser, CallFunc_BreakHitResult_TraceEnd) == 0x00014C, "Member 'TM_Card_VisionLaser_C_ExecuteUbergraph_TM_Card_VisionLaser::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(TM_Card_VisionLaser_C_ExecuteUbergraph_TM_Card_VisionLaser, CallFunc_Conv_VectorToRotator_ReturnValue) == 0x000158, "Member 'TM_Card_VisionLaser_C_ExecuteUbergraph_TM_Card_VisionLaser::CallFunc_Conv_VectorToRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(TM_Card_VisionLaser_C_ExecuteUbergraph_TM_Card_VisionLaser, CallFunc_K2_SetWorldLocationAndRotation_SweepHitResult) == 0x000168, "Member 'TM_Card_VisionLaser_C_ExecuteUbergraph_TM_Card_VisionLaser::CallFunc_K2_SetWorldLocationAndRotation_SweepHitResult' has a wrong offset!");

// Function TM_Card_VisionLaser.TM_Card_VisionLaser_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct TM_Card_VisionLaser_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TM_Card_VisionLaser_C_ReceiveTick) == 0x000004, "Wrong alignment on TM_Card_VisionLaser_C_ReceiveTick");
static_assert(sizeof(TM_Card_VisionLaser_C_ReceiveTick) == 0x000004, "Wrong size on TM_Card_VisionLaser_C_ReceiveTick");
static_assert(offsetof(TM_Card_VisionLaser_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'TM_Card_VisionLaser_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

}

