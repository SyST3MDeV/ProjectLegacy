#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GA_OnSpawn

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "GameplayAbilities_structs.hpp"
#include "GameplayTags_structs.hpp"
#include "OrionGame_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass GA_OnSpawn.GA_OnSpawn_C
// 0x0060 (0x0BD0 - 0x0B70)
class UGA_OnSpawn_C final : public UOrionAbility
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0B70(0x0008)(Transient, DuplicateTransient)
	class UClass*                                 GE_FirstSpawn;                                     // 0x0B78(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 SpawnProtection;                                   // 0x0B80(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FActiveGameplayEffectHandle            SpawnProtectionHandle;                             // 0x0B88(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	float                                         NoSpawnAnimDelay;                                  // 0x0B90(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         AnimLength;                                        // 0x0B94(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 GE_AnySpawn;                                       // 0x0B98(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTagContainer                  GEsGrantedWhileDead;                               // 0x0BA0(0x0020)(Edit, BlueprintVisible, DisableEditOnInstance)
	bool                                          HolidayDecember;                                   // 0x0BC0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          TestMastery;                                       // 0x0BC1(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void ExecuteUbergraph_GA_OnSpawn(int32 EntryPoint);
	void K2_OnEndAbility();
	void K2_ActivateAbility();
	void OnCompleted_759325FE48659E7299F1899E3C4738AF(class FName NotifyName);
	void OnBlendOut_759325FE48659E7299F1899E3C4738AF(class FName NotifyName);
	void OnInterrupted_759325FE48659E7299F1899E3C4738AF(class FName NotifyName);
	void OnCancelled_759325FE48659E7299F1899E3C4738AF(class FName NotifyName);
	void OnNotifyBegin_759325FE48659E7299F1899E3C4738AF(class FName NotifyName);
	void OnNotifyEnd_759325FE48659E7299F1899E3C4738AF(class FName NotifyName);
	void OnCompleted_F95C91B146B2CB6F25417A93AB4A967F(class FName NotifyName);
	void OnBlendOut_F95C91B146B2CB6F25417A93AB4A967F(class FName NotifyName);
	void OnInterrupted_F95C91B146B2CB6F25417A93AB4A967F(class FName NotifyName);
	void OnCancelled_F95C91B146B2CB6F25417A93AB4A967F(class FName NotifyName);
	void OnNotifyBegin_F95C91B146B2CB6F25417A93AB4A967F(class FName NotifyName);
	void OnNotifyEnd_F95C91B146B2CB6F25417A93AB4A967F(class FName NotifyName);
	void OnFinish_EF8C4CE74AFB6D93CD3C2C887D805B5F();
	void CheckSpawnPad(class ABP_Hero_C* Hero);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"GA_OnSpawn_C">();
	}
	static class UGA_OnSpawn_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGA_OnSpawn_C>();
	}
};
static_assert(alignof(UGA_OnSpawn_C) == 0x000010, "Wrong alignment on UGA_OnSpawn_C");
static_assert(sizeof(UGA_OnSpawn_C) == 0x000BD0, "Wrong size on UGA_OnSpawn_C");
static_assert(offsetof(UGA_OnSpawn_C, UberGraphFrame) == 0x000B70, "Member 'UGA_OnSpawn_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UGA_OnSpawn_C, GE_FirstSpawn) == 0x000B78, "Member 'UGA_OnSpawn_C::GE_FirstSpawn' has a wrong offset!");
static_assert(offsetof(UGA_OnSpawn_C, SpawnProtection) == 0x000B80, "Member 'UGA_OnSpawn_C::SpawnProtection' has a wrong offset!");
static_assert(offsetof(UGA_OnSpawn_C, SpawnProtectionHandle) == 0x000B88, "Member 'UGA_OnSpawn_C::SpawnProtectionHandle' has a wrong offset!");
static_assert(offsetof(UGA_OnSpawn_C, NoSpawnAnimDelay) == 0x000B90, "Member 'UGA_OnSpawn_C::NoSpawnAnimDelay' has a wrong offset!");
static_assert(offsetof(UGA_OnSpawn_C, AnimLength) == 0x000B94, "Member 'UGA_OnSpawn_C::AnimLength' has a wrong offset!");
static_assert(offsetof(UGA_OnSpawn_C, GE_AnySpawn) == 0x000B98, "Member 'UGA_OnSpawn_C::GE_AnySpawn' has a wrong offset!");
static_assert(offsetof(UGA_OnSpawn_C, GEsGrantedWhileDead) == 0x000BA0, "Member 'UGA_OnSpawn_C::GEsGrantedWhileDead' has a wrong offset!");
static_assert(offsetof(UGA_OnSpawn_C, HolidayDecember) == 0x000BC0, "Member 'UGA_OnSpawn_C::HolidayDecember' has a wrong offset!");
static_assert(offsetof(UGA_OnSpawn_C, TestMastery) == 0x000BC1, "Member 'UGA_OnSpawn_C::TestMastery' has a wrong offset!");

}

