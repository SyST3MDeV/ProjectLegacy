#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_ChestandCrate

#include "Basic.hpp"

#include "OrionGame_structs.hpp"
#include "OrionGame_classes.hpp"
#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_ChestandCrate.BP_ChestandCrate_C
// 0x00D8 (0x04C0 - 0x03E8)
class ABP_ChestandCrate_C : public AOrionBaseActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x03E8(0x0008)(Transient, DuplicateTransient)
	class UStaticMeshComponent*                   SM_InteriorGlow;                                   // 0x03F0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USpotLightComponent*                    Crate_Light;                                       // 0x03F8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               P_LootCrate_Interior_Ambient;                      // 0x0400(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 SkelMeshComponent;                                 // 0x0408(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x0410(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USkeletalMesh*                          Mesh;                                              // 0x0418(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           IdleAnim;                                          // 0x0420(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           InsertKeyAnim;                                     // 0x0428(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           OpenAnim_Common;                                   // 0x0430(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 Open_Shake;                                        // 0x0438(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 Key_Enter_Shake;                                   // 0x0440(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 Key_Turn_Shake;                                    // 0x0448(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           OpenAnim_Uncommon;                                 // 0x0450(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           OpenAnim_Rare;                                     // 0x0458(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           OpenAnim_Epic;                                     // 0x0460(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           OpenAnim_Legendary;                                // 0x0468(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FLinearColor>                   FXColors;                                          // 0x0470(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance)
	class UMaterialInstanceDynamic*               InteriorMID;                                       // 0x0480(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EOrionItemRarity                              CurrentRarity;                                     // 0x0488(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	uint8                                         Pad_489[0x7];                                      // 0x0489(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               Mesh_MID;                                          // 0x0490(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           DefaultEmissiveColor;                              // 0x0498(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           DefaultInteriorColor;                              // 0x04A8(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACameraActor*                           CrateCam;                                          // 0x04B8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_ChestandCrate(int32 EntryPoint);
	void Stop_Subtle_Camera_Rumble();
	void Begin_Subtle_Camera_Rumble();
	void KeyTurnShake();
	void KeyEnterShake();
	void OpenShake();
	void ReceiveBeginPlay();
	void Reset();
	void OpenChest(EOrionItemRarity Rarity);
	void InsertKey();
	void UserConstructionScript();
	void SetFXAndAnimsByRarity(EOrionItemRarity Item_Rarity, class UAnimMontage** Open_Montage);
	void ResetColorValuesToDefault();
	void GetFXColorForCurrentRarity(struct FLinearColor* OutputColor);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_ChestandCrate_C">();
	}
	static class ABP_ChestandCrate_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_ChestandCrate_C>();
	}
};
static_assert(alignof(ABP_ChestandCrate_C) == 0x000008, "Wrong alignment on ABP_ChestandCrate_C");
static_assert(sizeof(ABP_ChestandCrate_C) == 0x0004C0, "Wrong size on ABP_ChestandCrate_C");
static_assert(offsetof(ABP_ChestandCrate_C, UberGraphFrame) == 0x0003E8, "Member 'ABP_ChestandCrate_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_ChestandCrate_C, SM_InteriorGlow) == 0x0003F0, "Member 'ABP_ChestandCrate_C::SM_InteriorGlow' has a wrong offset!");
static_assert(offsetof(ABP_ChestandCrate_C, Crate_Light) == 0x0003F8, "Member 'ABP_ChestandCrate_C::Crate_Light' has a wrong offset!");
static_assert(offsetof(ABP_ChestandCrate_C, P_LootCrate_Interior_Ambient) == 0x000400, "Member 'ABP_ChestandCrate_C::P_LootCrate_Interior_Ambient' has a wrong offset!");
static_assert(offsetof(ABP_ChestandCrate_C, SkelMeshComponent) == 0x000408, "Member 'ABP_ChestandCrate_C::SkelMeshComponent' has a wrong offset!");
static_assert(offsetof(ABP_ChestandCrate_C, DefaultSceneRoot) == 0x000410, "Member 'ABP_ChestandCrate_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(ABP_ChestandCrate_C, Mesh) == 0x000418, "Member 'ABP_ChestandCrate_C::Mesh' has a wrong offset!");
static_assert(offsetof(ABP_ChestandCrate_C, IdleAnim) == 0x000420, "Member 'ABP_ChestandCrate_C::IdleAnim' has a wrong offset!");
static_assert(offsetof(ABP_ChestandCrate_C, InsertKeyAnim) == 0x000428, "Member 'ABP_ChestandCrate_C::InsertKeyAnim' has a wrong offset!");
static_assert(offsetof(ABP_ChestandCrate_C, OpenAnim_Common) == 0x000430, "Member 'ABP_ChestandCrate_C::OpenAnim_Common' has a wrong offset!");
static_assert(offsetof(ABP_ChestandCrate_C, Open_Shake) == 0x000438, "Member 'ABP_ChestandCrate_C::Open_Shake' has a wrong offset!");
static_assert(offsetof(ABP_ChestandCrate_C, Key_Enter_Shake) == 0x000440, "Member 'ABP_ChestandCrate_C::Key_Enter_Shake' has a wrong offset!");
static_assert(offsetof(ABP_ChestandCrate_C, Key_Turn_Shake) == 0x000448, "Member 'ABP_ChestandCrate_C::Key_Turn_Shake' has a wrong offset!");
static_assert(offsetof(ABP_ChestandCrate_C, OpenAnim_Uncommon) == 0x000450, "Member 'ABP_ChestandCrate_C::OpenAnim_Uncommon' has a wrong offset!");
static_assert(offsetof(ABP_ChestandCrate_C, OpenAnim_Rare) == 0x000458, "Member 'ABP_ChestandCrate_C::OpenAnim_Rare' has a wrong offset!");
static_assert(offsetof(ABP_ChestandCrate_C, OpenAnim_Epic) == 0x000460, "Member 'ABP_ChestandCrate_C::OpenAnim_Epic' has a wrong offset!");
static_assert(offsetof(ABP_ChestandCrate_C, OpenAnim_Legendary) == 0x000468, "Member 'ABP_ChestandCrate_C::OpenAnim_Legendary' has a wrong offset!");
static_assert(offsetof(ABP_ChestandCrate_C, FXColors) == 0x000470, "Member 'ABP_ChestandCrate_C::FXColors' has a wrong offset!");
static_assert(offsetof(ABP_ChestandCrate_C, InteriorMID) == 0x000480, "Member 'ABP_ChestandCrate_C::InteriorMID' has a wrong offset!");
static_assert(offsetof(ABP_ChestandCrate_C, CurrentRarity) == 0x000488, "Member 'ABP_ChestandCrate_C::CurrentRarity' has a wrong offset!");
static_assert(offsetof(ABP_ChestandCrate_C, Mesh_MID) == 0x000490, "Member 'ABP_ChestandCrate_C::Mesh_MID' has a wrong offset!");
static_assert(offsetof(ABP_ChestandCrate_C, DefaultEmissiveColor) == 0x000498, "Member 'ABP_ChestandCrate_C::DefaultEmissiveColor' has a wrong offset!");
static_assert(offsetof(ABP_ChestandCrate_C, DefaultInteriorColor) == 0x0004A8, "Member 'ABP_ChestandCrate_C::DefaultInteriorColor' has a wrong offset!");
static_assert(offsetof(ABP_ChestandCrate_C, CrateCam) == 0x0004B8, "Member 'ABP_ChestandCrate_C::CrateCam' has a wrong offset!");

}

