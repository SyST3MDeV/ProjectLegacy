#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GA_Card_FlameOfZechin

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "GameplayAbilities_structs.hpp"
#include "GameplayTags_structs.hpp"
#include "OrionGame_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass GA_Card_FlameOfZechin.GA_Card_FlameOfZechin_C
// 0x0090 (0x0C00 - 0x0B70)
class UGA_Card_FlameOfZechin_C final : public UOrionAbility
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0B70(0x0008)(Transient, DuplicateTransient)
	class UClass*                                 GE_ToTarget;                                       // 0x0B78(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         UseCount;                                          // 0x0B80(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DamagePerStack;                                    // 0x0B84(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         BaseDamage;                                        // 0x0B88(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B8C[0x4];                                      // 0x0B8C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FScalableFloat                         BaseDamageValue;                                   // 0x0B90(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FScalableFloat                         DamagePerStackValue;                               // 0x0BB8(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance)
	class UClass*                                 GE_Stacks;                                         // 0x0BE0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FActiveGameplayEffectHandle            StackCountGE;                                      // 0x0BE8(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           GameplayCue;                                       // 0x0BF0(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_GA_Card_FlameOfZechin(int32 EntryPoint);
	void Cancelled_0497C8C7432A92365D98BE90F662A3DD(const struct FGameplayAbilityTargetDataHandle& Targets);
	void Confirmed_0497C8C7432A92365D98BE90F662A3DD(const struct FGameplayAbilityTargetDataHandle& Targets);
	void K2_ActivateAbility();
	void OnSync_2ADEBDAD4733932E188687ADFD1890CD();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"GA_Card_FlameOfZechin_C">();
	}
	static class UGA_Card_FlameOfZechin_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGA_Card_FlameOfZechin_C>();
	}
};
static_assert(alignof(UGA_Card_FlameOfZechin_C) == 0x000010, "Wrong alignment on UGA_Card_FlameOfZechin_C");
static_assert(sizeof(UGA_Card_FlameOfZechin_C) == 0x000C00, "Wrong size on UGA_Card_FlameOfZechin_C");
static_assert(offsetof(UGA_Card_FlameOfZechin_C, UberGraphFrame) == 0x000B70, "Member 'UGA_Card_FlameOfZechin_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UGA_Card_FlameOfZechin_C, GE_ToTarget) == 0x000B78, "Member 'UGA_Card_FlameOfZechin_C::GE_ToTarget' has a wrong offset!");
static_assert(offsetof(UGA_Card_FlameOfZechin_C, UseCount) == 0x000B80, "Member 'UGA_Card_FlameOfZechin_C::UseCount' has a wrong offset!");
static_assert(offsetof(UGA_Card_FlameOfZechin_C, DamagePerStack) == 0x000B84, "Member 'UGA_Card_FlameOfZechin_C::DamagePerStack' has a wrong offset!");
static_assert(offsetof(UGA_Card_FlameOfZechin_C, BaseDamage) == 0x000B88, "Member 'UGA_Card_FlameOfZechin_C::BaseDamage' has a wrong offset!");
static_assert(offsetof(UGA_Card_FlameOfZechin_C, BaseDamageValue) == 0x000B90, "Member 'UGA_Card_FlameOfZechin_C::BaseDamageValue' has a wrong offset!");
static_assert(offsetof(UGA_Card_FlameOfZechin_C, DamagePerStackValue) == 0x000BB8, "Member 'UGA_Card_FlameOfZechin_C::DamagePerStackValue' has a wrong offset!");
static_assert(offsetof(UGA_Card_FlameOfZechin_C, GE_Stacks) == 0x000BE0, "Member 'UGA_Card_FlameOfZechin_C::GE_Stacks' has a wrong offset!");
static_assert(offsetof(UGA_Card_FlameOfZechin_C, StackCountGE) == 0x000BE8, "Member 'UGA_Card_FlameOfZechin_C::StackCountGE' has a wrong offset!");
static_assert(offsetof(UGA_Card_FlameOfZechin_C, GameplayCue) == 0x000BF0, "Member 'UGA_Card_FlameOfZechin_C::GameplayCue' has a wrong offset!");

}

