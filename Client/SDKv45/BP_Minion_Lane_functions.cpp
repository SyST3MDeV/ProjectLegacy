#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Minion_Lane

#include "Basic.hpp"

#include "BP_Minion_Lane_classes.hpp"
#include "BP_Minion_Lane_parameters.hpp"


namespace SDK
{

// Function BP_Minion_Lane.BP_Minion_Lane_C.ExecuteUbergraph_BP_Minion_Lane
// (HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Minion_Lane_C::ExecuteUbergraph_BP_Minion_Lane(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Minion_Lane_C", "ExecuteUbergraph_BP_Minion_Lane");

	Params::BP_Minion_Lane_C_ExecuteUbergraph_BP_Minion_Lane Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Minion_Lane.BP_Minion_Lane_C.GameplayCue.Minion.Spawn
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// EGameplayCueEvent                       EventType                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FGameplayCueParameters           Parameters                                             (BlueprintVisible, BlueprintReadOnly, Parm, ContainsInstancedReference)

void ABP_Minion_Lane_C::GameplayCue_Minion_Spawn(EGameplayCueEvent EventType, const struct FGameplayCueParameters& Parameters)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Minion_Lane_C", "GameplayCue.Minion.Spawn");

	Params::BP_Minion_Lane_C_GameplayCue_Minion_Spawn Parms{};

	Parms.EventType = EventType;
	Parms.Parameters = std::move(Parameters);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Minion_Lane.BP_Minion_Lane_C.OnPlayDeathAnim
// (Event, Protected, BlueprintEvent)
// Parameters:
// float                                   PlaybackTime                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bAllowedToRagdoll                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_Minion_Lane_C::OnPlayDeathAnim(float PlaybackTime, bool bAllowedToRagdoll)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Minion_Lane_C", "OnPlayDeathAnim");

	Params::BP_Minion_Lane_C_OnPlayDeathAnim Parms{};

	Parms.PlaybackTime = PlaybackTime;
	Parms.bAllowedToRagdoll = bAllowedToRagdoll;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Minion_Lane.BP_Minion_Lane_C.Debug_OverrideTeamVisuals
// (Event, Public, BlueprintEvent)
// Parameters:
// EOrionTeam                              NewTeamVisuals                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Minion_Lane_C::Debug_OverrideTeamVisuals(EOrionTeam NewTeamVisuals)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Minion_Lane_C", "Debug_OverrideTeamVisuals");

	Params::BP_Minion_Lane_C_Debug_OverrideTeamVisuals Parms{};

	Parms.NewTeamVisuals = NewTeamVisuals;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Minion_Lane.BP_Minion_Lane_C.OnCoreExposed
// (BlueprintCallable, BlueprintEvent)

void ABP_Minion_Lane_C::OnCoreExposed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Minion_Lane_C", "OnCoreExposed");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Minion_Lane.BP_Minion_Lane_C.GameplayCue.Minion.LastHitVulnerable
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// EGameplayCueEvent                       EventType                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FGameplayCueParameters           Parameters                                             (BlueprintVisible, BlueprintReadOnly, Parm, ContainsInstancedReference)

void ABP_Minion_Lane_C::GameplayCue_Minion_LastHitVulnerable(EGameplayCueEvent EventType, const struct FGameplayCueParameters& Parameters)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Minion_Lane_C", "GameplayCue.Minion.LastHitVulnerable");

	Params::BP_Minion_Lane_C_GameplayCue_Minion_LastHitVulnerable Parms{};

	Parms.EventType = EventType;
	Parms.Parameters = std::move(Parameters);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Minion_Lane.BP_Minion_Lane_C.OnTeamChanged
// (Event, Public, BlueprintEvent)
// Parameters:
// EOrionTeam                              NewTeamIdx                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Minion_Lane_C::OnTeamChanged(EOrionTeam NewTeamIdx)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Minion_Lane_C", "OnTeamChanged");

	Params::BP_Minion_Lane_C_OnTeamChanged Parms{};

	Parms.NewTeamIdx = NewTeamIdx;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Minion_Lane.BP_Minion_Lane_C.GameplayCue.Damage.DoT
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// EGameplayCueEvent                       EventType                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FGameplayCueParameters           Parameters                                             (BlueprintVisible, BlueprintReadOnly, Parm, ContainsInstancedReference)

void ABP_Minion_Lane_C::GameplayCue_Damage_DoT(EGameplayCueEvent EventType, const struct FGameplayCueParameters& Parameters)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Minion_Lane_C", "GameplayCue.Damage.DoT");

	Params::BP_Minion_Lane_C_GameplayCue_Damage_DoT Parms{};

	Parms.EventType = EventType;
	Parms.Parameters = std::move(Parameters);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Minion_Lane.BP_Minion_Lane_C.GameplayCue.Damage
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// EGameplayCueEvent                       EventType                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FGameplayCueParameters           Parameters                                             (BlueprintVisible, BlueprintReadOnly, Parm, ContainsInstancedReference)

void ABP_Minion_Lane_C::GameplayCue_Damage(EGameplayCueEvent EventType, const struct FGameplayCueParameters& Parameters)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Minion_Lane_C", "GameplayCue.Damage");

	Params::BP_Minion_Lane_C_GameplayCue_Damage Parms{};

	Parms.EventType = EventType;
	Parms.Parameters = std::move(Parameters);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Minion_Lane.BP_Minion_Lane_C.DeWarp__UpdateFunc
// (BlueprintEvent)

void ABP_Minion_Lane_C::DeWarp__UpdateFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Minion_Lane_C", "DeWarp__UpdateFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Minion_Lane.BP_Minion_Lane_C.DeWarp__FinishedFunc
// (BlueprintEvent)

void ABP_Minion_Lane_C::DeWarp__FinishedFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Minion_Lane_C", "DeWarp__FinishedFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Minion_Lane.BP_Minion_Lane_C.Timeline_0__UpdateFunc
// (BlueprintEvent)

void ABP_Minion_Lane_C::Timeline_0__UpdateFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Minion_Lane_C", "Timeline_0__UpdateFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Minion_Lane.BP_Minion_Lane_C.Timeline_0__FinishedFunc
// (BlueprintEvent)

void ABP_Minion_Lane_C::Timeline_0__FinishedFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Minion_Lane_C", "Timeline_0__FinishedFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Minion_Lane.BP_Minion_Lane_C.CoreExposedFX_Timeline__UpdateFunc
// (BlueprintEvent)

void ABP_Minion_Lane_C::CoreExposedFX_Timeline__UpdateFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Minion_Lane_C", "CoreExposedFX_Timeline__UpdateFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Minion_Lane.BP_Minion_Lane_C.CoreExposedFX_Timeline__FinishedFunc
// (BlueprintEvent)

void ABP_Minion_Lane_C::CoreExposedFX_Timeline__FinishedFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Minion_Lane_C", "CoreExposedFX_Timeline__FinishedFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Minion_Lane.BP_Minion_Lane_C.DeathFX_Timeline__UpdateFunc
// (BlueprintEvent)

void ABP_Minion_Lane_C::DeathFX_Timeline__UpdateFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Minion_Lane_C", "DeathFX_Timeline__UpdateFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Minion_Lane.BP_Minion_Lane_C.DeathFX_Timeline__FinishedFunc
// (BlueprintEvent)

void ABP_Minion_Lane_C::DeathFX_Timeline__FinishedFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Minion_Lane_C", "DeathFX_Timeline__FinishedFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Minion_Lane.BP_Minion_Lane_C.UserConstructionScript
// (Event, Public, BlueprintCallable, BlueprintEvent)

void ABP_Minion_Lane_C::UserConstructionScript()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Minion_Lane_C", "UserConstructionScript");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Minion_Lane.BP_Minion_Lane_C.InitTeamChanged
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// EOrionTeam                              Team                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Minion_Lane_C::InitTeamChanged(EOrionTeam Team)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Minion_Lane_C", "InitTeamChanged");

	Params::BP_Minion_Lane_C_InitTeamChanged Parms{};

	Parms.Team = Team;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Minion_Lane.BP_Minion_Lane_C.SwapClientToCoreMesh
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class USkeletalMesh*                    NewMesh_Dawn                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class USkeletalMesh*                    NewMesh_Dusk                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    IsDusk_0                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_Minion_Lane_C::SwapClientToCoreMesh(class USkeletalMesh* NewMesh_Dawn, class USkeletalMesh* NewMesh_Dusk, bool IsDusk_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Minion_Lane_C", "SwapClientToCoreMesh");

	Params::BP_Minion_Lane_C_SwapClientToCoreMesh Parms{};

	Parms.NewMesh_Dawn = NewMesh_Dawn;
	Parms.NewMesh_Dusk = NewMesh_Dusk;
	Parms.IsDusk_0 = IsDusk_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Minion_Lane.BP_Minion_Lane_C.SetTeamColor
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// EOrionTeam                              TeamNum_0                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    IsDead                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_Minion_Lane_C::SetTeamColor(EOrionTeam TeamNum_0, bool IsDead)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Minion_Lane_C", "SetTeamColor");

	Params::BP_Minion_Lane_C_SetTeamColor Parms{};

	Parms.TeamNum_0 = TeamNum_0;
	Parms.IsDead = IsDead;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Minion_Lane.BP_Minion_Lane_C.SwapMatsToCore
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UMaterialInterface*               MatCoreDawn                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UMaterialInterface*               MatCoreDusk                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    IsDusk_0                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_Minion_Lane_C::SwapMatsToCore(class UMaterialInterface* MatCoreDawn, class UMaterialInterface* MatCoreDusk, bool IsDusk_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Minion_Lane_C", "SwapMatsToCore");

	Params::BP_Minion_Lane_C_SwapMatsToCore Parms{};

	Parms.MatCoreDawn = MatCoreDawn;
	Parms.MatCoreDusk = MatCoreDusk;
	Parms.IsDusk_0 = IsDusk_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Minion_Lane.BP_Minion_Lane_C.SwapMatsToDeath
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsDusk_0                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_Minion_Lane_C::SwapMatsToDeath(bool IsDusk_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Minion_Lane_C", "SwapMatsToDeath");

	Params::BP_Minion_Lane_C_SwapMatsToDeath Parms{};

	Parms.IsDusk_0 = IsDusk_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Minion_Lane.BP_Minion_Lane_C.Debug_CheckTeamVisualOverride
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// EOrionTeam                              DesiredTeamVisual                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// EOrionTeam                              ActualTeamVisual                                       (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Minion_Lane_C::Debug_CheckTeamVisualOverride(EOrionTeam DesiredTeamVisual, EOrionTeam* ActualTeamVisual)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Minion_Lane_C", "Debug_CheckTeamVisualOverride");

	Params::BP_Minion_Lane_C_Debug_CheckTeamVisualOverride Parms{};

	Parms.DesiredTeamVisual = DesiredTeamVisual;

	UObject::ProcessEvent(Func, &Parms);

	if (ActualTeamVisual != nullptr)
		*ActualTeamVisual = Parms.ActualTeamVisual;
}

}

