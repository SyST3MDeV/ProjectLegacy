#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: OrionUI

#include "Basic.hpp"

#include "OrionGame_structs.hpp"
#include "OrionGame_classes.hpp"
#include "CoreUObject_structs.hpp"
#include "CoreUObject_classes.hpp"
#include "InputCore_structs.hpp"
#include "UMG_structs.hpp"
#include "UMG_classes.hpp"
#include "Slate_structs.hpp"
#include "SlateCore_structs.hpp"
#include "OrionUI_structs.hpp"
#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "GameplayAbilities_structs.hpp"
#include "GameplayTags_structs.hpp"
#include "BlueprintContext_structs.hpp"
#include "Hotfix_structs.hpp"
#include "WidgetCarousel_structs.hpp"


namespace SDK
{

// Class OrionUI.ArcadeLadderDetailsRoot
// 0x0068 (0x04B0 - 0x0448)
class UArcadeLadderDetailsRoot final : public UOrionActivatableWidget
{
public:
	uint8                                         Pad_448[0x8];                                      // 0x0448(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	class UOrionArcadeLadderSetupData*            LadderData;                                        // 0x0450(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class UArcadeStageButton*>             StageButtons;                                      // 0x0458(0x0010)(ExportObject, ZeroConstructor, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	int32                                         CurrentStageIndex;                                 // 0x0468(0x0004)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_46C[0x4];                                      // 0x046C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UOrionDefaultButton*                    Button_Play;                                       // 0x0470(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FText                                   PlayStageFormat;                                   // 0x0478(0x0018)(Protected, NativeAccessSpecifierProtected)
	class FText                                   DefaultPlayText;                                   // 0x0490(0x0018)(Protected, NativeAccessSpecifierProtected)
	uint8                                         Pad_4A8[0x8];                                      // 0x04A8(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void SetLadder(class UOrionArcadeLadderSetupData* NewLadderData);
	void SetupButtons(const int32 StartingStageIndex);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ArcadeLadderDetailsRoot">();
	}
	static class UArcadeLadderDetailsRoot* GetDefaultObj()
	{
		return GetDefaultObjImpl<UArcadeLadderDetailsRoot>();
	}
};
static_assert(alignof(UArcadeLadderDetailsRoot) == 0x000008, "Wrong alignment on UArcadeLadderDetailsRoot");
static_assert(sizeof(UArcadeLadderDetailsRoot) == 0x0004B0, "Wrong size on UArcadeLadderDetailsRoot");
static_assert(offsetof(UArcadeLadderDetailsRoot, LadderData) == 0x000450, "Member 'UArcadeLadderDetailsRoot::LadderData' has a wrong offset!");
static_assert(offsetof(UArcadeLadderDetailsRoot, StageButtons) == 0x000458, "Member 'UArcadeLadderDetailsRoot::StageButtons' has a wrong offset!");
static_assert(offsetof(UArcadeLadderDetailsRoot, CurrentStageIndex) == 0x000468, "Member 'UArcadeLadderDetailsRoot::CurrentStageIndex' has a wrong offset!");
static_assert(offsetof(UArcadeLadderDetailsRoot, Button_Play) == 0x000470, "Member 'UArcadeLadderDetailsRoot::Button_Play' has a wrong offset!");
static_assert(offsetof(UArcadeLadderDetailsRoot, PlayStageFormat) == 0x000478, "Member 'UArcadeLadderDetailsRoot::PlayStageFormat' has a wrong offset!");
static_assert(offsetof(UArcadeLadderDetailsRoot, DefaultPlayText) == 0x000490, "Member 'UArcadeLadderDetailsRoot::DefaultPlayText' has a wrong offset!");

// Class OrionUI.OrionArcadeScoreboardWidget
// 0x0038 (0x0480 - 0x0448)
class UOrionArcadeScoreboardWidget final : public UOrionActivatableWidget
{
public:
	uint8                                         Pad_448[0x8];                                      // 0x0448(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	class UVerticalBox*                           FriendlyBox;                                       // 0x0450(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UVerticalBox*                           EnemyBox;                                          // 0x0458(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSubclassOf<class UOrionArcadeScoreboardRow>  FriendlyRowClass;                                  // 0x0460(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSubclassOf<class UOrionArcadeScoreboardRow>  EnemyRowClass;                                     // 0x0468(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<class UOrionArcadeScoreboardRow*>      AllRows;                                           // 0x0470(0x0010)(ExportObject, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPrivate)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"OrionArcadeScoreboardWidget">();
	}
	static class UOrionArcadeScoreboardWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UOrionArcadeScoreboardWidget>();
	}
};
static_assert(alignof(UOrionArcadeScoreboardWidget) == 0x000008, "Wrong alignment on UOrionArcadeScoreboardWidget");
static_assert(sizeof(UOrionArcadeScoreboardWidget) == 0x000480, "Wrong size on UOrionArcadeScoreboardWidget");
static_assert(offsetof(UOrionArcadeScoreboardWidget, FriendlyBox) == 0x000450, "Member 'UOrionArcadeScoreboardWidget::FriendlyBox' has a wrong offset!");
static_assert(offsetof(UOrionArcadeScoreboardWidget, EnemyBox) == 0x000458, "Member 'UOrionArcadeScoreboardWidget::EnemyBox' has a wrong offset!");
static_assert(offsetof(UOrionArcadeScoreboardWidget, FriendlyRowClass) == 0x000460, "Member 'UOrionArcadeScoreboardWidget::FriendlyRowClass' has a wrong offset!");
static_assert(offsetof(UOrionArcadeScoreboardWidget, EnemyRowClass) == 0x000468, "Member 'UOrionArcadeScoreboardWidget::EnemyRowClass' has a wrong offset!");
static_assert(offsetof(UOrionArcadeScoreboardWidget, AllRows) == 0x000470, "Member 'UOrionArcadeScoreboardWidget::AllRows' has a wrong offset!");

// Class OrionUI.OrionDailyQuestTooltip
// 0x0040 (0x0370 - 0x0330)
class UOrionDailyQuestTooltip : public UOrionTooltipBase
{
public:
	uint8                                         Pad_330[0x30];                                     // 0x0330(0x0030)(Fixing Size After Last Property [ Dumper-7 ])
	class UOrionTextBlock*                        Text_QuestName;                                    // 0x0360(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionDynamicEntryBox*                  EntryBox_Objectives;                               // 0x0368(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"OrionDailyQuestTooltip">();
	}
	static class UOrionDailyQuestTooltip* GetDefaultObj()
	{
		return GetDefaultObjImpl<UOrionDailyQuestTooltip>();
	}
};
static_assert(alignof(UOrionDailyQuestTooltip) == 0x000008, "Wrong alignment on UOrionDailyQuestTooltip");
static_assert(sizeof(UOrionDailyQuestTooltip) == 0x000370, "Wrong size on UOrionDailyQuestTooltip");
static_assert(offsetof(UOrionDailyQuestTooltip, Text_QuestName) == 0x000360, "Member 'UOrionDailyQuestTooltip::Text_QuestName' has a wrong offset!");
static_assert(offsetof(UOrionDailyQuestTooltip, EntryBox_Objectives) == 0x000368, "Member 'UOrionDailyQuestTooltip::EntryBox_Objectives' has a wrong offset!");

// Class OrionUI.ArcadeLadderButton
// 0x0040 (0x0A20 - 0x09E0)
class UArcadeLadderButton final : public UOrionBaseButton
{
public:
	uint8                                         Pad_9E0[0x8];                                      // 0x09E0(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	class UOrionArcadeLadderSetupData*            LadderData;                                        // 0x09E8(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UOrionTextBlock*                        Text_LadderTitle;                                  // 0x09F0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UOrionTextBlock*                        Text_LadderDescription;                            // 0x09F8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                 LadderIcon;                                        // 0x0A00(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_A08[0x18];                                     // 0x0A08(0x0018)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void UpdateWithLadderData();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ArcadeLadderButton">();
	}
	static class UArcadeLadderButton* GetDefaultObj()
	{
		return GetDefaultObjImpl<UArcadeLadderButton>();
	}
};
static_assert(alignof(UArcadeLadderButton) == 0x000008, "Wrong alignment on UArcadeLadderButton");
static_assert(sizeof(UArcadeLadderButton) == 0x000A20, "Wrong size on UArcadeLadderButton");
static_assert(offsetof(UArcadeLadderButton, LadderData) == 0x0009E8, "Member 'UArcadeLadderButton::LadderData' has a wrong offset!");
static_assert(offsetof(UArcadeLadderButton, Text_LadderTitle) == 0x0009F0, "Member 'UArcadeLadderButton::Text_LadderTitle' has a wrong offset!");
static_assert(offsetof(UArcadeLadderButton, Text_LadderDescription) == 0x0009F8, "Member 'UArcadeLadderButton::Text_LadderDescription' has a wrong offset!");
static_assert(offsetof(UArcadeLadderButton, LadderIcon) == 0x000A00, "Member 'UArcadeLadderButton::LadderIcon' has a wrong offset!");

// Class OrionUI.ArcadeRoot
// 0x0038 (0x0480 - 0x0448)
class UArcadeRoot final : public UOrionActivatableWidget
{
public:
	TSubclassOf<class UArcadeLadderButton>        ArcadeLadderButtonClass;                           // 0x0448(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class UOrionArcadeLadderSetupData*>    LoadedLadders;                                     // 0x0450(0x0010)(ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	class UOrionTileView*                         TileView_Ladders;                                  // 0x0460(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class UOrionArcadeLadderSetupData*>    DebugLadders;                                      // 0x0468(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	uint8                                         Pad_478[0x8];                                      // 0x0478(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void DynamicHandleItemSelected(class UObject* Item);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ArcadeRoot">();
	}
	static class UArcadeRoot* GetDefaultObj()
	{
		return GetDefaultObjImpl<UArcadeRoot>();
	}
};
static_assert(alignof(UArcadeRoot) == 0x000008, "Wrong alignment on UArcadeRoot");
static_assert(sizeof(UArcadeRoot) == 0x000480, "Wrong size on UArcadeRoot");
static_assert(offsetof(UArcadeRoot, ArcadeLadderButtonClass) == 0x000448, "Member 'UArcadeRoot::ArcadeLadderButtonClass' has a wrong offset!");
static_assert(offsetof(UArcadeRoot, LoadedLadders) == 0x000450, "Member 'UArcadeRoot::LoadedLadders' has a wrong offset!");
static_assert(offsetof(UArcadeRoot, TileView_Ladders) == 0x000460, "Member 'UArcadeRoot::TileView_Ladders' has a wrong offset!");
static_assert(offsetof(UArcadeRoot, DebugLadders) == 0x000468, "Member 'UArcadeRoot::DebugLadders' has a wrong offset!");

// Class OrionUI.ArcadeStageButton
// 0x0090 (0x0A70 - 0x09E0)
class UArcadeStageButton final : public UOrionBaseButton
{
public:
	class UOrionArcadeLadderSetupData*            LadderData;                                        // 0x09E0(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                         StageIndex;                                        // 0x09E8(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                         UIIndex;                                           // 0x09EC(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UOrionTextBlock*                        Text_StageIndex;                                   // 0x09F0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UOrionTextBlock*                        Text_PlaylistID;                                   // 0x09F8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_A00[0x70];                                     // 0x0A00(0x0070)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void HideButton();
	void SetStageData(class UOrionArcadeLadderSetupData* InLadderData, int32 InStageIndex);
	void UpdateWithStageData();

	int32 GetPlaylistID() const;
	int32 GetUIIndex() const;
	bool IsValidStage() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ArcadeStageButton">();
	}
	static class UArcadeStageButton* GetDefaultObj()
	{
		return GetDefaultObjImpl<UArcadeStageButton>();
	}
};
static_assert(alignof(UArcadeStageButton) == 0x000008, "Wrong alignment on UArcadeStageButton");
static_assert(sizeof(UArcadeStageButton) == 0x000A70, "Wrong size on UArcadeStageButton");
static_assert(offsetof(UArcadeStageButton, LadderData) == 0x0009E0, "Member 'UArcadeStageButton::LadderData' has a wrong offset!");
static_assert(offsetof(UArcadeStageButton, StageIndex) == 0x0009E8, "Member 'UArcadeStageButton::StageIndex' has a wrong offset!");
static_assert(offsetof(UArcadeStageButton, UIIndex) == 0x0009EC, "Member 'UArcadeStageButton::UIIndex' has a wrong offset!");
static_assert(offsetof(UArcadeStageButton, Text_StageIndex) == 0x0009F0, "Member 'UArcadeStageButton::Text_StageIndex' has a wrong offset!");
static_assert(offsetof(UArcadeStageButton, Text_PlaylistID) == 0x0009F8, "Member 'UArcadeStageButton::Text_PlaylistID' has a wrong offset!");

// Class OrionUI.OrionWidgetCarousel
// 0x0750 (0x0860 - 0x0110)
class UOrionWidgetCarousel final : public UPanelWidget
{
public:
	uint8                                         Pad_110[0x10];                                     // 0x0110(0x0010)(Fixing Size After Last Property [ Dumper-7 ])
	struct FWidgetCarouselNavigationBarStyle      NavigationStyle;                                   // 0x0120(0x0728)(Edit, Protected, NativeAccessSpecifierProtected)
	uint8                                         Pad_848[0x18];                                     // 0x0848(0x0018)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"OrionWidgetCarousel">();
	}
	static class UOrionWidgetCarousel* GetDefaultObj()
	{
		return GetDefaultObjImpl<UOrionWidgetCarousel>();
	}
};
static_assert(alignof(UOrionWidgetCarousel) == 0x000008, "Wrong alignment on UOrionWidgetCarousel");
static_assert(sizeof(UOrionWidgetCarousel) == 0x000860, "Wrong size on UOrionWidgetCarousel");
static_assert(offsetof(UOrionWidgetCarousel, NavigationStyle) == 0x000120, "Member 'UOrionWidgetCarousel::NavigationStyle' has a wrong offset!");

// Class OrionUI.Base_Group
// 0x0000 (0x0028 - 0x0028)
class UBase_Group : public UObject
{
public:
	void AddWidget(class UWidget* InWidget);
	void RemoveAll();
	void RemoveWidget(class UWidget* InWidget);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"Base_Group">();
	}
	static class UBase_Group* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBase_Group>();
	}
};
static_assert(alignof(UBase_Group) == 0x000008, "Wrong alignment on UBase_Group");
static_assert(sizeof(UBase_Group) == 0x000028, "Wrong size on UBase_Group");

// Class OrionUI.ChatWindow
// 0x0080 (0x0178 - 0x00F8)
class UChatWindow final : public UWidget
{
public:
	TDelegate<void()>                             OnChatMessageCommitted;                            // 0x00F8(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, InstancedReference, NoDestructor, NativeAccessSpecifierPublic)
	class FText                                   PromptText;                                        // 0x0108(0x0018)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnTemplate, NativeAccessSpecifierPublic)
	TDelegate<void()>                             PromptTextDelegate;                                // 0x0120(0x0010)(ZeroConstructor, InstancedReference, NoDestructor, NativeAccessSpecifierPublic)
	float                                         ChatFadeTime;                                      // 0x0130(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          HideChrome;                                        // 0x0134(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ThrottleChat;                                      // 0x0135(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_136[0x2];                                      // 0x0136(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         ThrottleTicketTime;                                // 0x0138(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ThrottleTicketCount;                               // 0x013C(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         MinimizedMessageCount;                             // 0x0140(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         MaxChatCharacters;                                 // 0x0144(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_148[0x30];                                     // 0x0148(0x0030)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	class FText GetChatPromptText__DelegateSignature();
	void OnChatDelegate__DelegateSignature();
	void SetActive(bool bActive);
	void SetFocus(bool bWithSlash);

	bool IsActive() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ChatWindow">();
	}
	static class UChatWindow* GetDefaultObj()
	{
		return GetDefaultObjImpl<UChatWindow>();
	}
};
static_assert(alignof(UChatWindow) == 0x000008, "Wrong alignment on UChatWindow");
static_assert(sizeof(UChatWindow) == 0x000178, "Wrong size on UChatWindow");
static_assert(offsetof(UChatWindow, OnChatMessageCommitted) == 0x0000F8, "Member 'UChatWindow::OnChatMessageCommitted' has a wrong offset!");
static_assert(offsetof(UChatWindow, PromptText) == 0x000108, "Member 'UChatWindow::PromptText' has a wrong offset!");
static_assert(offsetof(UChatWindow, PromptTextDelegate) == 0x000120, "Member 'UChatWindow::PromptTextDelegate' has a wrong offset!");
static_assert(offsetof(UChatWindow, ChatFadeTime) == 0x000130, "Member 'UChatWindow::ChatFadeTime' has a wrong offset!");
static_assert(offsetof(UChatWindow, HideChrome) == 0x000134, "Member 'UChatWindow::HideChrome' has a wrong offset!");
static_assert(offsetof(UChatWindow, ThrottleChat) == 0x000135, "Member 'UChatWindow::ThrottleChat' has a wrong offset!");
static_assert(offsetof(UChatWindow, ThrottleTicketTime) == 0x000138, "Member 'UChatWindow::ThrottleTicketTime' has a wrong offset!");
static_assert(offsetof(UChatWindow, ThrottleTicketCount) == 0x00013C, "Member 'UChatWindow::ThrottleTicketCount' has a wrong offset!");
static_assert(offsetof(UChatWindow, MinimizedMessageCount) == 0x000140, "Member 'UChatWindow::MinimizedMessageCount' has a wrong offset!");
static_assert(offsetof(UChatWindow, MaxChatCharacters) == 0x000144, "Member 'UChatWindow::MaxChatCharacters' has a wrong offset!");

// Class OrionUI.ChatWindowWidget
// 0x0010 (0x0300 - 0x02F0)
class UChatWindowWidget final : public UOrionHUDWidgetBase
{
public:
	class UChatWindow*                            MyChatWindow;                                      // 0x02F0(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_2F8[0x8];                                      // 0x02F8(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void HandleOpenChat();
	void HandleOpenChatWithSlash();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ChatWindowWidget">();
	}
	static class UChatWindowWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UChatWindowWidget>();
	}
};
static_assert(alignof(UChatWindowWidget) == 0x000008, "Wrong alignment on UChatWindowWidget");
static_assert(sizeof(UChatWindowWidget) == 0x000300, "Wrong size on UChatWindowWidget");
static_assert(offsetof(UChatWindowWidget, MyChatWindow) == 0x0002F0, "Member 'UChatWindowWidget::MyChatWindow' has a wrong offset!");

// Class OrionUI.CircularLayoutPanel
// 0x0040 (0x0150 - 0x0110)
class UCircularLayoutPanel final : public UPanelWidget
{
public:
	float                                         PhaseOffset;                                       // 0x0110(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_114[0x4];                                      // 0x0114(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             PhaseOffsetDelegate;                               // 0x0118(0x0010)(ZeroConstructor, InstancedReference, NoDestructor, NativeAccessSpecifierPublic)
	float                                         RadiusMultiplier;                                  // 0x0128(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_12C[0x4];                                      // 0x012C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             RadiusMultiplierDelegate;                          // 0x0130(0x0010)(ZeroConstructor, InstancedReference, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_140[0x10];                                     // 0x0140(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	class UCircularLayoutSlot* AddChildToCircularLayout(class UWidget* Content);
	void SetPhaseOffset(float InPhaseOffset);
	void SetRadiusMultiplier(float InRadiusMultiplier);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"CircularLayoutPanel">();
	}
	static class UCircularLayoutPanel* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCircularLayoutPanel>();
	}
};
static_assert(alignof(UCircularLayoutPanel) == 0x000008, "Wrong alignment on UCircularLayoutPanel");
static_assert(sizeof(UCircularLayoutPanel) == 0x000150, "Wrong size on UCircularLayoutPanel");
static_assert(offsetof(UCircularLayoutPanel, PhaseOffset) == 0x000110, "Member 'UCircularLayoutPanel::PhaseOffset' has a wrong offset!");
static_assert(offsetof(UCircularLayoutPanel, PhaseOffsetDelegate) == 0x000118, "Member 'UCircularLayoutPanel::PhaseOffsetDelegate' has a wrong offset!");
static_assert(offsetof(UCircularLayoutPanel, RadiusMultiplier) == 0x000128, "Member 'UCircularLayoutPanel::RadiusMultiplier' has a wrong offset!");
static_assert(offsetof(UCircularLayoutPanel, RadiusMultiplierDelegate) == 0x000130, "Member 'UCircularLayoutPanel::RadiusMultiplierDelegate' has a wrong offset!");

// Class OrionUI.OrionMaterialExpressionUIColorParameter
// 0x0070 (0x00F0 - 0x0080)
class UOrionMaterialExpressionUIColorParameter final : public UMaterialExpressionCollectionParameter
{
public:
	struct FOrionUIColor                          UIColor;                                           // 0x0080(0x0070)(Edit, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"OrionMaterialExpressionUIColorParameter">();
	}
	static class UOrionMaterialExpressionUIColorParameter* GetDefaultObj()
	{
		return GetDefaultObjImpl<UOrionMaterialExpressionUIColorParameter>();
	}
};
static_assert(alignof(UOrionMaterialExpressionUIColorParameter) == 0x000010, "Wrong alignment on UOrionMaterialExpressionUIColorParameter");
static_assert(sizeof(UOrionMaterialExpressionUIColorParameter) == 0x0000F0, "Wrong size on UOrionMaterialExpressionUIColorParameter");
static_assert(offsetof(UOrionMaterialExpressionUIColorParameter, UIColor) == 0x000080, "Member 'UOrionMaterialExpressionUIColorParameter::UIColor' has a wrong offset!");

// Class OrionUI.CircularLayoutSlot
// 0x0018 (0x0050 - 0x0038)
class UCircularLayoutSlot final : public UPanelSlot
{
public:
	float                                         Proportion;                                        // 0x0038(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Radius;                                            // 0x003C(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EHorizontalAlignment                          HorizontalAlignment;                               // 0x0040(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EVerticalAlignment                            VerticalAlignment;                                 // 0x0041(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_42[0xE];                                       // 0x0042(0x000E)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void SetHorizontalAlignment(EHorizontalAlignment InHorizontalAlignment);
	void SetProportion(float InProportion);
	void SetRadius(float InRadius);
	void SetVerticalAlignment(EVerticalAlignment InVerticalAlignment);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"CircularLayoutSlot">();
	}
	static class UCircularLayoutSlot* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCircularLayoutSlot>();
	}
};
static_assert(alignof(UCircularLayoutSlot) == 0x000008, "Wrong alignment on UCircularLayoutSlot");
static_assert(sizeof(UCircularLayoutSlot) == 0x000050, "Wrong size on UCircularLayoutSlot");
static_assert(offsetof(UCircularLayoutSlot, Proportion) == 0x000038, "Member 'UCircularLayoutSlot::Proportion' has a wrong offset!");
static_assert(offsetof(UCircularLayoutSlot, Radius) == 0x00003C, "Member 'UCircularLayoutSlot::Radius' has a wrong offset!");
static_assert(offsetof(UCircularLayoutSlot, HorizontalAlignment) == 0x000040, "Member 'UCircularLayoutSlot::HorizontalAlignment' has a wrong offset!");
static_assert(offsetof(UCircularLayoutSlot, VerticalAlignment) == 0x000041, "Member 'UCircularLayoutSlot::VerticalAlignment' has a wrong offset!");

// Class OrionUI.CountdownTimerBase
// 0x0018 (0x02D0 - 0x02B8)
class UCountdownTimerBase final : public UOrionUserWidgetBase
{
public:
	uint8                                         Pad_2B8[0x10];                                     // 0x02B8(0x0010)(Fixing Size After Last Property [ Dumper-7 ])
	class UOrionTextBlock*                        CountdownText;                                     // 0x02C8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"CountdownTimerBase">();
	}
	static class UCountdownTimerBase* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCountdownTimerBase>();
	}
};
static_assert(alignof(UCountdownTimerBase) == 0x000008, "Wrong alignment on UCountdownTimerBase");
static_assert(sizeof(UCountdownTimerBase) == 0x0002D0, "Wrong size on UCountdownTimerBase");
static_assert(offsetof(UCountdownTimerBase, CountdownText) == 0x0002C8, "Member 'UCountdownTimerBase::CountdownText' has a wrong offset!");

// Class OrionUI.EventWidget
// 0x0050 (0x0160 - 0x0110)
class UEventWidget final : public UContentWidget
{
public:
	UMulticastDelegateProperty_                   MouseEnter;                                        // 0x0110(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                   MouseLeave;                                        // 0x0120(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                   MouseButtonDown;                                   // 0x0130(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                   MouseButtonUp;                                     // 0x0140(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                         Pad_150[0x10];                                     // 0x0150(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"EventWidget">();
	}
	static class UEventWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UEventWidget>();
	}
};
static_assert(alignof(UEventWidget) == 0x000008, "Wrong alignment on UEventWidget");
static_assert(sizeof(UEventWidget) == 0x000160, "Wrong size on UEventWidget");
static_assert(offsetof(UEventWidget, MouseEnter) == 0x000110, "Member 'UEventWidget::MouseEnter' has a wrong offset!");
static_assert(offsetof(UEventWidget, MouseLeave) == 0x000120, "Member 'UEventWidget::MouseLeave' has a wrong offset!");
static_assert(offsetof(UEventWidget, MouseButtonDown) == 0x000130, "Member 'UEventWidget::MouseButtonDown' has a wrong offset!");
static_assert(offsetof(UEventWidget, MouseButtonUp) == 0x000140, "Member 'UEventWidget::MouseButtonUp' has a wrong offset!");

// Class OrionUI.EventWidgetSlot
// 0x0028 (0x0060 - 0x0038)
class UEventWidgetSlot final : public UPanelSlot
{
public:
	struct FMargin                                Padding;                                           // 0x0038(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPublic)
	EHorizontalAlignment                          HorizontalAlignment;                               // 0x0048(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EVerticalAlignment                            VerticalAlignment;                                 // 0x0049(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4A[0x16];                                      // 0x004A(0x0016)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void SetHorizontalAlignment(EHorizontalAlignment InHorizontalAlignment);
	void SetPadding(const struct FMargin& InPadding);
	void SetVerticalAlignment(EVerticalAlignment InVerticalAlignment);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"EventWidgetSlot">();
	}
	static class UEventWidgetSlot* GetDefaultObj()
	{
		return GetDefaultObjImpl<UEventWidgetSlot>();
	}
};
static_assert(alignof(UEventWidgetSlot) == 0x000008, "Wrong alignment on UEventWidgetSlot");
static_assert(sizeof(UEventWidgetSlot) == 0x000060, "Wrong size on UEventWidgetSlot");
static_assert(offsetof(UEventWidgetSlot, Padding) == 0x000038, "Member 'UEventWidgetSlot::Padding' has a wrong offset!");
static_assert(offsetof(UEventWidgetSlot, HorizontalAlignment) == 0x000048, "Member 'UEventWidgetSlot::HorizontalAlignment' has a wrong offset!");
static_assert(offsetof(UEventWidgetSlot, VerticalAlignment) == 0x000049, "Member 'UEventWidgetSlot::VerticalAlignment' has a wrong offset!");

// Class OrionUI.PlatformSpecificWidget
// 0x0018 (0x0128 - 0x0110)
class UPlatformSpecificWidget final : public UContentWidget
{
public:
	bool                                          bCollapseOnUnsupportedPlatform;                    // 0x0110(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_111[0x17];                                     // 0x0111(0x0017)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PlatformSpecificWidget">();
	}
	static class UPlatformSpecificWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPlatformSpecificWidget>();
	}
};
static_assert(alignof(UPlatformSpecificWidget) == 0x000008, "Wrong alignment on UPlatformSpecificWidget");
static_assert(sizeof(UPlatformSpecificWidget) == 0x000128, "Wrong size on UPlatformSpecificWidget");
static_assert(offsetof(UPlatformSpecificWidget, bCollapseOnUnsupportedPlatform) == 0x000110, "Member 'UPlatformSpecificWidget::bCollapseOnUnsupportedPlatform' has a wrong offset!");

// Class OrionUI.ExpandableArea_Group
// 0x0010 (0x0038 - 0x0028)
class UExpandableArea_Group final : public UBase_Group
{
public:
	uint8                                         Pad_28[0x10];                                      // 0x0028(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void OnExpansionChanged(class UExpandableArea* Area, bool bIsExpanded);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ExpandableArea_Group">();
	}
	static class UExpandableArea_Group* GetDefaultObj()
	{
		return GetDefaultObjImpl<UExpandableArea_Group>();
	}
};
static_assert(alignof(UExpandableArea_Group) == 0x000008, "Wrong alignment on UExpandableArea_Group");
static_assert(sizeof(UExpandableArea_Group) == 0x000038, "Wrong size on UExpandableArea_Group");

// Class OrionUI.FriendsList
// 0x0010 (0x0108 - 0x00F8)
class UFriendsList final : public UWidget
{
public:
	uint8                                         Pad_F8[0x10];                                      // 0x00F8(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"FriendsList">();
	}
	static class UFriendsList* GetDefaultObj()
	{
		return GetDefaultObjImpl<UFriendsList>();
	}
};
static_assert(alignof(UFriendsList) == 0x000008, "Wrong alignment on UFriendsList");
static_assert(sizeof(UFriendsList) == 0x000108, "Wrong size on UFriendsList");

// Class OrionUI.HUDAlertPresenter
// 0x0018 (0x02D0 - 0x02B8)
class UHUDAlertPresenter final : public UOrionUserWidgetBase
{
public:
	class UHUDAlertWidgetBase*                    CurrentAlert;                                      // 0x02B8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_2C0[0x10];                                     // 0x02C0(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"HUDAlertPresenter">();
	}
	static class UHUDAlertPresenter* GetDefaultObj()
	{
		return GetDefaultObjImpl<UHUDAlertPresenter>();
	}
};
static_assert(alignof(UHUDAlertPresenter) == 0x000008, "Wrong alignment on UHUDAlertPresenter");
static_assert(sizeof(UHUDAlertPresenter) == 0x0002D0, "Wrong size on UHUDAlertPresenter");
static_assert(offsetof(UHUDAlertPresenter, CurrentAlert) == 0x0002B8, "Member 'UHUDAlertPresenter::CurrentAlert' has a wrong offset!");

// Class OrionUI.HUDAlertWidgetBase
// 0x0018 (0x02D0 - 0x02B8)
class UHUDAlertWidgetBase final : public UOrionUserWidgetBase
{
public:
	class UHUDAlertPresenter*                     OwningPresenter;                                   // 0x02B8(0x0008)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_2C0[0x10];                                     // 0x02C0(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void NotifyAlertFinished();
	void OnPlay(const class UHUDAlertAsset* InAlertToShow);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"HUDAlertWidgetBase">();
	}
	static class UHUDAlertWidgetBase* GetDefaultObj()
	{
		return GetDefaultObjImpl<UHUDAlertWidgetBase>();
	}
};
static_assert(alignof(UHUDAlertWidgetBase) == 0x000008, "Wrong alignment on UHUDAlertWidgetBase");
static_assert(sizeof(UHUDAlertWidgetBase) == 0x0002D0, "Wrong size on UHUDAlertWidgetBase");
static_assert(offsetof(UHUDAlertWidgetBase, OwningPresenter) == 0x0002B8, "Member 'UHUDAlertWidgetBase::OwningPresenter' has a wrong offset!");

// Class OrionUI.OrionVaultScreen
// 0x0128 (0x0570 - 0x0448)
class UOrionVaultScreen final : public UOrionActivatableWidget
{
public:
	float                                         MajorRewardScale;                                  // 0x0448(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         MinorRewardScale;                                  // 0x044C(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_450[0x98];                                     // 0x0450(0x0098)(Fixing Size After Last Property [ Dumper-7 ])
	class UOrionTextBlock*                        TextBlock_Title;                                   // 0x04E8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionRollingTextWidget*                RollingText_StatusText;                            // 0x04F0(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionTextBlock*                        TextBlock_Hint;                                    // 0x04F8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionTextBlock*                        TextBlock_KeyPurchaseCountdown;                    // 0x0500(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionDynamicEntryBox*                  EntryBox_MajorRewards;                             // 0x0508(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionDynamicEntryBox*                  EntryBox_MinorRewards;                             // 0x0510(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionDefaultButton*                    Button_Open;                                       // 0x0518(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionFlairPopup*                       FlairPopup_Reward;                                 // 0x0520(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_528[0x48];                                     // 0x0528(0x0048)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void FanfareCompleted();
	void HandleButtonClick();
	void OnActivated();
	void OnDeactivated();
	void OnRequestAllowBackButton();
	void OnRequestDisableBackButton();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"OrionVaultScreen">();
	}
	static class UOrionVaultScreen* GetDefaultObj()
	{
		return GetDefaultObjImpl<UOrionVaultScreen>();
	}
};
static_assert(alignof(UOrionVaultScreen) == 0x000008, "Wrong alignment on UOrionVaultScreen");
static_assert(sizeof(UOrionVaultScreen) == 0x000570, "Wrong size on UOrionVaultScreen");
static_assert(offsetof(UOrionVaultScreen, MajorRewardScale) == 0x000448, "Member 'UOrionVaultScreen::MajorRewardScale' has a wrong offset!");
static_assert(offsetof(UOrionVaultScreen, MinorRewardScale) == 0x00044C, "Member 'UOrionVaultScreen::MinorRewardScale' has a wrong offset!");
static_assert(offsetof(UOrionVaultScreen, TextBlock_Title) == 0x0004E8, "Member 'UOrionVaultScreen::TextBlock_Title' has a wrong offset!");
static_assert(offsetof(UOrionVaultScreen, RollingText_StatusText) == 0x0004F0, "Member 'UOrionVaultScreen::RollingText_StatusText' has a wrong offset!");
static_assert(offsetof(UOrionVaultScreen, TextBlock_Hint) == 0x0004F8, "Member 'UOrionVaultScreen::TextBlock_Hint' has a wrong offset!");
static_assert(offsetof(UOrionVaultScreen, TextBlock_KeyPurchaseCountdown) == 0x000500, "Member 'UOrionVaultScreen::TextBlock_KeyPurchaseCountdown' has a wrong offset!");
static_assert(offsetof(UOrionVaultScreen, EntryBox_MajorRewards) == 0x000508, "Member 'UOrionVaultScreen::EntryBox_MajorRewards' has a wrong offset!");
static_assert(offsetof(UOrionVaultScreen, EntryBox_MinorRewards) == 0x000510, "Member 'UOrionVaultScreen::EntryBox_MinorRewards' has a wrong offset!");
static_assert(offsetof(UOrionVaultScreen, Button_Open) == 0x000518, "Member 'UOrionVaultScreen::Button_Open' has a wrong offset!");
static_assert(offsetof(UOrionVaultScreen, FlairPopup_Reward) == 0x000520, "Member 'UOrionVaultScreen::FlairPopup_Reward' has a wrong offset!");

// Class OrionUI.InputSwitcher
// 0x0028 (0x0120 - 0x00F8)
class UInputSwitcher final : public UWidget
{
public:
	uint8                                         Pad_F8[0x8];                                       // 0x00F8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                MouseContent;                                      // 0x0100(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidget*                                GamepadContent;                                    // 0x0108(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_110[0x10];                                     // 0x0110(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"InputSwitcher">();
	}
	static class UInputSwitcher* GetDefaultObj()
	{
		return GetDefaultObjImpl<UInputSwitcher>();
	}
};
static_assert(alignof(UInputSwitcher) == 0x000008, "Wrong alignment on UInputSwitcher");
static_assert(sizeof(UInputSwitcher) == 0x000120, "Wrong size on UInputSwitcher");
static_assert(offsetof(UInputSwitcher, MouseContent) == 0x000100, "Member 'UInputSwitcher::MouseContent' has a wrong offset!");
static_assert(offsetof(UInputSwitcher, GamepadContent) == 0x000108, "Member 'UInputSwitcher::GamepadContent' has a wrong offset!");

// Class OrionUI.MatchmakingSearchWidgetAnimationRoot
// 0x0020 (0x0220 - 0x0200)
class UMatchmakingSearchWidgetAnimationRoot final : public UUserWidget
{
public:
	UMulticastDelegateProperty_                   OnHoveredChanged;                                  // 0x0200(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                         Pad_210[0x10];                                     // 0x0210(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"MatchmakingSearchWidgetAnimationRoot">();
	}
	static class UMatchmakingSearchWidgetAnimationRoot* GetDefaultObj()
	{
		return GetDefaultObjImpl<UMatchmakingSearchWidgetAnimationRoot>();
	}
};
static_assert(alignof(UMatchmakingSearchWidgetAnimationRoot) == 0x000008, "Wrong alignment on UMatchmakingSearchWidgetAnimationRoot");
static_assert(sizeof(UMatchmakingSearchWidgetAnimationRoot) == 0x000220, "Wrong size on UMatchmakingSearchWidgetAnimationRoot");
static_assert(offsetof(UMatchmakingSearchWidgetAnimationRoot, OnHoveredChanged) == 0x000200, "Member 'UMatchmakingSearchWidgetAnimationRoot::OnHoveredChanged' has a wrong offset!");

// Class OrionUI.OrionListView
// 0x0128 (0x0220 - 0x00F8)
class UOrionListView : public UWidget
{
public:
	uint8                                         Pad_F8[0x30];                                      // 0x00F8(0x0030)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         ItemHeight;                                        // 0x0128(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FMargin                                DesiredItemPadding;                                // 0x012C(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnTemplate, NoDestructor, Protected, NativeAccessSpecifierProtected)
	uint8                                         Pad_13C[0x4];                                      // 0x013C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TSubclassOf<class UUserWidget>                ListItemClass;                                     // 0x0140(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	ESelectionMode                                SelectionMode;                                     // 0x0148(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_149[0x3];                                      // 0x0149(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         MaxItemsSelectedAtOnce;                            // 0x014C(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	EConsumeMouseWheel                            ConsumeMouseWheel;                                 // 0x0150(0x0001)(Edit, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bClearSelectionOnClick;                            // 0x0151(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_152[0x2];                                      // 0x0152(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         NumPreAllocatedEntries;                            // 0x0154(0x0004)(Edit, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bUseScissorRect;                                   // 0x0158(0x0001)(Edit, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_159[0x9F];                                     // 0x0159(0x009F)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UObject*>                        FilteredItems;                                     // 0x01F8(0x0010)(ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected)
	TArray<class UObject*>                        AllItemsCache;                                     // 0x0208(0x0010)(ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected)
	uint8                                         Pad_218[0x8];                                      // 0x0218(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void DynamicHandleItemClicked(class UUserWidget* Widget);
	void DynamicHandleItemHovered(class UUserWidget* Widget, bool bIsHovered);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"OrionListView">();
	}
	static class UOrionListView* GetDefaultObj()
	{
		return GetDefaultObjImpl<UOrionListView>();
	}
};
static_assert(alignof(UOrionListView) == 0x000008, "Wrong alignment on UOrionListView");
static_assert(sizeof(UOrionListView) == 0x000220, "Wrong size on UOrionListView");
static_assert(offsetof(UOrionListView, ItemHeight) == 0x000128, "Member 'UOrionListView::ItemHeight' has a wrong offset!");
static_assert(offsetof(UOrionListView, DesiredItemPadding) == 0x00012C, "Member 'UOrionListView::DesiredItemPadding' has a wrong offset!");
static_assert(offsetof(UOrionListView, ListItemClass) == 0x000140, "Member 'UOrionListView::ListItemClass' has a wrong offset!");
static_assert(offsetof(UOrionListView, SelectionMode) == 0x000148, "Member 'UOrionListView::SelectionMode' has a wrong offset!");
static_assert(offsetof(UOrionListView, MaxItemsSelectedAtOnce) == 0x00014C, "Member 'UOrionListView::MaxItemsSelectedAtOnce' has a wrong offset!");
static_assert(offsetof(UOrionListView, ConsumeMouseWheel) == 0x000150, "Member 'UOrionListView::ConsumeMouseWheel' has a wrong offset!");
static_assert(offsetof(UOrionListView, bClearSelectionOnClick) == 0x000151, "Member 'UOrionListView::bClearSelectionOnClick' has a wrong offset!");
static_assert(offsetof(UOrionListView, NumPreAllocatedEntries) == 0x000154, "Member 'UOrionListView::NumPreAllocatedEntries' has a wrong offset!");
static_assert(offsetof(UOrionListView, bUseScissorRect) == 0x000158, "Member 'UOrionListView::bUseScissorRect' has a wrong offset!");
static_assert(offsetof(UOrionListView, FilteredItems) == 0x0001F8, "Member 'UOrionListView::FilteredItems' has a wrong offset!");
static_assert(offsetof(UOrionListView, AllItemsCache) == 0x000208, "Member 'UOrionListView::AllItemsCache' has a wrong offset!");

// Class OrionUI.OrionTileView
// 0x0020 (0x0240 - 0x0220)
class UOrionTileView final : public UOrionListView
{
public:
	EItemAlignment                                ItemAlignment;                                     // 0x0220(0x0001)(Edit, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_221[0x3];                                      // 0x0221(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         ItemWidth;                                         // 0x0224(0x0004)(Edit, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         MouseWheelScrollSpeedMultiplier;                   // 0x0228(0x0004)(Edit, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_22C[0x14];                                     // 0x022C(0x0014)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"OrionTileView">();
	}
	static class UOrionTileView* GetDefaultObj()
	{
		return GetDefaultObjImpl<UOrionTileView>();
	}
};
static_assert(alignof(UOrionTileView) == 0x000008, "Wrong alignment on UOrionTileView");
static_assert(sizeof(UOrionTileView) == 0x000240, "Wrong size on UOrionTileView");
static_assert(offsetof(UOrionTileView, ItemAlignment) == 0x000220, "Member 'UOrionTileView::ItemAlignment' has a wrong offset!");
static_assert(offsetof(UOrionTileView, ItemWidth) == 0x000224, "Member 'UOrionTileView::ItemWidth' has a wrong offset!");
static_assert(offsetof(UOrionTileView, MouseWheelScrollSpeedMultiplier) == 0x000228, "Member 'UOrionTileView::MouseWheelScrollSpeedMultiplier' has a wrong offset!");

// Class OrionUI.MatchmakingSearchWidget
// 0x03B8 (0x0670 - 0x02B8)
class UMatchmakingSearchWidget final : public UOrionUserWidgetBase
{
public:
	EOrionPartyMatchmakingState                   CurrentState;                                      // 0x02B8(0x0001)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	EOrionPartyMatchmakingState                   QueuedState;                                       // 0x02B9(0x0001)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_2BA[0x6];                                      // 0x02BA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateBrush                            ReadyStateBrushes[0x3];                            // 0x02C0(0x0078)(Edit, NativeAccessSpecifierPrivate)
	struct FSlateBrush                            PlayerSlotSearchStateBrushes[0x2];                 // 0x0428(0x0078)(Edit, NativeAccessSpecifierPrivate)
	class UMatchmakingSearchWidgetAnimationRoot*  MatchmakingAnimRoot;                               // 0x0518(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionTextBlock*                        SearchingTitleText;                                // 0x0520(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UImage*                                 BusyThrobber;                                      // 0x0528(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UWidgetSwitcher*                        ContentSwitcher;                                   // 0x0530(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UWidgetSwitcher*                        ButtonSwitcher;                                    // 0x0538(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionDefaultButton*                    CancelMatchmakingButton;                           // 0x0540(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionTextBlock*                        EstimatedTimeText;                                 // 0x0548(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionTextBlock*                        SearchingTimeText;                                 // 0x0550(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UHorizontalBox*                         PlayersCountBox;                                   // 0x0558(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<class UImage*>                         PlayerCountImages;                                 // 0x0560(0x0010)(ExportObject, ZeroConstructor, Transient, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	uint8                                         Pad_570[0x10];                                     // 0x0570(0x0010)(Fixing Size After Last Property [ Dumper-7 ])
	class UHorizontalBox*                         PlayersReadyBox;                                   // 0x0580(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UProgressBar*                           ReadyCheckProgressBar;                             // 0x0588(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionTextBlock*                        ReadyCheckTimeText;                                // 0x0590(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionDefaultButton*                    ReadyCheckAcceptButton;                            // 0x0598(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionDefaultButton*                    ReadyCheckNotReadyButton;                          // 0x05A0(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<struct FReadyCheckDisplayData>         PlayerReadyCheckDisplayData;                       // 0x05A8(0x0010)(ZeroConstructor, Transient, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	class UOrionDefaultButton*                    PartyReadyUpButton;                                // 0x05B8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionTextBlock*                        MatchmakingTypeText;                               // 0x05C0(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                          bIsOpen;                                           // 0x05C8(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                          bIsPinned;                                         // 0x05C9(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                          bIsMinimized;                                      // 0x05CA(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                          bLocalPlayerAcceptedReadyCheck;                    // 0x05CB(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                          bLocalPlayerRespondedToReadyCheck;                 // 0x05CC(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                          bIsDesktopReadyCheck;                              // 0x05CD(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_5CE[0x2];                                      // 0x05CE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                DesktopReadyCheckWidget;                           // 0x05D0(0x0008)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_5D8[0x98];                                     // 0x05D8(0x0098)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void OnFrontEndTabChanged(class FName TabId);
	void OnHideWidget();
	void OnHoveredChanged(bool bIsHovered);
	void OnMinimizeWidget();
	void OnReadyCheck();
	void OnReadyCheckTimerWarning();
	void OnRestoreWidget();
	void OnShowWidget();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"MatchmakingSearchWidget">();
	}
	static class UMatchmakingSearchWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UMatchmakingSearchWidget>();
	}
};
static_assert(alignof(UMatchmakingSearchWidget) == 0x000008, "Wrong alignment on UMatchmakingSearchWidget");
static_assert(sizeof(UMatchmakingSearchWidget) == 0x000670, "Wrong size on UMatchmakingSearchWidget");
static_assert(offsetof(UMatchmakingSearchWidget, CurrentState) == 0x0002B8, "Member 'UMatchmakingSearchWidget::CurrentState' has a wrong offset!");
static_assert(offsetof(UMatchmakingSearchWidget, QueuedState) == 0x0002B9, "Member 'UMatchmakingSearchWidget::QueuedState' has a wrong offset!");
static_assert(offsetof(UMatchmakingSearchWidget, ReadyStateBrushes) == 0x0002C0, "Member 'UMatchmakingSearchWidget::ReadyStateBrushes' has a wrong offset!");
static_assert(offsetof(UMatchmakingSearchWidget, PlayerSlotSearchStateBrushes) == 0x000428, "Member 'UMatchmakingSearchWidget::PlayerSlotSearchStateBrushes' has a wrong offset!");
static_assert(offsetof(UMatchmakingSearchWidget, MatchmakingAnimRoot) == 0x000518, "Member 'UMatchmakingSearchWidget::MatchmakingAnimRoot' has a wrong offset!");
static_assert(offsetof(UMatchmakingSearchWidget, SearchingTitleText) == 0x000520, "Member 'UMatchmakingSearchWidget::SearchingTitleText' has a wrong offset!");
static_assert(offsetof(UMatchmakingSearchWidget, BusyThrobber) == 0x000528, "Member 'UMatchmakingSearchWidget::BusyThrobber' has a wrong offset!");
static_assert(offsetof(UMatchmakingSearchWidget, ContentSwitcher) == 0x000530, "Member 'UMatchmakingSearchWidget::ContentSwitcher' has a wrong offset!");
static_assert(offsetof(UMatchmakingSearchWidget, ButtonSwitcher) == 0x000538, "Member 'UMatchmakingSearchWidget::ButtonSwitcher' has a wrong offset!");
static_assert(offsetof(UMatchmakingSearchWidget, CancelMatchmakingButton) == 0x000540, "Member 'UMatchmakingSearchWidget::CancelMatchmakingButton' has a wrong offset!");
static_assert(offsetof(UMatchmakingSearchWidget, EstimatedTimeText) == 0x000548, "Member 'UMatchmakingSearchWidget::EstimatedTimeText' has a wrong offset!");
static_assert(offsetof(UMatchmakingSearchWidget, SearchingTimeText) == 0x000550, "Member 'UMatchmakingSearchWidget::SearchingTimeText' has a wrong offset!");
static_assert(offsetof(UMatchmakingSearchWidget, PlayersCountBox) == 0x000558, "Member 'UMatchmakingSearchWidget::PlayersCountBox' has a wrong offset!");
static_assert(offsetof(UMatchmakingSearchWidget, PlayerCountImages) == 0x000560, "Member 'UMatchmakingSearchWidget::PlayerCountImages' has a wrong offset!");
static_assert(offsetof(UMatchmakingSearchWidget, PlayersReadyBox) == 0x000580, "Member 'UMatchmakingSearchWidget::PlayersReadyBox' has a wrong offset!");
static_assert(offsetof(UMatchmakingSearchWidget, ReadyCheckProgressBar) == 0x000588, "Member 'UMatchmakingSearchWidget::ReadyCheckProgressBar' has a wrong offset!");
static_assert(offsetof(UMatchmakingSearchWidget, ReadyCheckTimeText) == 0x000590, "Member 'UMatchmakingSearchWidget::ReadyCheckTimeText' has a wrong offset!");
static_assert(offsetof(UMatchmakingSearchWidget, ReadyCheckAcceptButton) == 0x000598, "Member 'UMatchmakingSearchWidget::ReadyCheckAcceptButton' has a wrong offset!");
static_assert(offsetof(UMatchmakingSearchWidget, ReadyCheckNotReadyButton) == 0x0005A0, "Member 'UMatchmakingSearchWidget::ReadyCheckNotReadyButton' has a wrong offset!");
static_assert(offsetof(UMatchmakingSearchWidget, PlayerReadyCheckDisplayData) == 0x0005A8, "Member 'UMatchmakingSearchWidget::PlayerReadyCheckDisplayData' has a wrong offset!");
static_assert(offsetof(UMatchmakingSearchWidget, PartyReadyUpButton) == 0x0005B8, "Member 'UMatchmakingSearchWidget::PartyReadyUpButton' has a wrong offset!");
static_assert(offsetof(UMatchmakingSearchWidget, MatchmakingTypeText) == 0x0005C0, "Member 'UMatchmakingSearchWidget::MatchmakingTypeText' has a wrong offset!");
static_assert(offsetof(UMatchmakingSearchWidget, bIsOpen) == 0x0005C8, "Member 'UMatchmakingSearchWidget::bIsOpen' has a wrong offset!");
static_assert(offsetof(UMatchmakingSearchWidget, bIsPinned) == 0x0005C9, "Member 'UMatchmakingSearchWidget::bIsPinned' has a wrong offset!");
static_assert(offsetof(UMatchmakingSearchWidget, bIsMinimized) == 0x0005CA, "Member 'UMatchmakingSearchWidget::bIsMinimized' has a wrong offset!");
static_assert(offsetof(UMatchmakingSearchWidget, bLocalPlayerAcceptedReadyCheck) == 0x0005CB, "Member 'UMatchmakingSearchWidget::bLocalPlayerAcceptedReadyCheck' has a wrong offset!");
static_assert(offsetof(UMatchmakingSearchWidget, bLocalPlayerRespondedToReadyCheck) == 0x0005CC, "Member 'UMatchmakingSearchWidget::bLocalPlayerRespondedToReadyCheck' has a wrong offset!");
static_assert(offsetof(UMatchmakingSearchWidget, bIsDesktopReadyCheck) == 0x0005CD, "Member 'UMatchmakingSearchWidget::bIsDesktopReadyCheck' has a wrong offset!");
static_assert(offsetof(UMatchmakingSearchWidget, DesktopReadyCheckWidget) == 0x0005D0, "Member 'UMatchmakingSearchWidget::DesktopReadyCheckWidget' has a wrong offset!");

// Class OrionUI.OrionTimerWidget
// 0x0088 (0x0340 - 0x02B8)
class UOrionTimerWidget : public UOrionUserWidgetBase
{
public:
	float                                         UpdatesFrequencyInSeconds;                         // 0x02B8(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         TimerPrecisionThreshold;                           // 0x02BC(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         MinTimerLength;                                    // 0x02C0(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bCountDown;                                        // 0x02C4(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_2C5[0x3];                                      // 0x02C5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTextBlock*                             TimerText;                                         // 0x02C8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	UMulticastDelegateProperty_                   OnTimerStartedDelegate;                            // 0x02D0(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPrivate)
	UMulticastDelegateProperty_                   OnTimerUpdatedDelegate;                            // 0x02E0(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPrivate)
	UMulticastDelegateProperty_                   OnTimerFinishedDelegate;                           // 0x02F0(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPrivate)
	uint8                                         Pad_300[0x40];                                     // 0x0300(0x0040)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void StartTimer(float Seconds);
	void StopTimer();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"OrionTimerWidget">();
	}
	static class UOrionTimerWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UOrionTimerWidget>();
	}
};
static_assert(alignof(UOrionTimerWidget) == 0x000008, "Wrong alignment on UOrionTimerWidget");
static_assert(sizeof(UOrionTimerWidget) == 0x000340, "Wrong size on UOrionTimerWidget");
static_assert(offsetof(UOrionTimerWidget, UpdatesFrequencyInSeconds) == 0x0002B8, "Member 'UOrionTimerWidget::UpdatesFrequencyInSeconds' has a wrong offset!");
static_assert(offsetof(UOrionTimerWidget, TimerPrecisionThreshold) == 0x0002BC, "Member 'UOrionTimerWidget::TimerPrecisionThreshold' has a wrong offset!");
static_assert(offsetof(UOrionTimerWidget, MinTimerLength) == 0x0002C0, "Member 'UOrionTimerWidget::MinTimerLength' has a wrong offset!");
static_assert(offsetof(UOrionTimerWidget, bCountDown) == 0x0002C4, "Member 'UOrionTimerWidget::bCountDown' has a wrong offset!");
static_assert(offsetof(UOrionTimerWidget, TimerText) == 0x0002C8, "Member 'UOrionTimerWidget::TimerText' has a wrong offset!");
static_assert(offsetof(UOrionTimerWidget, OnTimerStartedDelegate) == 0x0002D0, "Member 'UOrionTimerWidget::OnTimerStartedDelegate' has a wrong offset!");
static_assert(offsetof(UOrionTimerWidget, OnTimerUpdatedDelegate) == 0x0002E0, "Member 'UOrionTimerWidget::OnTimerUpdatedDelegate' has a wrong offset!");
static_assert(offsetof(UOrionTimerWidget, OnTimerFinishedDelegate) == 0x0002F0, "Member 'UOrionTimerWidget::OnTimerFinishedDelegate' has a wrong offset!");

// Class OrionUI.OrionAbilityAmmoTimer
// 0x0010 (0x0350 - 0x0340)
class UOrionAbilityAmmoTimer final : public UOrionTimerWidget
{
public:
	class UImage*                                 CooldownCircle;                                    // 0x0340(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UMaterialInstanceDynamic*               CooldownCircleMID;                                 // 0x0348(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	void OnTimerEnded(float TimeRemaining, float TotalDuration);
	void OnTimerStarted(float TimeRemaining, float TotalDuration);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"OrionAbilityAmmoTimer">();
	}
	static class UOrionAbilityAmmoTimer* GetDefaultObj()
	{
		return GetDefaultObjImpl<UOrionAbilityAmmoTimer>();
	}
};
static_assert(alignof(UOrionAbilityAmmoTimer) == 0x000008, "Wrong alignment on UOrionAbilityAmmoTimer");
static_assert(sizeof(UOrionAbilityAmmoTimer) == 0x000350, "Wrong size on UOrionAbilityAmmoTimer");
static_assert(offsetof(UOrionAbilityAmmoTimer, CooldownCircle) == 0x000340, "Member 'UOrionAbilityAmmoTimer::CooldownCircle' has a wrong offset!");
static_assert(offsetof(UOrionAbilityAmmoTimer, CooldownCircleMID) == 0x000348, "Member 'UOrionAbilityAmmoTimer::CooldownCircleMID' has a wrong offset!");

// Class OrionUI.OrionAbilityConfirmWidget
// 0x0050 (0x0340 - 0x02F0)
class UOrionAbilityConfirmWidget final : public UOrionHUDWidgetBase
{
public:
	class FName                                   ConfirmActionName;                                 // 0x02F0(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   ConfirmActionNameGamepad;                          // 0x02F8(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   CancelActionName;                                  // 0x0300(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   CancelActionNameGamepad;                           // 0x0308(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   ModifyActionName;                                  // 0x0310(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UOrionInputVisualizer*                  CancelInputWidget;                                 // 0x0318(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UOrionInputVisualizer*                  ConfirmInputWidget;                                // 0x0320(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UOrionTextBlock*                        CancelTextBox;                                     // 0x0328(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UOrionTextBlock*                        ConfirmTextBox;                                    // 0x0330(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_338[0x8];                                      // 0x0338(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void HandleGameplaySettingsChanged();
	void HideConfirmWidget(bool bImmediate);
	void ShowConfirmWidget(bool bAllowConfirm);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"OrionAbilityConfirmWidget">();
	}
	static class UOrionAbilityConfirmWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UOrionAbilityConfirmWidget>();
	}
};
static_assert(alignof(UOrionAbilityConfirmWidget) == 0x000008, "Wrong alignment on UOrionAbilityConfirmWidget");
static_assert(sizeof(UOrionAbilityConfirmWidget) == 0x000340, "Wrong size on UOrionAbilityConfirmWidget");
static_assert(offsetof(UOrionAbilityConfirmWidget, ConfirmActionName) == 0x0002F0, "Member 'UOrionAbilityConfirmWidget::ConfirmActionName' has a wrong offset!");
static_assert(offsetof(UOrionAbilityConfirmWidget, ConfirmActionNameGamepad) == 0x0002F8, "Member 'UOrionAbilityConfirmWidget::ConfirmActionNameGamepad' has a wrong offset!");
static_assert(offsetof(UOrionAbilityConfirmWidget, CancelActionName) == 0x000300, "Member 'UOrionAbilityConfirmWidget::CancelActionName' has a wrong offset!");
static_assert(offsetof(UOrionAbilityConfirmWidget, CancelActionNameGamepad) == 0x000308, "Member 'UOrionAbilityConfirmWidget::CancelActionNameGamepad' has a wrong offset!");
static_assert(offsetof(UOrionAbilityConfirmWidget, ModifyActionName) == 0x000310, "Member 'UOrionAbilityConfirmWidget::ModifyActionName' has a wrong offset!");
static_assert(offsetof(UOrionAbilityConfirmWidget, CancelInputWidget) == 0x000318, "Member 'UOrionAbilityConfirmWidget::CancelInputWidget' has a wrong offset!");
static_assert(offsetof(UOrionAbilityConfirmWidget, ConfirmInputWidget) == 0x000320, "Member 'UOrionAbilityConfirmWidget::ConfirmInputWidget' has a wrong offset!");
static_assert(offsetof(UOrionAbilityConfirmWidget, CancelTextBox) == 0x000328, "Member 'UOrionAbilityConfirmWidget::CancelTextBox' has a wrong offset!");
static_assert(offsetof(UOrionAbilityConfirmWidget, ConfirmTextBox) == 0x000330, "Member 'UOrionAbilityConfirmWidget::ConfirmTextBox' has a wrong offset!");

// Class OrionUI.OrionUIPaletteDefinition
// 0x00D8 (0x0100 - 0x0028)
class UOrionUIPaletteDefinition final : public UObject
{
public:
	TMap<class FString, class FName>              EntryNamesById;                                    // 0x0028(0x0050)(ZeroConstructor, NativeAccessSpecifierPrivate)
	class UOrionUIPalette*                        RootPalette;                                       // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionUIPalette*                        LivePalette;                                       // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UMaterialParameterCollection*           PaletteMaterialParams;                             // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_90[0x70];                                      // 0x0090(0x0070)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"OrionUIPaletteDefinition">();
	}
	static class UOrionUIPaletteDefinition* GetDefaultObj()
	{
		return GetDefaultObjImpl<UOrionUIPaletteDefinition>();
	}
};
static_assert(alignof(UOrionUIPaletteDefinition) == 0x000008, "Wrong alignment on UOrionUIPaletteDefinition");
static_assert(sizeof(UOrionUIPaletteDefinition) == 0x000100, "Wrong size on UOrionUIPaletteDefinition");
static_assert(offsetof(UOrionUIPaletteDefinition, EntryNamesById) == 0x000028, "Member 'UOrionUIPaletteDefinition::EntryNamesById' has a wrong offset!");
static_assert(offsetof(UOrionUIPaletteDefinition, RootPalette) == 0x000078, "Member 'UOrionUIPaletteDefinition::RootPalette' has a wrong offset!");
static_assert(offsetof(UOrionUIPaletteDefinition, LivePalette) == 0x000080, "Member 'UOrionUIPaletteDefinition::LivePalette' has a wrong offset!");
static_assert(offsetof(UOrionUIPaletteDefinition, PaletteMaterialParams) == 0x000088, "Member 'UOrionUIPaletteDefinition::PaletteMaterialParams' has a wrong offset!");

// Class OrionUI.OrionAbilityKeyWidget
// 0x0018 (0x02D0 - 0x02B8)
class UOrionAbilityKeyWidget final : public UOrionUserWidgetBase
{
public:
	EOrionAbilityBinding                          AbilityBinding;                                    // 0x02B8(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_2B9[0x7];                                      // 0x02B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UOrionInputVisualizer*                  InputVisualizer;                                   // 0x02C0(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_2C8[0x8];                                      // 0x02C8(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"OrionAbilityKeyWidget">();
	}
	static class UOrionAbilityKeyWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UOrionAbilityKeyWidget>();
	}
};
static_assert(alignof(UOrionAbilityKeyWidget) == 0x000008, "Wrong alignment on UOrionAbilityKeyWidget");
static_assert(sizeof(UOrionAbilityKeyWidget) == 0x0002D0, "Wrong size on UOrionAbilityKeyWidget");
static_assert(offsetof(UOrionAbilityKeyWidget, AbilityBinding) == 0x0002B8, "Member 'UOrionAbilityKeyWidget::AbilityBinding' has a wrong offset!");
static_assert(offsetof(UOrionAbilityKeyWidget, InputVisualizer) == 0x0002C0, "Member 'UOrionAbilityKeyWidget::InputVisualizer' has a wrong offset!");

// Class OrionUI.OrionAbilityWidgetColumn
// 0x0020 (0x0310 - 0x02F0)
class UOrionAbilityWidgetColumn final : public UOrionHUDWidgetBase
{
public:
	EAbilityPipDisplayType                        NumOfPips;                                         // 0x02F0(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	EOrionAbilityBinding                          AbilityBinding;                                    // 0x02F1(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_2F2[0x6];                                      // 0x02F2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UOrionAbilityWidget*                    AbilityWidget;                                     // 0x02F8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionAbilityKeyWidget*                 KeyWidget;                                         // 0x0300(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_308[0x8];                                      // 0x0308(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void HideLevelUp();
	void ShowLevelUp();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"OrionAbilityWidgetColumn">();
	}
	static class UOrionAbilityWidgetColumn* GetDefaultObj()
	{
		return GetDefaultObjImpl<UOrionAbilityWidgetColumn>();
	}
};
static_assert(alignof(UOrionAbilityWidgetColumn) == 0x000008, "Wrong alignment on UOrionAbilityWidgetColumn");
static_assert(sizeof(UOrionAbilityWidgetColumn) == 0x000310, "Wrong size on UOrionAbilityWidgetColumn");
static_assert(offsetof(UOrionAbilityWidgetColumn, NumOfPips) == 0x0002F0, "Member 'UOrionAbilityWidgetColumn::NumOfPips' has a wrong offset!");
static_assert(offsetof(UOrionAbilityWidgetColumn, AbilityBinding) == 0x0002F1, "Member 'UOrionAbilityWidgetColumn::AbilityBinding' has a wrong offset!");
static_assert(offsetof(UOrionAbilityWidgetColumn, AbilityWidget) == 0x0002F8, "Member 'UOrionAbilityWidgetColumn::AbilityWidget' has a wrong offset!");
static_assert(offsetof(UOrionAbilityWidgetColumn, KeyWidget) == 0x000300, "Member 'UOrionAbilityWidgetColumn::KeyWidget' has a wrong offset!");

// Class OrionUI.OrionXPWidget
// 0x00C0 (0x01B8 - 0x00F8)
class UOrionXPWidget final : public UWidget
{
public:
	EXPType                                       XpType;                                            // 0x00F8(0x0001)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_F9[0x27];                                      // 0x00F9(0x0027)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           PrimaryColor;                                      // 0x0120(0x0010)(Edit, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FLinearColor                           SecondaryColor;                                    // 0x0130(0x0010)(Edit, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class USlateVectorArtData*                    RingAsset;                                         // 0x0140(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class USlateVectorArtData*                    CircleAsset;                                       // 0x0148(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         WidgetScale;                                       // 0x0150(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_154[0x4];                                      // 0x0154(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USlateVectorArtData*                    FastArrowAsset;                                    // 0x0158(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FVector2D                              BackgroundCircle_Offset;                           // 0x0160(0x0008)(Edit, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         BackgroundCircle_Scale;                            // 0x0168(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FVector2D                              CenterCircle_Offset;                               // 0x016C(0x0008)(Edit, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         CenterCircle_Scale;                                // 0x0174(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FVector2D                              TopCircle_Offset;                                  // 0x0178(0x0008)(Edit, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         TopCircle_Scale;                                   // 0x0180(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         XPPrimary_BlendTime;                               // 0x0184(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         XPSecondary_BlendTime;                             // 0x0188(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_18C[0x4];                                      // 0x018C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UCurveFloat*                            UpgradeAnim_Circle_ScaleOverTime;                  // 0x0190(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UCurveLinearColor*                      UpgradeAnim_Shockwave_TintOverTime;                // 0x0198(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UCurveFloat*                            UpgradeAnim_Shockwave_ScaleOverTime;               // 0x01A0(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_1A8[0x10];                                     // 0x01A8(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void SetPrimaryColor(const struct FLinearColor& InColor);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"OrionXPWidget">();
	}
	static class UOrionXPWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UOrionXPWidget>();
	}
};
static_assert(alignof(UOrionXPWidget) == 0x000008, "Wrong alignment on UOrionXPWidget");
static_assert(sizeof(UOrionXPWidget) == 0x0001B8, "Wrong size on UOrionXPWidget");
static_assert(offsetof(UOrionXPWidget, XpType) == 0x0000F8, "Member 'UOrionXPWidget::XpType' has a wrong offset!");
static_assert(offsetof(UOrionXPWidget, PrimaryColor) == 0x000120, "Member 'UOrionXPWidget::PrimaryColor' has a wrong offset!");
static_assert(offsetof(UOrionXPWidget, SecondaryColor) == 0x000130, "Member 'UOrionXPWidget::SecondaryColor' has a wrong offset!");
static_assert(offsetof(UOrionXPWidget, RingAsset) == 0x000140, "Member 'UOrionXPWidget::RingAsset' has a wrong offset!");
static_assert(offsetof(UOrionXPWidget, CircleAsset) == 0x000148, "Member 'UOrionXPWidget::CircleAsset' has a wrong offset!");
static_assert(offsetof(UOrionXPWidget, WidgetScale) == 0x000150, "Member 'UOrionXPWidget::WidgetScale' has a wrong offset!");
static_assert(offsetof(UOrionXPWidget, FastArrowAsset) == 0x000158, "Member 'UOrionXPWidget::FastArrowAsset' has a wrong offset!");
static_assert(offsetof(UOrionXPWidget, BackgroundCircle_Offset) == 0x000160, "Member 'UOrionXPWidget::BackgroundCircle_Offset' has a wrong offset!");
static_assert(offsetof(UOrionXPWidget, BackgroundCircle_Scale) == 0x000168, "Member 'UOrionXPWidget::BackgroundCircle_Scale' has a wrong offset!");
static_assert(offsetof(UOrionXPWidget, CenterCircle_Offset) == 0x00016C, "Member 'UOrionXPWidget::CenterCircle_Offset' has a wrong offset!");
static_assert(offsetof(UOrionXPWidget, CenterCircle_Scale) == 0x000174, "Member 'UOrionXPWidget::CenterCircle_Scale' has a wrong offset!");
static_assert(offsetof(UOrionXPWidget, TopCircle_Offset) == 0x000178, "Member 'UOrionXPWidget::TopCircle_Offset' has a wrong offset!");
static_assert(offsetof(UOrionXPWidget, TopCircle_Scale) == 0x000180, "Member 'UOrionXPWidget::TopCircle_Scale' has a wrong offset!");
static_assert(offsetof(UOrionXPWidget, XPPrimary_BlendTime) == 0x000184, "Member 'UOrionXPWidget::XPPrimary_BlendTime' has a wrong offset!");
static_assert(offsetof(UOrionXPWidget, XPSecondary_BlendTime) == 0x000188, "Member 'UOrionXPWidget::XPSecondary_BlendTime' has a wrong offset!");
static_assert(offsetof(UOrionXPWidget, UpgradeAnim_Circle_ScaleOverTime) == 0x000190, "Member 'UOrionXPWidget::UpgradeAnim_Circle_ScaleOverTime' has a wrong offset!");
static_assert(offsetof(UOrionXPWidget, UpgradeAnim_Shockwave_TintOverTime) == 0x000198, "Member 'UOrionXPWidget::UpgradeAnim_Shockwave_TintOverTime' has a wrong offset!");
static_assert(offsetof(UOrionXPWidget, UpgradeAnim_Shockwave_ScaleOverTime) == 0x0001A0, "Member 'UOrionXPWidget::UpgradeAnim_Shockwave_ScaleOverTime' has a wrong offset!");

// Class OrionUI.OrionAbilityLayoutWidget
// 0x0120 (0x0410 - 0x02F0)
class UOrionAbilityLayoutWidget final : public UOrionHUDWidgetBase
{
public:
	class UHorizontalBox*                         ParentHorizontalBox;                               // 0x02F0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<struct FVector2D>                      PCSpacing;                                         // 0x02F8(0x0010)(Edit, EditFixedSize, ZeroConstructor, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	TArray<struct FVector2D>                      GamepadSpacing;                                    // 0x0308(0x0010)(Edit, EditFixedSize, ZeroConstructor, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	TArray<class UOrionAbilityWidgetColumn*>      AbilityColumns;                                    // 0x0318(0x0010)(ExportObject, ZeroConstructor, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	class UOrionXpAssembly*                       PlayerLevelWidget;                                 // 0x0328(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UNamedSlot*                             Slot_Q;                                            // 0x0330(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UNamedSlot*                             Slot_E;                                            // 0x0338(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UNamedSlot*                             Slot_R;                                            // 0x0340(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UNamedSlot*                             Slot_LMB;                                          // 0x0348(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UNamedSlot*                             Slot_RMB;                                          // 0x0350(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class UNamedSlot*>                     NamedSlots;                                        // 0x0358(0x0010)(ExportObject, ZeroConstructor, Transient, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	TMap<int32, class UNamedSlot*>                PC_InputIDToSlot;                                  // 0x0368(0x0050)(ExportObject, ZeroConstructor, Transient, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	TMap<int32, class UNamedSlot*>                Gamepad_InputIDToSlot_Default;                     // 0x03B8(0x0050)(ExportObject, ZeroConstructor, Transient, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	uint8                                         Pad_408[0x8];                                      // 0x0408(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void ForceAbilityLayoutUpdateForGamepad();
	void OnSpectatorWatchedHeroChange(EOrionTeam HeroTeam, int32 HeroIndex);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"OrionAbilityLayoutWidget">();
	}
	static class UOrionAbilityLayoutWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UOrionAbilityLayoutWidget>();
	}
};
static_assert(alignof(UOrionAbilityLayoutWidget) == 0x000008, "Wrong alignment on UOrionAbilityLayoutWidget");
static_assert(sizeof(UOrionAbilityLayoutWidget) == 0x000410, "Wrong size on UOrionAbilityLayoutWidget");
static_assert(offsetof(UOrionAbilityLayoutWidget, ParentHorizontalBox) == 0x0002F0, "Member 'UOrionAbilityLayoutWidget::ParentHorizontalBox' has a wrong offset!");
static_assert(offsetof(UOrionAbilityLayoutWidget, PCSpacing) == 0x0002F8, "Member 'UOrionAbilityLayoutWidget::PCSpacing' has a wrong offset!");
static_assert(offsetof(UOrionAbilityLayoutWidget, GamepadSpacing) == 0x000308, "Member 'UOrionAbilityLayoutWidget::GamepadSpacing' has a wrong offset!");
static_assert(offsetof(UOrionAbilityLayoutWidget, AbilityColumns) == 0x000318, "Member 'UOrionAbilityLayoutWidget::AbilityColumns' has a wrong offset!");
static_assert(offsetof(UOrionAbilityLayoutWidget, PlayerLevelWidget) == 0x000328, "Member 'UOrionAbilityLayoutWidget::PlayerLevelWidget' has a wrong offset!");
static_assert(offsetof(UOrionAbilityLayoutWidget, Slot_Q) == 0x000330, "Member 'UOrionAbilityLayoutWidget::Slot_Q' has a wrong offset!");
static_assert(offsetof(UOrionAbilityLayoutWidget, Slot_E) == 0x000338, "Member 'UOrionAbilityLayoutWidget::Slot_E' has a wrong offset!");
static_assert(offsetof(UOrionAbilityLayoutWidget, Slot_R) == 0x000340, "Member 'UOrionAbilityLayoutWidget::Slot_R' has a wrong offset!");
static_assert(offsetof(UOrionAbilityLayoutWidget, Slot_LMB) == 0x000348, "Member 'UOrionAbilityLayoutWidget::Slot_LMB' has a wrong offset!");
static_assert(offsetof(UOrionAbilityLayoutWidget, Slot_RMB) == 0x000350, "Member 'UOrionAbilityLayoutWidget::Slot_RMB' has a wrong offset!");
static_assert(offsetof(UOrionAbilityLayoutWidget, NamedSlots) == 0x000358, "Member 'UOrionAbilityLayoutWidget::NamedSlots' has a wrong offset!");
static_assert(offsetof(UOrionAbilityLayoutWidget, PC_InputIDToSlot) == 0x000368, "Member 'UOrionAbilityLayoutWidget::PC_InputIDToSlot' has a wrong offset!");
static_assert(offsetof(UOrionAbilityLayoutWidget, Gamepad_InputIDToSlot_Default) == 0x0003B8, "Member 'UOrionAbilityLayoutWidget::Gamepad_InputIDToSlot_Default' has a wrong offset!");

// Class OrionUI.OrionAbilityPipsWidget
// 0x0058 (0x0310 - 0x02B8)
class UOrionAbilityPipsWidget final : public UOrionUserWidgetBase
{
public:
	class UMaterialInstanceDynamic*               PipMID;                                            // 0x02B8(0x0008)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         Five_Pip_MID_Values[0x6];                          // 0x02C0(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         Three_Pip_MID_Values[0x4];                         // 0x02D8(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         Four_Pip_MID_Values[0x5];                          // 0x02E8(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         Two_Pip_MID_Values[0x3];                           // 0x02FC(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_308[0x8];                                      // 0x0308(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void OnNumFilledPipsChanged(int32 NumFilledPips);
	void OnPipDisplayTypeChanged(EAbilityPipDisplayType DisplayType);

	float GetCorrectMIDValue(int32 InNumOfPips) const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"OrionAbilityPipsWidget">();
	}
	static class UOrionAbilityPipsWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UOrionAbilityPipsWidget>();
	}
};
static_assert(alignof(UOrionAbilityPipsWidget) == 0x000008, "Wrong alignment on UOrionAbilityPipsWidget");
static_assert(sizeof(UOrionAbilityPipsWidget) == 0x000310, "Wrong size on UOrionAbilityPipsWidget");
static_assert(offsetof(UOrionAbilityPipsWidget, PipMID) == 0x0002B8, "Member 'UOrionAbilityPipsWidget::PipMID' has a wrong offset!");
static_assert(offsetof(UOrionAbilityPipsWidget, Five_Pip_MID_Values) == 0x0002C0, "Member 'UOrionAbilityPipsWidget::Five_Pip_MID_Values' has a wrong offset!");
static_assert(offsetof(UOrionAbilityPipsWidget, Three_Pip_MID_Values) == 0x0002D8, "Member 'UOrionAbilityPipsWidget::Three_Pip_MID_Values' has a wrong offset!");
static_assert(offsetof(UOrionAbilityPipsWidget, Four_Pip_MID_Values) == 0x0002E8, "Member 'UOrionAbilityPipsWidget::Four_Pip_MID_Values' has a wrong offset!");
static_assert(offsetof(UOrionAbilityPipsWidget, Two_Pip_MID_Values) == 0x0002FC, "Member 'UOrionAbilityPipsWidget::Two_Pip_MID_Values' has a wrong offset!");

// Class OrionUI.OrionURLs
// 0x0070 (0x0098 - 0x0028)
class UOrionURLs final : public UObject
{
public:
	class FString                                 ForumURL;                                          // 0x0028(0x0010)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FText                                   Video1Title;                                       // 0x0038(0x0018)(BlueprintVisible, BlueprintReadOnly, Config, NativeAccessSpecifierPublic)
	class FString                                 Video1URL;                                         // 0x0050(0x0010)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FText                                   Video2Title;                                       // 0x0060(0x0018)(BlueprintVisible, BlueprintReadOnly, Config, NativeAccessSpecifierPublic)
	class FString                                 Video2URL;                                         // 0x0078(0x0010)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FCustomerServiceURLInLanguage>  CustomerServiceURLs;                               // 0x0088(0x0010)(ZeroConstructor, Config, NativeAccessSpecifierPublic)

public:
	static class UOrionURLs* GetURLs();

	class FString GetCustomerServiceURLInLanguage(const class FString& LanguageCode, const class FString& CountryCode);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"OrionURLs">();
	}
	static class UOrionURLs* GetDefaultObj()
	{
		return GetDefaultObjImpl<UOrionURLs>();
	}
};
static_assert(alignof(UOrionURLs) == 0x000008, "Wrong alignment on UOrionURLs");
static_assert(sizeof(UOrionURLs) == 0x000098, "Wrong size on UOrionURLs");
static_assert(offsetof(UOrionURLs, ForumURL) == 0x000028, "Member 'UOrionURLs::ForumURL' has a wrong offset!");
static_assert(offsetof(UOrionURLs, Video1Title) == 0x000038, "Member 'UOrionURLs::Video1Title' has a wrong offset!");
static_assert(offsetof(UOrionURLs, Video1URL) == 0x000050, "Member 'UOrionURLs::Video1URL' has a wrong offset!");
static_assert(offsetof(UOrionURLs, Video2Title) == 0x000060, "Member 'UOrionURLs::Video2Title' has a wrong offset!");
static_assert(offsetof(UOrionURLs, Video2URL) == 0x000078, "Member 'UOrionURLs::Video2URL' has a wrong offset!");
static_assert(offsetof(UOrionURLs, CustomerServiceURLs) == 0x000088, "Member 'UOrionURLs::CustomerServiceURLs' has a wrong offset!");

// Class OrionUI.OrionAbilityTooltip
// 0x0010 (0x0340 - 0x0330)
class UOrionAbilityTooltip : public UOrionTooltipBase
{
public:
	class UOrionHeroAbilitySummary*               AbilitySummary;                                    // 0x0330(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_338[0x8];                                      // 0x0338(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"OrionAbilityTooltip">();
	}
	static class UOrionAbilityTooltip* GetDefaultObj()
	{
		return GetDefaultObjImpl<UOrionAbilityTooltip>();
	}
};
static_assert(alignof(UOrionAbilityTooltip) == 0x000008, "Wrong alignment on UOrionAbilityTooltip");
static_assert(sizeof(UOrionAbilityTooltip) == 0x000340, "Wrong size on UOrionAbilityTooltip");
static_assert(offsetof(UOrionAbilityTooltip, AbilitySummary) == 0x000330, "Member 'UOrionAbilityTooltip::AbilitySummary' has a wrong offset!");

// Class OrionUI.OrionUpgradePanelIcon
// 0x0038 (0x02F0 - 0x02B8)
class UOrionUpgradePanelIcon final : public UOrionUserWidgetBase
{
public:
	class UImage*                                 Icon;                                              // 0x02B8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                 Border;                                            // 0x02C0(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                 LockImage;                                         // 0x02C8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UMaterialInstanceDynamic*               Icon_MID;                                          // 0x02D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UMaterialInstanceDynamic*               Border_MID;                                        // 0x02D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UOrionAbilityPipsWidget*                PipsWidget;                                        // 0x02E0(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UOrionTextBlock*                        Text_Level;                                        // 0x02E8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	void GoToCanNotUpgradeState();
	void GoToCanUpgradeState();
	void HideLock();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"OrionUpgradePanelIcon">();
	}
	static class UOrionUpgradePanelIcon* GetDefaultObj()
	{
		return GetDefaultObjImpl<UOrionUpgradePanelIcon>();
	}
};
static_assert(alignof(UOrionUpgradePanelIcon) == 0x000008, "Wrong alignment on UOrionUpgradePanelIcon");
static_assert(sizeof(UOrionUpgradePanelIcon) == 0x0002F0, "Wrong size on UOrionUpgradePanelIcon");
static_assert(offsetof(UOrionUpgradePanelIcon, Icon) == 0x0002B8, "Member 'UOrionUpgradePanelIcon::Icon' has a wrong offset!");
static_assert(offsetof(UOrionUpgradePanelIcon, Border) == 0x0002C0, "Member 'UOrionUpgradePanelIcon::Border' has a wrong offset!");
static_assert(offsetof(UOrionUpgradePanelIcon, LockImage) == 0x0002C8, "Member 'UOrionUpgradePanelIcon::LockImage' has a wrong offset!");
static_assert(offsetof(UOrionUpgradePanelIcon, Icon_MID) == 0x0002D0, "Member 'UOrionUpgradePanelIcon::Icon_MID' has a wrong offset!");
static_assert(offsetof(UOrionUpgradePanelIcon, Border_MID) == 0x0002D8, "Member 'UOrionUpgradePanelIcon::Border_MID' has a wrong offset!");
static_assert(offsetof(UOrionUpgradePanelIcon, PipsWidget) == 0x0002E0, "Member 'UOrionUpgradePanelIcon::PipsWidget' has a wrong offset!");
static_assert(offsetof(UOrionUpgradePanelIcon, Text_Level) == 0x0002E8, "Member 'UOrionUpgradePanelIcon::Text_Level' has a wrong offset!");

// Class OrionUI.OrionAbilityValueRow
// 0x0038 (0x02F0 - 0x02B8)
class UOrionAbilityValueRow final : public UOrionUserWidgetBase
{
public:
	class UOrionRichText*                         TextWidget;                                        // 0x02B8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UOrionRichText*                         FirstValueTextWidget;                              // 0x02C0(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UOrionRichText*                         SecondValueTextWidget;                             // 0x02C8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_2D0[0x20];                                     // 0x02D0(0x0020)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"OrionAbilityValueRow">();
	}
	static class UOrionAbilityValueRow* GetDefaultObj()
	{
		return GetDefaultObjImpl<UOrionAbilityValueRow>();
	}
};
static_assert(alignof(UOrionAbilityValueRow) == 0x000008, "Wrong alignment on UOrionAbilityValueRow");
static_assert(sizeof(UOrionAbilityValueRow) == 0x0002F0, "Wrong size on UOrionAbilityValueRow");
static_assert(offsetof(UOrionAbilityValueRow, TextWidget) == 0x0002B8, "Member 'UOrionAbilityValueRow::TextWidget' has a wrong offset!");
static_assert(offsetof(UOrionAbilityValueRow, FirstValueTextWidget) == 0x0002C0, "Member 'UOrionAbilityValueRow::FirstValueTextWidget' has a wrong offset!");
static_assert(offsetof(UOrionAbilityValueRow, SecondValueTextWidget) == 0x0002C8, "Member 'UOrionAbilityValueRow::SecondValueTextWidget' has a wrong offset!");

// Class OrionUI.OrionAbilityUpgradePanelPullTab
// 0x0028 (0x02E0 - 0x02B8)
class UOrionAbilityUpgradePanelPullTab final : public UOrionUserWidgetBase
{
public:
	class UMaterialInstanceDynamic*               FillBarRightMID;                                   // 0x02B8(0x0008)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UMaterialInstanceDynamic*               FillBarLeftMID;                                    // 0x02C0(0x0008)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetAnimation*                       ShowWidgetAnim;                                    // 0x02C8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetAnimation*                       HideWidgetAnim;                                    // 0x02D0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_2D8[0x8];                                      // 0x02D8(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void HideWidget();
	void ShowWidget();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"OrionAbilityUpgradePanelPullTab">();
	}
	static class UOrionAbilityUpgradePanelPullTab* GetDefaultObj()
	{
		return GetDefaultObjImpl<UOrionAbilityUpgradePanelPullTab>();
	}
};
static_assert(alignof(UOrionAbilityUpgradePanelPullTab) == 0x000008, "Wrong alignment on UOrionAbilityUpgradePanelPullTab");
static_assert(sizeof(UOrionAbilityUpgradePanelPullTab) == 0x0002E0, "Wrong size on UOrionAbilityUpgradePanelPullTab");
static_assert(offsetof(UOrionAbilityUpgradePanelPullTab, FillBarRightMID) == 0x0002B8, "Member 'UOrionAbilityUpgradePanelPullTab::FillBarRightMID' has a wrong offset!");
static_assert(offsetof(UOrionAbilityUpgradePanelPullTab, FillBarLeftMID) == 0x0002C0, "Member 'UOrionAbilityUpgradePanelPullTab::FillBarLeftMID' has a wrong offset!");
static_assert(offsetof(UOrionAbilityUpgradePanelPullTab, ShowWidgetAnim) == 0x0002C8, "Member 'UOrionAbilityUpgradePanelPullTab::ShowWidgetAnim' has a wrong offset!");
static_assert(offsetof(UOrionAbilityUpgradePanelPullTab, HideWidgetAnim) == 0x0002D0, "Member 'UOrionAbilityUpgradePanelPullTab::HideWidgetAnim' has a wrong offset!");

// Class OrionUI.OrionVideoPlayerWidget
// 0x0218 (0x04D0 - 0x02B8)
class UOrionVideoPlayerWidget final : public UOrionUserWidgetBase
{
public:
	EOrionUIAnalyticsTrackingLevel                VideoTrackingLevel;                                // 0x02B8(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_2B9[0xF];                                      // 0x02B9(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	bool                                          bPlayOnOpen;                                       // 0x02C8(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                          bLoop;                                             // 0x02C9(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_2CA[0x1F6];                                    // 0x02CA(0x01F6)(Fixing Size After Last Property [ Dumper-7 ])
	class UImage*                                 Image_VideoTexture;                                // 0x04C0(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionBaseButton*                       Button_Skip;                                       // 0x04C8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	void ClaimMediaPlayer();
	void DynamicHandleOnClosed();
	void DynamicHandleOnEndReached();
	void DynamicHandleOnMediaOpened(const class FString& OpenedUrl);
	void DynamicHandleOnOpenMediaFailed(const class FString& FailedUrl);
	struct FEventReply DynamicHandleVideoMouseButtonDown(const struct FGeometry& Geometry, const struct FPointerEvent& MouseEvent);
	void FreeMediaPlayer();
	bool LoadFromVideoID(const class FName& VideoID);
	void OnVideoStarted();
	void OnVideoStopped();
	void OnVideoTitlesCreated(class UOrionVideoTitles* VideoTitlesWidget);
	void Skip();
	bool Start();
	void Stop();
	bool StreamFromVideoURL(const class FString& VideoURL);

	bool IsPlaying() const;
	bool IsRunning() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"OrionVideoPlayerWidget">();
	}
	static class UOrionVideoPlayerWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UOrionVideoPlayerWidget>();
	}
};
static_assert(alignof(UOrionVideoPlayerWidget) == 0x000008, "Wrong alignment on UOrionVideoPlayerWidget");
static_assert(sizeof(UOrionVideoPlayerWidget) == 0x0004D0, "Wrong size on UOrionVideoPlayerWidget");
static_assert(offsetof(UOrionVideoPlayerWidget, VideoTrackingLevel) == 0x0002B8, "Member 'UOrionVideoPlayerWidget::VideoTrackingLevel' has a wrong offset!");
static_assert(offsetof(UOrionVideoPlayerWidget, bPlayOnOpen) == 0x0002C8, "Member 'UOrionVideoPlayerWidget::bPlayOnOpen' has a wrong offset!");
static_assert(offsetof(UOrionVideoPlayerWidget, bLoop) == 0x0002C9, "Member 'UOrionVideoPlayerWidget::bLoop' has a wrong offset!");
static_assert(offsetof(UOrionVideoPlayerWidget, Image_VideoTexture) == 0x0004C0, "Member 'UOrionVideoPlayerWidget::Image_VideoTexture' has a wrong offset!");
static_assert(offsetof(UOrionVideoPlayerWidget, Button_Skip) == 0x0004C8, "Member 'UOrionVideoPlayerWidget::Button_Skip' has a wrong offset!");

// Class OrionUI.OrionAbilityUpgradeRowWidget
// 0x0168 (0x0420 - 0x02B8)
class UOrionAbilityUpgradeRowWidget final : public UOrionUserWidgetBase
{
public:
	EOrionAbilityBinding                          InputID;                                           // 0x02B8(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_2B9[0x7];                                      // 0x02B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   AbilityActionBindingName_PC;                       // 0x02C0(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	EAbilityPipDisplayType                        NumOfPips;                                         // 0x02C8(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_2C9[0x7];                                      // 0x02C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTextBlock*                             AbilityNameText;                                   // 0x02D0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextBlock*                             AbilityLevelText;                                  // 0x02D8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class UOrionAbilityValueRow*>          AbilityValueRows;                                  // 0x02E0(0x0010)(BlueprintVisible, ExportObject, ZeroConstructor, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	struct FOrionAbilityUIData                    PreviousAbilityState;                              // 0x02F0(0x00C0)(NativeAccessSpecifierPrivate)
	class FText                                   LevelTextFormat;                                   // 0x03B0(0x0018)(NativeAccessSpecifierPrivate)
	uint8                                         Pad_3C8[0x20];                                     // 0x03C8(0x0020)(Fixing Size After Last Property [ Dumper-7 ])
	class UOrionAbilityUpgradePanel*              ParentPanel;                                       // 0x03E8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionRichText*                         RichText_AbilityDescription;                       // 0x03F0(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionRichText*                         RichText_ManaCost;                                 // 0x03F8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionRichText*                         RichText_Cooldown;                                 // 0x0400(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionInputVisualizer*                  Input_AbilityKey;                                  // 0x0408(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionUpgradePanelIcon*                 AbilityIcon;                                       // 0x0410(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_418[0x8];                                      // 0x0418(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void HideLocks();
	void HideUpgrades();
	void OnAbilityUpgraded();
	void ShowGamepadKeys();
	void ShowKeyboardKeys();
	void ShowUpgrades();

	EOrionAbilityBinding GetInputID() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"OrionAbilityUpgradeRowWidget">();
	}
	static class UOrionAbilityUpgradeRowWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UOrionAbilityUpgradeRowWidget>();
	}
};
static_assert(alignof(UOrionAbilityUpgradeRowWidget) == 0x000008, "Wrong alignment on UOrionAbilityUpgradeRowWidget");
static_assert(sizeof(UOrionAbilityUpgradeRowWidget) == 0x000420, "Wrong size on UOrionAbilityUpgradeRowWidget");
static_assert(offsetof(UOrionAbilityUpgradeRowWidget, InputID) == 0x0002B8, "Member 'UOrionAbilityUpgradeRowWidget::InputID' has a wrong offset!");
static_assert(offsetof(UOrionAbilityUpgradeRowWidget, AbilityActionBindingName_PC) == 0x0002C0, "Member 'UOrionAbilityUpgradeRowWidget::AbilityActionBindingName_PC' has a wrong offset!");
static_assert(offsetof(UOrionAbilityUpgradeRowWidget, NumOfPips) == 0x0002C8, "Member 'UOrionAbilityUpgradeRowWidget::NumOfPips' has a wrong offset!");
static_assert(offsetof(UOrionAbilityUpgradeRowWidget, AbilityNameText) == 0x0002D0, "Member 'UOrionAbilityUpgradeRowWidget::AbilityNameText' has a wrong offset!");
static_assert(offsetof(UOrionAbilityUpgradeRowWidget, AbilityLevelText) == 0x0002D8, "Member 'UOrionAbilityUpgradeRowWidget::AbilityLevelText' has a wrong offset!");
static_assert(offsetof(UOrionAbilityUpgradeRowWidget, AbilityValueRows) == 0x0002E0, "Member 'UOrionAbilityUpgradeRowWidget::AbilityValueRows' has a wrong offset!");
static_assert(offsetof(UOrionAbilityUpgradeRowWidget, PreviousAbilityState) == 0x0002F0, "Member 'UOrionAbilityUpgradeRowWidget::PreviousAbilityState' has a wrong offset!");
static_assert(offsetof(UOrionAbilityUpgradeRowWidget, LevelTextFormat) == 0x0003B0, "Member 'UOrionAbilityUpgradeRowWidget::LevelTextFormat' has a wrong offset!");
static_assert(offsetof(UOrionAbilityUpgradeRowWidget, ParentPanel) == 0x0003E8, "Member 'UOrionAbilityUpgradeRowWidget::ParentPanel' has a wrong offset!");
static_assert(offsetof(UOrionAbilityUpgradeRowWidget, RichText_AbilityDescription) == 0x0003F0, "Member 'UOrionAbilityUpgradeRowWidget::RichText_AbilityDescription' has a wrong offset!");
static_assert(offsetof(UOrionAbilityUpgradeRowWidget, RichText_ManaCost) == 0x0003F8, "Member 'UOrionAbilityUpgradeRowWidget::RichText_ManaCost' has a wrong offset!");
static_assert(offsetof(UOrionAbilityUpgradeRowWidget, RichText_Cooldown) == 0x000400, "Member 'UOrionAbilityUpgradeRowWidget::RichText_Cooldown' has a wrong offset!");
static_assert(offsetof(UOrionAbilityUpgradeRowWidget, Input_AbilityKey) == 0x000408, "Member 'UOrionAbilityUpgradeRowWidget::Input_AbilityKey' has a wrong offset!");
static_assert(offsetof(UOrionAbilityUpgradeRowWidget, AbilityIcon) == 0x000410, "Member 'UOrionAbilityUpgradeRowWidget::AbilityIcon' has a wrong offset!");

// Class OrionUI.OrionAbilityUpgradePanel
// 0x0048 (0x0300 - 0x02B8)
class UOrionAbilityUpgradePanel final : public UOrionUserWidgetBase
{
public:
	bool                                          bIsInHUD;                                          // 0x02B8(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_2B9[0x7];                                      // 0x02B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidgetAnimation*                       EnterAnimation;                                    // 0x02C0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetAnimation*                       ExitAnimation;                                     // 0x02C8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class UOrionAbilityUpgradeRowWidget*>  AbilityUpgradeRows;                                // 0x02D0(0x0010)(ExportObject, ZeroConstructor, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	uint8                                         Pad_2E0[0x8];                                      // 0x02E0(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UOrionAbilityUpgradeRowWidget*>  ClosedRows;                                        // 0x02E8(0x0010)(ExportObject, ZeroConstructor, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	uint8                                         Pad_2F8[0x8];                                      // 0x02F8(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void CloseMenu();
	void OnClosedFinished();
	void OpenMenu();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"OrionAbilityUpgradePanel">();
	}
	static class UOrionAbilityUpgradePanel* GetDefaultObj()
	{
		return GetDefaultObjImpl<UOrionAbilityUpgradePanel>();
	}
};
static_assert(alignof(UOrionAbilityUpgradePanel) == 0x000008, "Wrong alignment on UOrionAbilityUpgradePanel");
static_assert(sizeof(UOrionAbilityUpgradePanel) == 0x000300, "Wrong size on UOrionAbilityUpgradePanel");
static_assert(offsetof(UOrionAbilityUpgradePanel, bIsInHUD) == 0x0002B8, "Member 'UOrionAbilityUpgradePanel::bIsInHUD' has a wrong offset!");
static_assert(offsetof(UOrionAbilityUpgradePanel, EnterAnimation) == 0x0002C0, "Member 'UOrionAbilityUpgradePanel::EnterAnimation' has a wrong offset!");
static_assert(offsetof(UOrionAbilityUpgradePanel, ExitAnimation) == 0x0002C8, "Member 'UOrionAbilityUpgradePanel::ExitAnimation' has a wrong offset!");
static_assert(offsetof(UOrionAbilityUpgradePanel, AbilityUpgradeRows) == 0x0002D0, "Member 'UOrionAbilityUpgradePanel::AbilityUpgradeRows' has a wrong offset!");
static_assert(offsetof(UOrionAbilityUpgradePanel, ClosedRows) == 0x0002E8, "Member 'UOrionAbilityUpgradePanel::ClosedRows' has a wrong offset!");

// Class OrionUI.PopupAnchorSlot
// 0x0018 (0x0050 - 0x0038)
class UPopupAnchorSlot final : public UPanelSlot
{
public:
	EVerticalAlignment                            VAlign;                                            // 0x0038(0x0001)(Edit, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EHorizontalAlignment                          HAlign;                                            // 0x0039(0x0001)(Edit, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3A[0x2];                                       // 0x003A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMargin                                Padding;                                           // 0x003C(0x0010)(Edit, DisableEditOnTemplate, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_4C[0x4];                                       // 0x004C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PopupAnchorSlot">();
	}
	static class UPopupAnchorSlot* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPopupAnchorSlot>();
	}
};
static_assert(alignof(UPopupAnchorSlot) == 0x000008, "Wrong alignment on UPopupAnchorSlot");
static_assert(sizeof(UPopupAnchorSlot) == 0x000050, "Wrong size on UPopupAnchorSlot");
static_assert(offsetof(UPopupAnchorSlot, VAlign) == 0x000038, "Member 'UPopupAnchorSlot::VAlign' has a wrong offset!");
static_assert(offsetof(UPopupAnchorSlot, HAlign) == 0x000039, "Member 'UPopupAnchorSlot::HAlign' has a wrong offset!");
static_assert(offsetof(UPopupAnchorSlot, Padding) == 0x00003C, "Member 'UPopupAnchorSlot::Padding' has a wrong offset!");

// Class OrionUI.OrionMiscAbilityWidget
// 0x00F0 (0x03E0 - 0x02F0)
class UOrionMiscAbilityWidget final : public UOrionHUDWidgetBase
{
public:
	EOrionAbilityBinding                          InputID;                                           // 0x02F0(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_2F1[0x7];                                      // 0x02F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture2D*                             IconTexture;                                       // 0x02F8(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FOrionAbilityUIData                    PreviousAbilityState;                              // 0x0300(0x00C0)(Transient, Protected, NativeAccessSpecifierProtected)
	struct FOrionHUDInputInfo                     PreviousInputState;                                // 0x03C0(0x0014)(Transient, NoDestructor, Protected, NativeAccessSpecifierProtected)
	uint8                                         Pad_3D4[0x4];                                      // 0x03D4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UImage*                                 IconImage;                                         // 0x03D8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	void CanActivate();
	void CannotActivate();
	void HideAbilityWidget();
	void ShowAbilityWidget(bool bImmediate);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"OrionMiscAbilityWidget">();
	}
	static class UOrionMiscAbilityWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UOrionMiscAbilityWidget>();
	}
};
static_assert(alignof(UOrionMiscAbilityWidget) == 0x000008, "Wrong alignment on UOrionMiscAbilityWidget");
static_assert(sizeof(UOrionMiscAbilityWidget) == 0x0003E0, "Wrong size on UOrionMiscAbilityWidget");
static_assert(offsetof(UOrionMiscAbilityWidget, InputID) == 0x0002F0, "Member 'UOrionMiscAbilityWidget::InputID' has a wrong offset!");
static_assert(offsetof(UOrionMiscAbilityWidget, IconTexture) == 0x0002F8, "Member 'UOrionMiscAbilityWidget::IconTexture' has a wrong offset!");
static_assert(offsetof(UOrionMiscAbilityWidget, PreviousAbilityState) == 0x000300, "Member 'UOrionMiscAbilityWidget::PreviousAbilityState' has a wrong offset!");
static_assert(offsetof(UOrionMiscAbilityWidget, PreviousInputState) == 0x0003C0, "Member 'UOrionMiscAbilityWidget::PreviousInputState' has a wrong offset!");
static_assert(offsetof(UOrionMiscAbilityWidget, IconImage) == 0x0003D8, "Member 'UOrionMiscAbilityWidget::IconImage' has a wrong offset!");

// Class OrionUI.OrionAbilityWidget
// 0x0220 (0x0510 - 0x02F0)
class UOrionAbilityWidget final : public UOrionHUDWidgetBase
{
public:
	TSubclassOf<class UOrionAbilityTooltip>       AbilityTooltipClass;                               // 0x02F0(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	EOrionAbilityBinding                          InputID;                                           // 0x02F8(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_2F9[0x3];                                      // 0x02F9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         UpdatesFrequencyInSeconds;                         // 0x02FC(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         CooldownPrecisionThreshold;                        // 0x0300(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         MinCooldownTime;                                   // 0x0304(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         RecheckForCooldownTime;                            // 0x0308(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bDisableCooldown;                                  // 0x030C(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_30D[0x3];                                      // 0x030D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         UpgradeDelayTime;                                  // 0x0310(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_314[0x4];                                      // 0x0314(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USoundCue*                              UpgradedSound;                                     // 0x0318(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UMaterialInstanceDynamic*               CooldownMID;                                       // 0x0320(0x0008)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UMaterialInstanceDynamic*               IconMID;                                           // 0x0328(0x0008)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                 IconImage;                                         // 0x0330(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                 CooldownBarImage;                                  // 0x0338(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextBlock*                             CooldownText;                                      // 0x0340(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextBlock*                             StackText;                                         // 0x0348(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                 LockImage;                                         // 0x0350(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                 DurationImage;                                     // 0x0358(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                 AbilityEngagedImage;                               // 0x0360(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                 SilencedImage;                                     // 0x0368(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UMaterialInstanceDynamic*               DurationMID;                                       // 0x0370(0x0008)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UOrionAbility*                          Ability;                                           // 0x0378(0x0008)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UNamedSlot*                             MyPipSlot;                                         // 0x0380(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FOrionAbilityUIData                    PreviousAbilityData;                               // 0x0388(0x00C0)(Protected, NativeAccessSpecifierProtected)
	uint8                                         Pad_448[0xB0];                                     // 0x0448(0x00B0)(Fixing Size After Last Property [ Dumper-7 ])
	class UOrionTextBlock*                        Text_ManaCost;                                     // 0x04F8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionAbilityPipsWidget*                PipsWidget;                                        // 0x0500(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_508[0x8];                                      // 0x0508(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void AbilityFail_Cooldown();
	void AbilityFail_Energy();
	void AbilityFail_Generic();
	void CanActivate();
	void CannotActivate();
	void HideLock();
	void HideStacks();
	void HideUpgrades();
	void OnAbilityDisengaged();
	void OnAbilityEngaged();
	void OnAbilityLevelUp(int32 NewLevel, int32 OldLevel, int32 LevelMax, bool bCanStillUpgrade);
	void OnSilenced();
	void OnStackAdded();
	void OnUnSilenced();
	void ShowStacks();
	void ShowUpgrades(int32 CurrentLevel, int32 MaxLevel);
	void StartCooldown(bool bIsSpecial);
	void StopCooldown();
	void UnhideLock();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"OrionAbilityWidget">();
	}
	static class UOrionAbilityWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UOrionAbilityWidget>();
	}
};
static_assert(alignof(UOrionAbilityWidget) == 0x000008, "Wrong alignment on UOrionAbilityWidget");
static_assert(sizeof(UOrionAbilityWidget) == 0x000510, "Wrong size on UOrionAbilityWidget");
static_assert(offsetof(UOrionAbilityWidget, AbilityTooltipClass) == 0x0002F0, "Member 'UOrionAbilityWidget::AbilityTooltipClass' has a wrong offset!");
static_assert(offsetof(UOrionAbilityWidget, InputID) == 0x0002F8, "Member 'UOrionAbilityWidget::InputID' has a wrong offset!");
static_assert(offsetof(UOrionAbilityWidget, UpdatesFrequencyInSeconds) == 0x0002FC, "Member 'UOrionAbilityWidget::UpdatesFrequencyInSeconds' has a wrong offset!");
static_assert(offsetof(UOrionAbilityWidget, CooldownPrecisionThreshold) == 0x000300, "Member 'UOrionAbilityWidget::CooldownPrecisionThreshold' has a wrong offset!");
static_assert(offsetof(UOrionAbilityWidget, MinCooldownTime) == 0x000304, "Member 'UOrionAbilityWidget::MinCooldownTime' has a wrong offset!");
static_assert(offsetof(UOrionAbilityWidget, RecheckForCooldownTime) == 0x000308, "Member 'UOrionAbilityWidget::RecheckForCooldownTime' has a wrong offset!");
static_assert(offsetof(UOrionAbilityWidget, bDisableCooldown) == 0x00030C, "Member 'UOrionAbilityWidget::bDisableCooldown' has a wrong offset!");
static_assert(offsetof(UOrionAbilityWidget, UpgradeDelayTime) == 0x000310, "Member 'UOrionAbilityWidget::UpgradeDelayTime' has a wrong offset!");
static_assert(offsetof(UOrionAbilityWidget, UpgradedSound) == 0x000318, "Member 'UOrionAbilityWidget::UpgradedSound' has a wrong offset!");
static_assert(offsetof(UOrionAbilityWidget, CooldownMID) == 0x000320, "Member 'UOrionAbilityWidget::CooldownMID' has a wrong offset!");
static_assert(offsetof(UOrionAbilityWidget, IconMID) == 0x000328, "Member 'UOrionAbilityWidget::IconMID' has a wrong offset!");
static_assert(offsetof(UOrionAbilityWidget, IconImage) == 0x000330, "Member 'UOrionAbilityWidget::IconImage' has a wrong offset!");
static_assert(offsetof(UOrionAbilityWidget, CooldownBarImage) == 0x000338, "Member 'UOrionAbilityWidget::CooldownBarImage' has a wrong offset!");
static_assert(offsetof(UOrionAbilityWidget, CooldownText) == 0x000340, "Member 'UOrionAbilityWidget::CooldownText' has a wrong offset!");
static_assert(offsetof(UOrionAbilityWidget, StackText) == 0x000348, "Member 'UOrionAbilityWidget::StackText' has a wrong offset!");
static_assert(offsetof(UOrionAbilityWidget, LockImage) == 0x000350, "Member 'UOrionAbilityWidget::LockImage' has a wrong offset!");
static_assert(offsetof(UOrionAbilityWidget, DurationImage) == 0x000358, "Member 'UOrionAbilityWidget::DurationImage' has a wrong offset!");
static_assert(offsetof(UOrionAbilityWidget, AbilityEngagedImage) == 0x000360, "Member 'UOrionAbilityWidget::AbilityEngagedImage' has a wrong offset!");
static_assert(offsetof(UOrionAbilityWidget, SilencedImage) == 0x000368, "Member 'UOrionAbilityWidget::SilencedImage' has a wrong offset!");
static_assert(offsetof(UOrionAbilityWidget, DurationMID) == 0x000370, "Member 'UOrionAbilityWidget::DurationMID' has a wrong offset!");
static_assert(offsetof(UOrionAbilityWidget, Ability) == 0x000378, "Member 'UOrionAbilityWidget::Ability' has a wrong offset!");
static_assert(offsetof(UOrionAbilityWidget, MyPipSlot) == 0x000380, "Member 'UOrionAbilityWidget::MyPipSlot' has a wrong offset!");
static_assert(offsetof(UOrionAbilityWidget, PreviousAbilityData) == 0x000388, "Member 'UOrionAbilityWidget::PreviousAbilityData' has a wrong offset!");
static_assert(offsetof(UOrionAbilityWidget, Text_ManaCost) == 0x0004F8, "Member 'UOrionAbilityWidget::Text_ManaCost' has a wrong offset!");
static_assert(offsetof(UOrionAbilityWidget, PipsWidget) == 0x000500, "Member 'UOrionAbilityWidget::PipsWidget' has a wrong offset!");

// Class OrionUI.OrionRewardWidgetListData
// 0x0070 (0x0098 - 0x0028)
class UOrionRewardWidgetListData final : public UObject
{
public:
	uint8                                         Pad_28[0x70];                                      // 0x0028(0x0070)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"OrionRewardWidgetListData">();
	}
	static class UOrionRewardWidgetListData* GetDefaultObj()
	{
		return GetDefaultObjImpl<UOrionRewardWidgetListData>();
	}
};
static_assert(alignof(UOrionRewardWidgetListData) == 0x000008, "Wrong alignment on UOrionRewardWidgetListData");
static_assert(sizeof(UOrionRewardWidgetListData) == 0x000098, "Wrong size on UOrionRewardWidgetListData");

// Class OrionUI.OrionAffinityEntry
// 0x0050 (0x0A30 - 0x09E0)
class UOrionAffinityEntry final : public UOrionBaseButton
{
public:
	uint8                                         Pad_9E0[0x8];                                      // 0x09E0(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	class UOrionLazyImage*                        Image_AffinityIcon;                                // 0x09E8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UImage*                                 Image_Selection_Underline;                         // 0x09F0(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UImage*                                 Image_Affinity_Selection_Backing;                  // 0x09F8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UImage*                                 Image_Affinity_Selection_Underlight;               // 0x0A00(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UImage*                                 Image_Decorative_Underline;                        // 0x0A08(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionTextBlock*                        Text_Name;                                         // 0x0A10(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionTextBlock*                        Text_Desc;                                         // 0x0A18(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionTextBlock*                        Text_Ownership;                                    // 0x0A20(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_A28[0x8];                                      // 0x0A28(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"OrionAffinityEntry">();
	}
	static class UOrionAffinityEntry* GetDefaultObj()
	{
		return GetDefaultObjImpl<UOrionAffinityEntry>();
	}
};
static_assert(alignof(UOrionAffinityEntry) == 0x000008, "Wrong alignment on UOrionAffinityEntry");
static_assert(sizeof(UOrionAffinityEntry) == 0x000A30, "Wrong size on UOrionAffinityEntry");
static_assert(offsetof(UOrionAffinityEntry, Image_AffinityIcon) == 0x0009E8, "Member 'UOrionAffinityEntry::Image_AffinityIcon' has a wrong offset!");
static_assert(offsetof(UOrionAffinityEntry, Image_Selection_Underline) == 0x0009F0, "Member 'UOrionAffinityEntry::Image_Selection_Underline' has a wrong offset!");
static_assert(offsetof(UOrionAffinityEntry, Image_Affinity_Selection_Backing) == 0x0009F8, "Member 'UOrionAffinityEntry::Image_Affinity_Selection_Backing' has a wrong offset!");
static_assert(offsetof(UOrionAffinityEntry, Image_Affinity_Selection_Underlight) == 0x000A00, "Member 'UOrionAffinityEntry::Image_Affinity_Selection_Underlight' has a wrong offset!");
static_assert(offsetof(UOrionAffinityEntry, Image_Decorative_Underline) == 0x000A08, "Member 'UOrionAffinityEntry::Image_Decorative_Underline' has a wrong offset!");
static_assert(offsetof(UOrionAffinityEntry, Text_Name) == 0x000A10, "Member 'UOrionAffinityEntry::Text_Name' has a wrong offset!");
static_assert(offsetof(UOrionAffinityEntry, Text_Desc) == 0x000A18, "Member 'UOrionAffinityEntry::Text_Desc' has a wrong offset!");
static_assert(offsetof(UOrionAffinityEntry, Text_Ownership) == 0x000A20, "Member 'UOrionAffinityEntry::Text_Ownership' has a wrong offset!");

// Class OrionUI.OrionAFKWarning
// 0x0010 (0x0300 - 0x02F0)
class UOrionAFKWarning final : public UOrionHUDWidgetBase
{
public:
	uint8                                         Pad_2F0[0x10];                                     // 0x02F0(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void HideAFKWarning();
	void ShowAFKWarning();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"OrionAFKWarning">();
	}
	static class UOrionAFKWarning* GetDefaultObj()
	{
		return GetDefaultObjImpl<UOrionAFKWarning>();
	}
};
static_assert(alignof(UOrionAFKWarning) == 0x000008, "Wrong alignment on UOrionAFKWarning");
static_assert(sizeof(UOrionAFKWarning) == 0x000300, "Wrong size on UOrionAFKWarning");

// Class OrionUI.OrionArcadeHeroBuff
// 0x0018 (0x02D0 - 0x02B8)
class UOrionArcadeHeroBuff final : public UOrionUserWidgetBase
{
public:
	bool                                          bIsBuff;                                           // 0x02B8(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_2B9[0x7];                                      // 0x02B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UImage*                                 Image_Icon;                                        // 0x02C0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class UGameplayEffect>            GameplayEffect;                                    // 0x02C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	void HideWidget();
	void ShowWidget(TSubclassOf<class UGameplayEffect> InGameplayEffect);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"OrionArcadeHeroBuff">();
	}
	static class UOrionArcadeHeroBuff* GetDefaultObj()
	{
		return GetDefaultObjImpl<UOrionArcadeHeroBuff>();
	}
};
static_assert(alignof(UOrionArcadeHeroBuff) == 0x000008, "Wrong alignment on UOrionArcadeHeroBuff");
static_assert(sizeof(UOrionArcadeHeroBuff) == 0x0002D0, "Wrong size on UOrionArcadeHeroBuff");
static_assert(offsetof(UOrionArcadeHeroBuff, bIsBuff) == 0x0002B8, "Member 'UOrionArcadeHeroBuff::bIsBuff' has a wrong offset!");
static_assert(offsetof(UOrionArcadeHeroBuff, Image_Icon) == 0x0002C0, "Member 'UOrionArcadeHeroBuff::Image_Icon' has a wrong offset!");
static_assert(offsetof(UOrionArcadeHeroBuff, GameplayEffect) == 0x0002C8, "Member 'UOrionArcadeHeroBuff::GameplayEffect' has a wrong offset!");

// Class OrionUI.OrionArcadeHeroRow
// 0x0068 (0x0320 - 0x02B8)
class UOrionArcadeHeroRow final : public UOrionUserWidgetBase
{
public:
	struct FOrionPlayerStateUIID                  PlayerStateUIID;                                   // 0x02B8(0x0028)(BlueprintVisible, Transient, Protected, NativeAccessSpecifierProtected)
	TArray<class UOrionArcadeHeroBuff*>           BuffWidgets;                                       // 0x02E0(0x0010)(ExportObject, ZeroConstructor, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	TArray<class UOrionArcadeHeroBuff*>           NerfWidgets;                                       // 0x02F0(0x0010)(ExportObject, ZeroConstructor, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	TArray<struct FArcadeEffectEvent>             ArcadeEffectEvents;                                // 0x0300(0x0010)(ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	class UImage*                                 Image_HeroIcon;                                    // 0x0310(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_318[0x8];                                      // 0x0318(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"OrionArcadeHeroRow">();
	}
	static class UOrionArcadeHeroRow* GetDefaultObj()
	{
		return GetDefaultObjImpl<UOrionArcadeHeroRow>();
	}
};
static_assert(alignof(UOrionArcadeHeroRow) == 0x000008, "Wrong alignment on UOrionArcadeHeroRow");
static_assert(sizeof(UOrionArcadeHeroRow) == 0x000320, "Wrong size on UOrionArcadeHeroRow");
static_assert(offsetof(UOrionArcadeHeroRow, PlayerStateUIID) == 0x0002B8, "Member 'UOrionArcadeHeroRow::PlayerStateUIID' has a wrong offset!");
static_assert(offsetof(UOrionArcadeHeroRow, BuffWidgets) == 0x0002E0, "Member 'UOrionArcadeHeroRow::BuffWidgets' has a wrong offset!");
static_assert(offsetof(UOrionArcadeHeroRow, NerfWidgets) == 0x0002F0, "Member 'UOrionArcadeHeroRow::NerfWidgets' has a wrong offset!");
static_assert(offsetof(UOrionArcadeHeroRow, ArcadeEffectEvents) == 0x000300, "Member 'UOrionArcadeHeroRow::ArcadeEffectEvents' has a wrong offset!");
static_assert(offsetof(UOrionArcadeHeroRow, Image_HeroIcon) == 0x000310, "Member 'UOrionArcadeHeroRow::Image_HeroIcon' has a wrong offset!");

// Class OrionUI.OrionScalingRules
// 0x0010 (0x0038 - 0x0028)
class UOrionScalingRules : public UDPICustomScalingRule
{
public:
	class UCurveFloat*                            WidthScalingCurve;                                 // 0x0028(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCurveFloat*                            HeightScalingCurve;                                // 0x0030(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"OrionScalingRules">();
	}
	static class UOrionScalingRules* GetDefaultObj()
	{
		return GetDefaultObjImpl<UOrionScalingRules>();
	}
};
static_assert(alignof(UOrionScalingRules) == 0x000008, "Wrong alignment on UOrionScalingRules");
static_assert(sizeof(UOrionScalingRules) == 0x000038, "Wrong size on UOrionScalingRules");
static_assert(offsetof(UOrionScalingRules, WidthScalingCurve) == 0x000028, "Member 'UOrionScalingRules::WidthScalingCurve' has a wrong offset!");
static_assert(offsetof(UOrionScalingRules, HeightScalingCurve) == 0x000030, "Member 'UOrionScalingRules::HeightScalingCurve' has a wrong offset!");

// Class OrionUI.OrionArcadeHeroContainer
// 0x0028 (0x02E0 - 0x02B8)
class UOrionArcadeHeroContainer final : public UOrionUserWidgetBase
{
public:
	TSubclassOf<class UOrionArcadeHeroRow>        HeroRowClass;                                      // 0x02B8(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	EOrionTeam                                    TeamNum;                                           // 0x02C0(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_2C1[0x7];                                      // 0x02C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UVerticalBox*                           VertBox;                                           // 0x02C8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class UOrionArcadeHeroRow*>            HeroRows;                                          // 0x02D0(0x0010)(ExportObject, ZeroConstructor, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)

public:
	void ProcessEvents();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"OrionArcadeHeroContainer">();
	}
	static class UOrionArcadeHeroContainer* GetDefaultObj()
	{
		return GetDefaultObjImpl<UOrionArcadeHeroContainer>();
	}
};
static_assert(alignof(UOrionArcadeHeroContainer) == 0x000008, "Wrong alignment on UOrionArcadeHeroContainer");
static_assert(sizeof(UOrionArcadeHeroContainer) == 0x0002E0, "Wrong size on UOrionArcadeHeroContainer");
static_assert(offsetof(UOrionArcadeHeroContainer, HeroRowClass) == 0x0002B8, "Member 'UOrionArcadeHeroContainer::HeroRowClass' has a wrong offset!");
static_assert(offsetof(UOrionArcadeHeroContainer, TeamNum) == 0x0002C0, "Member 'UOrionArcadeHeroContainer::TeamNum' has a wrong offset!");
static_assert(offsetof(UOrionArcadeHeroContainer, VertBox) == 0x0002C8, "Member 'UOrionArcadeHeroContainer::VertBox' has a wrong offset!");
static_assert(offsetof(UOrionArcadeHeroContainer, HeroRows) == 0x0002D0, "Member 'UOrionArcadeHeroContainer::HeroRows' has a wrong offset!");

// Class OrionUI.ArcadeEquipmentCard
// 0x0018 (0x02D0 - 0x02B8)
class UArcadeEquipmentCard final : public UOrionUserWidgetBase
{
public:
	uint8                                         Pad_2B8[0x8];                                      // 0x02B8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	class UOrionCardWidget*                       CardWidget;                                        // 0x02C0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                         EquipSlotIndex;                                    // 0x02C8(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_2CC[0x4];                                      // 0x02CC(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void HideCard();
	void ShowCard();
	void UpdateCard();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ArcadeEquipmentCard">();
	}
	static class UArcadeEquipmentCard* GetDefaultObj()
	{
		return GetDefaultObjImpl<UArcadeEquipmentCard>();
	}
};
static_assert(alignof(UArcadeEquipmentCard) == 0x000008, "Wrong alignment on UArcadeEquipmentCard");
static_assert(sizeof(UArcadeEquipmentCard) == 0x0002D0, "Wrong size on UArcadeEquipmentCard");
static_assert(offsetof(UArcadeEquipmentCard, CardWidget) == 0x0002C0, "Member 'UArcadeEquipmentCard::CardWidget' has a wrong offset!");
static_assert(offsetof(UArcadeEquipmentCard, EquipSlotIndex) == 0x0002C8, "Member 'UArcadeEquipmentCard::EquipSlotIndex' has a wrong offset!");

// Class OrionUI.ArcadeHandCard
// 0x0020 (0x0A00 - 0x09E0)
class UArcadeHandCard final : public UOrionBaseButton
{
public:
	uint8                                         Pad_9E0[0x8];                                      // 0x09E0(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	class UOrionCardWidget*                       CardWidget;                                        // 0x09E8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                         HandIndex;                                         // 0x09F0(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_9F4[0xC];                                      // 0x09F4(0x000C)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void DisableCard();
	void EnableCard();
	void UpdateCard();

	int32 GetHandIndex() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ArcadeHandCard">();
	}
	static class UArcadeHandCard* GetDefaultObj()
	{
		return GetDefaultObjImpl<UArcadeHandCard>();
	}
};
static_assert(alignof(UArcadeHandCard) == 0x000008, "Wrong alignment on UArcadeHandCard");
static_assert(sizeof(UArcadeHandCard) == 0x000A00, "Wrong size on UArcadeHandCard");
static_assert(offsetof(UArcadeHandCard, CardWidget) == 0x0009E8, "Member 'UArcadeHandCard::CardWidget' has a wrong offset!");
static_assert(offsetof(UArcadeHandCard, HandIndex) == 0x0009F0, "Member 'UArcadeHandCard::HandIndex' has a wrong offset!");

// Class OrionUI.OrionArcadeCardSelection
// 0x00D8 (0x0390 - 0x02B8)
class UOrionArcadeCardSelection final : public UOrionUserWidgetBase
{
public:
	TArray<class UArcadeEquipmentCard*>           EquippedCardWidgets;                               // 0x02B8(0x0010)(ExportObject, ZeroConstructor, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	TArray<class UArcadeHandCard*>                HandCardWidgets;                                   // 0x02C8(0x0010)(ExportObject, ZeroConstructor, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	class UArcadeEquipmentCard*                   EquippedCard_0;                                    // 0x02D8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UArcadeEquipmentCard*                   EquippedCard_1;                                    // 0x02E0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UArcadeEquipmentCard*                   EquippedCard_2;                                    // 0x02E8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UArcadeHandCard*                        HandCard_0;                                        // 0x02F0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UArcadeHandCard*                        HandCard_1;                                        // 0x02F8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UArcadeHandCard*                        HandCard_2;                                        // 0x0300(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UArcadeHandCard*                        HandCard_3;                                        // 0x0308(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UArcadeHandCard*                        HandCard_4;                                        // 0x0310(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UArcadeHandCard*                        HandCard_5;                                        // 0x0318(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_320[0x70];                                     // 0x0320(0x0070)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void OnCardSelected(class UArcadeHandCard* HandCardWidget);
	void UpdateCardStates();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"OrionArcadeCardSelection">();
	}
	static class UOrionArcadeCardSelection* GetDefaultObj()
	{
		return GetDefaultObjImpl<UOrionArcadeCardSelection>();
	}
};
static_assert(alignof(UOrionArcadeCardSelection) == 0x000008, "Wrong alignment on UOrionArcadeCardSelection");
static_assert(sizeof(UOrionArcadeCardSelection) == 0x000390, "Wrong size on UOrionArcadeCardSelection");
static_assert(offsetof(UOrionArcadeCardSelection, EquippedCardWidgets) == 0x0002B8, "Member 'UOrionArcadeCardSelection::EquippedCardWidgets' has a wrong offset!");
static_assert(offsetof(UOrionArcadeCardSelection, HandCardWidgets) == 0x0002C8, "Member 'UOrionArcadeCardSelection::HandCardWidgets' has a wrong offset!");
static_assert(offsetof(UOrionArcadeCardSelection, EquippedCard_0) == 0x0002D8, "Member 'UOrionArcadeCardSelection::EquippedCard_0' has a wrong offset!");
static_assert(offsetof(UOrionArcadeCardSelection, EquippedCard_1) == 0x0002E0, "Member 'UOrionArcadeCardSelection::EquippedCard_1' has a wrong offset!");
static_assert(offsetof(UOrionArcadeCardSelection, EquippedCard_2) == 0x0002E8, "Member 'UOrionArcadeCardSelection::EquippedCard_2' has a wrong offset!");
static_assert(offsetof(UOrionArcadeCardSelection, HandCard_0) == 0x0002F0, "Member 'UOrionArcadeCardSelection::HandCard_0' has a wrong offset!");
static_assert(offsetof(UOrionArcadeCardSelection, HandCard_1) == 0x0002F8, "Member 'UOrionArcadeCardSelection::HandCard_1' has a wrong offset!");
static_assert(offsetof(UOrionArcadeCardSelection, HandCard_2) == 0x000300, "Member 'UOrionArcadeCardSelection::HandCard_2' has a wrong offset!");
static_assert(offsetof(UOrionArcadeCardSelection, HandCard_3) == 0x000308, "Member 'UOrionArcadeCardSelection::HandCard_3' has a wrong offset!");
static_assert(offsetof(UOrionArcadeCardSelection, HandCard_4) == 0x000310, "Member 'UOrionArcadeCardSelection::HandCard_4' has a wrong offset!");
static_assert(offsetof(UOrionArcadeCardSelection, HandCard_5) == 0x000318, "Member 'UOrionArcadeCardSelection::HandCard_5' has a wrong offset!");

// Class OrionUI.OrionScoreboardPlayerRow
// 0x00E0 (0x02E0 - 0x0200)
class UOrionScoreboardPlayerRow final : public UUserWidget
{
public:
	uint8                                         Pad_200[0x90];                                     // 0x0200(0x0090)(Fixing Size After Last Property [ Dumper-7 ])
	class UOrionTextBlock*                        Text_CurrentLevel;                                 // 0x0290(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionLazyImage*                        LazyImage_HeroPortrait;                            // 0x0298(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UImage*                                 Image_PCIcon;                                      // 0x02A0(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionTextBlock*                        Text_RespawnTimer;                                 // 0x02A8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionTextBlock*                        Text_PlayerName;                                   // 0x02B0(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionTextBlock*                        Text_HeroName;                                     // 0x02B8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UHorizontalBox*                         HBox_TotalGold;                                    // 0x02C0(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionTextBlock*                        Text_TotalGold;                                    // 0x02C8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionScoreboardItemizationSummary*     ItemizationSummary_Widget;                         // 0x02D0(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_2D8[0x8];                                      // 0x02D8(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void OnIsFrozenChanged(bool bIsFrozen);
	void OnPlayerInfoSet(bool bIsLocalPlayer);
	void OnSetBotInfo(bool bIsBot, EAIBotDifficulty BotDifficulty);
	void OnSetPositionInfo(bool bIsFirst, bool bIsLast);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"OrionScoreboardPlayerRow">();
	}
	static class UOrionScoreboardPlayerRow* GetDefaultObj()
	{
		return GetDefaultObjImpl<UOrionScoreboardPlayerRow>();
	}
};
static_assert(alignof(UOrionScoreboardPlayerRow) == 0x000008, "Wrong alignment on UOrionScoreboardPlayerRow");
static_assert(sizeof(UOrionScoreboardPlayerRow) == 0x0002E0, "Wrong size on UOrionScoreboardPlayerRow");
static_assert(offsetof(UOrionScoreboardPlayerRow, Text_CurrentLevel) == 0x000290, "Member 'UOrionScoreboardPlayerRow::Text_CurrentLevel' has a wrong offset!");
static_assert(offsetof(UOrionScoreboardPlayerRow, LazyImage_HeroPortrait) == 0x000298, "Member 'UOrionScoreboardPlayerRow::LazyImage_HeroPortrait' has a wrong offset!");
static_assert(offsetof(UOrionScoreboardPlayerRow, Image_PCIcon) == 0x0002A0, "Member 'UOrionScoreboardPlayerRow::Image_PCIcon' has a wrong offset!");
static_assert(offsetof(UOrionScoreboardPlayerRow, Text_RespawnTimer) == 0x0002A8, "Member 'UOrionScoreboardPlayerRow::Text_RespawnTimer' has a wrong offset!");
static_assert(offsetof(UOrionScoreboardPlayerRow, Text_PlayerName) == 0x0002B0, "Member 'UOrionScoreboardPlayerRow::Text_PlayerName' has a wrong offset!");
static_assert(offsetof(UOrionScoreboardPlayerRow, Text_HeroName) == 0x0002B8, "Member 'UOrionScoreboardPlayerRow::Text_HeroName' has a wrong offset!");
static_assert(offsetof(UOrionScoreboardPlayerRow, HBox_TotalGold) == 0x0002C0, "Member 'UOrionScoreboardPlayerRow::HBox_TotalGold' has a wrong offset!");
static_assert(offsetof(UOrionScoreboardPlayerRow, Text_TotalGold) == 0x0002C8, "Member 'UOrionScoreboardPlayerRow::Text_TotalGold' has a wrong offset!");
static_assert(offsetof(UOrionScoreboardPlayerRow, ItemizationSummary_Widget) == 0x0002D0, "Member 'UOrionScoreboardPlayerRow::ItemizationSummary_Widget' has a wrong offset!");

// Class OrionUI.OrionArcadeOvertimeScreen
// 0x0078 (0x0330 - 0x02B8)
class UOrionArcadeOvertimeScreen final : public UOrionUserWidgetBase
{
public:
	uint8                                         Pad_2B8[0x78];                                     // 0x02B8(0x0078)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void OnContinuePressed();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"OrionArcadeOvertimeScreen">();
	}
	static class UOrionArcadeOvertimeScreen* GetDefaultObj()
	{
		return GetDefaultObjImpl<UOrionArcadeOvertimeScreen>();
	}
};
static_assert(alignof(UOrionArcadeOvertimeScreen) == 0x000008, "Wrong alignment on UOrionArcadeOvertimeScreen");
static_assert(sizeof(UOrionArcadeOvertimeScreen) == 0x000330, "Wrong size on UOrionArcadeOvertimeScreen");

// Class OrionUI.OrionArcadeReadyScreen
// 0x00C8 (0x0380 - 0x02B8)
class UOrionArcadeReadyScreen final : public UOrionUserWidgetBase
{
public:
	class UOrionTextBlock*                        Text_RedKills;                                     // 0x02B8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UOrionTextBlock*                        Text_BlueKills;                                    // 0x02C0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UOrionTextBlock*                        Text_VictoryPointMargin;                           // 0x02C8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UOrionTextBlock*                        Text_RoundNumberText;                              // 0x02D0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UOrionArcadeHeroContainer*              HeroRowContainer_RedTeam;                          // 0x02D8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UOrionArcadeHeroContainer*              HeroRowContainer_BlueTeam;                         // 0x02E0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_2E8[0x98];                                     // 0x02E8(0x0098)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void HideScore();
	void OnReadyPressed();
	void ProcessEvents();
	void SetKills(EOrionTeam TeamNum, int32 Kills);
	void SetVictorPointMargin(int32 VPMargin);
	void ShowScore();
	void UpdateValues();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"OrionArcadeReadyScreen">();
	}
	static class UOrionArcadeReadyScreen* GetDefaultObj()
	{
		return GetDefaultObjImpl<UOrionArcadeReadyScreen>();
	}
};
static_assert(alignof(UOrionArcadeReadyScreen) == 0x000008, "Wrong alignment on UOrionArcadeReadyScreen");
static_assert(sizeof(UOrionArcadeReadyScreen) == 0x000380, "Wrong size on UOrionArcadeReadyScreen");
static_assert(offsetof(UOrionArcadeReadyScreen, Text_RedKills) == 0x0002B8, "Member 'UOrionArcadeReadyScreen::Text_RedKills' has a wrong offset!");
static_assert(offsetof(UOrionArcadeReadyScreen, Text_BlueKills) == 0x0002C0, "Member 'UOrionArcadeReadyScreen::Text_BlueKills' has a wrong offset!");
static_assert(offsetof(UOrionArcadeReadyScreen, Text_VictoryPointMargin) == 0x0002C8, "Member 'UOrionArcadeReadyScreen::Text_VictoryPointMargin' has a wrong offset!");
static_assert(offsetof(UOrionArcadeReadyScreen, Text_RoundNumberText) == 0x0002D0, "Member 'UOrionArcadeReadyScreen::Text_RoundNumberText' has a wrong offset!");
static_assert(offsetof(UOrionArcadeReadyScreen, HeroRowContainer_RedTeam) == 0x0002D8, "Member 'UOrionArcadeReadyScreen::HeroRowContainer_RedTeam' has a wrong offset!");
static_assert(offsetof(UOrionArcadeReadyScreen, HeroRowContainer_BlueTeam) == 0x0002E0, "Member 'UOrionArcadeReadyScreen::HeroRowContainer_BlueTeam' has a wrong offset!");

// Class OrionUI.OrionArcadeRestartScreen
// 0x00E8 (0x03A0 - 0x02B8)
class UOrionArcadeRestartScreen final : public UOrionUserWidgetBase
{
public:
	class UOrionTextBlock*                        Text_VictoryPoints;                                // 0x02B8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_2C0[0xE0];                                     // 0x02C0(0x00E0)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void OnContinuePressed();
	void OnRestartPressed(bool bWithBuff);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"OrionArcadeRestartScreen">();
	}
	static class UOrionArcadeRestartScreen* GetDefaultObj()
	{
		return GetDefaultObjImpl<UOrionArcadeRestartScreen>();
	}
};
static_assert(alignof(UOrionArcadeRestartScreen) == 0x000008, "Wrong alignment on UOrionArcadeRestartScreen");
static_assert(sizeof(UOrionArcadeRestartScreen) == 0x0003A0, "Wrong size on UOrionArcadeRestartScreen");
static_assert(offsetof(UOrionArcadeRestartScreen, Text_VictoryPoints) == 0x0002B8, "Member 'UOrionArcadeRestartScreen::Text_VictoryPoints' has a wrong offset!");

// Class OrionUI.OrionArcadeRoundPrompt
// 0x0048 (0x0490 - 0x0448)
class UOrionArcadeRoundPrompt final : public UOrionActivatableWidget
{
public:
	class UWidgetSwitcher*                        WidgetSwitcher;                                    // 0x0448(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UOrionArcadeCardSelection*              CardSelectionScreen;                               // 0x0450(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UOrionArcadeReadyScreen*                ReadyScreen;                                       // 0x0458(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UOrionArcadeRestartScreen*              RestartScreen;                                     // 0x0460(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UOrionArcadeOvertimeScreen*             OvertimeScreen;                                    // 0x0468(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidget*                                WaitingForRecallScreen;                            // 0x0470(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UOrionArcadeRoundsOverScreen*           RoundsOverScreen;                                  // 0x0478(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidget*                                MatchOverScreen;                                   // 0x0480(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_488[0x8];                                      // 0x0488(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void HidePrompt();
	void OnCardSelected();
	void OnReady();
	void OnRoundState_InRound();
	void OnRoundState_MatchOver();
	void OnRoundState_Overtime();
	void OnRoundState_PostRound();
	void OnRoundState_PreMatch();
	void OnRoundState_PreRound();
	void OnRoundState_Restarting();
	void OnRoundState_RoundsOver();
	void OnRoundState_WaitingForRecall();
	void OnRoundStateChange(const struct FArcadeRoundState& NewState);
	void RestartScreen_OnContinue();
	void RestartScreen_OnRestart(bool bWithBuff);
	void ShowPrompt(class UWidget* ScreenToShow);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"OrionArcadeRoundPrompt">();
	}
	static class UOrionArcadeRoundPrompt* GetDefaultObj()
	{
		return GetDefaultObjImpl<UOrionArcadeRoundPrompt>();
	}
};
static_assert(alignof(UOrionArcadeRoundPrompt) == 0x000008, "Wrong alignment on UOrionArcadeRoundPrompt");
static_assert(sizeof(UOrionArcadeRoundPrompt) == 0x000490, "Wrong size on UOrionArcadeRoundPrompt");
static_assert(offsetof(UOrionArcadeRoundPrompt, WidgetSwitcher) == 0x000448, "Member 'UOrionArcadeRoundPrompt::WidgetSwitcher' has a wrong offset!");
static_assert(offsetof(UOrionArcadeRoundPrompt, CardSelectionScreen) == 0x000450, "Member 'UOrionArcadeRoundPrompt::CardSelectionScreen' has a wrong offset!");
static_assert(offsetof(UOrionArcadeRoundPrompt, ReadyScreen) == 0x000458, "Member 'UOrionArcadeRoundPrompt::ReadyScreen' has a wrong offset!");
static_assert(offsetof(UOrionArcadeRoundPrompt, RestartScreen) == 0x000460, "Member 'UOrionArcadeRoundPrompt::RestartScreen' has a wrong offset!");
static_assert(offsetof(UOrionArcadeRoundPrompt, OvertimeScreen) == 0x000468, "Member 'UOrionArcadeRoundPrompt::OvertimeScreen' has a wrong offset!");
static_assert(offsetof(UOrionArcadeRoundPrompt, WaitingForRecallScreen) == 0x000470, "Member 'UOrionArcadeRoundPrompt::WaitingForRecallScreen' has a wrong offset!");
static_assert(offsetof(UOrionArcadeRoundPrompt, RoundsOverScreen) == 0x000478, "Member 'UOrionArcadeRoundPrompt::RoundsOverScreen' has a wrong offset!");
static_assert(offsetof(UOrionArcadeRoundPrompt, MatchOverScreen) == 0x000480, "Member 'UOrionArcadeRoundPrompt::MatchOverScreen' has a wrong offset!");

// Class OrionUI.OrionScoreboardRow
// 0x0108 (0x03C0 - 0x02B8)
class UOrionScoreboardRow final : public UOrionUserWidgetBase
{
public:
	class UTextBlock*                             PlayerLevel;                                       // 0x02B8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextBlock*                             HeroName;                                          // 0x02C0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextBlock*                             PlayerName;                                        // 0x02C8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextBlock*                             KillsText;                                         // 0x02D0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextBlock*                             DeathsText;                                        // 0x02D8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextBlock*                             AssistsText;                                       // 0x02E0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextBlock*                             MinionsText;                                       // 0x02E8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextBlock*                             TowerTakedownsText;                                // 0x02F0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                 HeroIcon;                                          // 0x02F8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UMaterialInstanceDynamic*               IconMID;                                           // 0x0300(0x0008)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextBlock*                             RespawnTimerText;                                  // 0x0308(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                 PCPlatformImage;                                   // 0x0310(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UButton*                                AddFriendButton;                                   // 0x0318(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                 BotDifficultyImage;                                // 0x0320(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UMaterialInstanceDynamic*               BotDifficultyMID;                                  // 0x0328(0x0008)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FOrionPlayerStateUIID                  PlayerUIID;                                        // 0x0330(0x0028)(Protected, NativeAccessSpecifierProtected)
	uint8                                         Pad_358[0x68];                                     // 0x0358(0x0068)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void OnAddFriendPressed();
	void OnDeath();
	void OnDisconnectedChange(bool bIsDisconnected);
	void OnRespawned();
	void ShowAddFriendButton();
	void UpdateIsLocalPlayer(bool bIsLocalPlayer);
	void UpdateVisibleToLocalPlayer(bool bVisibleToLocalPlayer);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"OrionScoreboardRow">();
	}
	static class UOrionScoreboardRow* GetDefaultObj()
	{
		return GetDefaultObjImpl<UOrionScoreboardRow>();
	}
};
static_assert(alignof(UOrionScoreboardRow) == 0x000008, "Wrong alignment on UOrionScoreboardRow");
static_assert(sizeof(UOrionScoreboardRow) == 0x0003C0, "Wrong size on UOrionScoreboardRow");
static_assert(offsetof(UOrionScoreboardRow, PlayerLevel) == 0x0002B8, "Member 'UOrionScoreboardRow::PlayerLevel' has a wrong offset!");
static_assert(offsetof(UOrionScoreboardRow, HeroName) == 0x0002C0, "Member 'UOrionScoreboardRow::HeroName' has a wrong offset!");
static_assert(offsetof(UOrionScoreboardRow, PlayerName) == 0x0002C8, "Member 'UOrionScoreboardRow::PlayerName' has a wrong offset!");
static_assert(offsetof(UOrionScoreboardRow, KillsText) == 0x0002D0, "Member 'UOrionScoreboardRow::KillsText' has a wrong offset!");
static_assert(offsetof(UOrionScoreboardRow, DeathsText) == 0x0002D8, "Member 'UOrionScoreboardRow::DeathsText' has a wrong offset!");
static_assert(offsetof(UOrionScoreboardRow, AssistsText) == 0x0002E0, "Member 'UOrionScoreboardRow::AssistsText' has a wrong offset!");
static_assert(offsetof(UOrionScoreboardRow, MinionsText) == 0x0002E8, "Member 'UOrionScoreboardRow::MinionsText' has a wrong offset!");
static_assert(offsetof(UOrionScoreboardRow, TowerTakedownsText) == 0x0002F0, "Member 'UOrionScoreboardRow::TowerTakedownsText' has a wrong offset!");
static_assert(offsetof(UOrionScoreboardRow, HeroIcon) == 0x0002F8, "Member 'UOrionScoreboardRow::HeroIcon' has a wrong offset!");
static_assert(offsetof(UOrionScoreboardRow, IconMID) == 0x000300, "Member 'UOrionScoreboardRow::IconMID' has a wrong offset!");
static_assert(offsetof(UOrionScoreboardRow, RespawnTimerText) == 0x000308, "Member 'UOrionScoreboardRow::RespawnTimerText' has a wrong offset!");
static_assert(offsetof(UOrionScoreboardRow, PCPlatformImage) == 0x000310, "Member 'UOrionScoreboardRow::PCPlatformImage' has a wrong offset!");
static_assert(offsetof(UOrionScoreboardRow, AddFriendButton) == 0x000318, "Member 'UOrionScoreboardRow::AddFriendButton' has a wrong offset!");
static_assert(offsetof(UOrionScoreboardRow, BotDifficultyImage) == 0x000320, "Member 'UOrionScoreboardRow::BotDifficultyImage' has a wrong offset!");
static_assert(offsetof(UOrionScoreboardRow, BotDifficultyMID) == 0x000328, "Member 'UOrionScoreboardRow::BotDifficultyMID' has a wrong offset!");
static_assert(offsetof(UOrionScoreboardRow, PlayerUIID) == 0x000330, "Member 'UOrionScoreboardRow::PlayerUIID' has a wrong offset!");

// Class OrionUI.OrionArcadeRoundsOverScreen
// 0x0028 (0x02E0 - 0x02B8)
class UOrionArcadeRoundsOverScreen final : public UOrionUserWidgetBase
{
public:
	class UOrionTextBlock*                        Text_RedScore;                                     // 0x02B8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UOrionTextBlock*                        Text_BlueScore;                                    // 0x02C0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UOrionTextBlock*                        Text_VictoryPoints;                                // 0x02C8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UOrionDefaultButton*                    Button_ReturnToMainMenu;                           // 0x02D0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_2D8[0x8];                                      // 0x02D8(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void OnEndOfMatch();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"OrionArcadeRoundsOverScreen">();
	}
	static class UOrionArcadeRoundsOverScreen* GetDefaultObj()
	{
		return GetDefaultObjImpl<UOrionArcadeRoundsOverScreen>();
	}
};
static_assert(alignof(UOrionArcadeRoundsOverScreen) == 0x000008, "Wrong alignment on UOrionArcadeRoundsOverScreen");
static_assert(sizeof(UOrionArcadeRoundsOverScreen) == 0x0002E0, "Wrong size on UOrionArcadeRoundsOverScreen");
static_assert(offsetof(UOrionArcadeRoundsOverScreen, Text_RedScore) == 0x0002B8, "Member 'UOrionArcadeRoundsOverScreen::Text_RedScore' has a wrong offset!");
static_assert(offsetof(UOrionArcadeRoundsOverScreen, Text_BlueScore) == 0x0002C0, "Member 'UOrionArcadeRoundsOverScreen::Text_BlueScore' has a wrong offset!");
static_assert(offsetof(UOrionArcadeRoundsOverScreen, Text_VictoryPoints) == 0x0002C8, "Member 'UOrionArcadeRoundsOverScreen::Text_VictoryPoints' has a wrong offset!");
static_assert(offsetof(UOrionArcadeRoundsOverScreen, Button_ReturnToMainMenu) == 0x0002D0, "Member 'UOrionArcadeRoundsOverScreen::Button_ReturnToMainMenu' has a wrong offset!");

// Class OrionUI.OrionArcadeRoundTimerWidget
// 0x0080 (0x0370 - 0x02F0)
class UOrionArcadeRoundTimerWidget final : public UOrionHUDWidgetBase
{
public:
	class UOrionTextBlock*                        TimerText;                                         // 0x02F0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UOrionTextBlock*                        RoundNumberText;                                   // 0x02F8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FText                                   LessThanAnHourFormat;                              // 0x0300(0x0018)(Protected, NativeAccessSpecifierProtected)
	class FText                                   LessThanMinuteFormat;                              // 0x0318(0x0018)(Protected, NativeAccessSpecifierProtected)
	uint8                                         Pad_330[0x40];                                     // 0x0330(0x0040)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void HideTimer();
	void ShowTimer();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"OrionArcadeRoundTimerWidget">();
	}
	static class UOrionArcadeRoundTimerWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UOrionArcadeRoundTimerWidget>();
	}
};
static_assert(alignof(UOrionArcadeRoundTimerWidget) == 0x000008, "Wrong alignment on UOrionArcadeRoundTimerWidget");
static_assert(sizeof(UOrionArcadeRoundTimerWidget) == 0x000370, "Wrong size on UOrionArcadeRoundTimerWidget");
static_assert(offsetof(UOrionArcadeRoundTimerWidget, TimerText) == 0x0002F0, "Member 'UOrionArcadeRoundTimerWidget::TimerText' has a wrong offset!");
static_assert(offsetof(UOrionArcadeRoundTimerWidget, RoundNumberText) == 0x0002F8, "Member 'UOrionArcadeRoundTimerWidget::RoundNumberText' has a wrong offset!");
static_assert(offsetof(UOrionArcadeRoundTimerWidget, LessThanAnHourFormat) == 0x000300, "Member 'UOrionArcadeRoundTimerWidget::LessThanAnHourFormat' has a wrong offset!");
static_assert(offsetof(UOrionArcadeRoundTimerWidget, LessThanMinuteFormat) == 0x000318, "Member 'UOrionArcadeRoundTimerWidget::LessThanMinuteFormat' has a wrong offset!");

// Class OrionUI.OrionArcadeScoreboardRow
// 0x00D8 (0x0390 - 0x02B8)
class UOrionArcadeScoreboardRow final : public UOrionUserWidgetBase
{
public:
	class UOrionTextBlock*                        HeroName;                                          // 0x02B8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UOrionTextBlock*                        PlayerName;                                        // 0x02C0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UOrionTextBlock*                        KillsText;                                         // 0x02C8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UOrionTextBlock*                        DeathsText;                                        // 0x02D0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UOrionTextBlock*                        AssistsText;                                       // 0x02D8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextBlock*                             RespawnTimerText;                                  // 0x02E0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                 HeroIcon;                                          // 0x02E8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UMaterialInstanceDynamic*               IconMID;                                           // 0x02F0(0x0008)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FOrionPlayerStateUIID                  PlayerUIID;                                        // 0x02F8(0x0028)(Protected, NativeAccessSpecifierProtected)
	uint8                                         Pad_320[0x70];                                     // 0x0320(0x0070)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void OnDeath();
	void OnRespawned();
	void UpdateIsLocalPlayer(bool bIsLocalPlayer);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"OrionArcadeScoreboardRow">();
	}
	static class UOrionArcadeScoreboardRow* GetDefaultObj()
	{
		return GetDefaultObjImpl<UOrionArcadeScoreboardRow>();
	}
};
static_assert(alignof(UOrionArcadeScoreboardRow) == 0x000008, "Wrong alignment on UOrionArcadeScoreboardRow");
static_assert(sizeof(UOrionArcadeScoreboardRow) == 0x000390, "Wrong size on UOrionArcadeScoreboardRow");
static_assert(offsetof(UOrionArcadeScoreboardRow, HeroName) == 0x0002B8, "Member 'UOrionArcadeScoreboardRow::HeroName' has a wrong offset!");
static_assert(offsetof(UOrionArcadeScoreboardRow, PlayerName) == 0x0002C0, "Member 'UOrionArcadeScoreboardRow::PlayerName' has a wrong offset!");
static_assert(offsetof(UOrionArcadeScoreboardRow, KillsText) == 0x0002C8, "Member 'UOrionArcadeScoreboardRow::KillsText' has a wrong offset!");
static_assert(offsetof(UOrionArcadeScoreboardRow, DeathsText) == 0x0002D0, "Member 'UOrionArcadeScoreboardRow::DeathsText' has a wrong offset!");
static_assert(offsetof(UOrionArcadeScoreboardRow, AssistsText) == 0x0002D8, "Member 'UOrionArcadeScoreboardRow::AssistsText' has a wrong offset!");
static_assert(offsetof(UOrionArcadeScoreboardRow, RespawnTimerText) == 0x0002E0, "Member 'UOrionArcadeScoreboardRow::RespawnTimerText' has a wrong offset!");
static_assert(offsetof(UOrionArcadeScoreboardRow, HeroIcon) == 0x0002E8, "Member 'UOrionArcadeScoreboardRow::HeroIcon' has a wrong offset!");
static_assert(offsetof(UOrionArcadeScoreboardRow, IconMID) == 0x0002F0, "Member 'UOrionArcadeScoreboardRow::IconMID' has a wrong offset!");
static_assert(offsetof(UOrionArcadeScoreboardRow, PlayerUIID) == 0x0002F8, "Member 'UOrionArcadeScoreboardRow::PlayerUIID' has a wrong offset!");

// Class OrionUI.OrionArcadeScoreWidget
// 0x0020 (0x0310 - 0x02F0)
class UOrionArcadeScoreWidget final : public UOrionHUDWidgetBase
{
public:
	EOrionTeam                                    TeamNum;                                           // 0x02F0(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_2F1[0x7];                                      // 0x02F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UOrionTextBlock*                        KillsText;                                         // 0x02F8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_300[0x10];                                     // 0x0300(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void OnRoundStateUpdate(const struct FArcadeRoundState& NewRoundState);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"OrionArcadeScoreWidget">();
	}
	static class UOrionArcadeScoreWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UOrionArcadeScoreWidget>();
	}
};
static_assert(alignof(UOrionArcadeScoreWidget) == 0x000008, "Wrong alignment on UOrionArcadeScoreWidget");
static_assert(sizeof(UOrionArcadeScoreWidget) == 0x000310, "Wrong size on UOrionArcadeScoreWidget");
static_assert(offsetof(UOrionArcadeScoreWidget, TeamNum) == 0x0002F0, "Member 'UOrionArcadeScoreWidget::TeamNum' has a wrong offset!");
static_assert(offsetof(UOrionArcadeScoreWidget, KillsText) == 0x0002F8, "Member 'UOrionArcadeScoreWidget::KillsText' has a wrong offset!");

// Class OrionUI.OrionArcadeVictoryMarginWidget
// 0x0030 (0x0320 - 0x02F0)
class UOrionArcadeVictoryMarginWidget final : public UOrionHUDWidgetBase
{
public:
	class UOrionTextBlock*                        MarginText;                                        // 0x02F0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UBorder*                                ColorBorder;                                       // 0x02F8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_300[0x20];                                     // 0x0300(0x0020)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void OnMarginUpdate(int32 Margin);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"OrionArcadeVictoryMarginWidget">();
	}
	static class UOrionArcadeVictoryMarginWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UOrionArcadeVictoryMarginWidget>();
	}
};
static_assert(alignof(UOrionArcadeVictoryMarginWidget) == 0x000008, "Wrong alignment on UOrionArcadeVictoryMarginWidget");
static_assert(sizeof(UOrionArcadeVictoryMarginWidget) == 0x000320, "Wrong size on UOrionArcadeVictoryMarginWidget");
static_assert(offsetof(UOrionArcadeVictoryMarginWidget, MarginText) == 0x0002F0, "Member 'UOrionArcadeVictoryMarginWidget::MarginText' has a wrong offset!");
static_assert(offsetof(UOrionArcadeVictoryMarginWidget, ColorBorder) == 0x0002F8, "Member 'UOrionArcadeVictoryMarginWidget::ColorBorder' has a wrong offset!");

// Class OrionUI.OrionAsyncAction_ModalError
// 0x00C8 (0x00F0 - 0x0028)
class UOrionAsyncAction_ModalError final : public UBlueprintAsyncActionBase
{
public:
	UMulticastDelegateProperty_                   OnDismissed;                                       // 0x0028(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	class UObject*                                WorldContextObject;                                // 0x0038(0x0008)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FOrionDialogDescription                Description;                                       // 0x0040(0x00B0)(Transient, NativeAccessSpecifierPrivate)

public:
	static class UOrionAsyncAction_ModalError* ShowModalError(class UObject* InWorldContextObject, const class FText& ErrorMessage);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"OrionAsyncAction_ModalError">();
	}
	static class UOrionAsyncAction_ModalError* GetDefaultObj()
	{
		return GetDefaultObjImpl<UOrionAsyncAction_ModalError>();
	}
};
static_assert(alignof(UOrionAsyncAction_ModalError) == 0x000010, "Wrong alignment on UOrionAsyncAction_ModalError");
static_assert(sizeof(UOrionAsyncAction_ModalError) == 0x0000F0, "Wrong size on UOrionAsyncAction_ModalError");
static_assert(offsetof(UOrionAsyncAction_ModalError, OnDismissed) == 0x000028, "Member 'UOrionAsyncAction_ModalError::OnDismissed' has a wrong offset!");
static_assert(offsetof(UOrionAsyncAction_ModalError, WorldContextObject) == 0x000038, "Member 'UOrionAsyncAction_ModalError::WorldContextObject' has a wrong offset!");
static_assert(offsetof(UOrionAsyncAction_ModalError, Description) == 0x000040, "Member 'UOrionAsyncAction_ModalError::Description' has a wrong offset!");

// Class OrionUI.OrionAsyncAction_InteractiveNotification
// 0x01B8 (0x01E0 - 0x0028)
class UOrionAsyncAction_InteractiveNotification final : public UBlueprintAsyncActionBase
{
public:
	UMulticastDelegateProperty_                   FirstButton;                                       // 0x0028(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                   SecondButton;                                      // 0x0038(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                         Pad_48[0x8];                                       // 0x0048(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FOrionNotification                     Notification;                                      // 0x0050(0x0180)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	class UObject*                                WorldContext;                                      // 0x01D0(0x0008)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_1D8[0x8];                                      // 0x01D8(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UOrionAsyncAction_InteractiveNotification* ShowInteractiveNotification(class UObject* Context, const class FText& TitleText, const class FText& BodyText, const class FText& LeftButton, const class FText& RightButton, const struct FSlateBrush& Brush, class FName Identifier);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"OrionAsyncAction_InteractiveNotification">();
	}
	static class UOrionAsyncAction_InteractiveNotification* GetDefaultObj()
	{
		return GetDefaultObjImpl<UOrionAsyncAction_InteractiveNotification>();
	}
};
static_assert(alignof(UOrionAsyncAction_InteractiveNotification) == 0x000010, "Wrong alignment on UOrionAsyncAction_InteractiveNotification");
static_assert(sizeof(UOrionAsyncAction_InteractiveNotification) == 0x0001E0, "Wrong size on UOrionAsyncAction_InteractiveNotification");
static_assert(offsetof(UOrionAsyncAction_InteractiveNotification, FirstButton) == 0x000028, "Member 'UOrionAsyncAction_InteractiveNotification::FirstButton' has a wrong offset!");
static_assert(offsetof(UOrionAsyncAction_InteractiveNotification, SecondButton) == 0x000038, "Member 'UOrionAsyncAction_InteractiveNotification::SecondButton' has a wrong offset!");
static_assert(offsetof(UOrionAsyncAction_InteractiveNotification, Notification) == 0x000050, "Member 'UOrionAsyncAction_InteractiveNotification::Notification' has a wrong offset!");
static_assert(offsetof(UOrionAsyncAction_InteractiveNotification, WorldContext) == 0x0001D0, "Member 'UOrionAsyncAction_InteractiveNotification::WorldContext' has a wrong offset!");

// Class OrionUI.OrionAsyncAction_ShowConfirmation
// 0x00F8 (0x0120 - 0x0028)
class UOrionAsyncAction_ShowConfirmation final : public UBlueprintAsyncActionBase
{
public:
	UMulticastDelegateProperty_                   OnConfirmed;                                       // 0x0028(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                   OnDeclined;                                        // 0x0038(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                   OnKilled;                                          // 0x0048(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                   OnTimedOut;                                        // 0x0058(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	class UObject*                                WorldContextObject;                                // 0x0068(0x0008)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FOrionDialogDescription                Description;                                       // 0x0070(0x00B0)(Transient, NativeAccessSpecifierPrivate)

public:
	static class UOrionAsyncAction_ShowConfirmation* ShowConfirmationDialog(class UObject* InWorldContextObject, const class FText& Title, const class FText& MESSAGE, const class FText& ConfirmButtonText, const class FText& DeclineButtonText, float InDisplayTime, bool bShowCancelButton);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"OrionAsyncAction_ShowConfirmation">();
	}
	static class UOrionAsyncAction_ShowConfirmation* GetDefaultObj()
	{
		return GetDefaultObjImpl<UOrionAsyncAction_ShowConfirmation>();
	}
};
static_assert(alignof(UOrionAsyncAction_ShowConfirmation) == 0x000010, "Wrong alignment on UOrionAsyncAction_ShowConfirmation");
static_assert(sizeof(UOrionAsyncAction_ShowConfirmation) == 0x000120, "Wrong size on UOrionAsyncAction_ShowConfirmation");
static_assert(offsetof(UOrionAsyncAction_ShowConfirmation, OnConfirmed) == 0x000028, "Member 'UOrionAsyncAction_ShowConfirmation::OnConfirmed' has a wrong offset!");
static_assert(offsetof(UOrionAsyncAction_ShowConfirmation, OnDeclined) == 0x000038, "Member 'UOrionAsyncAction_ShowConfirmation::OnDeclined' has a wrong offset!");
static_assert(offsetof(UOrionAsyncAction_ShowConfirmation, OnKilled) == 0x000048, "Member 'UOrionAsyncAction_ShowConfirmation::OnKilled' has a wrong offset!");
static_assert(offsetof(UOrionAsyncAction_ShowConfirmation, OnTimedOut) == 0x000058, "Member 'UOrionAsyncAction_ShowConfirmation::OnTimedOut' has a wrong offset!");
static_assert(offsetof(UOrionAsyncAction_ShowConfirmation, WorldContextObject) == 0x000068, "Member 'UOrionAsyncAction_ShowConfirmation::WorldContextObject' has a wrong offset!");
static_assert(offsetof(UOrionAsyncAction_ShowConfirmation, Description) == 0x000070, "Member 'UOrionAsyncAction_ShowConfirmation::Description' has a wrong offset!");

// Class OrionUI.OrionAsyncAction_TimedLerp
// 0x0050 (0x0078 - 0x0028)
class UOrionAsyncAction_TimedLerp final : public UBlueprintAsyncActionBase
{
public:
	UMulticastDelegateProperty_                   OnValueUpdated;                                    // 0x0028(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                   OnLerpComplete;                                    // 0x0038(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	class UObject*                                WorldContext;                                      // 0x0048(0x0008)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_50[0x28];                                      // 0x0050(0x0028)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UOrionAsyncAction_TimedLerp* TimedLerp(class UObject* WorldContext_0, float StartValue, float EndValue, float LerpDuration, float EaseOutExp, bool bWholeNumbersOnly);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"OrionAsyncAction_TimedLerp">();
	}
	static class UOrionAsyncAction_TimedLerp* GetDefaultObj()
	{
		return GetDefaultObjImpl<UOrionAsyncAction_TimedLerp>();
	}
};
static_assert(alignof(UOrionAsyncAction_TimedLerp) == 0x000008, "Wrong alignment on UOrionAsyncAction_TimedLerp");
static_assert(sizeof(UOrionAsyncAction_TimedLerp) == 0x000078, "Wrong size on UOrionAsyncAction_TimedLerp");
static_assert(offsetof(UOrionAsyncAction_TimedLerp, OnValueUpdated) == 0x000028, "Member 'UOrionAsyncAction_TimedLerp::OnValueUpdated' has a wrong offset!");
static_assert(offsetof(UOrionAsyncAction_TimedLerp, OnLerpComplete) == 0x000038, "Member 'UOrionAsyncAction_TimedLerp::OnLerpComplete' has a wrong offset!");
static_assert(offsetof(UOrionAsyncAction_TimedLerp, WorldContext) == 0x000048, "Member 'UOrionAsyncAction_TimedLerp::WorldContext' has a wrong offset!");

// Class OrionUI.OrionAttributeDisplay
// 0x0270 (0x0C50 - 0x09E0)
class UOrionAttributeDisplay final : public UOrionBaseButton
{
public:
	uint8                                         Pad_9E0[0x130];                                    // 0x09E0(0x0130)(Fixing Size After Last Property [ Dumper-7 ])
	TSubclassOf<class UOrionAttributeDisplayTooltip> TooltipClass;                                      // 0x0B10(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSubclassOf<class UOrionCardShopAttributePipTooltip> PipTooltipClass;                                   // 0x0B18(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	EOrionGemBranchType                           BranchType;                                        // 0x0B20(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_B21[0x3];                                      // 0x0B21(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         BarProgress;                                       // 0x0B24(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         PotentialBarProgress;                              // 0x0B28(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_B2C[0x4];                                      // 0x0B2C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UOrionCardShopAttributePipItemData*> PipData;                                           // 0x0B30(0x0010)(ZeroConstructor, NativeAccessSpecifierPrivate)
	TArray<class UOrionCardShopAttributePip*>     PipWidgetList;                                     // 0x0B40(0x0010)(ExportObject, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	class USoundCue*                              PurchaseSuccessful;                                // 0x0B50(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class USoundCue*                              PurchaseFailed;                                    // 0x0B58(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSubclassOf<class UOrionCardShopToast>        ToastWidgetClass;                                  // 0x0B60(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_B68[0x88];                                     // 0x0B68(0x0088)(Fixing Size After Last Property [ Dumper-7 ])
	class UOrionTextBlock*                        Text_AttributeName;                                // 0x0BF0(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionTextBlock*                        Text_AttributeNameShadow;                          // 0x0BF8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionTextBlock*                        Text_AttributeCaption;                             // 0x0C00(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionTextBlock*                        Text_TotalPoints;                                  // 0x0C08(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionTextBlock*                        Text_TotalPointsShadow;                            // 0x0C10(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionTextBlock*                        Text_PointsAvailable;                              // 0x0C18(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UHorizontalBox*                         HorizontalBox_GoldCost;                            // 0x0C20(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionTextBlock*                        Text_PipCost;                                      // 0x0C28(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOverlay*                               Overlay_Toasts;                                    // 0x0C30(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UWidget*                                ResourcePip_Icon;                                  // 0x0C38(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UImage*                                 Image_FlyingPipOrigin;                             // 0x0C40(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_C48[0x8];                                      // 0x0C48(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	class UWidget* GetFlyingPip();
	class UWidget* GetFlyingPipOrigin();
	void HandleClicked();
	void OnBranchTypeChanged(EOrionGemBranchType NewBranchType);
	void OnPipPurchased(bool bMajorPip, bool bHasGemAssigned);
	void OnPurchasabilityChanged(bool bIsPurchasable);
	void OnRowInitialized(EOrionGemBranchType AttributeType);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"OrionAttributeDisplay">();
	}
	static class UOrionAttributeDisplay* GetDefaultObj()
	{
		return GetDefaultObjImpl<UOrionAttributeDisplay>();
	}
};
static_assert(alignof(UOrionAttributeDisplay) == 0x000008, "Wrong alignment on UOrionAttributeDisplay");
static_assert(sizeof(UOrionAttributeDisplay) == 0x000C50, "Wrong size on UOrionAttributeDisplay");
static_assert(offsetof(UOrionAttributeDisplay, TooltipClass) == 0x000B10, "Member 'UOrionAttributeDisplay::TooltipClass' has a wrong offset!");
static_assert(offsetof(UOrionAttributeDisplay, PipTooltipClass) == 0x000B18, "Member 'UOrionAttributeDisplay::PipTooltipClass' has a wrong offset!");
static_assert(offsetof(UOrionAttributeDisplay, BranchType) == 0x000B20, "Member 'UOrionAttributeDisplay::BranchType' has a wrong offset!");
static_assert(offsetof(UOrionAttributeDisplay, BarProgress) == 0x000B24, "Member 'UOrionAttributeDisplay::BarProgress' has a wrong offset!");
static_assert(offsetof(UOrionAttributeDisplay, PotentialBarProgress) == 0x000B28, "Member 'UOrionAttributeDisplay::PotentialBarProgress' has a wrong offset!");
static_assert(offsetof(UOrionAttributeDisplay, PipData) == 0x000B30, "Member 'UOrionAttributeDisplay::PipData' has a wrong offset!");
static_assert(offsetof(UOrionAttributeDisplay, PipWidgetList) == 0x000B40, "Member 'UOrionAttributeDisplay::PipWidgetList' has a wrong offset!");
static_assert(offsetof(UOrionAttributeDisplay, PurchaseSuccessful) == 0x000B50, "Member 'UOrionAttributeDisplay::PurchaseSuccessful' has a wrong offset!");
static_assert(offsetof(UOrionAttributeDisplay, PurchaseFailed) == 0x000B58, "Member 'UOrionAttributeDisplay::PurchaseFailed' has a wrong offset!");
static_assert(offsetof(UOrionAttributeDisplay, ToastWidgetClass) == 0x000B60, "Member 'UOrionAttributeDisplay::ToastWidgetClass' has a wrong offset!");
static_assert(offsetof(UOrionAttributeDisplay, Text_AttributeName) == 0x000BF0, "Member 'UOrionAttributeDisplay::Text_AttributeName' has a wrong offset!");
static_assert(offsetof(UOrionAttributeDisplay, Text_AttributeNameShadow) == 0x000BF8, "Member 'UOrionAttributeDisplay::Text_AttributeNameShadow' has a wrong offset!");
static_assert(offsetof(UOrionAttributeDisplay, Text_AttributeCaption) == 0x000C00, "Member 'UOrionAttributeDisplay::Text_AttributeCaption' has a wrong offset!");
static_assert(offsetof(UOrionAttributeDisplay, Text_TotalPoints) == 0x000C08, "Member 'UOrionAttributeDisplay::Text_TotalPoints' has a wrong offset!");
static_assert(offsetof(UOrionAttributeDisplay, Text_TotalPointsShadow) == 0x000C10, "Member 'UOrionAttributeDisplay::Text_TotalPointsShadow' has a wrong offset!");
static_assert(offsetof(UOrionAttributeDisplay, Text_PointsAvailable) == 0x000C18, "Member 'UOrionAttributeDisplay::Text_PointsAvailable' has a wrong offset!");
static_assert(offsetof(UOrionAttributeDisplay, HorizontalBox_GoldCost) == 0x000C20, "Member 'UOrionAttributeDisplay::HorizontalBox_GoldCost' has a wrong offset!");
static_assert(offsetof(UOrionAttributeDisplay, Text_PipCost) == 0x000C28, "Member 'UOrionAttributeDisplay::Text_PipCost' has a wrong offset!");
static_assert(offsetof(UOrionAttributeDisplay, Overlay_Toasts) == 0x000C30, "Member 'UOrionAttributeDisplay::Overlay_Toasts' has a wrong offset!");
static_assert(offsetof(UOrionAttributeDisplay, ResourcePip_Icon) == 0x000C38, "Member 'UOrionAttributeDisplay::ResourcePip_Icon' has a wrong offset!");
static_assert(offsetof(UOrionAttributeDisplay, Image_FlyingPipOrigin) == 0x000C40, "Member 'UOrionAttributeDisplay::Image_FlyingPipOrigin' has a wrong offset!");

// Class OrionUI.OrionAttributeDisplayGroup
// 0x0018 (0x02D0 - 0x02B8)
class UOrionAttributeDisplayGroup final : public UOrionUserWidgetBase
{
public:
	class UOrionAttributeDisplay*                 Attribute01;                                       // 0x02B8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UOrionAttributeDisplay*                 Attribute02;                                       // 0x02C0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UOrionAttributeDisplay*                 Attribute03;                                       // 0x02C8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"OrionAttributeDisplayGroup">();
	}
	static class UOrionAttributeDisplayGroup* GetDefaultObj()
	{
		return GetDefaultObjImpl<UOrionAttributeDisplayGroup>();
	}
};
static_assert(alignof(UOrionAttributeDisplayGroup) == 0x000008, "Wrong alignment on UOrionAttributeDisplayGroup");
static_assert(sizeof(UOrionAttributeDisplayGroup) == 0x0002D0, "Wrong size on UOrionAttributeDisplayGroup");
static_assert(offsetof(UOrionAttributeDisplayGroup, Attribute01) == 0x0002B8, "Member 'UOrionAttributeDisplayGroup::Attribute01' has a wrong offset!");
static_assert(offsetof(UOrionAttributeDisplayGroup, Attribute02) == 0x0002C0, "Member 'UOrionAttributeDisplayGroup::Attribute02' has a wrong offset!");
static_assert(offsetof(UOrionAttributeDisplayGroup, Attribute03) == 0x0002C8, "Member 'UOrionAttributeDisplayGroup::Attribute03' has a wrong offset!");

// Class OrionUI.OrionAttributeDisplayTooltipGemRow
// 0x0020 (0x0220 - 0x0200)
class UOrionAttributeDisplayTooltipGemRow final : public UUserWidget
{
public:
	uint8                                         Pad_200[0x8];                                      // 0x0200(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	class UPanelWidget*                           Panel_SlotDivider;                                 // 0x0208(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionTextBlock*                        Text_PipSlot;                                      // 0x0210(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionInfoPanelAbilityRow*              AbilityRow_GemInfo;                                // 0x0218(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"OrionAttributeDisplayTooltipGemRow">();
	}
	static class UOrionAttributeDisplayTooltipGemRow* GetDefaultObj()
	{
		return GetDefaultObjImpl<UOrionAttributeDisplayTooltipGemRow>();
	}
};
static_assert(alignof(UOrionAttributeDisplayTooltipGemRow) == 0x000008, "Wrong alignment on UOrionAttributeDisplayTooltipGemRow");
static_assert(sizeof(UOrionAttributeDisplayTooltipGemRow) == 0x000220, "Wrong size on UOrionAttributeDisplayTooltipGemRow");
static_assert(offsetof(UOrionAttributeDisplayTooltipGemRow, Panel_SlotDivider) == 0x000208, "Member 'UOrionAttributeDisplayTooltipGemRow::Panel_SlotDivider' has a wrong offset!");
static_assert(offsetof(UOrionAttributeDisplayTooltipGemRow, Text_PipSlot) == 0x000210, "Member 'UOrionAttributeDisplayTooltipGemRow::Text_PipSlot' has a wrong offset!");
static_assert(offsetof(UOrionAttributeDisplayTooltipGemRow, AbilityRow_GemInfo) == 0x000218, "Member 'UOrionAttributeDisplayTooltipGemRow::AbilityRow_GemInfo' has a wrong offset!");

// Class OrionUI.OrionAttributeDisplayTooltip
// 0x0040 (0x0370 - 0x0330)
class UOrionAttributeDisplayTooltip final : public UOrionTooltipBase
{
public:
	uint8                                         Pad_330[0x8];                                      // 0x0330(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	class UBorder*                                Border_NextPipPurchaseInfo;                        // 0x0338(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionTextBlock*                        Text_NextPipCost;                                  // 0x0340(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionTextBlock*                        Text_NextGem;                                      // 0x0348(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UBorder*                                Border_NextPipStatInfo;                            // 0x0350(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionDynamicEntryBox*                  EntryBox_Stats;                                    // 0x0358(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionDynamicEntryBox*                  EntryBox_PreviewGems;                              // 0x0360(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_368[0x8];                                      // 0x0368(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"OrionAttributeDisplayTooltip">();
	}
	static class UOrionAttributeDisplayTooltip* GetDefaultObj()
	{
		return GetDefaultObjImpl<UOrionAttributeDisplayTooltip>();
	}
};
static_assert(alignof(UOrionAttributeDisplayTooltip) == 0x000008, "Wrong alignment on UOrionAttributeDisplayTooltip");
static_assert(sizeof(UOrionAttributeDisplayTooltip) == 0x000370, "Wrong size on UOrionAttributeDisplayTooltip");
static_assert(offsetof(UOrionAttributeDisplayTooltip, Border_NextPipPurchaseInfo) == 0x000338, "Member 'UOrionAttributeDisplayTooltip::Border_NextPipPurchaseInfo' has a wrong offset!");
static_assert(offsetof(UOrionAttributeDisplayTooltip, Text_NextPipCost) == 0x000340, "Member 'UOrionAttributeDisplayTooltip::Text_NextPipCost' has a wrong offset!");
static_assert(offsetof(UOrionAttributeDisplayTooltip, Text_NextGem) == 0x000348, "Member 'UOrionAttributeDisplayTooltip::Text_NextGem' has a wrong offset!");
static_assert(offsetof(UOrionAttributeDisplayTooltip, Border_NextPipStatInfo) == 0x000350, "Member 'UOrionAttributeDisplayTooltip::Border_NextPipStatInfo' has a wrong offset!");
static_assert(offsetof(UOrionAttributeDisplayTooltip, EntryBox_Stats) == 0x000358, "Member 'UOrionAttributeDisplayTooltip::EntryBox_Stats' has a wrong offset!");
static_assert(offsetof(UOrionAttributeDisplayTooltip, EntryBox_PreviewGems) == 0x000360, "Member 'UOrionAttributeDisplayTooltip::EntryBox_PreviewGems' has a wrong offset!");

// Class OrionUI.OrionRichTextWithBasicTooltip
// 0x0008 (0x02C0 - 0x02B8)
class UOrionRichTextWithBasicTooltip final : public UOrionUserWidgetBase
{
public:
	class UOrionRichText*                         RichText_Body;                                     // 0x02B8(0x0008)(Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"OrionRichTextWithBasicTooltip">();
	}
	static class UOrionRichTextWithBasicTooltip* GetDefaultObj()
	{
		return GetDefaultObjImpl<UOrionRichTextWithBasicTooltip>();
	}
};
static_assert(alignof(UOrionRichTextWithBasicTooltip) == 0x000008, "Wrong alignment on UOrionRichTextWithBasicTooltip");
static_assert(sizeof(UOrionRichTextWithBasicTooltip) == 0x0002C0, "Wrong size on UOrionRichTextWithBasicTooltip");
static_assert(offsetof(UOrionRichTextWithBasicTooltip, RichText_Body) == 0x0002B8, "Member 'UOrionRichTextWithBasicTooltip::RichText_Body' has a wrong offset!");

// Class OrionUI.OrionSimpleAbilityWidget
// 0x0018 (0x0218 - 0x0200)
class UOrionSimpleAbilityWidget : public UUserWidget
{
public:
	class UImage*                                 Image_Icon;                                        // 0x0200(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UOrionTextBlock*                        Text_Primary;                                      // 0x0208(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UOrionTextBlock*                        Text_AttributeName;                                // 0x0210(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"OrionSimpleAbilityWidget">();
	}
	static class UOrionSimpleAbilityWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UOrionSimpleAbilityWidget>();
	}
};
static_assert(alignof(UOrionSimpleAbilityWidget) == 0x000008, "Wrong alignment on UOrionSimpleAbilityWidget");
static_assert(sizeof(UOrionSimpleAbilityWidget) == 0x000218, "Wrong size on UOrionSimpleAbilityWidget");
static_assert(offsetof(UOrionSimpleAbilityWidget, Image_Icon) == 0x000200, "Member 'UOrionSimpleAbilityWidget::Image_Icon' has a wrong offset!");
static_assert(offsetof(UOrionSimpleAbilityWidget, Text_Primary) == 0x000208, "Member 'UOrionSimpleAbilityWidget::Text_Primary' has a wrong offset!");
static_assert(offsetof(UOrionSimpleAbilityWidget, Text_AttributeName) == 0x000210, "Member 'UOrionSimpleAbilityWidget::Text_AttributeName' has a wrong offset!");

// Class OrionUI.OrionAttributeDisplayTooltipStatRow
// 0x0008 (0x0220 - 0x0218)
class UOrionAttributeDisplayTooltipStatRow final : public UOrionSimpleAbilityWidget
{
public:
	class UOrionTextBlock*                        Text_BenefitValue;                                 // 0x0218(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"OrionAttributeDisplayTooltipStatRow">();
	}
	static class UOrionAttributeDisplayTooltipStatRow* GetDefaultObj()
	{
		return GetDefaultObjImpl<UOrionAttributeDisplayTooltipStatRow>();
	}
};
static_assert(alignof(UOrionAttributeDisplayTooltipStatRow) == 0x000008, "Wrong alignment on UOrionAttributeDisplayTooltipStatRow");
static_assert(sizeof(UOrionAttributeDisplayTooltipStatRow) == 0x000220, "Wrong size on UOrionAttributeDisplayTooltipStatRow");
static_assert(offsetof(UOrionAttributeDisplayTooltipStatRow, Text_BenefitValue) == 0x000218, "Member 'UOrionAttributeDisplayTooltipStatRow::Text_BenefitValue' has a wrong offset!");

// Class OrionUI.OrionAttributeEntry
// 0x0030 (0x0A10 - 0x09E0)
class UOrionAttributeEntry final : public UOrionBaseButton
{
public:
	uint8                                         Pad_9E0[0x8];                                      // 0x09E0(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	class UOrionLazyImage*                        Image_AttributeIcon;                               // 0x09E8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UImage*                                 Image_Glow;                                        // 0x09F0(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UImage*                                 Image_Line;                                        // 0x09F8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionTextBlock*                        Text_Name;                                         // 0x0A00(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_A08[0x8];                                      // 0x0A08(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"OrionAttributeEntry">();
	}
	static class UOrionAttributeEntry* GetDefaultObj()
	{
		return GetDefaultObjImpl<UOrionAttributeEntry>();
	}
};
static_assert(alignof(UOrionAttributeEntry) == 0x000008, "Wrong alignment on UOrionAttributeEntry");
static_assert(sizeof(UOrionAttributeEntry) == 0x000A10, "Wrong size on UOrionAttributeEntry");
static_assert(offsetof(UOrionAttributeEntry, Image_AttributeIcon) == 0x0009E8, "Member 'UOrionAttributeEntry::Image_AttributeIcon' has a wrong offset!");
static_assert(offsetof(UOrionAttributeEntry, Image_Glow) == 0x0009F0, "Member 'UOrionAttributeEntry::Image_Glow' has a wrong offset!");
static_assert(offsetof(UOrionAttributeEntry, Image_Line) == 0x0009F8, "Member 'UOrionAttributeEntry::Image_Line' has a wrong offset!");
static_assert(offsetof(UOrionAttributeEntry, Text_Name) == 0x000A00, "Member 'UOrionAttributeEntry::Text_Name' has a wrong offset!");

// Class OrionUI.OrionAttributePointDisplay
// 0x0118 (0x03D0 - 0x02B8)
class UOrionAttributePointDisplay final : public UOrionUserWidgetBase
{
public:
	uint8                                         Pad_2B8[0xF0];                                     // 0x02B8(0x00F0)(Fixing Size After Last Property [ Dumper-7 ])
	EOrionGemBranchType                           BranchType;                                        // 0x03A8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_3A9[0x7];                                      // 0x03A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInterface*                     OverrideIcon;                                      // 0x03B0(0x0008)(Edit, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionTextBlock*                        Text_TotalPoints;                                  // 0x03B8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionTextBlock*                        Text_PointsAvailable;                              // 0x03C0(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UImage*                                 Image_BranchIcon;                                  // 0x03C8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"OrionAttributePointDisplay">();
	}
	static class UOrionAttributePointDisplay* GetDefaultObj()
	{
		return GetDefaultObjImpl<UOrionAttributePointDisplay>();
	}
};
static_assert(alignof(UOrionAttributePointDisplay) == 0x000008, "Wrong alignment on UOrionAttributePointDisplay");
static_assert(sizeof(UOrionAttributePointDisplay) == 0x0003D0, "Wrong size on UOrionAttributePointDisplay");
static_assert(offsetof(UOrionAttributePointDisplay, BranchType) == 0x0003A8, "Member 'UOrionAttributePointDisplay::BranchType' has a wrong offset!");
static_assert(offsetof(UOrionAttributePointDisplay, OverrideIcon) == 0x0003B0, "Member 'UOrionAttributePointDisplay::OverrideIcon' has a wrong offset!");
static_assert(offsetof(UOrionAttributePointDisplay, Text_TotalPoints) == 0x0003B8, "Member 'UOrionAttributePointDisplay::Text_TotalPoints' has a wrong offset!");
static_assert(offsetof(UOrionAttributePointDisplay, Text_PointsAvailable) == 0x0003C0, "Member 'UOrionAttributePointDisplay::Text_PointsAvailable' has a wrong offset!");
static_assert(offsetof(UOrionAttributePointDisplay, Image_BranchIcon) == 0x0003C8, "Member 'UOrionAttributePointDisplay::Image_BranchIcon' has a wrong offset!");

// Class OrionUI.OrionBannerInventory
// 0x0028 (0x0470 - 0x0448)
class UOrionBannerInventory final : public UOrionActivatableWidget
{
public:
	class FName                                   BannerPreviewActorId;                              // 0x0448(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TWeakObjectPtr<class AOrionPlacementActor>    WeakBannerPlacementActor;                          // 0x0450(0x0008)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_458[0x10];                                     // 0x0458(0x0010)(Fixing Size After Last Property [ Dumper-7 ])
	class UOrionTileView*                         TileView_Banners;                                  // 0x0468(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	void DynamicHandleBannerSelected(class UObject* SelectedItem, bool bSelected);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"OrionBannerInventory">();
	}
	static class UOrionBannerInventory* GetDefaultObj()
	{
		return GetDefaultObjImpl<UOrionBannerInventory>();
	}
};
static_assert(alignof(UOrionBannerInventory) == 0x000008, "Wrong alignment on UOrionBannerInventory");
static_assert(sizeof(UOrionBannerInventory) == 0x000470, "Wrong size on UOrionBannerInventory");
static_assert(offsetof(UOrionBannerInventory, BannerPreviewActorId) == 0x000448, "Member 'UOrionBannerInventory::BannerPreviewActorId' has a wrong offset!");
static_assert(offsetof(UOrionBannerInventory, WeakBannerPlacementActor) == 0x000450, "Member 'UOrionBannerInventory::WeakBannerPlacementActor' has a wrong offset!");
static_assert(offsetof(UOrionBannerInventory, TileView_Banners) == 0x000468, "Member 'UOrionBannerInventory::TileView_Banners' has a wrong offset!");

// Class OrionUI.OrionBannerListItemData
// 0x0010 (0x0038 - 0x0028)
class UOrionBannerListItemData final : public UObject
{
public:
	uint8                                         Pad_28[0x10];                                      // 0x0028(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"OrionBannerListItemData">();
	}
	static class UOrionBannerListItemData* GetDefaultObj()
	{
		return GetDefaultObjImpl<UOrionBannerListItemData>();
	}
};
static_assert(alignof(UOrionBannerListItemData) == 0x000008, "Wrong alignment on UOrionBannerListItemData");
static_assert(sizeof(UOrionBannerListItemData) == 0x000038, "Wrong size on UOrionBannerListItemData");

// Class OrionUI.OrionBannerInventoryListItem
// 0x00D0 (0x0AB0 - 0x09E0)
class UOrionBannerInventoryListItem final : public UOrionBaseButton
{
public:
	uint8                                         Pad_9E0[0xB8];                                     // 0x09E0(0x00B8)(Fixing Size After Last Property [ Dumper-7 ])
	class UOrionLazyImage*                        LazyImage_BannerIcon;                              // 0x0A98(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionTextBlock*                        Text_BannerName;                                   // 0x0AA0(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionDefaultButton*                    Button_BuyBanner;                                  // 0x0AA8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	void BP_OnBannerPurchased();
	void EquipBanner();
	void OnBannerEquipped();
	void OnBannerSet(class UOrionMcpBannerItem* BannerItem, EBannerListItemType ListItemType);
	void OnBannerUnequipped();
	void UnequipBanner();

	bool IsEquipped() const;
	bool IsForSale() const;
	bool IsOwned() const;
	bool IsPlayable() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"OrionBannerInventoryListItem">();
	}
	static class UOrionBannerInventoryListItem* GetDefaultObj()
	{
		return GetDefaultObjImpl<UOrionBannerInventoryListItem>();
	}
};
static_assert(alignof(UOrionBannerInventoryListItem) == 0x000008, "Wrong alignment on UOrionBannerInventoryListItem");
static_assert(sizeof(UOrionBannerInventoryListItem) == 0x000AB0, "Wrong size on UOrionBannerInventoryListItem");
static_assert(offsetof(UOrionBannerInventoryListItem, LazyImage_BannerIcon) == 0x000A98, "Member 'UOrionBannerInventoryListItem::LazyImage_BannerIcon' has a wrong offset!");
static_assert(offsetof(UOrionBannerInventoryListItem, Text_BannerName) == 0x000AA0, "Member 'UOrionBannerInventoryListItem::Text_BannerName' has a wrong offset!");
static_assert(offsetof(UOrionBannerInventoryListItem, Button_BuyBanner) == 0x000AA8, "Member 'UOrionBannerInventoryListItem::Button_BuyBanner' has a wrong offset!");

// Class OrionUI.OrionBaseButton_Group
// 0x0040 (0x0068 - 0x0028)
class UOrionBaseButton_Group final : public UBase_Group
{
public:
	UMulticastDelegateProperty_                   OnSelectedButtonChanged;                           // 0x0028(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                   OnSelectionCleared;                                // 0x0038(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	bool                                          bSelectionRequired;                                // 0x0048(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_49[0x1F];                                      // 0x0049(0x001F)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void DeselectAll();
	int32 GetSelectedButtonIndex();
	void OnSelectionStateChanged(class UOrionBaseButton* BaseButton, bool bIsSelected);
	void SelectButtonAtIndex(int32 ButtonIndex);
	void SelectNextButton(bool bAllowWrap);
	void SelectPreviousButton(bool bAllowWrap);
	void SetSelectionRequired(bool bRequireSelection);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"OrionBaseButton_Group">();
	}
	static class UOrionBaseButton_Group* GetDefaultObj()
	{
		return GetDefaultObjImpl<UOrionBaseButton_Group>();
	}
};
static_assert(alignof(UOrionBaseButton_Group) == 0x000008, "Wrong alignment on UOrionBaseButton_Group");
static_assert(sizeof(UOrionBaseButton_Group) == 0x000068, "Wrong size on UOrionBaseButton_Group");
static_assert(offsetof(UOrionBaseButton_Group, OnSelectedButtonChanged) == 0x000028, "Member 'UOrionBaseButton_Group::OnSelectedButtonChanged' has a wrong offset!");
static_assert(offsetof(UOrionBaseButton_Group, OnSelectionCleared) == 0x000038, "Member 'UOrionBaseButton_Group::OnSelectionCleared' has a wrong offset!");
static_assert(offsetof(UOrionBaseButton_Group, bSelectionRequired) == 0x000048, "Member 'UOrionBaseButton_Group::bSelectionRequired' has a wrong offset!");

// Class OrionUI.OrionBaseHUDWidget
// 0x0008 (0x02C0 - 0x02B8)
class UOrionBaseHUDWidget : public UOrionUIStateWidget
{
public:
	class UOrionFloatingText*                     FloatingTextWidget;                                // 0x02B8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	void DisableToolTips();
	void EnableToolTips();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"OrionBaseHUDWidget">();
	}
	static class UOrionBaseHUDWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UOrionBaseHUDWidget>();
	}
};
static_assert(alignof(UOrionBaseHUDWidget) == 0x000008, "Wrong alignment on UOrionBaseHUDWidget");
static_assert(sizeof(UOrionBaseHUDWidget) == 0x0002C0, "Wrong size on UOrionBaseHUDWidget");
static_assert(offsetof(UOrionBaseHUDWidget, FloatingTextWidget) == 0x0002B8, "Member 'UOrionBaseHUDWidget::FloatingTextWidget' has a wrong offset!");

// Class OrionUI.OrionBaseTile
// 0x01B8 (0x0B98 - 0x09E0)
#pragma pack(push, 0x1)
class alignas(0x08) UOrionBaseTile : public UOrionBaseButton
{
public:
	uint8                                         Pad_9E0[0x8];                                      // 0x09E0(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	UMulticastDelegateProperty_                   OnOfferConfirmed;                                  // 0x09E8(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                         Pad_9F8[0x148];                                    // 0x09F8(0x0148)(Fixing Size After Last Property [ Dumper-7 ])
	class UOrionUserWidgetHost*                   TileDataHost;                                      // 0x0B40(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UOrionTileDataBlock*                    HostedTileDataBlock;                               // 0x0B48(0x0008)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_B50[0x48];                                     // 0x0B50(0x0048)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void DynamicHandleCurrencyChanged();
	void Launch();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"OrionBaseTile">();
	}
	static class UOrionBaseTile* GetDefaultObj()
	{
		return GetDefaultObjImpl<UOrionBaseTile>();
	}
};
#pragma pack(pop)
static_assert(alignof(UOrionBaseTile) == 0x000008, "Wrong alignment on UOrionBaseTile");
static_assert(sizeof(UOrionBaseTile) == 0x000B98, "Wrong size on UOrionBaseTile");
static_assert(offsetof(UOrionBaseTile, OnOfferConfirmed) == 0x0009E8, "Member 'UOrionBaseTile::OnOfferConfirmed' has a wrong offset!");
static_assert(offsetof(UOrionBaseTile, TileDataHost) == 0x000B40, "Member 'UOrionBaseTile::TileDataHost' has a wrong offset!");
static_assert(offsetof(UOrionBaseTile, HostedTileDataBlock) == 0x000B48, "Member 'UOrionBaseTile::HostedTileDataBlock' has a wrong offset!");

// Class OrionUI.OrionBlurWidget
// 0x0098 (0x0250 - 0x01B8)
class UOrionBlurWidget final : public UBackgroundBlur
{
public:
	struct FSlateBrush                            BlurBacking;                                       // 0x01B8(0x0078)(Edit, NativeAccessSpecifierPrivate)
	struct FLinearColor                           ColorAndOpacity;                                   // 0x0230(0x0010)(Edit, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_240[0x10];                                     // 0x0240(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void SetColorAndOpacity(const struct FLinearColor& InColorAndOpacity);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"OrionBlurWidget">();
	}
	static class UOrionBlurWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UOrionBlurWidget>();
	}
};
static_assert(alignof(UOrionBlurWidget) == 0x000008, "Wrong alignment on UOrionBlurWidget");
static_assert(sizeof(UOrionBlurWidget) == 0x000250, "Wrong size on UOrionBlurWidget");
static_assert(offsetof(UOrionBlurWidget, BlurBacking) == 0x0001B8, "Member 'UOrionBlurWidget::BlurBacking' has a wrong offset!");
static_assert(offsetof(UOrionBlurWidget, ColorAndOpacity) == 0x000230, "Member 'UOrionBlurWidget::ColorAndOpacity' has a wrong offset!");

// Class OrionUI.OrionBundlePurchaseScreen
// 0x02A8 (0x06F0 - 0x0448)
class UOrionBundlePurchaseScreen final : public UOrionActivatableWidget
{
public:
	uint8                                         Pad_448[0x198];                                    // 0x0448(0x0198)(Fixing Size After Last Property [ Dumper-7 ])
	TSubclassOf<class UOrionBaseTile>             OfferWidgetClass;                                  // 0x05E0(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int32                                         OfferWidth;                                        // 0x05E8(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int32                                         OfferHeight;                                       // 0x05EC(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FMargin                                OfferPadding;                                      // 0x05F0(0x0010)(Edit, NoDestructor, NativeAccessSpecifierPrivate)
	EItemAlignment                                OfferItemAlignment;                                // 0x0600(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_601[0xB7];                                     // 0x0601(0x00B7)(Fixing Size After Last Property [ Dumper-7 ])
	class UOrionRichText*                         RichText_BasePrice;                                // 0x06B8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionRichText*                         RichText_UnopenedItems;                            // 0x06C0(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionDefaultButton*                    Button_BuyBundle;                                  // 0x06C8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionLoadGuard*                        LoadGuard;                                         // 0x06D0(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOverlay*                               Panel_BasePriceInfo;                               // 0x06D8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class USizeBox*                               Box_OfferTileViewContainer;                        // 0x06E0(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_6E8[0x8];                                      // 0x06E8(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void SetBundleScreenTitle(const class FText& BundleTitle);
	void SetStoreOfferAndContext(const class FString& OfferId, const class FName InPurchaseContext);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"OrionBundlePurchaseScreen">();
	}
	static class UOrionBundlePurchaseScreen* GetDefaultObj()
	{
		return GetDefaultObjImpl<UOrionBundlePurchaseScreen>();
	}
};
static_assert(alignof(UOrionBundlePurchaseScreen) == 0x000008, "Wrong alignment on UOrionBundlePurchaseScreen");
static_assert(sizeof(UOrionBundlePurchaseScreen) == 0x0006F0, "Wrong size on UOrionBundlePurchaseScreen");
static_assert(offsetof(UOrionBundlePurchaseScreen, OfferWidgetClass) == 0x0005E0, "Member 'UOrionBundlePurchaseScreen::OfferWidgetClass' has a wrong offset!");
static_assert(offsetof(UOrionBundlePurchaseScreen, OfferWidth) == 0x0005E8, "Member 'UOrionBundlePurchaseScreen::OfferWidth' has a wrong offset!");
static_assert(offsetof(UOrionBundlePurchaseScreen, OfferHeight) == 0x0005EC, "Member 'UOrionBundlePurchaseScreen::OfferHeight' has a wrong offset!");
static_assert(offsetof(UOrionBundlePurchaseScreen, OfferPadding) == 0x0005F0, "Member 'UOrionBundlePurchaseScreen::OfferPadding' has a wrong offset!");
static_assert(offsetof(UOrionBundlePurchaseScreen, OfferItemAlignment) == 0x000600, "Member 'UOrionBundlePurchaseScreen::OfferItemAlignment' has a wrong offset!");
static_assert(offsetof(UOrionBundlePurchaseScreen, RichText_BasePrice) == 0x0006B8, "Member 'UOrionBundlePurchaseScreen::RichText_BasePrice' has a wrong offset!");
static_assert(offsetof(UOrionBundlePurchaseScreen, RichText_UnopenedItems) == 0x0006C0, "Member 'UOrionBundlePurchaseScreen::RichText_UnopenedItems' has a wrong offset!");
static_assert(offsetof(UOrionBundlePurchaseScreen, Button_BuyBundle) == 0x0006C8, "Member 'UOrionBundlePurchaseScreen::Button_BuyBundle' has a wrong offset!");
static_assert(offsetof(UOrionBundlePurchaseScreen, LoadGuard) == 0x0006D0, "Member 'UOrionBundlePurchaseScreen::LoadGuard' has a wrong offset!");
static_assert(offsetof(UOrionBundlePurchaseScreen, Panel_BasePriceInfo) == 0x0006D8, "Member 'UOrionBundlePurchaseScreen::Panel_BasePriceInfo' has a wrong offset!");
static_assert(offsetof(UOrionBundlePurchaseScreen, Box_OfferTileViewContainer) == 0x0006E0, "Member 'UOrionBundlePurchaseScreen::Box_OfferTileViewContainer' has a wrong offset!");

// Class OrionUI.OrionBundleTile
// 0x0028 (0x0BC0 - 0x0B98)
class UOrionBundleTile final : public UOrionBaseTile
{
public:
	uint8                                         Pad_B98[0x20];                                     // 0x0B98(0x0020)(Fixing Size After Last Property [ Dumper-7 ])
	class UBorder*                                Border_EyebrowText;                                // 0x0BB8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"OrionBundleTile">();
	}
	static class UOrionBundleTile* GetDefaultObj()
	{
		return GetDefaultObjImpl<UOrionBundleTile>();
	}
};
static_assert(alignof(UOrionBundleTile) == 0x000008, "Wrong alignment on UOrionBundleTile");
static_assert(sizeof(UOrionBundleTile) == 0x000BC0, "Wrong size on UOrionBundleTile");
static_assert(offsetof(UOrionBundleTile, Border_EyebrowText) == 0x000BB8, "Member 'UOrionBundleTile::Border_EyebrowText' has a wrong offset!");

// Class OrionUI.OrionButton
// 0x0050 (0x0250 - 0x0200)
class UOrionButton final : public UUserWidget
{
public:
	EButtonClickMethod                            ClickMethod;                                       // 0x0200(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EButtonPressMethod                            PressMethod;                                       // 0x0201(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_202[0x6];                                      // 0x0202(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateSound                            PressedSound;                                      // 0x0208(0x0018)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnTemplate, NoDestructor, NativeAccessSpecifierPublic)
	struct FSlateSound                            HoveredSound;                                      // 0x0220(0x0018)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnTemplate, NoDestructor, NativeAccessSpecifierPublic)
	TDelegate<void(class UOrionButton* Button)>   OnClicked;                                         // 0x0238(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, InstancedReference, NoDestructor, NativeAccessSpecifierPublic)
	bool                                          bCaptureMouse;                                     // 0x0248(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bInteractive;                                      // 0x0249(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EOrionButtonState                             CurrentState;                                      // 0x024A(0x0001)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_24B[0x5];                                      // 0x024B(0x0005)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void OnStateChanged(EOrionButtonState NewState);
	struct FEventReply SimpleButtonDelegate__DelegateSignature(class UOrionButton* Button);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"OrionButton">();
	}
	static class UOrionButton* GetDefaultObj()
	{
		return GetDefaultObjImpl<UOrionButton>();
	}
};
static_assert(alignof(UOrionButton) == 0x000008, "Wrong alignment on UOrionButton");
static_assert(sizeof(UOrionButton) == 0x000250, "Wrong size on UOrionButton");
static_assert(offsetof(UOrionButton, ClickMethod) == 0x000200, "Member 'UOrionButton::ClickMethod' has a wrong offset!");
static_assert(offsetof(UOrionButton, PressMethod) == 0x000201, "Member 'UOrionButton::PressMethod' has a wrong offset!");
static_assert(offsetof(UOrionButton, PressedSound) == 0x000208, "Member 'UOrionButton::PressedSound' has a wrong offset!");
static_assert(offsetof(UOrionButton, HoveredSound) == 0x000220, "Member 'UOrionButton::HoveredSound' has a wrong offset!");
static_assert(offsetof(UOrionButton, OnClicked) == 0x000238, "Member 'UOrionButton::OnClicked' has a wrong offset!");
static_assert(offsetof(UOrionButton, bCaptureMouse) == 0x000248, "Member 'UOrionButton::bCaptureMouse' has a wrong offset!");
static_assert(offsetof(UOrionButton, bInteractive) == 0x000249, "Member 'UOrionButton::bInteractive' has a wrong offset!");
static_assert(offsetof(UOrionButton, CurrentState) == 0x00024A, "Member 'UOrionButton::CurrentState' has a wrong offset!");

// Class OrionUI.OrionCardCollectionScreen
// 0x0018 (0x0460 - 0x0448)
class UOrionCardCollectionScreen final : public UOrionActivatableWidget
{
public:
	class UOrionCardFilterHeader*                 Header_Filter;                                     // 0x0448(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionTileView*                         TileView_Cards;                                    // 0x0450(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionDeckBuilderCardTooltip*           Tooltip_HoveredCard;                               // 0x0458(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	void DynamicCardClicked(class UObject* Obj);
	void HandleCardHovered(class UObject* HoveredItem, bool bIsHovered);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"OrionCardCollectionScreen">();
	}
	static class UOrionCardCollectionScreen* GetDefaultObj()
	{
		return GetDefaultObjImpl<UOrionCardCollectionScreen>();
	}
};
static_assert(alignof(UOrionCardCollectionScreen) == 0x000008, "Wrong alignment on UOrionCardCollectionScreen");
static_assert(sizeof(UOrionCardCollectionScreen) == 0x000460, "Wrong size on UOrionCardCollectionScreen");
static_assert(offsetof(UOrionCardCollectionScreen, Header_Filter) == 0x000448, "Member 'UOrionCardCollectionScreen::Header_Filter' has a wrong offset!");
static_assert(offsetof(UOrionCardCollectionScreen, TileView_Cards) == 0x000450, "Member 'UOrionCardCollectionScreen::TileView_Cards' has a wrong offset!");
static_assert(offsetof(UOrionCardCollectionScreen, Tooltip_HoveredCard) == 0x000458, "Member 'UOrionCardCollectionScreen::Tooltip_HoveredCard' has a wrong offset!");

// Class OrionUI.OrionCardCostDisplay
// 0x0028 (0x02E0 - 0x02B8)
class UOrionCardCostDisplay final : public UOrionUserWidgetBase
{
public:
	bool                                          bShowNumberOnly;                                   // 0x02B8(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2B9[0x7];                                      // 0x02B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UImage*                                 Image_Pip;                                         // 0x02C0(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionTextBlock*                        Text_Num;                                          // 0x02C8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionTextBlock*                        Text_Desc;                                         // 0x02D0(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_2D8[0x8];                                      // 0x02D8(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"OrionCardCostDisplay">();
	}
	static class UOrionCardCostDisplay* GetDefaultObj()
	{
		return GetDefaultObjImpl<UOrionCardCostDisplay>();
	}
};
static_assert(alignof(UOrionCardCostDisplay) == 0x000008, "Wrong alignment on UOrionCardCostDisplay");
static_assert(sizeof(UOrionCardCostDisplay) == 0x0002E0, "Wrong size on UOrionCardCostDisplay");
static_assert(offsetof(UOrionCardCostDisplay, bShowNumberOnly) == 0x0002B8, "Member 'UOrionCardCostDisplay::bShowNumberOnly' has a wrong offset!");
static_assert(offsetof(UOrionCardCostDisplay, Image_Pip) == 0x0002C0, "Member 'UOrionCardCostDisplay::Image_Pip' has a wrong offset!");
static_assert(offsetof(UOrionCardCostDisplay, Text_Num) == 0x0002C8, "Member 'UOrionCardCostDisplay::Text_Num' has a wrong offset!");
static_assert(offsetof(UOrionCardCostDisplay, Text_Desc) == 0x0002D0, "Member 'UOrionCardCostDisplay::Text_Desc' has a wrong offset!");

// Class OrionUI.OrionCardFilterHeader
// 0x0078 (0x0330 - 0x02B8)
class UOrionCardFilterHeader final : public UOrionUserWidgetBase
{
public:
	uint8                                         Pad_2B8[0x30];                                     // 0x02B8(0x0030)(Fixing Size After Last Property [ Dumper-7 ])
	class UOrionBaseButton_Group*                 OwnershipButtonGroup;                              // 0x02E8(0x0008)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionTileView*                         TileViewToFilter;                                  // 0x02F0(0x0008)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionFilterHeaderButton*               Button_Order;                                      // 0x02F8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionFilterHeaderButton*               Button_Chaos;                                      // 0x0300(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionFilterHeaderButton*               Button_Knowledge;                                  // 0x0308(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionFilterHeaderButton*               Button_Growth;                                     // 0x0310(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionFilterHeaderButton*               Button_Death;                                      // 0x0318(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionFilterToggleButton*               Button_Toggle;                                     // 0x0320(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionEditableTextBox*                  Text_SearchBox;                                    // 0x0328(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	void DynamicChaosSelected(bool bSelected);
	void DynamicDeathSelected(bool bSelected);
	void DynamicGrowthSelected(bool bSelected);
	void DynamicKnowledgeSelected(bool bSelected);
	void DynamicOrderSelected(bool bSelected);
	void DynamicSearchTextChanged(const class FText& NewText);
	void DynamicSearchTextCommitted(const class FText& NewText, ETextCommit CommitMethod);
	void HandleToggleButtonSort();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"OrionCardFilterHeader">();
	}
	static class UOrionCardFilterHeader* GetDefaultObj()
	{
		return GetDefaultObjImpl<UOrionCardFilterHeader>();
	}
};
static_assert(alignof(UOrionCardFilterHeader) == 0x000008, "Wrong alignment on UOrionCardFilterHeader");
static_assert(sizeof(UOrionCardFilterHeader) == 0x000330, "Wrong size on UOrionCardFilterHeader");
static_assert(offsetof(UOrionCardFilterHeader, OwnershipButtonGroup) == 0x0002E8, "Member 'UOrionCardFilterHeader::OwnershipButtonGroup' has a wrong offset!");
static_assert(offsetof(UOrionCardFilterHeader, TileViewToFilter) == 0x0002F0, "Member 'UOrionCardFilterHeader::TileViewToFilter' has a wrong offset!");
static_assert(offsetof(UOrionCardFilterHeader, Button_Order) == 0x0002F8, "Member 'UOrionCardFilterHeader::Button_Order' has a wrong offset!");
static_assert(offsetof(UOrionCardFilterHeader, Button_Chaos) == 0x000300, "Member 'UOrionCardFilterHeader::Button_Chaos' has a wrong offset!");
static_assert(offsetof(UOrionCardFilterHeader, Button_Knowledge) == 0x000308, "Member 'UOrionCardFilterHeader::Button_Knowledge' has a wrong offset!");
static_assert(offsetof(UOrionCardFilterHeader, Button_Growth) == 0x000310, "Member 'UOrionCardFilterHeader::Button_Growth' has a wrong offset!");
static_assert(offsetof(UOrionCardFilterHeader, Button_Death) == 0x000318, "Member 'UOrionCardFilterHeader::Button_Death' has a wrong offset!");
static_assert(offsetof(UOrionCardFilterHeader, Button_Toggle) == 0x000320, "Member 'UOrionCardFilterHeader::Button_Toggle' has a wrong offset!");
static_assert(offsetof(UOrionCardFilterHeader, Text_SearchBox) == 0x000328, "Member 'UOrionCardFilterHeader::Text_SearchBox' has a wrong offset!");

// Class OrionUI.OrionCardInspectScreen
// 0x0168 (0x05B0 - 0x0448)
class UOrionCardInspectScreen final : public UOrionActivatableWidget
{
public:
	uint8                                         Pad_448[0xA8];                                     // 0x0448(0x00A8)(Fixing Size After Last Property [ Dumper-7 ])
	class UOrionCardWidget*                       Card_Inspected;                                    // 0x04F0(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionGemBasic*                         Gem_Inspected;                                     // 0x04F8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionCardSummaryWidget*                Card_InfoSheet;                                    // 0x0500(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionGemSummaryWidget*                 Gem_InfoSheet;                                     // 0x0508(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionTextBlock*                        Text_CardName;                                     // 0x0510(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionBaseButton*                       Button_Close;                                      // 0x0518(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionBaseButton*                       Button_Left;                                       // 0x0520(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionBaseButton*                       Button_Right;                                      // 0x0528(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionBaseButton*                       Button_KeyboardLeft;                               // 0x0530(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionBaseButton*                       Button_KeyboardRight;                              // 0x0538(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UImage*                                 Image_Affinity_Mark;                               // 0x0540(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UImage*                                 Image_Card_Add;                                    // 0x0548(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UImage*                                 Image_LevelUp_Pattern;                             // 0x0550(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UImage*                                 Image_Card_Affinity_Glow;                          // 0x0558(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UImage*                                 Image_Top_Glow;                                    // 0x0560(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UImage*                                 Image_Bottom_Glow;                                 // 0x0568(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionDefaultButton*                    Button_UnlockRank;                                 // 0x0570(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionBaseButton*                       Button_EmptyHover;                                 // 0x0578(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionTextBlock*                        Text_RankUpDesc;                                   // 0x0580(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionTextBlock*                        Text_ShowPVPMode;                                  // 0x0588(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionInputVisualizer*                  OrionInputVisualizer_Left;                         // 0x0590(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionInputVisualizer*                  OrionInputVisualizer_Right;                        // 0x0598(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionBaseButton*                       CheckBox_LevelToggle;                              // 0x05A0(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_5A8[0x8];                                      // 0x05A8(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void OnLeftNav();
	void OnLevelUp();
	void OnRightNav();
	void OnScreenActivated();
	void OnScreenDeactivated();
	void SetCardVisuals();
	void SetGemVisuals();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"OrionCardInspectScreen">();
	}
	static class UOrionCardInspectScreen* GetDefaultObj()
	{
		return GetDefaultObjImpl<UOrionCardInspectScreen>();
	}
};
static_assert(alignof(UOrionCardInspectScreen) == 0x000008, "Wrong alignment on UOrionCardInspectScreen");
static_assert(sizeof(UOrionCardInspectScreen) == 0x0005B0, "Wrong size on UOrionCardInspectScreen");
static_assert(offsetof(UOrionCardInspectScreen, Card_Inspected) == 0x0004F0, "Member 'UOrionCardInspectScreen::Card_Inspected' has a wrong offset!");
static_assert(offsetof(UOrionCardInspectScreen, Gem_Inspected) == 0x0004F8, "Member 'UOrionCardInspectScreen::Gem_Inspected' has a wrong offset!");
static_assert(offsetof(UOrionCardInspectScreen, Card_InfoSheet) == 0x000500, "Member 'UOrionCardInspectScreen::Card_InfoSheet' has a wrong offset!");
static_assert(offsetof(UOrionCardInspectScreen, Gem_InfoSheet) == 0x000508, "Member 'UOrionCardInspectScreen::Gem_InfoSheet' has a wrong offset!");
static_assert(offsetof(UOrionCardInspectScreen, Text_CardName) == 0x000510, "Member 'UOrionCardInspectScreen::Text_CardName' has a wrong offset!");
static_assert(offsetof(UOrionCardInspectScreen, Button_Close) == 0x000518, "Member 'UOrionCardInspectScreen::Button_Close' has a wrong offset!");
static_assert(offsetof(UOrionCardInspectScreen, Button_Left) == 0x000520, "Member 'UOrionCardInspectScreen::Button_Left' has a wrong offset!");
static_assert(offsetof(UOrionCardInspectScreen, Button_Right) == 0x000528, "Member 'UOrionCardInspectScreen::Button_Right' has a wrong offset!");
static_assert(offsetof(UOrionCardInspectScreen, Button_KeyboardLeft) == 0x000530, "Member 'UOrionCardInspectScreen::Button_KeyboardLeft' has a wrong offset!");
static_assert(offsetof(UOrionCardInspectScreen, Button_KeyboardRight) == 0x000538, "Member 'UOrionCardInspectScreen::Button_KeyboardRight' has a wrong offset!");
static_assert(offsetof(UOrionCardInspectScreen, Image_Affinity_Mark) == 0x000540, "Member 'UOrionCardInspectScreen::Image_Affinity_Mark' has a wrong offset!");
static_assert(offsetof(UOrionCardInspectScreen, Image_Card_Add) == 0x000548, "Member 'UOrionCardInspectScreen::Image_Card_Add' has a wrong offset!");
static_assert(offsetof(UOrionCardInspectScreen, Image_LevelUp_Pattern) == 0x000550, "Member 'UOrionCardInspectScreen::Image_LevelUp_Pattern' has a wrong offset!");
static_assert(offsetof(UOrionCardInspectScreen, Image_Card_Affinity_Glow) == 0x000558, "Member 'UOrionCardInspectScreen::Image_Card_Affinity_Glow' has a wrong offset!");
static_assert(offsetof(UOrionCardInspectScreen, Image_Top_Glow) == 0x000560, "Member 'UOrionCardInspectScreen::Image_Top_Glow' has a wrong offset!");
static_assert(offsetof(UOrionCardInspectScreen, Image_Bottom_Glow) == 0x000568, "Member 'UOrionCardInspectScreen::Image_Bottom_Glow' has a wrong offset!");
static_assert(offsetof(UOrionCardInspectScreen, Button_UnlockRank) == 0x000570, "Member 'UOrionCardInspectScreen::Button_UnlockRank' has a wrong offset!");
static_assert(offsetof(UOrionCardInspectScreen, Button_EmptyHover) == 0x000578, "Member 'UOrionCardInspectScreen::Button_EmptyHover' has a wrong offset!");
static_assert(offsetof(UOrionCardInspectScreen, Text_RankUpDesc) == 0x000580, "Member 'UOrionCardInspectScreen::Text_RankUpDesc' has a wrong offset!");
static_assert(offsetof(UOrionCardInspectScreen, Text_ShowPVPMode) == 0x000588, "Member 'UOrionCardInspectScreen::Text_ShowPVPMode' has a wrong offset!");
static_assert(offsetof(UOrionCardInspectScreen, OrionInputVisualizer_Left) == 0x000590, "Member 'UOrionCardInspectScreen::OrionInputVisualizer_Left' has a wrong offset!");
static_assert(offsetof(UOrionCardInspectScreen, OrionInputVisualizer_Right) == 0x000598, "Member 'UOrionCardInspectScreen::OrionInputVisualizer_Right' has a wrong offset!");
static_assert(offsetof(UOrionCardInspectScreen, CheckBox_LevelToggle) == 0x0005A0, "Member 'UOrionCardInspectScreen::CheckBox_LevelToggle' has a wrong offset!");

// Class OrionUI.OrionCardOnboardCard
// 0x0010 (0x09F0 - 0x09E0)
class UOrionCardOnboardCard final : public UOrionBaseButton
{
public:
	class UOrionFrontEndCard*                     Card_Widget;                                       // 0x09E0(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_9E8[0x8];                                      // 0x09E8(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void OnCardClicked();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"OrionCardOnboardCard">();
	}
	static class UOrionCardOnboardCard* GetDefaultObj()
	{
		return GetDefaultObjImpl<UOrionCardOnboardCard>();
	}
};
static_assert(alignof(UOrionCardOnboardCard) == 0x000008, "Wrong alignment on UOrionCardOnboardCard");
static_assert(sizeof(UOrionCardOnboardCard) == 0x0009F0, "Wrong size on UOrionCardOnboardCard");
static_assert(offsetof(UOrionCardOnboardCard, Card_Widget) == 0x0009E0, "Member 'UOrionCardOnboardCard::Card_Widget' has a wrong offset!");

// Class OrionUI.OrionCardOnboardPopup
// 0x0008 (0x0450 - 0x0448)
class UOrionCardOnboardPopup final : public UOrionActivatableWidget
{
public:
	class UOrionDefaultButton*                    Button_Accept;                                     // 0x0448(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"OrionCardOnboardPopup">();
	}
	static class UOrionCardOnboardPopup* GetDefaultObj()
	{
		return GetDefaultObjImpl<UOrionCardOnboardPopup>();
	}
};
static_assert(alignof(UOrionCardOnboardPopup) == 0x000008, "Wrong alignment on UOrionCardOnboardPopup");
static_assert(sizeof(UOrionCardOnboardPopup) == 0x000450, "Wrong size on UOrionCardOnboardPopup");
static_assert(offsetof(UOrionCardOnboardPopup, Button_Accept) == 0x000448, "Member 'UOrionCardOnboardPopup::Button_Accept' has a wrong offset!");

// Class OrionUI.OrionTimedFillWidget
// 0x00B8 (0x0370 - 0x02B8)
class UOrionTimedFillWidget : public UOrionUserWidgetBase
{
public:
	uint8                                         Pad_2B8[0x78];                                     // 0x02B8(0x0078)(Fixing Size After Last Property [ Dumper-7 ])
	UMulticastDelegateProperty_                   BP_OnFillComplete;                                 // 0x0330(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, NativeAccessSpecifierProtected)
	float                                         MaxFillTime;                                       // 0x0340(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         LerpExponent;                                      // 0x0344(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_348[0x28];                                     // 0x0348(0x0028)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void BeginFill();
	int32 GetMaxFillTime();
	void JumpToEnd();
	void OnFillCompleted();
	void OnReset();
	void OnUpdateCurrentValue(float Value);
	void Reset();
	void SetMaxFillTime(float InMaxFillTime);
	void SetRange(float StartValue, float EndValue);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"OrionTimedFillWidget">();
	}
	static class UOrionTimedFillWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UOrionTimedFillWidget>();
	}
};
static_assert(alignof(UOrionTimedFillWidget) == 0x000008, "Wrong alignment on UOrionTimedFillWidget");
static_assert(sizeof(UOrionTimedFillWidget) == 0x000370, "Wrong size on UOrionTimedFillWidget");
static_assert(offsetof(UOrionTimedFillWidget, BP_OnFillComplete) == 0x000330, "Member 'UOrionTimedFillWidget::BP_OnFillComplete' has a wrong offset!");
static_assert(offsetof(UOrionTimedFillWidget, MaxFillTime) == 0x000340, "Member 'UOrionTimedFillWidget::MaxFillTime' has a wrong offset!");
static_assert(offsetof(UOrionTimedFillWidget, LerpExponent) == 0x000344, "Member 'UOrionTimedFillWidget::LerpExponent' has a wrong offset!");

// Class OrionUI.OrionPossibleRewardsArray
// 0x0028 (0x02E0 - 0x02B8)
class UOrionPossibleRewardsArray : public UOrionUserWidgetBase
{
public:
	TArray<class UOrionRewardWidget*>             PossibleRewardWidgets;                             // 0x02B8(0x0010)(ExportObject, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	class UOrionTextBlock*                        Text_PossibleRewards;                              // 0x02C8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionTextBlock*                        Text_AndMore;                                      // 0x02D0(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_2D8[0x8];                                      // 0x02D8(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void SetPossibleRewardWidgets(const TArray<class UOrionRewardWidget*>& InPossibleRewardWidgets);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"OrionPossibleRewardsArray">();
	}
	static class UOrionPossibleRewardsArray* GetDefaultObj()
	{
		return GetDefaultObjImpl<UOrionPossibleRewardsArray>();
	}
};
static_assert(alignof(UOrionPossibleRewardsArray) == 0x000008, "Wrong alignment on UOrionPossibleRewardsArray");
static_assert(sizeof(UOrionPossibleRewardsArray) == 0x0002E0, "Wrong size on UOrionPossibleRewardsArray");
static_assert(offsetof(UOrionPossibleRewardsArray, PossibleRewardWidgets) == 0x0002B8, "Member 'UOrionPossibleRewardsArray::PossibleRewardWidgets' has a wrong offset!");
static_assert(offsetof(UOrionPossibleRewardsArray, Text_PossibleRewards) == 0x0002C8, "Member 'UOrionPossibleRewardsArray::Text_PossibleRewards' has a wrong offset!");
static_assert(offsetof(UOrionPossibleRewardsArray, Text_AndMore) == 0x0002D0, "Member 'UOrionPossibleRewardsArray::Text_AndMore' has a wrong offset!");

// Class OrionUI.OrionCardProgressBar
// 0x0040 (0x03B0 - 0x0370)
class UOrionCardProgressBar : public UOrionTimedFillWidget
{
public:
	TSubclassOf<class UOrionTextStyle>            TextStyle;                                         // 0x0370(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FLinearColor                           CardOwnedColor;                                    // 0x0378(0x0010)(Edit, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_388[0x8];                                      // 0x0388(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	class UOrionTextBlock*                        Text_Level;                                        // 0x0390(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionTextBlock*                        Text_NextLevel;                                    // 0x0398(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionTextBlock*                        Text_XP;                                           // 0x03A0(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UImage*                                 Image_LevelProgress;                               // 0x03A8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	void SetPreviewLevelDisplay(bool bIsVisible);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"OrionCardProgressBar">();
	}
	static class UOrionCardProgressBar* GetDefaultObj()
	{
		return GetDefaultObjImpl<UOrionCardProgressBar>();
	}
};
static_assert(alignof(UOrionCardProgressBar) == 0x000008, "Wrong alignment on UOrionCardProgressBar");
static_assert(sizeof(UOrionCardProgressBar) == 0x0003B0, "Wrong size on UOrionCardProgressBar");
static_assert(offsetof(UOrionCardProgressBar, TextStyle) == 0x000370, "Member 'UOrionCardProgressBar::TextStyle' has a wrong offset!");
static_assert(offsetof(UOrionCardProgressBar, CardOwnedColor) == 0x000378, "Member 'UOrionCardProgressBar::CardOwnedColor' has a wrong offset!");
static_assert(offsetof(UOrionCardProgressBar, Text_Level) == 0x000390, "Member 'UOrionCardProgressBar::Text_Level' has a wrong offset!");
static_assert(offsetof(UOrionCardProgressBar, Text_NextLevel) == 0x000398, "Member 'UOrionCardProgressBar::Text_NextLevel' has a wrong offset!");
static_assert(offsetof(UOrionCardProgressBar, Text_XP) == 0x0003A0, "Member 'UOrionCardProgressBar::Text_XP' has a wrong offset!");
static_assert(offsetof(UOrionCardProgressBar, Image_LevelProgress) == 0x0003A8, "Member 'UOrionCardProgressBar::Image_LevelProgress' has a wrong offset!");

// Class OrionUI.OrionCardShop
// 0x01A8 (0x05F0 - 0x0448)
class UOrionCardShop final : public UOrionActivatableWidget
{
public:
	uint8                                         Pad_448[0x18];                                     // 0x0448(0x0018)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UOrionHandEntry*>                HandEntries;                                       // 0x0460(0x0010)(ExportObject, ZeroConstructor, Transient, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	TArray<class UOrionCardShopEquipSlot*>        EquipSlots;                                        // 0x0470(0x0010)(ExportObject, ZeroConstructor, Transient, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	uint8                                         Pad_480[0x10];                                     // 0x0480(0x0010)(Fixing Size After Last Property [ Dumper-7 ])
	class UOrionBaseButton_Group*                 EquipSlotButtonGroup;                              // 0x0490(0x0008)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionBaseButton_Group*                 HandButtonGroup;                                   // 0x0498(0x0008)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_4A0[0x30];                                     // 0x04A0(0x0030)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FName>                           CardShopHotkeys;                                   // 0x04D0(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPrivate)
	uint8                                         Pad_4E0[0x18];                                     // 0x04E0(0x0018)(Fixing Size After Last Property [ Dumper-7 ])
	TSubclassOf<class UOrionTutorial>             FirstGameOpenCardShopTutorialClass;                // 0x04F8(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionTutorial*                         FirstGameOpenShopTutorial;                         // 0x0500(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSubclassOf<class UOrionTutorial>             FirstGamePurchaseAttributeTutorialClass;           // 0x0508(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionTutorial*                         FirstGamePurchaseAttributeTutorial;                // 0x0510(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSubclassOf<class UOrionTutorial>             FirstGamePurchaseCardTutorialClass;                // 0x0518(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionTutorial*                         FirstGamePurchaseCardTutorial;                     // 0x0520(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSubclassOf<class UOrionTutorial>             SecondGameOpenShopTutorialClass;                   // 0x0528(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionTutorial*                         SecondGameOpenShopTutorial;                        // 0x0530(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionDeckSelectionScreen*              DeckSelectionScreen;                               // 0x0538(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UVerticalBox*                           VerticalBox_Cards;                                 // 0x0540(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UImage*                                 Image_Backboard;                                   // 0x0548(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UBorder*                                Border_Hand;                                       // 0x0550(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UBorder*                                Border_FloatingCard;                               // 0x0558(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionCardWidget*                       FloatingCard;                                      // 0x0560(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionBaseButton*                       Button_ClickAndDragBackBoard;                      // 0x0568(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionBaseButton*                       Button_EmptyEquipSlotOne;                          // 0x0570(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionBaseButton*                       Button_EmptyEquipSlotTwo;                          // 0x0578(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionBaseButton*                       Button_EmptyEquipSlotThree;                        // 0x0580(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionAttributeDisplay*                 AgilityAttribute;                                  // 0x0588(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionAttributeDisplay*                 VitalityAttribute;                                 // 0x0590(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionAttributeDisplay*                 IntellectAttribute;                                // 0x0598(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionTextBlock*                        Text_PlayerGold;                                   // 0x05A0(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionTextBlock*                        Text_StateSpecific;                                // 0x05A8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionDynamicEntryBox*                  EntryBox_HandEntries;                              // 0x05B0(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionBaseButton*                       Button_HandEntries;                                // 0x05B8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionCardShopInfoPanel*                InfoPanel_HoveredCard;                             // 0x05C0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionDefaultButton*                    Button_CancelAction;                               // 0x05C8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionDefaultButton*                    Button_Back;                                       // 0x05D0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionDefaultButton*                    Button_EscBack;                                    // 0x05D8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionCardShopCannotAffordPopup*        CannotAffordPopup;                                 // 0x05E0(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_5E8[0x8];                                      // 0x05E8(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void DynamicHandleCanShopChanged(bool bCanShop);
	void DynamicHandleEquipSlotSelected(class UOrionBaseButton* SelectedButton, int32 ButtonIndex);
	void DynamicHandleEquipSlotSelectionCleared();
	void DynamicHandleHandCardSelected(class UOrionBaseButton* SelectedButton, int32 ButtonIndex);
	void DynamicHandleHandCardSelectionCleared();
	void DynamicHandleIsAtBaseChange(bool bIsAtBase);
	struct FEventReply HandleBackboardPressed(const struct FGeometry& MyGeometry, const struct FPointerEvent& MouseEvent);
	void OnCardDiscarded(int32 SlotIndex, int32 DexCost, int32 VitCost, int32 IntCost);
	void OnCardEquipped(int32 SlotIndex, int32 DexCost, int32 VitCost, int32 IntCost);
	void OnCardHovered();
	void OnCardShopOpened(bool bHasDeck);
	void OnCardUnhovered();
	void OnDeckCleared();
	void OnDeckEstablished();
	void OnFadeWarningIcons();
	void OnFloatingCardSet(EOrionItemRarity CardRarity, bool bIsFromEquipSlot);
	void OnFloatingCardVisualChange(bool bIsVisible);
	void OnHandCardPurchasabilityChanged();
	void OnHandCardSelected(class UOrionHandEntry* SelectedCard);
	void OnHandCardSelectionCleared();
	void OnOwnedPointsUpdated(EOrionGemBranchType Type, int32 NewOwnedPoints, int32 OldOwnedPoints);
	void OnReadOnlyActionRejected();
	void OnReadOnlyStateChanged(bool bReadOnly);
	void OnShowWarningIcons(bool bShowGold, bool bShowDex, bool bShowVit, bool bShowInt);
	void OnTutorialCompleted();
	void OnTutorialStarted();
	void PerformCancelRequest(bool bFromBackboard);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"OrionCardShop">();
	}
	static class UOrionCardShop* GetDefaultObj()
	{
		return GetDefaultObjImpl<UOrionCardShop>();
	}
};
static_assert(alignof(UOrionCardShop) == 0x000008, "Wrong alignment on UOrionCardShop");
static_assert(sizeof(UOrionCardShop) == 0x0005F0, "Wrong size on UOrionCardShop");
static_assert(offsetof(UOrionCardShop, HandEntries) == 0x000460, "Member 'UOrionCardShop::HandEntries' has a wrong offset!");
static_assert(offsetof(UOrionCardShop, EquipSlots) == 0x000470, "Member 'UOrionCardShop::EquipSlots' has a wrong offset!");
static_assert(offsetof(UOrionCardShop, EquipSlotButtonGroup) == 0x000490, "Member 'UOrionCardShop::EquipSlotButtonGroup' has a wrong offset!");
static_assert(offsetof(UOrionCardShop, HandButtonGroup) == 0x000498, "Member 'UOrionCardShop::HandButtonGroup' has a wrong offset!");
static_assert(offsetof(UOrionCardShop, CardShopHotkeys) == 0x0004D0, "Member 'UOrionCardShop::CardShopHotkeys' has a wrong offset!");
static_assert(offsetof(UOrionCardShop, FirstGameOpenCardShopTutorialClass) == 0x0004F8, "Member 'UOrionCardShop::FirstGameOpenCardShopTutorialClass' has a wrong offset!");
static_assert(offsetof(UOrionCardShop, FirstGameOpenShopTutorial) == 0x000500, "Member 'UOrionCardShop::FirstGameOpenShopTutorial' has a wrong offset!");
static_assert(offsetof(UOrionCardShop, FirstGamePurchaseAttributeTutorialClass) == 0x000508, "Member 'UOrionCardShop::FirstGamePurchaseAttributeTutorialClass' has a wrong offset!");
static_assert(offsetof(UOrionCardShop, FirstGamePurchaseAttributeTutorial) == 0x000510, "Member 'UOrionCardShop::FirstGamePurchaseAttributeTutorial' has a wrong offset!");
static_assert(offsetof(UOrionCardShop, FirstGamePurchaseCardTutorialClass) == 0x000518, "Member 'UOrionCardShop::FirstGamePurchaseCardTutorialClass' has a wrong offset!");
static_assert(offsetof(UOrionCardShop, FirstGamePurchaseCardTutorial) == 0x000520, "Member 'UOrionCardShop::FirstGamePurchaseCardTutorial' has a wrong offset!");
static_assert(offsetof(UOrionCardShop, SecondGameOpenShopTutorialClass) == 0x000528, "Member 'UOrionCardShop::SecondGameOpenShopTutorialClass' has a wrong offset!");
static_assert(offsetof(UOrionCardShop, SecondGameOpenShopTutorial) == 0x000530, "Member 'UOrionCardShop::SecondGameOpenShopTutorial' has a wrong offset!");
static_assert(offsetof(UOrionCardShop, DeckSelectionScreen) == 0x000538, "Member 'UOrionCardShop::DeckSelectionScreen' has a wrong offset!");
static_assert(offsetof(UOrionCardShop, VerticalBox_Cards) == 0x000540, "Member 'UOrionCardShop::VerticalBox_Cards' has a wrong offset!");
static_assert(offsetof(UOrionCardShop, Image_Backboard) == 0x000548, "Member 'UOrionCardShop::Image_Backboard' has a wrong offset!");
static_assert(offsetof(UOrionCardShop, Border_Hand) == 0x000550, "Member 'UOrionCardShop::Border_Hand' has a wrong offset!");
static_assert(offsetof(UOrionCardShop, Border_FloatingCard) == 0x000558, "Member 'UOrionCardShop::Border_FloatingCard' has a wrong offset!");
static_assert(offsetof(UOrionCardShop, FloatingCard) == 0x000560, "Member 'UOrionCardShop::FloatingCard' has a wrong offset!");
static_assert(offsetof(UOrionCardShop, Button_ClickAndDragBackBoard) == 0x000568, "Member 'UOrionCardShop::Button_ClickAndDragBackBoard' has a wrong offset!");
static_assert(offsetof(UOrionCardShop, Button_EmptyEquipSlotOne) == 0x000570, "Member 'UOrionCardShop::Button_EmptyEquipSlotOne' has a wrong offset!");
static_assert(offsetof(UOrionCardShop, Button_EmptyEquipSlotTwo) == 0x000578, "Member 'UOrionCardShop::Button_EmptyEquipSlotTwo' has a wrong offset!");
static_assert(offsetof(UOrionCardShop, Button_EmptyEquipSlotThree) == 0x000580, "Member 'UOrionCardShop::Button_EmptyEquipSlotThree' has a wrong offset!");
static_assert(offsetof(UOrionCardShop, AgilityAttribute) == 0x000588, "Member 'UOrionCardShop::AgilityAttribute' has a wrong offset!");
static_assert(offsetof(UOrionCardShop, VitalityAttribute) == 0x000590, "Member 'UOrionCardShop::VitalityAttribute' has a wrong offset!");
static_assert(offsetof(UOrionCardShop, IntellectAttribute) == 0x000598, "Member 'UOrionCardShop::IntellectAttribute' has a wrong offset!");
static_assert(offsetof(UOrionCardShop, Text_PlayerGold) == 0x0005A0, "Member 'UOrionCardShop::Text_PlayerGold' has a wrong offset!");
static_assert(offsetof(UOrionCardShop, Text_StateSpecific) == 0x0005A8, "Member 'UOrionCardShop::Text_StateSpecific' has a wrong offset!");
static_assert(offsetof(UOrionCardShop, EntryBox_HandEntries) == 0x0005B0, "Member 'UOrionCardShop::EntryBox_HandEntries' has a wrong offset!");
static_assert(offsetof(UOrionCardShop, Button_HandEntries) == 0x0005B8, "Member 'UOrionCardShop::Button_HandEntries' has a wrong offset!");
static_assert(offsetof(UOrionCardShop, InfoPanel_HoveredCard) == 0x0005C0, "Member 'UOrionCardShop::InfoPanel_HoveredCard' has a wrong offset!");
static_assert(offsetof(UOrionCardShop, Button_CancelAction) == 0x0005C8, "Member 'UOrionCardShop::Button_CancelAction' has a wrong offset!");
static_assert(offsetof(UOrionCardShop, Button_Back) == 0x0005D0, "Member 'UOrionCardShop::Button_Back' has a wrong offset!");
static_assert(offsetof(UOrionCardShop, Button_EscBack) == 0x0005D8, "Member 'UOrionCardShop::Button_EscBack' has a wrong offset!");
static_assert(offsetof(UOrionCardShop, CannotAffordPopup) == 0x0005E0, "Member 'UOrionCardShop::CannotAffordPopup' has a wrong offset!");

// Class OrionUI.OrionCardShopAttributePipItemData
// 0x0028 (0x0050 - 0x0028)
class UOrionCardShopAttributePipItemData final : public UObject
{
public:
	int32                                         PipIndex;                                          // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EOrionGemBranchType                           AttributeType;                                     // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2D[0x3];                                       // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           PipColor;                                          // 0x0030(0x0010)(IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bMajor;                                            // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bFilled;                                           // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bAffordable;                                       // 0x0042(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_43[0xD];                                       // 0x0043(0x000D)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"OrionCardShopAttributePipItemData">();
	}
	static class UOrionCardShopAttributePipItemData* GetDefaultObj()
	{
		return GetDefaultObjImpl<UOrionCardShopAttributePipItemData>();
	}
};
static_assert(alignof(UOrionCardShopAttributePipItemData) == 0x000008, "Wrong alignment on UOrionCardShopAttributePipItemData");
static_assert(sizeof(UOrionCardShopAttributePipItemData) == 0x000050, "Wrong size on UOrionCardShopAttributePipItemData");
static_assert(offsetof(UOrionCardShopAttributePipItemData, PipIndex) == 0x000028, "Member 'UOrionCardShopAttributePipItemData::PipIndex' has a wrong offset!");
static_assert(offsetof(UOrionCardShopAttributePipItemData, AttributeType) == 0x00002C, "Member 'UOrionCardShopAttributePipItemData::AttributeType' has a wrong offset!");
static_assert(offsetof(UOrionCardShopAttributePipItemData, PipColor) == 0x000030, "Member 'UOrionCardShopAttributePipItemData::PipColor' has a wrong offset!");
static_assert(offsetof(UOrionCardShopAttributePipItemData, bMajor) == 0x000040, "Member 'UOrionCardShopAttributePipItemData::bMajor' has a wrong offset!");
static_assert(offsetof(UOrionCardShopAttributePipItemData, bFilled) == 0x000041, "Member 'UOrionCardShopAttributePipItemData::bFilled' has a wrong offset!");
static_assert(offsetof(UOrionCardShopAttributePipItemData, bAffordable) == 0x000042, "Member 'UOrionCardShopAttributePipItemData::bAffordable' has a wrong offset!");

// Class OrionUI.OrionCardShopAttributePip
// 0x0030 (0x0A10 - 0x09E0)
class UOrionCardShopAttributePip final : public UOrionBaseButton
{
public:
	uint8                                         Pad_9E0[0x30];                                     // 0x09E0(0x0030)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void OnGemAssigned(class UMaterialInstanceDynamic* GemMaterial, EOrionGemRank GemRank);
	void OnPipSet(EOrionGemBranchType AttributeType, const struct FLinearColor& PipColor, bool bMajor, bool bFilled, bool bAffordable);
	void OnReset();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"OrionCardShopAttributePip">();
	}
	static class UOrionCardShopAttributePip* GetDefaultObj()
	{
		return GetDefaultObjImpl<UOrionCardShopAttributePip>();
	}
};
static_assert(alignof(UOrionCardShopAttributePip) == 0x000008, "Wrong alignment on UOrionCardShopAttributePip");
static_assert(sizeof(UOrionCardShopAttributePip) == 0x000A10, "Wrong size on UOrionCardShopAttributePip");

// Class OrionUI.OrionPostGameTab
// 0x00F0 (0x0538 - 0x0448)
#pragma pack(push, 0x1)
class alignas(0x08) UOrionPostGameTab : public UOrionActivatableWidget
{
public:
	uint8                                         Pad_448[0xC8];                                     // 0x0448(0x00C8)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   TabTitle;                                          // 0x0510(0x0018)(Edit, NativeAccessSpecifierPrivate)
	bool                                          bAutoAdvanceOnComplete;                            // 0x0528(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_529[0x3];                                      // 0x0529(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         PostPresentationCooldown;                          // 0x052C(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         MaxJumpToEndDelay;                                 // 0x0530(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_534[0x4];                                      // 0x0534(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void OnBeginPresentation();
	void OnJumpToEnd();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"OrionPostGameTab">();
	}
	static class UOrionPostGameTab* GetDefaultObj()
	{
		return GetDefaultObjImpl<UOrionPostGameTab>();
	}
};
#pragma pack(pop)
static_assert(alignof(UOrionPostGameTab) == 0x000008, "Wrong alignment on UOrionPostGameTab");
static_assert(sizeof(UOrionPostGameTab) == 0x000538, "Wrong size on UOrionPostGameTab");
static_assert(offsetof(UOrionPostGameTab, TabTitle) == 0x000510, "Member 'UOrionPostGameTab::TabTitle' has a wrong offset!");
static_assert(offsetof(UOrionPostGameTab, bAutoAdvanceOnComplete) == 0x000528, "Member 'UOrionPostGameTab::bAutoAdvanceOnComplete' has a wrong offset!");
static_assert(offsetof(UOrionPostGameTab, PostPresentationCooldown) == 0x00052C, "Member 'UOrionPostGameTab::PostPresentationCooldown' has a wrong offset!");
static_assert(offsetof(UOrionPostGameTab, MaxJumpToEndDelay) == 0x000530, "Member 'UOrionPostGameTab::MaxJumpToEndDelay' has a wrong offset!");

// Class OrionUI.OrionCardShopAttributePipTooltip
// 0x0008 (0x02C0 - 0x02B8)
class UOrionCardShopAttributePipTooltip final : public UOrionUserWidgetBase
{
public:
	class UOrionTextBlock*                        Text_TooltipText;                                  // 0x02B8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"OrionCardShopAttributePipTooltip">();
	}
	static class UOrionCardShopAttributePipTooltip* GetDefaultObj()
	{
		return GetDefaultObjImpl<UOrionCardShopAttributePipTooltip>();
	}
};
static_assert(alignof(UOrionCardShopAttributePipTooltip) == 0x000008, "Wrong alignment on UOrionCardShopAttributePipTooltip");
static_assert(sizeof(UOrionCardShopAttributePipTooltip) == 0x0002C0, "Wrong size on UOrionCardShopAttributePipTooltip");
static_assert(offsetof(UOrionCardShopAttributePipTooltip, Text_TooltipText) == 0x0002B8, "Member 'UOrionCardShopAttributePipTooltip::Text_TooltipText' has a wrong offset!");

// Class OrionUI.OrionCardShopCannotAffordPopup
// 0x0008 (0x0450 - 0x0448)
class UOrionCardShopCannotAffordPopup final : public UOrionActivatableWidget
{
public:
	class UOrionDynamicEntryBox*                  EntryBox_Attributes;                               // 0x0448(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	void OnRefreshDisplay();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"OrionCardShopCannotAffordPopup">();
	}
	static class UOrionCardShopCannotAffordPopup* GetDefaultObj()
	{
		return GetDefaultObjImpl<UOrionCardShopCannotAffordPopup>();
	}
};
static_assert(alignof(UOrionCardShopCannotAffordPopup) == 0x000008, "Wrong alignment on UOrionCardShopCannotAffordPopup");
static_assert(sizeof(UOrionCardShopCannotAffordPopup) == 0x000450, "Wrong size on UOrionCardShopCannotAffordPopup");
static_assert(offsetof(UOrionCardShopCannotAffordPopup, EntryBox_Attributes) == 0x000448, "Member 'UOrionCardShopCannotAffordPopup::EntryBox_Attributes' has a wrong offset!");

// Class OrionUI.OrionCardShopCard
// 0x0018 (0x02D0 - 0x02B8)
class UOrionCardShopCard final : public UOrionUserWidgetBase
{
public:
	uint8                                         Pad_2B8[0x8];                                      // 0x02B8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	bool                                          bShowCardCosts;                                    // 0x02C0(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_2C1[0x7];                                      // 0x02C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UOrionCardWidget*                       Card_Widget;                                       // 0x02C8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	EOrionItemRarity GetCardRarity();
	void OnCardSet(const class UOrionMcpCardItemDefinition* CardItem);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"OrionCardShopCard">();
	}
	static class UOrionCardShopCard* GetDefaultObj()
	{
		return GetDefaultObjImpl<UOrionCardShopCard>();
	}
};
static_assert(alignof(UOrionCardShopCard) == 0x000008, "Wrong alignment on UOrionCardShopCard");
static_assert(sizeof(UOrionCardShopCard) == 0x0002D0, "Wrong size on UOrionCardShopCard");
static_assert(offsetof(UOrionCardShopCard, bShowCardCosts) == 0x0002C0, "Member 'UOrionCardShopCard::bShowCardCosts' has a wrong offset!");
static_assert(offsetof(UOrionCardShopCard, Card_Widget) == 0x0002C8, "Member 'UOrionCardShopCard::Card_Widget' has a wrong offset!");

// Class OrionUI.OrionCardShopDeckButton
// 0x0040 (0x0A20 - 0x09E0)
class UOrionCardShopDeckButton final : public UOrionBaseButton
{
public:
	uint8                                         Pad_9E0[0x10];                                     // 0x09E0(0x0010)(Fixing Size After Last Property [ Dumper-7 ])
	class UOrionTextBlock*                        Text_Name;                                         // 0x09F0(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionTextBlock*                        Text_Affinity1;                                    // 0x09F8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionTextBlock*                        Text_Affinity2;                                    // 0x0A00(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionTextBlock*                        Text_Eyebrow;                                      // 0x0A08(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionTextBlock*                        Text_Caption;                                      // 0x0A10(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionUserWidgetBase*                   Icon_Warning;                                      // 0x0A18(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	void OnDeckSet(bool bIsCuratedDeck, EAffinityType Affinity0, EAffinityType Affinity1);
	void OnSetDistanceFromCenter(int32 OldValue, int32 NewValue);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"OrionCardShopDeckButton">();
	}
	static class UOrionCardShopDeckButton* GetDefaultObj()
	{
		return GetDefaultObjImpl<UOrionCardShopDeckButton>();
	}
};
static_assert(alignof(UOrionCardShopDeckButton) == 0x000008, "Wrong alignment on UOrionCardShopDeckButton");
static_assert(sizeof(UOrionCardShopDeckButton) == 0x000A20, "Wrong size on UOrionCardShopDeckButton");
static_assert(offsetof(UOrionCardShopDeckButton, Text_Name) == 0x0009F0, "Member 'UOrionCardShopDeckButton::Text_Name' has a wrong offset!");
static_assert(offsetof(UOrionCardShopDeckButton, Text_Affinity1) == 0x0009F8, "Member 'UOrionCardShopDeckButton::Text_Affinity1' has a wrong offset!");
static_assert(offsetof(UOrionCardShopDeckButton, Text_Affinity2) == 0x000A00, "Member 'UOrionCardShopDeckButton::Text_Affinity2' has a wrong offset!");
static_assert(offsetof(UOrionCardShopDeckButton, Text_Eyebrow) == 0x000A08, "Member 'UOrionCardShopDeckButton::Text_Eyebrow' has a wrong offset!");
static_assert(offsetof(UOrionCardShopDeckButton, Text_Caption) == 0x000A10, "Member 'UOrionCardShopDeckButton::Text_Caption' has a wrong offset!");
static_assert(offsetof(UOrionCardShopDeckButton, Icon_Warning) == 0x000A18, "Member 'UOrionCardShopDeckButton::Icon_Warning' has a wrong offset!");

// Class OrionUI.OrionPostGameTab_Mastery
// 0x0048 (0x0580 - 0x0538)
class UOrionPostGameTab_Mastery final : public UOrionPostGameTab
{
public:
	uint8                                         Pad_538[0x8];                                      // 0x0538(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	TSubclassOf<class UOrionHeroDetailsMasteryRankPurchaseModal> RankPurchaseModalClass;                            // 0x0540(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_548[0x8];                                      // 0x0548(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	class UOrionItemizedCounter*                  Counter_XP;                                        // 0x0550(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionLevelProgressDisplay*             Progress_Level;                                    // 0x0558(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionMasteryRankDisplay*               Progress_Rank;                                     // 0x0560(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionHeroDetailsMasteryRewardTimeline* Mastery_Timeline;                                  // 0x0568(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionDefaultButton*                    Button_UnlockRank;                                 // 0x0570(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionTextBlock*                        Text_XPRequired;                                   // 0x0578(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	void HandleUnlockWidgetClose();
	void OnHideMasteryUnlockButton();
	void OnHideXpToLevelText();
	void OnShowMasteryLockedText();
	void OnShowMasteryUnlockButton();
	void OnShowNextRankedLockedText();
	void OnShowXpToLevelText();
	void UnlockButtonClicked();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"OrionPostGameTab_Mastery">();
	}
	static class UOrionPostGameTab_Mastery* GetDefaultObj()
	{
		return GetDefaultObjImpl<UOrionPostGameTab_Mastery>();
	}
};
static_assert(alignof(UOrionPostGameTab_Mastery) == 0x000008, "Wrong alignment on UOrionPostGameTab_Mastery");
static_assert(sizeof(UOrionPostGameTab_Mastery) == 0x000580, "Wrong size on UOrionPostGameTab_Mastery");
static_assert(offsetof(UOrionPostGameTab_Mastery, RankPurchaseModalClass) == 0x000540, "Member 'UOrionPostGameTab_Mastery::RankPurchaseModalClass' has a wrong offset!");
static_assert(offsetof(UOrionPostGameTab_Mastery, Counter_XP) == 0x000550, "Member 'UOrionPostGameTab_Mastery::Counter_XP' has a wrong offset!");
static_assert(offsetof(UOrionPostGameTab_Mastery, Progress_Level) == 0x000558, "Member 'UOrionPostGameTab_Mastery::Progress_Level' has a wrong offset!");
static_assert(offsetof(UOrionPostGameTab_Mastery, Progress_Rank) == 0x000560, "Member 'UOrionPostGameTab_Mastery::Progress_Rank' has a wrong offset!");
static_assert(offsetof(UOrionPostGameTab_Mastery, Mastery_Timeline) == 0x000568, "Member 'UOrionPostGameTab_Mastery::Mastery_Timeline' has a wrong offset!");
static_assert(offsetof(UOrionPostGameTab_Mastery, Button_UnlockRank) == 0x000570, "Member 'UOrionPostGameTab_Mastery::Button_UnlockRank' has a wrong offset!");
static_assert(offsetof(UOrionPostGameTab_Mastery, Text_XPRequired) == 0x000578, "Member 'UOrionPostGameTab_Mastery::Text_XPRequired' has a wrong offset!");

// Class OrionUI.OrionCardShopEquipSlot
// 0x0240 (0x0C20 - 0x09E0)
class UOrionCardShopEquipSlot final : public UOrionBaseButton
{
public:
	EEquipSlotIndex                               SlotIndex;                                         // 0x09E0(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9E1[0x7];                                      // 0x09E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   AssociatedActionName;                              // 0x09E8(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9F0[0x90];                                     // 0x09F0(0x0090)(Fixing Size After Last Property [ Dumper-7 ])
	class UOrionBaseButton_Group*                 AssociatedButtonGroup;                             // 0x0A80(0x0008)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_A88[0x10];                                     // 0x0A88(0x0010)(Fixing Size After Last Property [ Dumper-7 ])
	TSubclassOf<class UOrionCardShopToast>        EquippingToastWidgetClass;                         // 0x0A98(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSubclassOf<class UOrionCardShopToast>        UnequippingToastWidgetClass;                       // 0x0AA0(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_AA8[0x110];                                    // 0x0AA8(0x0110)(Fixing Size After Last Property [ Dumper-7 ])
	class UOrionCardShopCard*                     Card_Widget;                                       // 0x0BB8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionCardShopCard*                     Card_GhostCard;                                    // 0x0BC0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionInputVisualizer*                  InputVisualizer_BoundTo;                           // 0x0BC8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UBorder*                                Border_UnequipInfo;                                // 0x0BD0(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionTextBlock*                        Text_AttackPoints;                                 // 0x0BD8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionTextBlock*                        Text_HealthPoints;                                 // 0x0BE0(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionTextBlock*                        Text_EnergyPoints;                                 // 0x0BE8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UHorizontalBox*                         HorizontalBox_AttackPoints;                        // 0x0BF0(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UHorizontalBox*                         HorizontalBox_HealthPoints;                        // 0x0BF8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UHorizontalBox*                         HorizontalBox_EnergyPoints;                        // 0x0C00(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOverlay*                               Overlay_EquipToasts;                               // 0x0C08(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOverlay*                               Overlay_UnequipToasts;                             // 0x0C10(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_C18[0x8];                                      // 0x0C18(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	bool CanEquipCardIntoSlot(class UOrionHandEntry* EquippingCard);
	void OnCardDiscarded();
	void OnCardSet(const class UOrionMcpCardItemDefinition* CardItem);
	void OnEquipSlotHovered();
	void OnEquipSlotUnhovered();
	void OnGhostCardVisibilityChanged(bool bIsVisible);
	void OnGlowColorChanged(bool bIsFromEquipSlot);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"OrionCardShopEquipSlot">();
	}
	static class UOrionCardShopEquipSlot* GetDefaultObj()
	{
		return GetDefaultObjImpl<UOrionCardShopEquipSlot>();
	}
};
static_assert(alignof(UOrionCardShopEquipSlot) == 0x000008, "Wrong alignment on UOrionCardShopEquipSlot");
static_assert(sizeof(UOrionCardShopEquipSlot) == 0x000C20, "Wrong size on UOrionCardShopEquipSlot");
static_assert(offsetof(UOrionCardShopEquipSlot, SlotIndex) == 0x0009E0, "Member 'UOrionCardShopEquipSlot::SlotIndex' has a wrong offset!");
static_assert(offsetof(UOrionCardShopEquipSlot, AssociatedActionName) == 0x0009E8, "Member 'UOrionCardShopEquipSlot::AssociatedActionName' has a wrong offset!");
static_assert(offsetof(UOrionCardShopEquipSlot, AssociatedButtonGroup) == 0x000A80, "Member 'UOrionCardShopEquipSlot::AssociatedButtonGroup' has a wrong offset!");
static_assert(offsetof(UOrionCardShopEquipSlot, EquippingToastWidgetClass) == 0x000A98, "Member 'UOrionCardShopEquipSlot::EquippingToastWidgetClass' has a wrong offset!");
static_assert(offsetof(UOrionCardShopEquipSlot, UnequippingToastWidgetClass) == 0x000AA0, "Member 'UOrionCardShopEquipSlot::UnequippingToastWidgetClass' has a wrong offset!");
static_assert(offsetof(UOrionCardShopEquipSlot, Card_Widget) == 0x000BB8, "Member 'UOrionCardShopEquipSlot::Card_Widget' has a wrong offset!");
static_assert(offsetof(UOrionCardShopEquipSlot, Card_GhostCard) == 0x000BC0, "Member 'UOrionCardShopEquipSlot::Card_GhostCard' has a wrong offset!");
static_assert(offsetof(UOrionCardShopEquipSlot, InputVisualizer_BoundTo) == 0x000BC8, "Member 'UOrionCardShopEquipSlot::InputVisualizer_BoundTo' has a wrong offset!");
static_assert(offsetof(UOrionCardShopEquipSlot, Border_UnequipInfo) == 0x000BD0, "Member 'UOrionCardShopEquipSlot::Border_UnequipInfo' has a wrong offset!");
static_assert(offsetof(UOrionCardShopEquipSlot, Text_AttackPoints) == 0x000BD8, "Member 'UOrionCardShopEquipSlot::Text_AttackPoints' has a wrong offset!");
static_assert(offsetof(UOrionCardShopEquipSlot, Text_HealthPoints) == 0x000BE0, "Member 'UOrionCardShopEquipSlot::Text_HealthPoints' has a wrong offset!");
static_assert(offsetof(UOrionCardShopEquipSlot, Text_EnergyPoints) == 0x000BE8, "Member 'UOrionCardShopEquipSlot::Text_EnergyPoints' has a wrong offset!");
static_assert(offsetof(UOrionCardShopEquipSlot, HorizontalBox_AttackPoints) == 0x000BF0, "Member 'UOrionCardShopEquipSlot::HorizontalBox_AttackPoints' has a wrong offset!");
static_assert(offsetof(UOrionCardShopEquipSlot, HorizontalBox_HealthPoints) == 0x000BF8, "Member 'UOrionCardShopEquipSlot::HorizontalBox_HealthPoints' has a wrong offset!");
static_assert(offsetof(UOrionCardShopEquipSlot, HorizontalBox_EnergyPoints) == 0x000C00, "Member 'UOrionCardShopEquipSlot::HorizontalBox_EnergyPoints' has a wrong offset!");
static_assert(offsetof(UOrionCardShopEquipSlot, Overlay_EquipToasts) == 0x000C08, "Member 'UOrionCardShopEquipSlot::Overlay_EquipToasts' has a wrong offset!");
static_assert(offsetof(UOrionCardShopEquipSlot, Overlay_UnequipToasts) == 0x000C10, "Member 'UOrionCardShopEquipSlot::Overlay_UnequipToasts' has a wrong offset!");

// Class OrionUI.OrionCardShopInfoPanel
// 0x0018 (0x02D0 - 0x02B8)
class UOrionCardShopInfoPanel final : public UOrionUserWidgetBase
{
public:
	class UOrionLazyImage*                        LazyImage_CardArt;                                 // 0x02B8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionDynamicEntryBox*                  EntryBox_CardCost;                                 // 0x02C0(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionCardSummaryWidget*                CardSummary_Info;                                  // 0x02C8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	void OnCardSet(bool bIsPurchasable, bool bIsAffordable);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"OrionCardShopInfoPanel">();
	}
	static class UOrionCardShopInfoPanel* GetDefaultObj()
	{
		return GetDefaultObjImpl<UOrionCardShopInfoPanel>();
	}
};
static_assert(alignof(UOrionCardShopInfoPanel) == 0x000008, "Wrong alignment on UOrionCardShopInfoPanel");
static_assert(sizeof(UOrionCardShopInfoPanel) == 0x0002D0, "Wrong size on UOrionCardShopInfoPanel");
static_assert(offsetof(UOrionCardShopInfoPanel, LazyImage_CardArt) == 0x0002B8, "Member 'UOrionCardShopInfoPanel::LazyImage_CardArt' has a wrong offset!");
static_assert(offsetof(UOrionCardShopInfoPanel, EntryBox_CardCost) == 0x0002C0, "Member 'UOrionCardShopInfoPanel::EntryBox_CardCost' has a wrong offset!");
static_assert(offsetof(UOrionCardShopInfoPanel, CardSummary_Info) == 0x0002C8, "Member 'UOrionCardShopInfoPanel::CardSummary_Info' has a wrong offset!");

// Class OrionUI.OrionCardShopToast
// 0x0088 (0x0340 - 0x02B8)
class UOrionCardShopToast final : public UOrionUserWidgetBase
{
public:
	class FText                                   StatFormatText;                                    // 0x02B8(0x0018)(Edit, NativeAccessSpecifierPublic)
	class FText                                   AbilityFormatText;                                 // 0x02D0(0x0018)(Edit, NativeAccessSpecifierPublic)
	uint8                                         Pad_2E8[0x48];                                     // 0x02E8(0x0048)(Fixing Size After Last Property [ Dumper-7 ])
	class UVerticalBox*                           VerticalBox_TextRows;                              // 0x0330(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_338[0x8];                                      // 0x0338(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void OnToastVisualsBegin();
	void OnToastVisualsCompleted();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"OrionCardShopToast">();
	}
	static class UOrionCardShopToast* GetDefaultObj()
	{
		return GetDefaultObjImpl<UOrionCardShopToast>();
	}
};
static_assert(alignof(UOrionCardShopToast) == 0x000008, "Wrong alignment on UOrionCardShopToast");
static_assert(sizeof(UOrionCardShopToast) == 0x000340, "Wrong size on UOrionCardShopToast");
static_assert(offsetof(UOrionCardShopToast, StatFormatText) == 0x0002B8, "Member 'UOrionCardShopToast::StatFormatText' has a wrong offset!");
static_assert(offsetof(UOrionCardShopToast, AbilityFormatText) == 0x0002D0, "Member 'UOrionCardShopToast::AbilityFormatText' has a wrong offset!");
static_assert(offsetof(UOrionCardShopToast, VerticalBox_TextRows) == 0x000330, "Member 'UOrionCardShopToast::VerticalBox_TextRows' has a wrong offset!");

// Class OrionUI.OrionGameplayItemSummaryWidgetBase
// 0x0020 (0x02D8 - 0x02B8)
#pragma pack(push, 0x1)
class alignas(0x08) UOrionGameplayItemSummaryWidgetBase : public UOrionUserWidgetBase
{
public:
	class UOrionTextBlock*                        Text_ItemName;                                     // 0x02B8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionTextBlock*                        Text_Rarity;                                       // 0x02C0(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionDynamicEntryBox*                  EntryBox_Stats;                                    // 0x02C8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionDynamicEntryBox*                  EntryBox_Abilities;                                // 0x02D0(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"OrionGameplayItemSummaryWidgetBase">();
	}
	static class UOrionGameplayItemSummaryWidgetBase* GetDefaultObj()
	{
		return GetDefaultObjImpl<UOrionGameplayItemSummaryWidgetBase>();
	}
};
#pragma pack(pop)
static_assert(alignof(UOrionGameplayItemSummaryWidgetBase) == 0x000008, "Wrong alignment on UOrionGameplayItemSummaryWidgetBase");
static_assert(sizeof(UOrionGameplayItemSummaryWidgetBase) == 0x0002D8, "Wrong size on UOrionGameplayItemSummaryWidgetBase");
static_assert(offsetof(UOrionGameplayItemSummaryWidgetBase, Text_ItemName) == 0x0002B8, "Member 'UOrionGameplayItemSummaryWidgetBase::Text_ItemName' has a wrong offset!");
static_assert(offsetof(UOrionGameplayItemSummaryWidgetBase, Text_Rarity) == 0x0002C0, "Member 'UOrionGameplayItemSummaryWidgetBase::Text_Rarity' has a wrong offset!");
static_assert(offsetof(UOrionGameplayItemSummaryWidgetBase, EntryBox_Stats) == 0x0002C8, "Member 'UOrionGameplayItemSummaryWidgetBase::EntryBox_Stats' has a wrong offset!");
static_assert(offsetof(UOrionGameplayItemSummaryWidgetBase, EntryBox_Abilities) == 0x0002D0, "Member 'UOrionGameplayItemSummaryWidgetBase::EntryBox_Abilities' has a wrong offset!");

// Class OrionUI.OrionMatchSummaryMastery
// 0x0068 (0x0320 - 0x02B8)
class UOrionMatchSummaryMastery final : public UOrionUserWidgetBase
{
public:
	uint8                                         Pad_2B8[0x48];                                     // 0x02B8(0x0048)(Fixing Size After Last Property [ Dumper-7 ])
	class UOrionMasteryRankDisplay*               Progress_Rank;                                     // 0x0300(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionHeroDetailsMasteryLevelDisplay*   Progress_Level;                                    // 0x0308(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionTextBlock*                        Text_HeroName;                                     // 0x0310(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_318[0x8];                                      // 0x0318(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void OnDestroyXP();
	void OnXPSimulated(bool bIsSimulated);
	void ShowActualXP();
	void XPDestroyed();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"OrionMatchSummaryMastery">();
	}
	static class UOrionMatchSummaryMastery* GetDefaultObj()
	{
		return GetDefaultObjImpl<UOrionMatchSummaryMastery>();
	}
};
static_assert(alignof(UOrionMatchSummaryMastery) == 0x000008, "Wrong alignment on UOrionMatchSummaryMastery");
static_assert(sizeof(UOrionMatchSummaryMastery) == 0x000320, "Wrong size on UOrionMatchSummaryMastery");
static_assert(offsetof(UOrionMatchSummaryMastery, Progress_Rank) == 0x000300, "Member 'UOrionMatchSummaryMastery::Progress_Rank' has a wrong offset!");
static_assert(offsetof(UOrionMatchSummaryMastery, Progress_Level) == 0x000308, "Member 'UOrionMatchSummaryMastery::Progress_Level' has a wrong offset!");
static_assert(offsetof(UOrionMatchSummaryMastery, Text_HeroName) == 0x000310, "Member 'UOrionMatchSummaryMastery::Text_HeroName' has a wrong offset!");

// Class OrionUI.OrionCardSummaryWidget
// 0x0058 (0x0330 - 0x02D8)
class UOrionCardSummaryWidget final : public UOrionGameplayItemSummaryWidgetBase
{
public:
	uint8                                         Pad_2D8[0x8];                                      // 0x02D8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	class UOrionLazyImage*                        LazyImage_CardArt;                                 // 0x02E0(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionTextBlock*                        Text_Affinity;                                     // 0x02E8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionCardProgressBar*                  ProgressBar_Card;                                  // 0x02F0(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionTextBlock*                        Text_Level;                                        // 0x02F8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionTextBlock*                        Text_Order;                                        // 0x0300(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionTextBlock*                        Text_GoldCost;                                     // 0x0308(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionTextBlock*                        Text_YellowCost;                                   // 0x0310(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionTextBlock*                        Text_RedCost;                                      // 0x0318(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionTextBlock*                        Text_BlueCost;                                     // 0x0320(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_328[0x8];                                      // 0x0328(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void OnCardDataSet(bool bHasGoldCost, bool bHasAttackCost, bool bHasHealthCost, bool bHasEnergyCost);
	void OnRefreshPreviewLevelInfo();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"OrionCardSummaryWidget">();
	}
	static class UOrionCardSummaryWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UOrionCardSummaryWidget>();
	}
};
static_assert(alignof(UOrionCardSummaryWidget) == 0x000008, "Wrong alignment on UOrionCardSummaryWidget");
static_assert(sizeof(UOrionCardSummaryWidget) == 0x000330, "Wrong size on UOrionCardSummaryWidget");
static_assert(offsetof(UOrionCardSummaryWidget, LazyImage_CardArt) == 0x0002E0, "Member 'UOrionCardSummaryWidget::LazyImage_CardArt' has a wrong offset!");
static_assert(offsetof(UOrionCardSummaryWidget, Text_Affinity) == 0x0002E8, "Member 'UOrionCardSummaryWidget::Text_Affinity' has a wrong offset!");
static_assert(offsetof(UOrionCardSummaryWidget, ProgressBar_Card) == 0x0002F0, "Member 'UOrionCardSummaryWidget::ProgressBar_Card' has a wrong offset!");
static_assert(offsetof(UOrionCardSummaryWidget, Text_Level) == 0x0002F8, "Member 'UOrionCardSummaryWidget::Text_Level' has a wrong offset!");
static_assert(offsetof(UOrionCardSummaryWidget, Text_Order) == 0x000300, "Member 'UOrionCardSummaryWidget::Text_Order' has a wrong offset!");
static_assert(offsetof(UOrionCardSummaryWidget, Text_GoldCost) == 0x000308, "Member 'UOrionCardSummaryWidget::Text_GoldCost' has a wrong offset!");
static_assert(offsetof(UOrionCardSummaryWidget, Text_YellowCost) == 0x000310, "Member 'UOrionCardSummaryWidget::Text_YellowCost' has a wrong offset!");
static_assert(offsetof(UOrionCardSummaryWidget, Text_RedCost) == 0x000318, "Member 'UOrionCardSummaryWidget::Text_RedCost' has a wrong offset!");
static_assert(offsetof(UOrionCardSummaryWidget, Text_BlueCost) == 0x000320, "Member 'UOrionCardSummaryWidget::Text_BlueCost' has a wrong offset!");

// Class OrionUI.OrionCardTooltip
// 0x0010 (0x0340 - 0x0330)
class UOrionCardTooltip final : public UOrionTooltipBase
{
public:
	class UOrionCardSummaryWidget*                CardSummary_Info;                                  // 0x0330(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_338[0x8];                                      // 0x0338(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"OrionCardTooltip">();
	}
	static class UOrionCardTooltip* GetDefaultObj()
	{
		return GetDefaultObjImpl<UOrionCardTooltip>();
	}
};
static_assert(alignof(UOrionCardTooltip) == 0x000008, "Wrong alignment on UOrionCardTooltip");
static_assert(sizeof(UOrionCardTooltip) == 0x000340, "Wrong size on UOrionCardTooltip");
static_assert(offsetof(UOrionCardTooltip, CardSummary_Info) == 0x000330, "Member 'UOrionCardTooltip::CardSummary_Info' has a wrong offset!");

// Class OrionUI.OrionCardWidget
// 0x0028 (0x0120 - 0x00F8)
class UOrionCardWidget final : public UWidget
{
public:
	float                                         CardScale;                                         // 0x00F8(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                          bShowCardCosts;                                    // 0x00FC(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                          bShowLevelTierFlare;                               // 0x00FD(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                          bDimCardContent;                                   // 0x00FE(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                          bUseRetainer;                                      // 0x00FF(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_100[0x20];                                     // 0x0100(0x0020)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"OrionCardWidget">();
	}
	static class UOrionCardWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UOrionCardWidget>();
	}
};
static_assert(alignof(UOrionCardWidget) == 0x000008, "Wrong alignment on UOrionCardWidget");
static_assert(sizeof(UOrionCardWidget) == 0x000120, "Wrong size on UOrionCardWidget");
static_assert(offsetof(UOrionCardWidget, CardScale) == 0x0000F8, "Member 'UOrionCardWidget::CardScale' has a wrong offset!");
static_assert(offsetof(UOrionCardWidget, bShowCardCosts) == 0x0000FC, "Member 'UOrionCardWidget::bShowCardCosts' has a wrong offset!");
static_assert(offsetof(UOrionCardWidget, bShowLevelTierFlare) == 0x0000FD, "Member 'UOrionCardWidget::bShowLevelTierFlare' has a wrong offset!");
static_assert(offsetof(UOrionCardWidget, bDimCardContent) == 0x0000FE, "Member 'UOrionCardWidget::bDimCardContent' has a wrong offset!");
static_assert(offsetof(UOrionCardWidget, bUseRetainer) == 0x0000FF, "Member 'UOrionCardWidget::bUseRetainer' has a wrong offset!");

// Class OrionUI.OrionCharacterModelOffer
// 0x0058 (0x0BF0 - 0x0B98)
class UOrionCharacterModelOffer final : public UOrionBaseTile
{
public:
	uint8                                         Pad_B98[0x28];                                     // 0x0B98(0x0028)(Fixing Size After Last Property [ Dumper-7 ])
	class UVerticalBox*                           VBox_PriceInfo;                                    // 0x0BC0(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionDefaultButton*                    Button_Purchase;                                   // 0x0BC8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOverlay*                               Panel_BasePriceInfo;                               // 0x0BD0(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionRichText*                         RichText_BasePrice;                                // 0x0BD8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionRichText*                         RichText_Price;                                    // 0x0BE0(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class USaleBannerBase*                        SaleBanner;                                        // 0x0BE8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"OrionCharacterModelOffer">();
	}
	static class UOrionCharacterModelOffer* GetDefaultObj()
	{
		return GetDefaultObjImpl<UOrionCharacterModelOffer>();
	}
};
static_assert(alignof(UOrionCharacterModelOffer) == 0x000008, "Wrong alignment on UOrionCharacterModelOffer");
static_assert(sizeof(UOrionCharacterModelOffer) == 0x000BF0, "Wrong size on UOrionCharacterModelOffer");
static_assert(offsetof(UOrionCharacterModelOffer, VBox_PriceInfo) == 0x000BC0, "Member 'UOrionCharacterModelOffer::VBox_PriceInfo' has a wrong offset!");
static_assert(offsetof(UOrionCharacterModelOffer, Button_Purchase) == 0x000BC8, "Member 'UOrionCharacterModelOffer::Button_Purchase' has a wrong offset!");
static_assert(offsetof(UOrionCharacterModelOffer, Panel_BasePriceInfo) == 0x000BD0, "Member 'UOrionCharacterModelOffer::Panel_BasePriceInfo' has a wrong offset!");
static_assert(offsetof(UOrionCharacterModelOffer, RichText_BasePrice) == 0x000BD8, "Member 'UOrionCharacterModelOffer::RichText_BasePrice' has a wrong offset!");
static_assert(offsetof(UOrionCharacterModelOffer, RichText_Price) == 0x000BE0, "Member 'UOrionCharacterModelOffer::RichText_Price' has a wrong offset!");
static_assert(offsetof(UOrionCharacterModelOffer, SaleBanner) == 0x000BE8, "Member 'UOrionCharacterModelOffer::SaleBanner' has a wrong offset!");

// Class OrionUI.OrionChestSelectionChestItem
// 0x0030 (0x0A10 - 0x09E0)
class UOrionChestSelectionChestItem final : public UOrionBaseButton
{
public:
	uint8                                         Pad_9E0[0x10];                                     // 0x09E0(0x0010)(Fixing Size After Last Property [ Dumper-7 ])
	class UOrionTextBlock*                        Text_Name;                                         // 0x09F0(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionTextBlock*                        Text_Quantity;                                     // 0x09F8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionRewardWidget*                     Reward_Widget;                                     // 0x0A00(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_A08[0x8];                                      // 0x0A08(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void OnSetActive(bool bActive, bool bInstant);
	void OnSetDistanceFromCenter(int32 OldValue, int32 NewValue, bool bInstant);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"OrionChestSelectionChestItem">();
	}
	static class UOrionChestSelectionChestItem* GetDefaultObj()
	{
		return GetDefaultObjImpl<UOrionChestSelectionChestItem>();
	}
};
static_assert(alignof(UOrionChestSelectionChestItem) == 0x000008, "Wrong alignment on UOrionChestSelectionChestItem");
static_assert(sizeof(UOrionChestSelectionChestItem) == 0x000A10, "Wrong size on UOrionChestSelectionChestItem");
static_assert(offsetof(UOrionChestSelectionChestItem, Text_Name) == 0x0009F0, "Member 'UOrionChestSelectionChestItem::Text_Name' has a wrong offset!");
static_assert(offsetof(UOrionChestSelectionChestItem, Text_Quantity) == 0x0009F8, "Member 'UOrionChestSelectionChestItem::Text_Quantity' has a wrong offset!");
static_assert(offsetof(UOrionChestSelectionChestItem, Reward_Widget) == 0x000A00, "Member 'UOrionChestSelectionChestItem::Reward_Widget' has a wrong offset!");

// Class OrionUI.OrionWindowControls
// 0x0038 (0x02F0 - 0x02B8)
class UOrionWindowControls final : public UOrionUserWidgetBase
{
public:
	uint8                                         Pad_2B8[0x18];                                     // 0x02B8(0x0018)(Fixing Size After Last Property [ Dumper-7 ])
	class UOrionBaseButton*                       Button_Minimize;                                   // 0x02D0(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionBaseButton*                       Button_Restore;                                    // 0x02D8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionBaseButton*                       Button_Maximize;                                   // 0x02E0(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionBaseButton*                       Button_Close;                                      // 0x02E8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"OrionWindowControls">();
	}
	static class UOrionWindowControls* GetDefaultObj()
	{
		return GetDefaultObjImpl<UOrionWindowControls>();
	}
};
static_assert(alignof(UOrionWindowControls) == 0x000008, "Wrong alignment on UOrionWindowControls");
static_assert(sizeof(UOrionWindowControls) == 0x0002F0, "Wrong size on UOrionWindowControls");
static_assert(offsetof(UOrionWindowControls, Button_Minimize) == 0x0002D0, "Member 'UOrionWindowControls::Button_Minimize' has a wrong offset!");
static_assert(offsetof(UOrionWindowControls, Button_Restore) == 0x0002D8, "Member 'UOrionWindowControls::Button_Restore' has a wrong offset!");
static_assert(offsetof(UOrionWindowControls, Button_Maximize) == 0x0002E0, "Member 'UOrionWindowControls::Button_Maximize' has a wrong offset!");
static_assert(offsetof(UOrionWindowControls, Button_Close) == 0x0002E8, "Member 'UOrionWindowControls::Button_Close' has a wrong offset!");

// Class OrionUI.OrionChestSelectionScreen
// 0x0048 (0x0490 - 0x0448)
class UOrionChestSelectionScreen final : public UOrionActivatableWidget
{
public:
	int32                                         ChestItemWidth;                                    // 0x0448(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         TranslationTime;                                   // 0x044C(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_450[0x20];                                     // 0x0450(0x0020)(Fixing Size After Last Property [ Dumper-7 ])
	class UOrionDynamicEntryBox*                  EntryBox_Chests;                                   // 0x0470(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionDefaultButton*                    Button_Open;                                       // 0x0478(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionDefaultButton*                    Button_Next;                                       // 0x0480(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionDefaultButton*                    Button_Previous;                                   // 0x0488(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	void OnChestsPopulated(int32 NumChests);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"OrionChestSelectionScreen">();
	}
	static class UOrionChestSelectionScreen* GetDefaultObj()
	{
		return GetDefaultObjImpl<UOrionChestSelectionScreen>();
	}
};
static_assert(alignof(UOrionChestSelectionScreen) == 0x000008, "Wrong alignment on UOrionChestSelectionScreen");
static_assert(sizeof(UOrionChestSelectionScreen) == 0x000490, "Wrong size on UOrionChestSelectionScreen");
static_assert(offsetof(UOrionChestSelectionScreen, ChestItemWidth) == 0x000448, "Member 'UOrionChestSelectionScreen::ChestItemWidth' has a wrong offset!");
static_assert(offsetof(UOrionChestSelectionScreen, TranslationTime) == 0x00044C, "Member 'UOrionChestSelectionScreen::TranslationTime' has a wrong offset!");
static_assert(offsetof(UOrionChestSelectionScreen, EntryBox_Chests) == 0x000470, "Member 'UOrionChestSelectionScreen::EntryBox_Chests' has a wrong offset!");
static_assert(offsetof(UOrionChestSelectionScreen, Button_Open) == 0x000478, "Member 'UOrionChestSelectionScreen::Button_Open' has a wrong offset!");
static_assert(offsetof(UOrionChestSelectionScreen, Button_Next) == 0x000480, "Member 'UOrionChestSelectionScreen::Button_Next' has a wrong offset!");
static_assert(offsetof(UOrionChestSelectionScreen, Button_Previous) == 0x000488, "Member 'UOrionChestSelectionScreen::Button_Previous' has a wrong offset!");

// Class OrionUI.OrionCliplessContainer
// 0x0010 (0x0120 - 0x0110)
class UOrionCliplessContainer final : public UContentWidget
{
public:
	uint8                                         Pad_110[0x10];                                     // 0x0110(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"OrionCliplessContainer">();
	}
	static class UOrionCliplessContainer* GetDefaultObj()
	{
		return GetDefaultObjImpl<UOrionCliplessContainer>();
	}
};
static_assert(alignof(UOrionCliplessContainer) == 0x000008, "Wrong alignment on UOrionCliplessContainer");
static_assert(sizeof(UOrionCliplessContainer) == 0x000120, "Wrong size on UOrionCliplessContainer");

// Class OrionUI.OrionCMSDisplayWidget
// 0x00D8 (0x0390 - 0x02B8)
class UOrionCMSDisplayWidget final : public UOrionUserWidgetBase
{
public:
	TSoftClassPtr<class UClass>                   TileClass;                                         // 0x02B8(0x0028)(Edit, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSoftClassPtr<class UClass>                   LayoutErrorClass;                                  // 0x02E0(0x0028)(Edit, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<TSoftClassPtr<class UClass>>           LayoutClasses;                                     // 0x0308(0x0010)(Edit, ZeroConstructor, Protected, UObjectWrapper, NativeAccessSpecifierProtected)
	class FString                                 JsonTileCategory;                                  // 0x0318(0x0010)(Edit, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                   AnalyticsEvent;                                    // 0x0328(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bHomeScreen;                                       // 0x0330(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_331[0xF];                                      // 0x0331(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	class USizeBox*                               Box_Display;                                       // 0x0340(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_348[0x48];                                     // 0x0348(0x0048)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void RefreshTilesWithNoForceRefresh();
	void SetOnScreen(bool InOnScreen);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"OrionCMSDisplayWidget">();
	}
	static class UOrionCMSDisplayWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UOrionCMSDisplayWidget>();
	}
};
static_assert(alignof(UOrionCMSDisplayWidget) == 0x000008, "Wrong alignment on UOrionCMSDisplayWidget");
static_assert(sizeof(UOrionCMSDisplayWidget) == 0x000390, "Wrong size on UOrionCMSDisplayWidget");
static_assert(offsetof(UOrionCMSDisplayWidget, TileClass) == 0x0002B8, "Member 'UOrionCMSDisplayWidget::TileClass' has a wrong offset!");
static_assert(offsetof(UOrionCMSDisplayWidget, LayoutErrorClass) == 0x0002E0, "Member 'UOrionCMSDisplayWidget::LayoutErrorClass' has a wrong offset!");
static_assert(offsetof(UOrionCMSDisplayWidget, LayoutClasses) == 0x000308, "Member 'UOrionCMSDisplayWidget::LayoutClasses' has a wrong offset!");
static_assert(offsetof(UOrionCMSDisplayWidget, JsonTileCategory) == 0x000318, "Member 'UOrionCMSDisplayWidget::JsonTileCategory' has a wrong offset!");
static_assert(offsetof(UOrionCMSDisplayWidget, AnalyticsEvent) == 0x000328, "Member 'UOrionCMSDisplayWidget::AnalyticsEvent' has a wrong offset!");
static_assert(offsetof(UOrionCMSDisplayWidget, bHomeScreen) == 0x000330, "Member 'UOrionCMSDisplayWidget::bHomeScreen' has a wrong offset!");
static_assert(offsetof(UOrionCMSDisplayWidget, Box_Display) == 0x000340, "Member 'UOrionCMSDisplayWidget::Box_Display' has a wrong offset!");

// Class OrionUI.OrionCMSLayout
// 0x0098 (0x0350 - 0x02B8)
class UOrionCMSLayout final : public UOrionUserWidgetBase
{
public:
	TSubclassOf<class UOrionHomeTileCarousel>     CarouselClass;                                     // 0x02B8(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<struct FSlotDescription>               SlotDescriptions;                                  // 0x02C0(0x0010)(Edit, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	EOrionUIAnalyticsTrackingLevel                CMSTileImpressionTrackingLevel;                    // 0x02D0(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	EOrionUIAnalyticsTrackingLevel                ABTestingTrackingLevel;                            // 0x02D1(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          AllowMultiplePages;                                // 0x02D2(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_2D3[0x1];                                      // 0x02D3(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         InnerTileSpacing;                                  // 0x02D4(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_2D8[0x8];                                      // 0x02D8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	TSubclassOf<class UOrionCMSTile>              TileClass;                                         // 0x02E0(0x0008)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<class UOrionBaseTile*>                 ActiveTiles;                                       // 0x02E8(0x0010)(ExportObject, ZeroConstructor, Transient, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	uint8                                         Pad_2F8[0x58];                                     // 0x02F8(0x0058)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"OrionCMSLayout">();
	}
	static class UOrionCMSLayout* GetDefaultObj()
	{
		return GetDefaultObjImpl<UOrionCMSLayout>();
	}
};
static_assert(alignof(UOrionCMSLayout) == 0x000008, "Wrong alignment on UOrionCMSLayout");
static_assert(sizeof(UOrionCMSLayout) == 0x000350, "Wrong size on UOrionCMSLayout");
static_assert(offsetof(UOrionCMSLayout, CarouselClass) == 0x0002B8, "Member 'UOrionCMSLayout::CarouselClass' has a wrong offset!");
static_assert(offsetof(UOrionCMSLayout, SlotDescriptions) == 0x0002C0, "Member 'UOrionCMSLayout::SlotDescriptions' has a wrong offset!");
static_assert(offsetof(UOrionCMSLayout, CMSTileImpressionTrackingLevel) == 0x0002D0, "Member 'UOrionCMSLayout::CMSTileImpressionTrackingLevel' has a wrong offset!");
static_assert(offsetof(UOrionCMSLayout, ABTestingTrackingLevel) == 0x0002D1, "Member 'UOrionCMSLayout::ABTestingTrackingLevel' has a wrong offset!");
static_assert(offsetof(UOrionCMSLayout, AllowMultiplePages) == 0x0002D2, "Member 'UOrionCMSLayout::AllowMultiplePages' has a wrong offset!");
static_assert(offsetof(UOrionCMSLayout, InnerTileSpacing) == 0x0002D4, "Member 'UOrionCMSLayout::InnerTileSpacing' has a wrong offset!");
static_assert(offsetof(UOrionCMSLayout, TileClass) == 0x0002E0, "Member 'UOrionCMSLayout::TileClass' has a wrong offset!");
static_assert(offsetof(UOrionCMSLayout, ActiveTiles) == 0x0002E8, "Member 'UOrionCMSLayout::ActiveTiles' has a wrong offset!");

// Class OrionUI.PageViewItem
// 0x0000 (0x0028 - 0x0028)
class IPageViewItem final : public IInterface
{
public:
	void Initialize();
	void RegisterOnClicked(const TDelegate<void(class UUserWidget* Widget)>& Callback);
	void RegisterOnHover(const TDelegate<void(class UUserWidget* Widget, bool bIsHovered)>& Callback);
	void RegisterOnSelected(const TDelegate<void(class UUserWidget* Widget, bool Selected)>& Callback);
	void RegisterOnUnhover(const TDelegate<void(class UUserWidget* Widget, bool bIsHovered)>& Callback);
	void Reset();
	void SetData(class UObject* SourceData);
	void SetRowColumn(int32 Row, int32 Column);

	class UObject* GetData() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PageViewItem">();
	}
	static class IPageViewItem* GetDefaultObj()
	{
		return GetDefaultObjImpl<IPageViewItem>();
	}
};
static_assert(alignof(IPageViewItem) == 0x000008, "Wrong alignment on IPageViewItem");
static_assert(sizeof(IPageViewItem) == 0x000028, "Wrong size on IPageViewItem");

// Class OrionUI.OrionCMSPopup
// 0x0008 (0x0450 - 0x0448)
class UOrionCMSPopup final : public UOrionActivatableWidget
{
public:
	uint8                                         Pad_448[0x8];                                      // 0x0448(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void MarkCMSRevisionAsSeen();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"OrionCMSPopup">();
	}
	static class UOrionCMSPopup* GetDefaultObj()
	{
		return GetDefaultObjImpl<UOrionCMSPopup>();
	}
};
static_assert(alignof(UOrionCMSPopup) == 0x000008, "Wrong alignment on UOrionCMSPopup");
static_assert(sizeof(UOrionCMSPopup) == 0x000450, "Wrong size on UOrionCMSPopup");

// Class OrionUI.OrionCMSTile
// 0x0118 (0x0CB0 - 0x0B98)
class UOrionCMSTile final : public UOrionBaseTile
{
public:
	class UMaterialInterface*                     OverrideMaterial;                                  // 0x0B98(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UOrionTextStyle>            DefaultTitleTextStyle;                             // 0x0BA0(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class UOrionTextStyle>            FeaturedTitleTextStyle;                            // 0x0BA8(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FTileDefinition                        TileDefinition;                                    // 0x0BB0(0x00A8)(Transient, Protected, NativeAccessSpecifierProtected)
	uint8                                         Pad_C58[0x18];                                     // 0x0C58(0x0018)(Fixing Size After Last Property [ Dumper-7 ])
	EOrionUIAnalyticsTrackingLevel                LaunchedTrackingLevel;                             // 0x0C70(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_C71[0x17];                                     // 0x0C71(0x0017)(Fixing Size After Last Property [ Dumper-7 ])
	class UBorder*                                Border_EyebrowText;                                // 0x0C88(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UOrionTextBlock*                        EyebrowText;                                       // 0x0C90(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCountdownTimerBase*                    Countdown;                                         // 0x0C98(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOverlay*                               Overlay_LinkIcon;                                  // 0x0CA0(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class USaleBannerBase*                        SaleBanner;                                        // 0x0CA8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	void Launch();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"OrionCMSTile">();
	}
	static class UOrionCMSTile* GetDefaultObj()
	{
		return GetDefaultObjImpl<UOrionCMSTile>();
	}
};
static_assert(alignof(UOrionCMSTile) == 0x000008, "Wrong alignment on UOrionCMSTile");
static_assert(sizeof(UOrionCMSTile) == 0x000CB0, "Wrong size on UOrionCMSTile");
static_assert(offsetof(UOrionCMSTile, OverrideMaterial) == 0x000B98, "Member 'UOrionCMSTile::OverrideMaterial' has a wrong offset!");
static_assert(offsetof(UOrionCMSTile, DefaultTitleTextStyle) == 0x000BA0, "Member 'UOrionCMSTile::DefaultTitleTextStyle' has a wrong offset!");
static_assert(offsetof(UOrionCMSTile, FeaturedTitleTextStyle) == 0x000BA8, "Member 'UOrionCMSTile::FeaturedTitleTextStyle' has a wrong offset!");
static_assert(offsetof(UOrionCMSTile, TileDefinition) == 0x000BB0, "Member 'UOrionCMSTile::TileDefinition' has a wrong offset!");
static_assert(offsetof(UOrionCMSTile, LaunchedTrackingLevel) == 0x000C70, "Member 'UOrionCMSTile::LaunchedTrackingLevel' has a wrong offset!");
static_assert(offsetof(UOrionCMSTile, Border_EyebrowText) == 0x000C88, "Member 'UOrionCMSTile::Border_EyebrowText' has a wrong offset!");
static_assert(offsetof(UOrionCMSTile, EyebrowText) == 0x000C90, "Member 'UOrionCMSTile::EyebrowText' has a wrong offset!");
static_assert(offsetof(UOrionCMSTile, Countdown) == 0x000C98, "Member 'UOrionCMSTile::Countdown' has a wrong offset!");
static_assert(offsetof(UOrionCMSTile, Overlay_LinkIcon) == 0x000CA0, "Member 'UOrionCMSTile::Overlay_LinkIcon' has a wrong offset!");
static_assert(offsetof(UOrionCMSTile, SaleBanner) == 0x000CA8, "Member 'UOrionCMSTile::SaleBanner' has a wrong offset!");

// Class OrionUI.OrionCMSWidgetHost
// 0x0010 (0x0118 - 0x0108)
class UOrionCMSWidgetHost final : public UNativeWidgetHost
{
public:
	TArray<class UOrionCMSTile*>                  TileCollection;                                    // 0x0108(0x0010)(ExportObject, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"OrionCMSWidgetHost">();
	}
	static class UOrionCMSWidgetHost* GetDefaultObj()
	{
		return GetDefaultObjImpl<UOrionCMSWidgetHost>();
	}
};
static_assert(alignof(UOrionCMSWidgetHost) == 0x000008, "Wrong alignment on UOrionCMSWidgetHost");
static_assert(sizeof(UOrionCMSWidgetHost) == 0x000118, "Wrong size on UOrionCMSWidgetHost");
static_assert(offsetof(UOrionCMSWidgetHost, TileCollection) == 0x000108, "Member 'UOrionCMSWidgetHost::TileCollection' has a wrong offset!");

// Class OrionUI.OrionCollectionTab
// 0x00A8 (0x04F0 - 0x0448)
class UOrionCollectionTab final : public UOrionActivatableWidget
{
public:
	TArray<struct FCollectionTabData>             SubTabData;                                        // 0x0448(0x0010)(Edit, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	class FText                                   DecksDisabledNoTokenMsg;                           // 0x0458(0x0018)(Edit, Protected, NativeAccessSpecifierProtected)
	class FText                                   DecksDisabledNewMigrationMsg;                      // 0x0470(0x0018)(Edit, Protected, NativeAccessSpecifierProtected)
	class FText                                   CardsDisabledMsg;                                  // 0x0488(0x0018)(Edit, Protected, NativeAccessSpecifierProtected)
	class UOrionTabListWidget*                    TabList_SubMenus;                                  // 0x04A0(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionWidgetSwitcher*                   Switcher_TabContent;                               // 0x04A8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionHeroCollectionScreen*             Collection_Heroes;                                 // 0x04B0(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionLootCrateSelectionScreen*         Collection_LootCrates;                             // 0x04B8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionChestSelectionScreen*             Collection_Chests;                                 // 0x04C0(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionCardCollectionScreen*             Collection_Cards;                                  // 0x04C8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionGemCollectionScreen*              Collection_Gems;                                   // 0x04D0(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionDeckCollection*                   Collection_Decks;                                  // 0x04D8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionBannerInventory*                  Collection_Banners;                                // 0x04E0(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionBannerInventory*                  Banner_Thumbnail;                                  // 0x04E8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"OrionCollectionTab">();
	}
	static class UOrionCollectionTab* GetDefaultObj()
	{
		return GetDefaultObjImpl<UOrionCollectionTab>();
	}
};
static_assert(alignof(UOrionCollectionTab) == 0x000008, "Wrong alignment on UOrionCollectionTab");
static_assert(sizeof(UOrionCollectionTab) == 0x0004F0, "Wrong size on UOrionCollectionTab");
static_assert(offsetof(UOrionCollectionTab, SubTabData) == 0x000448, "Member 'UOrionCollectionTab::SubTabData' has a wrong offset!");
static_assert(offsetof(UOrionCollectionTab, DecksDisabledNoTokenMsg) == 0x000458, "Member 'UOrionCollectionTab::DecksDisabledNoTokenMsg' has a wrong offset!");
static_assert(offsetof(UOrionCollectionTab, DecksDisabledNewMigrationMsg) == 0x000470, "Member 'UOrionCollectionTab::DecksDisabledNewMigrationMsg' has a wrong offset!");
static_assert(offsetof(UOrionCollectionTab, CardsDisabledMsg) == 0x000488, "Member 'UOrionCollectionTab::CardsDisabledMsg' has a wrong offset!");
static_assert(offsetof(UOrionCollectionTab, TabList_SubMenus) == 0x0004A0, "Member 'UOrionCollectionTab::TabList_SubMenus' has a wrong offset!");
static_assert(offsetof(UOrionCollectionTab, Switcher_TabContent) == 0x0004A8, "Member 'UOrionCollectionTab::Switcher_TabContent' has a wrong offset!");
static_assert(offsetof(UOrionCollectionTab, Collection_Heroes) == 0x0004B0, "Member 'UOrionCollectionTab::Collection_Heroes' has a wrong offset!");
static_assert(offsetof(UOrionCollectionTab, Collection_LootCrates) == 0x0004B8, "Member 'UOrionCollectionTab::Collection_LootCrates' has a wrong offset!");
static_assert(offsetof(UOrionCollectionTab, Collection_Chests) == 0x0004C0, "Member 'UOrionCollectionTab::Collection_Chests' has a wrong offset!");
static_assert(offsetof(UOrionCollectionTab, Collection_Cards) == 0x0004C8, "Member 'UOrionCollectionTab::Collection_Cards' has a wrong offset!");
static_assert(offsetof(UOrionCollectionTab, Collection_Gems) == 0x0004D0, "Member 'UOrionCollectionTab::Collection_Gems' has a wrong offset!");
static_assert(offsetof(UOrionCollectionTab, Collection_Decks) == 0x0004D8, "Member 'UOrionCollectionTab::Collection_Decks' has a wrong offset!");
static_assert(offsetof(UOrionCollectionTab, Collection_Banners) == 0x0004E0, "Member 'UOrionCollectionTab::Collection_Banners' has a wrong offset!");
static_assert(offsetof(UOrionCollectionTab, Banner_Thumbnail) == 0x0004E8, "Member 'UOrionCollectionTab::Banner_Thumbnail' has a wrong offset!");

// Class OrionUI.PlayerActionWidget
// 0x0008 (0x02C0 - 0x02B8)
class UPlayerActionWidget final : public UOrionUserWidgetBase
{
public:
	uint8                                         Pad_2B8[0x8];                                      // 0x02B8(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void SetSlotIndex(int32 SlotIndex);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PlayerActionWidget">();
	}
	static class UPlayerActionWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPlayerActionWidget>();
	}
};
static_assert(alignof(UPlayerActionWidget) == 0x000008, "Wrong alignment on UPlayerActionWidget");
static_assert(sizeof(UPlayerActionWidget) == 0x0002C0, "Wrong size on UPlayerActionWidget");

// Class OrionUI.OrionCombatMessageManagerWidget
// 0x0020 (0x0310 - 0x02F0)
class UOrionCombatMessageManagerWidget final : public UOrionHUDWidgetBase
{
public:
	TArray<class UOrionCombatMessageWidget*>      CombatMessageWidgets;                              // 0x02F0(0x0010)(ExportObject, ZeroConstructor, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	class UOrionCombatMessageWidget*              TransientCombatMessage;                            // 0x0300(0x0008)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UOrionCombatMessageWidget*              QueuedTransientMessage;                            // 0x0308(0x0008)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	void AddCombatMessageWidget(class UOrionCombatMessageWidget* CombatMessageWidget);
	void OnBuffInfoAdded(const struct FOrionJungleBuffInfo& BuffInfo);
	void OnBuffInfoRemoved(const struct FOrionJungleBuffInfo& BuffInfo);
	void OnCanShopChange(bool bCanShop);
	void OnIsInBaseChange(bool bIsInBase);
	void OnShowVictoryScreen(bool bScreenUp, EOrionTeam WinningTeam);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"OrionCombatMessageManagerWidget">();
	}
	static class UOrionCombatMessageManagerWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UOrionCombatMessageManagerWidget>();
	}
};
static_assert(alignof(UOrionCombatMessageManagerWidget) == 0x000008, "Wrong alignment on UOrionCombatMessageManagerWidget");
static_assert(sizeof(UOrionCombatMessageManagerWidget) == 0x000310, "Wrong size on UOrionCombatMessageManagerWidget");
static_assert(offsetof(UOrionCombatMessageManagerWidget, CombatMessageWidgets) == 0x0002F0, "Member 'UOrionCombatMessageManagerWidget::CombatMessageWidgets' has a wrong offset!");
static_assert(offsetof(UOrionCombatMessageManagerWidget, TransientCombatMessage) == 0x000300, "Member 'UOrionCombatMessageManagerWidget::TransientCombatMessage' has a wrong offset!");
static_assert(offsetof(UOrionCombatMessageManagerWidget, QueuedTransientMessage) == 0x000308, "Member 'UOrionCombatMessageManagerWidget::QueuedTransientMessage' has a wrong offset!");

// Class OrionUI.OrionCombatMessageWidget
// 0x00B8 (0x0370 - 0x02B8)
class UOrionCombatMessageWidget final : public UOrionUserWidgetBase
{
public:
	EOrionCombatMessageType                       CombatMessageType;                                 // 0x02B8(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	EOrionCombatMessageState                      CombatMessageState;                                // 0x02B9(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_2BA[0x2];                                      // 0x02BA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         NumOfLoopsToPlay;                                  // 0x02BC(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bContainsControls;                                 // 0x02C0(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_2C1[0x7];                                      // 0x02C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidgetAnimation*                       EnterAnimation;                                    // 0x02C8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetAnimation*                       IdleAnimation;                                     // 0x02D0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetAnimation*                       ExitAnimation;                                     // 0x02D8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USoundCue*                              EnterSound;                                        // 0x02E0(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_2E8[0x88];                                     // 0x02E8(0x0088)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void AttemptExit();
	void Enter();
	void Exit();
	void Idle();
	void OnEnterFinished();
	void OnExitFinished();
	void OnIdleFinished();
	void SetUsingGamepad(bool bUsingGamePad);

	EOrionCombatMessageState GetCombatMessageState() const;
	EOrionCombatMessageType GetCombatMessageType() const;
	bool IsPersistentMessage() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"OrionCombatMessageWidget">();
	}
	static class UOrionCombatMessageWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UOrionCombatMessageWidget>();
	}
};
static_assert(alignof(UOrionCombatMessageWidget) == 0x000008, "Wrong alignment on UOrionCombatMessageWidget");
static_assert(sizeof(UOrionCombatMessageWidget) == 0x000370, "Wrong size on UOrionCombatMessageWidget");
static_assert(offsetof(UOrionCombatMessageWidget, CombatMessageType) == 0x0002B8, "Member 'UOrionCombatMessageWidget::CombatMessageType' has a wrong offset!");
static_assert(offsetof(UOrionCombatMessageWidget, CombatMessageState) == 0x0002B9, "Member 'UOrionCombatMessageWidget::CombatMessageState' has a wrong offset!");
static_assert(offsetof(UOrionCombatMessageWidget, NumOfLoopsToPlay) == 0x0002BC, "Member 'UOrionCombatMessageWidget::NumOfLoopsToPlay' has a wrong offset!");
static_assert(offsetof(UOrionCombatMessageWidget, bContainsControls) == 0x0002C0, "Member 'UOrionCombatMessageWidget::bContainsControls' has a wrong offset!");
static_assert(offsetof(UOrionCombatMessageWidget, EnterAnimation) == 0x0002C8, "Member 'UOrionCombatMessageWidget::EnterAnimation' has a wrong offset!");
static_assert(offsetof(UOrionCombatMessageWidget, IdleAnimation) == 0x0002D0, "Member 'UOrionCombatMessageWidget::IdleAnimation' has a wrong offset!");
static_assert(offsetof(UOrionCombatMessageWidget, ExitAnimation) == 0x0002D8, "Member 'UOrionCombatMessageWidget::ExitAnimation' has a wrong offset!");
static_assert(offsetof(UOrionCombatMessageWidget, EnterSound) == 0x0002E0, "Member 'UOrionCombatMessageWidget::EnterSound' has a wrong offset!");

// Class OrionUI.OrionCommunityScreen
// 0x0038 (0x0480 - 0x0448)
class UOrionCommunityScreen final : public UOrionActivatableWidget
{
public:
	uint8                                         Pad_448[0x8];                                      // 0x0448(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	class UOrionTabListWidget*                    TabList_SubMenus;                                  // 0x0450(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionWidgetSwitcher*                   OrionSwitcher_Menus;                               // 0x0458(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionLoadGuard*                        LoadGuard_LoadingScreen;                           // 0x0460(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class USizeBox*                               CommunityMenu_Featured;                            // 0x0468(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionCMSDisplayWidget*                 Featured_CMSDisplay;                               // 0x0470(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_478[0x8];                                      // 0x0478(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void OnTabChanged(class FName TabId);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"OrionCommunityScreen">();
	}
	static class UOrionCommunityScreen* GetDefaultObj()
	{
		return GetDefaultObjImpl<UOrionCommunityScreen>();
	}
};
static_assert(alignof(UOrionCommunityScreen) == 0x000008, "Wrong alignment on UOrionCommunityScreen");
static_assert(sizeof(UOrionCommunityScreen) == 0x000480, "Wrong size on UOrionCommunityScreen");
static_assert(offsetof(UOrionCommunityScreen, TabList_SubMenus) == 0x000450, "Member 'UOrionCommunityScreen::TabList_SubMenus' has a wrong offset!");
static_assert(offsetof(UOrionCommunityScreen, OrionSwitcher_Menus) == 0x000458, "Member 'UOrionCommunityScreen::OrionSwitcher_Menus' has a wrong offset!");
static_assert(offsetof(UOrionCommunityScreen, LoadGuard_LoadingScreen) == 0x000460, "Member 'UOrionCommunityScreen::LoadGuard_LoadingScreen' has a wrong offset!");
static_assert(offsetof(UOrionCommunityScreen, CommunityMenu_Featured) == 0x000468, "Member 'UOrionCommunityScreen::CommunityMenu_Featured' has a wrong offset!");
static_assert(offsetof(UOrionCommunityScreen, Featured_CMSDisplay) == 0x000470, "Member 'UOrionCommunityScreen::Featured_CMSDisplay' has a wrong offset!");

// Class OrionUI.OrionCoreWidget
// 0x0090 (0x0380 - 0x02F0)
class UOrionCoreWidget final : public UOrionHUDWidgetBase
{
public:
	bool                                          bIsFriendly;                                       // 0x02F0(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_2F1[0x7];                                      // 0x02F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTextBlock*                             HealthPercentText;                                 // 0x02F8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FOrionCoreInfo                         PreviousCoreInfoState;                             // 0x0300(0x0028)(Transient, NoDestructor, Protected, NativeAccessSpecifierProtected)
	class FText                                   PercentTextFormat;                                 // 0x0328(0x0018)(Protected, NativeAccessSpecifierProtected)
	uint8                                         Pad_340[0x8];                                      // 0x0340(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	bool                                          bHasBeenExposed;                                   // 0x0348(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_349[0x27];                                     // 0x0349(0x0027)(Fixing Size After Last Property [ Dumper-7 ])
	class UOrionGameProgressBar*                  HP_Meter;                                          // 0x0370(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_378[0x8];                                      // 0x0378(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void OnCoreCritical();
	void OnCoreDamaged();
	void OnCoreExposed();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"OrionCoreWidget">();
	}
	static class UOrionCoreWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UOrionCoreWidget>();
	}
};
static_assert(alignof(UOrionCoreWidget) == 0x000008, "Wrong alignment on UOrionCoreWidget");
static_assert(sizeof(UOrionCoreWidget) == 0x000380, "Wrong size on UOrionCoreWidget");
static_assert(offsetof(UOrionCoreWidget, bIsFriendly) == 0x0002F0, "Member 'UOrionCoreWidget::bIsFriendly' has a wrong offset!");
static_assert(offsetof(UOrionCoreWidget, HealthPercentText) == 0x0002F8, "Member 'UOrionCoreWidget::HealthPercentText' has a wrong offset!");
static_assert(offsetof(UOrionCoreWidget, PreviousCoreInfoState) == 0x000300, "Member 'UOrionCoreWidget::PreviousCoreInfoState' has a wrong offset!");
static_assert(offsetof(UOrionCoreWidget, PercentTextFormat) == 0x000328, "Member 'UOrionCoreWidget::PercentTextFormat' has a wrong offset!");
static_assert(offsetof(UOrionCoreWidget, bHasBeenExposed) == 0x000348, "Member 'UOrionCoreWidget::bHasBeenExposed' has a wrong offset!");
static_assert(offsetof(UOrionCoreWidget, HP_Meter) == 0x000370, "Member 'UOrionCoreWidget::HP_Meter' has a wrong offset!");

// Class OrionUI.OrionDailyLoginRewardScreen
// 0x0068 (0x04B0 - 0x0448)
class UOrionDailyLoginRewardScreen final : public UOrionActivatableWidget
{
public:
	uint8                                         Pad_448[0x20];                                     // 0x0448(0x0020)(Fixing Size After Last Property [ Dumper-7 ])
	class UOrionDefaultButton*                    Button_Claim;                                      // 0x0468(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionTextBlock*                        Text_DayNumber;                                    // 0x0470(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionDailyRewardItem*                  Reward_WonToday;                                   // 0x0478(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionTextBlock*                        Text_RewardName;                                   // 0x0480(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionTextBlock*                        Text_RewardDesc;                                   // 0x0488(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionTextBlock*                        Text_PreviewDayNumber;                             // 0x0490(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionDailyRewardItem*                  Reward_PreviewGrand;                               // 0x0498(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionTextBlock*                        Text_Timer;                                        // 0x04A0(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionTextBlock*                        Text_DaysComplete;                                 // 0x04A8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	void OnClaim(bool bDidPreviewDayChange);
	void OnDataSet(bool bCanClaim);
	void OnNextPage();
	void OnPreviewDayChanged();
	void OnPreviewPercentSet(float Percent, EOrionDailyRewardPreviewTotalDays TotalDays);
	void OnRefreshBegin();
	void RefreshData();
	void SetRewardItems(const TArray<class UOrionDailyRewardItem*>& DailyRewardItems);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"OrionDailyLoginRewardScreen">();
	}
	static class UOrionDailyLoginRewardScreen* GetDefaultObj()
	{
		return GetDefaultObjImpl<UOrionDailyLoginRewardScreen>();
	}
};
static_assert(alignof(UOrionDailyLoginRewardScreen) == 0x000008, "Wrong alignment on UOrionDailyLoginRewardScreen");
static_assert(sizeof(UOrionDailyLoginRewardScreen) == 0x0004B0, "Wrong size on UOrionDailyLoginRewardScreen");
static_assert(offsetof(UOrionDailyLoginRewardScreen, Button_Claim) == 0x000468, "Member 'UOrionDailyLoginRewardScreen::Button_Claim' has a wrong offset!");
static_assert(offsetof(UOrionDailyLoginRewardScreen, Text_DayNumber) == 0x000470, "Member 'UOrionDailyLoginRewardScreen::Text_DayNumber' has a wrong offset!");
static_assert(offsetof(UOrionDailyLoginRewardScreen, Reward_WonToday) == 0x000478, "Member 'UOrionDailyLoginRewardScreen::Reward_WonToday' has a wrong offset!");
static_assert(offsetof(UOrionDailyLoginRewardScreen, Text_RewardName) == 0x000480, "Member 'UOrionDailyLoginRewardScreen::Text_RewardName' has a wrong offset!");
static_assert(offsetof(UOrionDailyLoginRewardScreen, Text_RewardDesc) == 0x000488, "Member 'UOrionDailyLoginRewardScreen::Text_RewardDesc' has a wrong offset!");
static_assert(offsetof(UOrionDailyLoginRewardScreen, Text_PreviewDayNumber) == 0x000490, "Member 'UOrionDailyLoginRewardScreen::Text_PreviewDayNumber' has a wrong offset!");
static_assert(offsetof(UOrionDailyLoginRewardScreen, Reward_PreviewGrand) == 0x000498, "Member 'UOrionDailyLoginRewardScreen::Reward_PreviewGrand' has a wrong offset!");
static_assert(offsetof(UOrionDailyLoginRewardScreen, Text_Timer) == 0x0004A0, "Member 'UOrionDailyLoginRewardScreen::Text_Timer' has a wrong offset!");
static_assert(offsetof(UOrionDailyLoginRewardScreen, Text_DaysComplete) == 0x0004A8, "Member 'UOrionDailyLoginRewardScreen::Text_DaysComplete' has a wrong offset!");

// Class OrionUI.OrionDailyQuestCountdownTimer
// 0x0018 (0x02D0 - 0x02B8)
class UOrionDailyQuestCountdownTimer final : public UOrionUserWidgetBase
{
public:
	uint8                                         Pad_2B8[0x10];                                     // 0x02B8(0x0010)(Fixing Size After Last Property [ Dumper-7 ])
	class UOrionTextBlock*                        Text_TimeRemaining;                                // 0x02C8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"OrionDailyQuestCountdownTimer">();
	}
	static class UOrionDailyQuestCountdownTimer* GetDefaultObj()
	{
		return GetDefaultObjImpl<UOrionDailyQuestCountdownTimer>();
	}
};
static_assert(alignof(UOrionDailyQuestCountdownTimer) == 0x000008, "Wrong alignment on UOrionDailyQuestCountdownTimer");
static_assert(sizeof(UOrionDailyQuestCountdownTimer) == 0x0002D0, "Wrong size on UOrionDailyQuestCountdownTimer");
static_assert(offsetof(UOrionDailyQuestCountdownTimer, Text_TimeRemaining) == 0x0002C8, "Member 'UOrionDailyQuestCountdownTimer::Text_TimeRemaining' has a wrong offset!");

// Class OrionUI.OrionDailyQuestMissionProgress
// 0x00B0 (0x0420 - 0x0370)
class UOrionDailyQuestMissionProgress final : public UOrionTimedFillWidget
{
public:
	uint8                                         Pad_370[0x40];                                     // 0x0370(0x0040)(Fixing Size After Last Property [ Dumper-7 ])
	TSubclassOf<class UOrionDailyQuestTooltip>    DailyQuestTooltipClass;                            // 0x03B0(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_3B8[0x40];                                     // 0x03B8(0x0040)(Fixing Size After Last Property [ Dumper-7 ])
	class UOrionTextBlock*                        Text_QuestName;                                    // 0x03F8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionTextBlock*                        Text_Objective;                                    // 0x0400(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionTextBlock*                        Text_Progress;                                     // 0x0408(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionRewardProgressBar*                Progress_Completion;                               // 0x0410(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_418[0x8];                                      // 0x0418(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void OnQuestCompleted();
	void OnQuestDataSet(bool bComplete);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"OrionDailyQuestMissionProgress">();
	}
	static class UOrionDailyQuestMissionProgress* GetDefaultObj()
	{
		return GetDefaultObjImpl<UOrionDailyQuestMissionProgress>();
	}
};
static_assert(alignof(UOrionDailyQuestMissionProgress) == 0x000008, "Wrong alignment on UOrionDailyQuestMissionProgress");
static_assert(sizeof(UOrionDailyQuestMissionProgress) == 0x000420, "Wrong size on UOrionDailyQuestMissionProgress");
static_assert(offsetof(UOrionDailyQuestMissionProgress, DailyQuestTooltipClass) == 0x0003B0, "Member 'UOrionDailyQuestMissionProgress::DailyQuestTooltipClass' has a wrong offset!");
static_assert(offsetof(UOrionDailyQuestMissionProgress, Text_QuestName) == 0x0003F8, "Member 'UOrionDailyQuestMissionProgress::Text_QuestName' has a wrong offset!");
static_assert(offsetof(UOrionDailyQuestMissionProgress, Text_Objective) == 0x000400, "Member 'UOrionDailyQuestMissionProgress::Text_Objective' has a wrong offset!");
static_assert(offsetof(UOrionDailyQuestMissionProgress, Text_Progress) == 0x000408, "Member 'UOrionDailyQuestMissionProgress::Text_Progress' has a wrong offset!");
static_assert(offsetof(UOrionDailyQuestMissionProgress, Progress_Completion) == 0x000410, "Member 'UOrionDailyQuestMissionProgress::Progress_Completion' has a wrong offset!");

// Class OrionUI.OrionDailyQuestTooltipObjective
// 0x0018 (0x02D0 - 0x02B8)
class UOrionDailyQuestTooltipObjective : public UOrionUserWidgetBase
{
public:
	class UOrionTextBlock*                        Text_Objective;                                    // 0x02B8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionTextBlock*                        Text_ObjectiveCount;                               // 0x02C0(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_2C8[0x8];                                      // 0x02C8(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"OrionDailyQuestTooltipObjective">();
	}
	static class UOrionDailyQuestTooltipObjective* GetDefaultObj()
	{
		return GetDefaultObjImpl<UOrionDailyQuestTooltipObjective>();
	}
};
static_assert(alignof(UOrionDailyQuestTooltipObjective) == 0x000008, "Wrong alignment on UOrionDailyQuestTooltipObjective");
static_assert(sizeof(UOrionDailyQuestTooltipObjective) == 0x0002D0, "Wrong size on UOrionDailyQuestTooltipObjective");
static_assert(offsetof(UOrionDailyQuestTooltipObjective, Text_Objective) == 0x0002B8, "Member 'UOrionDailyQuestTooltipObjective::Text_Objective' has a wrong offset!");
static_assert(offsetof(UOrionDailyQuestTooltipObjective, Text_ObjectiveCount) == 0x0002C0, "Member 'UOrionDailyQuestTooltipObjective::Text_ObjectiveCount' has a wrong offset!");

// Class OrionUI.OrionDailyQuestWidget
// 0x0058 (0x04A0 - 0x0448)
class UOrionDailyQuestWidget final : public UOrionActivatableWidget
{
public:
	class FText                                   BonusRewardContext;                                // 0x0448(0x0018)(Edit, Protected, NativeAccessSpecifierProtected)
	uint8                                         Pad_460[0x18];                                     // 0x0460(0x0018)(Fixing Size After Last Property [ Dumper-7 ])
	bool                                          bPostGameDisplay;                                  // 0x0478(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_479[0x7];                                      // 0x0479(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UOrionDynamicEntryBox*                  EntryBox_Missions;                                 // 0x0480(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionTextBlock*                        Text_RewardCounter;                                // 0x0488(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionTextBlock*                        Text_CompleteMsg;                                  // 0x0490(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionRewardWidget*                     Reward_CompletionBonus;                            // 0x0498(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	void OnBonusAchieved();
	void OnNewQuests();
	void OnQuestRefreshBegun();
	void OnQuestRefreshComplete();
	void RefreshQuestProgress();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"OrionDailyQuestWidget">();
	}
	static class UOrionDailyQuestWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UOrionDailyQuestWidget>();
	}
};
static_assert(alignof(UOrionDailyQuestWidget) == 0x000008, "Wrong alignment on UOrionDailyQuestWidget");
static_assert(sizeof(UOrionDailyQuestWidget) == 0x0004A0, "Wrong size on UOrionDailyQuestWidget");
static_assert(offsetof(UOrionDailyQuestWidget, BonusRewardContext) == 0x000448, "Member 'UOrionDailyQuestWidget::BonusRewardContext' has a wrong offset!");
static_assert(offsetof(UOrionDailyQuestWidget, bPostGameDisplay) == 0x000478, "Member 'UOrionDailyQuestWidget::bPostGameDisplay' has a wrong offset!");
static_assert(offsetof(UOrionDailyQuestWidget, EntryBox_Missions) == 0x000480, "Member 'UOrionDailyQuestWidget::EntryBox_Missions' has a wrong offset!");
static_assert(offsetof(UOrionDailyQuestWidget, Text_RewardCounter) == 0x000488, "Member 'UOrionDailyQuestWidget::Text_RewardCounter' has a wrong offset!");
static_assert(offsetof(UOrionDailyQuestWidget, Text_CompleteMsg) == 0x000490, "Member 'UOrionDailyQuestWidget::Text_CompleteMsg' has a wrong offset!");
static_assert(offsetof(UOrionDailyQuestWidget, Reward_CompletionBonus) == 0x000498, "Member 'UOrionDailyQuestWidget::Reward_CompletionBonus' has a wrong offset!");

// Class OrionUI.OrionDailyRewardItem
// 0x0010 (0x09F0 - 0x09E0)
class UOrionDailyRewardItem final : public UOrionBaseButton
{
public:
	class UOrionTextBlock*                        Text_DayCounter;                                   // 0x09E0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionRewardWidget*                     RewardWidget;                                      // 0x09E8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	void OnDataSet(EOrionDailyRewardDayType DayType);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"OrionDailyRewardItem">();
	}
	static class UOrionDailyRewardItem* GetDefaultObj()
	{
		return GetDefaultObjImpl<UOrionDailyRewardItem>();
	}
};
static_assert(alignof(UOrionDailyRewardItem) == 0x000008, "Wrong alignment on UOrionDailyRewardItem");
static_assert(sizeof(UOrionDailyRewardItem) == 0x0009F0, "Wrong size on UOrionDailyRewardItem");
static_assert(offsetof(UOrionDailyRewardItem, Text_DayCounter) == 0x0009E0, "Member 'UOrionDailyRewardItem::Text_DayCounter' has a wrong offset!");
static_assert(offsetof(UOrionDailyRewardItem, RewardWidget) == 0x0009E8, "Member 'UOrionDailyRewardItem::RewardWidget' has a wrong offset!");

// Class OrionUI.OrionDirectionalAlerts
// 0x0018 (0x0110 - 0x00F8)
class UOrionDirectionalAlerts final : public UWidget
{
public:
	uint8                                         Pad_F8[0x10];                                      // 0x00F8(0x0010)(Fixing Size After Last Property [ Dumper-7 ])
	class USlateVectorArtData*                    DirectionalDamageShape;                            // 0x0108(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"OrionDirectionalAlerts">();
	}
	static class UOrionDirectionalAlerts* GetDefaultObj()
	{
		return GetDefaultObjImpl<UOrionDirectionalAlerts>();
	}
};
static_assert(alignof(UOrionDirectionalAlerts) == 0x000008, "Wrong alignment on UOrionDirectionalAlerts");
static_assert(sizeof(UOrionDirectionalAlerts) == 0x000110, "Wrong size on UOrionDirectionalAlerts");
static_assert(offsetof(UOrionDirectionalAlerts, DirectionalDamageShape) == 0x000108, "Member 'UOrionDirectionalAlerts::DirectionalDamageShape' has a wrong offset!");

// Class OrionUI.OrionDamageOverlay
// 0x0038 (0x02F0 - 0x02B8)
class UOrionDamageOverlay final : public UOrionUserWidgetBase
{
public:
	float                                         UpdateFrequency;                                   // 0x02B8(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         CritThresholdMultiplier;                           // 0x02BC(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCurveFloat*                            DirectionalDamageStrengthOverTime;                 // 0x02C0(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_2C8[0x10];                                     // 0x02C8(0x0010)(Fixing Size After Last Property [ Dumper-7 ])
	class AEmitterCameraLensEffectBase*           LowHealthScreenEffect;                             // 0x02D8(0x0008)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UMaterialInstanceDynamic*               LowHealthEffectMID;                                // 0x02E0(0x0008)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UOrionDirectionalAlerts*                DirectionalAlertsWidget;                           // 0x02E8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	void OnDamageUpdate(const struct FOrionUIDamageEventInfo& UIDamageEventInfo);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"OrionDamageOverlay">();
	}
	static class UOrionDamageOverlay* GetDefaultObj()
	{
		return GetDefaultObjImpl<UOrionDamageOverlay>();
	}
};
static_assert(alignof(UOrionDamageOverlay) == 0x000008, "Wrong alignment on UOrionDamageOverlay");
static_assert(sizeof(UOrionDamageOverlay) == 0x0002F0, "Wrong size on UOrionDamageOverlay");
static_assert(offsetof(UOrionDamageOverlay, UpdateFrequency) == 0x0002B8, "Member 'UOrionDamageOverlay::UpdateFrequency' has a wrong offset!");
static_assert(offsetof(UOrionDamageOverlay, CritThresholdMultiplier) == 0x0002BC, "Member 'UOrionDamageOverlay::CritThresholdMultiplier' has a wrong offset!");
static_assert(offsetof(UOrionDamageOverlay, DirectionalDamageStrengthOverTime) == 0x0002C0, "Member 'UOrionDamageOverlay::DirectionalDamageStrengthOverTime' has a wrong offset!");
static_assert(offsetof(UOrionDamageOverlay, LowHealthScreenEffect) == 0x0002D8, "Member 'UOrionDamageOverlay::LowHealthScreenEffect' has a wrong offset!");
static_assert(offsetof(UOrionDamageOverlay, LowHealthEffectMID) == 0x0002E0, "Member 'UOrionDamageOverlay::LowHealthEffectMID' has a wrong offset!");
static_assert(offsetof(UOrionDamageOverlay, DirectionalAlertsWidget) == 0x0002E8, "Member 'UOrionDamageOverlay::DirectionalAlertsWidget' has a wrong offset!");

// Class OrionUI.OrionDeathCamWidget
// 0x0028 (0x0470 - 0x0448)
class UOrionDeathCamWidget final : public UOrionActivatableWidget
{
public:
	bool                                          bShowFrameOnDeath;                                 // 0x0448(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_449[0x7];                                      // 0x0449(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UOrionLazyImage*                        LazyImage_KillerIcon;                              // 0x0450(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UOrionTextBlock*                        Text_KillerName;                                   // 0x0458(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UOrionTextBlock*                        Text_KillerHeroName;                               // 0x0460(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UBorder*                                Border_KillerInfo;                                 // 0x0468(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	void OnDeathWithoutKillcam();
	void OnLocalHeroDeath(const struct FOrionHUDTeamStatusInfo& UpdatedTeamInfo);
	void OnLocalHeroSpawn(const struct FOrionHUDTeamStatusInfo& UpdatedTeamInfo);
	void PlayReplay(TDelegate<void(bool bWasSuccessful)> OnPlayReplayComplete);
	void StopReplay();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"OrionDeathCamWidget">();
	}
	static class UOrionDeathCamWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UOrionDeathCamWidget>();
	}
};
static_assert(alignof(UOrionDeathCamWidget) == 0x000008, "Wrong alignment on UOrionDeathCamWidget");
static_assert(sizeof(UOrionDeathCamWidget) == 0x000470, "Wrong size on UOrionDeathCamWidget");
static_assert(offsetof(UOrionDeathCamWidget, bShowFrameOnDeath) == 0x000448, "Member 'UOrionDeathCamWidget::bShowFrameOnDeath' has a wrong offset!");
static_assert(offsetof(UOrionDeathCamWidget, LazyImage_KillerIcon) == 0x000450, "Member 'UOrionDeathCamWidget::LazyImage_KillerIcon' has a wrong offset!");
static_assert(offsetof(UOrionDeathCamWidget, Text_KillerName) == 0x000458, "Member 'UOrionDeathCamWidget::Text_KillerName' has a wrong offset!");
static_assert(offsetof(UOrionDeathCamWidget, Text_KillerHeroName) == 0x000460, "Member 'UOrionDeathCamWidget::Text_KillerHeroName' has a wrong offset!");
static_assert(offsetof(UOrionDeathCamWidget, Border_KillerInfo) == 0x000468, "Member 'UOrionDeathCamWidget::Border_KillerInfo' has a wrong offset!");

// Class OrionUI.OrionDeathRecapEntryWidget
// 0x00B8 (0x0370 - 0x02B8)
class UOrionDeathRecapEntryWidget final : public UOrionUserWidgetBase
{
public:
	class UOrionLazyImage*                        LazyImage_InstigatorPortrait;                      // 0x02B8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                 AbilityIconWidget;                                 // 0x02C0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UMaterialInstanceDynamic*               AbilityIconMID;                                    // 0x02C8(0x0008)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UOrionTextBlock*                        InstigatorNameWidget;                              // 0x02D0(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextBlock*                             AbilityNameWidget;                                 // 0x02D8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UBorder*                                DamageEntryWrapper;                                // 0x02E0(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextBlock*                             DamageEntryWidgetText;                             // 0x02E8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                 RedBuffWidget;                                     // 0x02F0(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                 PrimeHelixWidget;                                  // 0x02F8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetSwitcher*                        DamageTypeIcon;                                    // 0x0300(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                 CriticalHitIcon;                                   // 0x0308(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FLinearColor                           DamageColorPure;                                   // 0x0310(0x0010)(Edit, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FLinearColor                           DamageColorBasic;                                  // 0x0320(0x0010)(Edit, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FLinearColor                           DamageColorAbility;                                // 0x0330(0x0010)(Edit, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_340[0x30];                                     // 0x0340(0x0030)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"OrionDeathRecapEntryWidget">();
	}
	static class UOrionDeathRecapEntryWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UOrionDeathRecapEntryWidget>();
	}
};
static_assert(alignof(UOrionDeathRecapEntryWidget) == 0x000008, "Wrong alignment on UOrionDeathRecapEntryWidget");
static_assert(sizeof(UOrionDeathRecapEntryWidget) == 0x000370, "Wrong size on UOrionDeathRecapEntryWidget");
static_assert(offsetof(UOrionDeathRecapEntryWidget, LazyImage_InstigatorPortrait) == 0x0002B8, "Member 'UOrionDeathRecapEntryWidget::LazyImage_InstigatorPortrait' has a wrong offset!");
static_assert(offsetof(UOrionDeathRecapEntryWidget, AbilityIconWidget) == 0x0002C0, "Member 'UOrionDeathRecapEntryWidget::AbilityIconWidget' has a wrong offset!");
static_assert(offsetof(UOrionDeathRecapEntryWidget, AbilityIconMID) == 0x0002C8, "Member 'UOrionDeathRecapEntryWidget::AbilityIconMID' has a wrong offset!");
static_assert(offsetof(UOrionDeathRecapEntryWidget, InstigatorNameWidget) == 0x0002D0, "Member 'UOrionDeathRecapEntryWidget::InstigatorNameWidget' has a wrong offset!");
static_assert(offsetof(UOrionDeathRecapEntryWidget, AbilityNameWidget) == 0x0002D8, "Member 'UOrionDeathRecapEntryWidget::AbilityNameWidget' has a wrong offset!");
static_assert(offsetof(UOrionDeathRecapEntryWidget, DamageEntryWrapper) == 0x0002E0, "Member 'UOrionDeathRecapEntryWidget::DamageEntryWrapper' has a wrong offset!");
static_assert(offsetof(UOrionDeathRecapEntryWidget, DamageEntryWidgetText) == 0x0002E8, "Member 'UOrionDeathRecapEntryWidget::DamageEntryWidgetText' has a wrong offset!");
static_assert(offsetof(UOrionDeathRecapEntryWidget, RedBuffWidget) == 0x0002F0, "Member 'UOrionDeathRecapEntryWidget::RedBuffWidget' has a wrong offset!");
static_assert(offsetof(UOrionDeathRecapEntryWidget, PrimeHelixWidget) == 0x0002F8, "Member 'UOrionDeathRecapEntryWidget::PrimeHelixWidget' has a wrong offset!");
static_assert(offsetof(UOrionDeathRecapEntryWidget, DamageTypeIcon) == 0x000300, "Member 'UOrionDeathRecapEntryWidget::DamageTypeIcon' has a wrong offset!");
static_assert(offsetof(UOrionDeathRecapEntryWidget, CriticalHitIcon) == 0x000308, "Member 'UOrionDeathRecapEntryWidget::CriticalHitIcon' has a wrong offset!");
static_assert(offsetof(UOrionDeathRecapEntryWidget, DamageColorPure) == 0x000310, "Member 'UOrionDeathRecapEntryWidget::DamageColorPure' has a wrong offset!");
static_assert(offsetof(UOrionDeathRecapEntryWidget, DamageColorBasic) == 0x000320, "Member 'UOrionDeathRecapEntryWidget::DamageColorBasic' has a wrong offset!");
static_assert(offsetof(UOrionDeathRecapEntryWidget, DamageColorAbility) == 0x000330, "Member 'UOrionDeathRecapEntryWidget::DamageColorAbility' has a wrong offset!");

// Class OrionUI.OrionDeathRecapPanel
// 0x0038 (0x02F0 - 0x02B8)
class UOrionDeathRecapPanel final : public UOrionUserWidgetBase
{
public:
	bool                                          bIsInHUD;                                          // 0x02B8(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_2B9[0x7];                                      // 0x02B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                ShortViewBody;                                     // 0x02C0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bPlayerIsKnownDead;                                // 0x02C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bHaveDataThatHasntBeenDisplayedYet;                // 0x02C9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_2CA[0x6];                                      // 0x02CA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UOrionDeathRecapEntryWidget*>    DamageEntryWidgets;                                // 0x02D0(0x0010)(ExportObject, ZeroConstructor, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	class UOrionRichText*                         RichText_HideShow;                                 // 0x02E0(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_2E8[0x8];                                      // 0x02E8(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void OnInstantReplayDisabled();
	void OnInstantReplayEnabled();
	void OnLocalHeroDeath(const struct FOrionHUDTeamStatusInfo& UpdatedTeamInfo);
	void OnLocalHeroSpawn(const struct FOrionHUDTeamStatusInfo& UpdatedTeamInfo);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"OrionDeathRecapPanel">();
	}
	static class UOrionDeathRecapPanel* GetDefaultObj()
	{
		return GetDefaultObjImpl<UOrionDeathRecapPanel>();
	}
};
static_assert(alignof(UOrionDeathRecapPanel) == 0x000008, "Wrong alignment on UOrionDeathRecapPanel");
static_assert(sizeof(UOrionDeathRecapPanel) == 0x0002F0, "Wrong size on UOrionDeathRecapPanel");
static_assert(offsetof(UOrionDeathRecapPanel, bIsInHUD) == 0x0002B8, "Member 'UOrionDeathRecapPanel::bIsInHUD' has a wrong offset!");
static_assert(offsetof(UOrionDeathRecapPanel, ShortViewBody) == 0x0002C0, "Member 'UOrionDeathRecapPanel::ShortViewBody' has a wrong offset!");
static_assert(offsetof(UOrionDeathRecapPanel, bPlayerIsKnownDead) == 0x0002C8, "Member 'UOrionDeathRecapPanel::bPlayerIsKnownDead' has a wrong offset!");
static_assert(offsetof(UOrionDeathRecapPanel, bHaveDataThatHasntBeenDisplayedYet) == 0x0002C9, "Member 'UOrionDeathRecapPanel::bHaveDataThatHasntBeenDisplayedYet' has a wrong offset!");
static_assert(offsetof(UOrionDeathRecapPanel, DamageEntryWidgets) == 0x0002D0, "Member 'UOrionDeathRecapPanel::DamageEntryWidgets' has a wrong offset!");
static_assert(offsetof(UOrionDeathRecapPanel, RichText_HideShow) == 0x0002E0, "Member 'UOrionDeathRecapPanel::RichText_HideShow' has a wrong offset!");

// Class OrionUI.OrionDebugTeamMember
// 0x0010 (0x0210 - 0x0200)
class UOrionDebugTeamMember final : public UUserWidget
{
public:
	class UOrionTextBlock*                        Text_PlayerName;                                   // 0x0200(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionHeroListItem*                     HeroItem_Portrait;                                 // 0x0208(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"OrionDebugTeamMember">();
	}
	static class UOrionDebugTeamMember* GetDefaultObj()
	{
		return GetDefaultObjImpl<UOrionDebugTeamMember>();
	}
};
static_assert(alignof(UOrionDebugTeamMember) == 0x000008, "Wrong alignment on UOrionDebugTeamMember");
static_assert(sizeof(UOrionDebugTeamMember) == 0x000210, "Wrong size on UOrionDebugTeamMember");
static_assert(offsetof(UOrionDebugTeamMember, Text_PlayerName) == 0x000200, "Member 'UOrionDebugTeamMember::Text_PlayerName' has a wrong offset!");
static_assert(offsetof(UOrionDebugTeamMember, HeroItem_Portrait) == 0x000208, "Member 'UOrionDebugTeamMember::HeroItem_Portrait' has a wrong offset!");

// Class OrionUI.OrionDebugHeroSelect
// 0x00A8 (0x04F0 - 0x0448)
class UOrionDebugHeroSelect final : public UOrionActivatableWidget
{
public:
	TArray<class UOrionDebugTeamMember*>          TeamBlueWidgets;                                   // 0x0448(0x0010)(ExportObject, ZeroConstructor, Transient, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	TArray<class UOrionDebugTeamMember*>          TeamRedWidgets;                                    // 0x0458(0x0010)(ExportObject, ZeroConstructor, Transient, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	uint8                                         Pad_468[0x18];                                     // 0x0468(0x0018)(Fixing Size After Last Property [ Dumper-7 ])
	class UOrionTextBlock*                        Text_HeroName;                                     // 0x0480(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionTileView*                         TileView_HeroSelect;                               // 0x0488(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionTileView*                         TileView_SkinSelect;                               // 0x0490(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionTileView*                         TileView_VariantSelect;                            // 0x0498(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionDefaultButton*                    DefaultButton_ForceStart;                          // 0x04A0(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionDefaultButton*                    DefaultButton_NormalStart;                         // 0x04A8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionDefaultButton*                    DefaultButton_RandomBots;                          // 0x04B0(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionDefaultButton*                    DefaultButton_StandardBots;                        // 0x04B8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionDefaultButton*                    DefaultButton_JoinTeamBlue;                        // 0x04C0(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionDefaultButton*                    DefaultButton_JoinTeamRed;                         // 0x04C8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionHeroAbilityDisplay*               AbilityDisplay;                                    // 0x04D0(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UVerticalBox*                           VBox_TeamBlue;                                     // 0x04D8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UVerticalBox*                           VBox_TeamRed;                                      // 0x04E0(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionEditableTextBox*                  EditText_Rank;                                     // 0x04E8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	void HandleHeroSelected(class UObject* SelectedHero, bool bSelected);
	void HandleSkinSelected(class UObject* SelectedSkin, bool bSelected);
	void HandleVariantSelected(class UObject* SelectedVariant, bool bSelected);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"OrionDebugHeroSelect">();
	}
	static class UOrionDebugHeroSelect* GetDefaultObj()
	{
		return GetDefaultObjImpl<UOrionDebugHeroSelect>();
	}
};
static_assert(alignof(UOrionDebugHeroSelect) == 0x000008, "Wrong alignment on UOrionDebugHeroSelect");
static_assert(sizeof(UOrionDebugHeroSelect) == 0x0004F0, "Wrong size on UOrionDebugHeroSelect");
static_assert(offsetof(UOrionDebugHeroSelect, TeamBlueWidgets) == 0x000448, "Member 'UOrionDebugHeroSelect::TeamBlueWidgets' has a wrong offset!");
static_assert(offsetof(UOrionDebugHeroSelect, TeamRedWidgets) == 0x000458, "Member 'UOrionDebugHeroSelect::TeamRedWidgets' has a wrong offset!");
static_assert(offsetof(UOrionDebugHeroSelect, Text_HeroName) == 0x000480, "Member 'UOrionDebugHeroSelect::Text_HeroName' has a wrong offset!");
static_assert(offsetof(UOrionDebugHeroSelect, TileView_HeroSelect) == 0x000488, "Member 'UOrionDebugHeroSelect::TileView_HeroSelect' has a wrong offset!");
static_assert(offsetof(UOrionDebugHeroSelect, TileView_SkinSelect) == 0x000490, "Member 'UOrionDebugHeroSelect::TileView_SkinSelect' has a wrong offset!");
static_assert(offsetof(UOrionDebugHeroSelect, TileView_VariantSelect) == 0x000498, "Member 'UOrionDebugHeroSelect::TileView_VariantSelect' has a wrong offset!");
static_assert(offsetof(UOrionDebugHeroSelect, DefaultButton_ForceStart) == 0x0004A0, "Member 'UOrionDebugHeroSelect::DefaultButton_ForceStart' has a wrong offset!");
static_assert(offsetof(UOrionDebugHeroSelect, DefaultButton_NormalStart) == 0x0004A8, "Member 'UOrionDebugHeroSelect::DefaultButton_NormalStart' has a wrong offset!");
static_assert(offsetof(UOrionDebugHeroSelect, DefaultButton_RandomBots) == 0x0004B0, "Member 'UOrionDebugHeroSelect::DefaultButton_RandomBots' has a wrong offset!");
static_assert(offsetof(UOrionDebugHeroSelect, DefaultButton_StandardBots) == 0x0004B8, "Member 'UOrionDebugHeroSelect::DefaultButton_StandardBots' has a wrong offset!");
static_assert(offsetof(UOrionDebugHeroSelect, DefaultButton_JoinTeamBlue) == 0x0004C0, "Member 'UOrionDebugHeroSelect::DefaultButton_JoinTeamBlue' has a wrong offset!");
static_assert(offsetof(UOrionDebugHeroSelect, DefaultButton_JoinTeamRed) == 0x0004C8, "Member 'UOrionDebugHeroSelect::DefaultButton_JoinTeamRed' has a wrong offset!");
static_assert(offsetof(UOrionDebugHeroSelect, AbilityDisplay) == 0x0004D0, "Member 'UOrionDebugHeroSelect::AbilityDisplay' has a wrong offset!");
static_assert(offsetof(UOrionDebugHeroSelect, VBox_TeamBlue) == 0x0004D8, "Member 'UOrionDebugHeroSelect::VBox_TeamBlue' has a wrong offset!");
static_assert(offsetof(UOrionDebugHeroSelect, VBox_TeamRed) == 0x0004E0, "Member 'UOrionDebugHeroSelect::VBox_TeamRed' has a wrong offset!");
static_assert(offsetof(UOrionDebugHeroSelect, EditText_Rank) == 0x0004E8, "Member 'UOrionDebugHeroSelect::EditText_Rank' has a wrong offset!");

// Class OrionUI.OrionDeckBuilderCardTooltip
// 0x0018 (0x02D0 - 0x02B8)
class UOrionDeckBuilderCardTooltip final : public UOrionUserWidgetBase
{
public:
	class UOrionLazyImage*                        LazyImage_CardArt;                                 // 0x02B8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionCardSummaryWidget*                CardSummary_Info;                                  // 0x02C0(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_2C8[0x8];                                      // 0x02C8(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"OrionDeckBuilderCardTooltip">();
	}
	static class UOrionDeckBuilderCardTooltip* GetDefaultObj()
	{
		return GetDefaultObjImpl<UOrionDeckBuilderCardTooltip>();
	}
};
static_assert(alignof(UOrionDeckBuilderCardTooltip) == 0x000008, "Wrong alignment on UOrionDeckBuilderCardTooltip");
static_assert(sizeof(UOrionDeckBuilderCardTooltip) == 0x0002D0, "Wrong size on UOrionDeckBuilderCardTooltip");
static_assert(offsetof(UOrionDeckBuilderCardTooltip, LazyImage_CardArt) == 0x0002B8, "Member 'UOrionDeckBuilderCardTooltip::LazyImage_CardArt' has a wrong offset!");
static_assert(offsetof(UOrionDeckBuilderCardTooltip, CardSummary_Info) == 0x0002C0, "Member 'UOrionDeckBuilderCardTooltip::CardSummary_Info' has a wrong offset!");

// Class OrionUI.OrionDeckBuilderPip
// 0x0030 (0x0A10 - 0x09E0)
class UOrionDeckBuilderPip final : public UOrionBaseButton
{
public:
	EOrionGemRank                                 GemRank;                                           // 0x09E0(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9E1[0x7];                                      // 0x09E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UOrionMcpGemItem*                       CurrentGem;                                        // 0x09E8(0x0008)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_9F0[0x8];                                      // 0x09F0(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	class UImage*                                 Image_Base;                                        // 0x09F8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionGemBasic*                         BasicGem;                                          // 0x0A00(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionUserWidgetBase*                   Icon_Warning;                                      // 0x0A08(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	void CustomMouseEnter();
	void CustomMouseExit();
	void CustomSelected();
	class UMaterialInstanceDynamic* GetGemMaterial();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"OrionDeckBuilderPip">();
	}
	static class UOrionDeckBuilderPip* GetDefaultObj()
	{
		return GetDefaultObjImpl<UOrionDeckBuilderPip>();
	}
};
static_assert(alignof(UOrionDeckBuilderPip) == 0x000008, "Wrong alignment on UOrionDeckBuilderPip");
static_assert(sizeof(UOrionDeckBuilderPip) == 0x000A10, "Wrong size on UOrionDeckBuilderPip");
static_assert(offsetof(UOrionDeckBuilderPip, GemRank) == 0x0009E0, "Member 'UOrionDeckBuilderPip::GemRank' has a wrong offset!");
static_assert(offsetof(UOrionDeckBuilderPip, CurrentGem) == 0x0009E8, "Member 'UOrionDeckBuilderPip::CurrentGem' has a wrong offset!");
static_assert(offsetof(UOrionDeckBuilderPip, Image_Base) == 0x0009F8, "Member 'UOrionDeckBuilderPip::Image_Base' has a wrong offset!");
static_assert(offsetof(UOrionDeckBuilderPip, BasicGem) == 0x000A00, "Member 'UOrionDeckBuilderPip::BasicGem' has a wrong offset!");
static_assert(offsetof(UOrionDeckBuilderPip, Icon_Warning) == 0x000A08, "Member 'UOrionDeckBuilderPip::Icon_Warning' has a wrong offset!");

// Class OrionUI.OrionDeckBuilderSelectedCard
// 0x0008 (0x02C0 - 0x02B8)
class UOrionDeckBuilderSelectedCard final : public UOrionUserWidgetBase
{
public:
	uint8                                         Pad_2B8[0x8];                                      // 0x02B8(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"OrionDeckBuilderSelectedCard">();
	}
	static class UOrionDeckBuilderSelectedCard* GetDefaultObj()
	{
		return GetDefaultObjImpl<UOrionDeckBuilderSelectedCard>();
	}
};
static_assert(alignof(UOrionDeckBuilderSelectedCard) == 0x000008, "Wrong alignment on UOrionDeckBuilderSelectedCard");
static_assert(sizeof(UOrionDeckBuilderSelectedCard) == 0x0002C0, "Wrong size on UOrionDeckBuilderSelectedCard");

// Class OrionUI.OrionDeckBuilderStatRow
// 0x0048 (0x0300 - 0x02B8)
class UOrionDeckBuilderStatRow final : public UOrionUserWidgetBase
{
public:
	uint8                                         Pad_2B8[0x28];                                     // 0x02B8(0x0028)(Fixing Size After Last Property [ Dumper-7 ])
	class UImage*                                 Image_StatIcon;                                    // 0x02E0(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionTextBlock*                        Text_StatName;                                     // 0x02E8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionTextBlock*                        Text_Count;                                        // 0x02F0(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_2F8[0x8];                                      // 0x02F8(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"OrionDeckBuilderStatRow">();
	}
	static class UOrionDeckBuilderStatRow* GetDefaultObj()
	{
		return GetDefaultObjImpl<UOrionDeckBuilderStatRow>();
	}
};
static_assert(alignof(UOrionDeckBuilderStatRow) == 0x000008, "Wrong alignment on UOrionDeckBuilderStatRow");
static_assert(sizeof(UOrionDeckBuilderStatRow) == 0x000300, "Wrong size on UOrionDeckBuilderStatRow");
static_assert(offsetof(UOrionDeckBuilderStatRow, Image_StatIcon) == 0x0002E0, "Member 'UOrionDeckBuilderStatRow::Image_StatIcon' has a wrong offset!");
static_assert(offsetof(UOrionDeckBuilderStatRow, Text_StatName) == 0x0002E8, "Member 'UOrionDeckBuilderStatRow::Text_StatName' has a wrong offset!");
static_assert(offsetof(UOrionDeckBuilderStatRow, Text_Count) == 0x0002F0, "Member 'UOrionDeckBuilderStatRow::Text_Count' has a wrong offset!");

// Class OrionUI.OrionDeckBuilderSummaryCardEntry
// 0x00E0 (0x0AC0 - 0x09E0)
class UOrionDeckBuilderSummaryCardEntry final : public UOrionBaseButton
{
public:
	uint8                                         Pad_9E0[0xC0];                                     // 0x09E0(0x00C0)(Fixing Size After Last Property [ Dumper-7 ])
	TSubclassOf<class UOrionDeckBuilderSummaryCardEntryTooltip> TooltipClass;                                      // 0x0AA0(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionFrontEndCard*                     Card_Widget;                                       // 0x0AA8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_AB0[0x10];                                     // 0x0AB0(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void OnCardSlotted();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"OrionDeckBuilderSummaryCardEntry">();
	}
	static class UOrionDeckBuilderSummaryCardEntry* GetDefaultObj()
	{
		return GetDefaultObjImpl<UOrionDeckBuilderSummaryCardEntry>();
	}
};
static_assert(alignof(UOrionDeckBuilderSummaryCardEntry) == 0x000008, "Wrong alignment on UOrionDeckBuilderSummaryCardEntry");
static_assert(sizeof(UOrionDeckBuilderSummaryCardEntry) == 0x000AC0, "Wrong size on UOrionDeckBuilderSummaryCardEntry");
static_assert(offsetof(UOrionDeckBuilderSummaryCardEntry, TooltipClass) == 0x000AA0, "Member 'UOrionDeckBuilderSummaryCardEntry::TooltipClass' has a wrong offset!");
static_assert(offsetof(UOrionDeckBuilderSummaryCardEntry, Card_Widget) == 0x000AA8, "Member 'UOrionDeckBuilderSummaryCardEntry::Card_Widget' has a wrong offset!");

// Class OrionUI.OrionMuteMenu
// 0x0028 (0x0470 - 0x0448)
class UOrionMuteMenu final : public UOrionActivatableWidget
{
public:
	uint8                                         Pad_448[0x8];                                      // 0x0448(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UOrionMuteMenuRow*>              Rows;                                              // 0x0450(0x0010)(ExportObject, ZeroConstructor, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	TArray<struct FOrionMuteInfo>                 MuteInfoArray;                                     // 0x0460(0x0010)(ZeroConstructor, Protected, NativeAccessSpecifierProtected)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"OrionMuteMenu">();
	}
	static class UOrionMuteMenu* GetDefaultObj()
	{
		return GetDefaultObjImpl<UOrionMuteMenu>();
	}
};
static_assert(alignof(UOrionMuteMenu) == 0x000008, "Wrong alignment on UOrionMuteMenu");
static_assert(sizeof(UOrionMuteMenu) == 0x000470, "Wrong size on UOrionMuteMenu");
static_assert(offsetof(UOrionMuteMenu, Rows) == 0x000450, "Member 'UOrionMuteMenu::Rows' has a wrong offset!");
static_assert(offsetof(UOrionMuteMenu, MuteInfoArray) == 0x000460, "Member 'UOrionMuteMenu::MuteInfoArray' has a wrong offset!");

// Class OrionUI.OrionDeckBuilderSummaryCardEntryTooltip
// 0x0010 (0x0340 - 0x0330)
class UOrionDeckBuilderSummaryCardEntryTooltip final : public UOrionTooltipBase
{
public:
	class UOrionFrontEndCard*                     Card_Widget;                                       // 0x0330(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_338[0x8];                                      // 0x0338(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"OrionDeckBuilderSummaryCardEntryTooltip">();
	}
	static class UOrionDeckBuilderSummaryCardEntryTooltip* GetDefaultObj()
	{
		return GetDefaultObjImpl<UOrionDeckBuilderSummaryCardEntryTooltip>();
	}
};
static_assert(alignof(UOrionDeckBuilderSummaryCardEntryTooltip) == 0x000008, "Wrong alignment on UOrionDeckBuilderSummaryCardEntryTooltip");
static_assert(sizeof(UOrionDeckBuilderSummaryCardEntryTooltip) == 0x000340, "Wrong size on UOrionDeckBuilderSummaryCardEntryTooltip");
static_assert(offsetof(UOrionDeckBuilderSummaryCardEntryTooltip, Card_Widget) == 0x000330, "Member 'UOrionDeckBuilderSummaryCardEntryTooltip::Card_Widget' has a wrong offset!");

// Class OrionUI.OrionDeckBuilderTab
// 0x0008 (0x02C0 - 0x02B8)
class UOrionDeckBuilderTab : public UOrionUserWidgetBase
{
public:
	uint8                                         Pad_2B8[0x8];                                      // 0x02B8(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"OrionDeckBuilderTab">();
	}
	static class UOrionDeckBuilderTab* GetDefaultObj()
	{
		return GetDefaultObjImpl<UOrionDeckBuilderTab>();
	}
};
static_assert(alignof(UOrionDeckBuilderTab) == 0x000008, "Wrong alignment on UOrionDeckBuilderTab");
static_assert(sizeof(UOrionDeckBuilderTab) == 0x0002C0, "Wrong size on UOrionDeckBuilderTab");

// Class OrionUI.OrionMcpTypeRewardImage
// 0x0008 (0x02C0 - 0x02B8)
class UOrionMcpTypeRewardImage : public UOrionUserWidgetBase
{
public:
	class UOrionLazyImage*                        Image_Type;                                        // 0x02B8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	void SetImageWithDefinition(const class UOrionMcpItemDefinition* ItemDefinition);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"OrionMcpTypeRewardImage">();
	}
	static class UOrionMcpTypeRewardImage* GetDefaultObj()
	{
		return GetDefaultObjImpl<UOrionMcpTypeRewardImage>();
	}
};
static_assert(alignof(UOrionMcpTypeRewardImage) == 0x000008, "Wrong alignment on UOrionMcpTypeRewardImage");
static_assert(sizeof(UOrionMcpTypeRewardImage) == 0x0002C0, "Wrong size on UOrionMcpTypeRewardImage");
static_assert(offsetof(UOrionMcpTypeRewardImage, Image_Type) == 0x0002B8, "Member 'UOrionMcpTypeRewardImage::Image_Type' has a wrong offset!");

// Class OrionUI.OrionDeckBuilderTab_Affinities
// 0x0040 (0x0300 - 0x02C0)
class UOrionDeckBuilderTab_Affinities final : public UOrionDeckBuilderTab
{
public:
	uint8                                         Pad_2C0[0x20];                                     // 0x02C0(0x0020)(Fixing Size After Last Property [ Dumper-7 ])
	class UOrionBaseButton*                       Button_Next;                                       // 0x02E0(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionRichText*                         RichText_Count;                                    // 0x02E8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionDynamicEntryBox*                  Box_Affinities;                                    // 0x02F0(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_2F8[0x8];                                      // 0x02F8(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"OrionDeckBuilderTab_Affinities">();
	}
	static class UOrionDeckBuilderTab_Affinities* GetDefaultObj()
	{
		return GetDefaultObjImpl<UOrionDeckBuilderTab_Affinities>();
	}
};
static_assert(alignof(UOrionDeckBuilderTab_Affinities) == 0x000008, "Wrong alignment on UOrionDeckBuilderTab_Affinities");
static_assert(sizeof(UOrionDeckBuilderTab_Affinities) == 0x000300, "Wrong size on UOrionDeckBuilderTab_Affinities");
static_assert(offsetof(UOrionDeckBuilderTab_Affinities, Button_Next) == 0x0002E0, "Member 'UOrionDeckBuilderTab_Affinities::Button_Next' has a wrong offset!");
static_assert(offsetof(UOrionDeckBuilderTab_Affinities, RichText_Count) == 0x0002E8, "Member 'UOrionDeckBuilderTab_Affinities::RichText_Count' has a wrong offset!");
static_assert(offsetof(UOrionDeckBuilderTab_Affinities, Box_Affinities) == 0x0002F0, "Member 'UOrionDeckBuilderTab_Affinities::Box_Affinities' has a wrong offset!");

// Class OrionUI.OrionDeckBuilderTab_Cards
// 0x0070 (0x0330 - 0x02C0)
class UOrionDeckBuilderTab_Cards final : public UOrionDeckBuilderTab
{
public:
	uint8                                         Pad_2C0[0x20];                                     // 0x02C0(0x0020)(Fixing Size After Last Property [ Dumper-7 ])
	class UOrionTileView*                         TileView_Cards;                                    // 0x02E0(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionDynamicEntryBox*                  EntryBox_Affinities;                               // 0x02E8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UImage*                                 Image_Affinity1;                                   // 0x02F0(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UImage*                                 Image_Affinity2;                                   // 0x02F8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionWidgetSwitcher*                   Switcher_AffinitiesCards;                          // 0x0300(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionBaseButton*                       Button_Next;                                       // 0x0308(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionBaseButton*                       Button_Prev;                                       // 0x0310(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionFilterToggleButton*               Button_Toggle;                                     // 0x0318(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionEditableTextBox*                  Text_SearchBox;                                    // 0x0320(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_328[0x8];                                      // 0x0328(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void DynamicSearchTextChanged(const class FText& NewText);
	void DynamicSearchTextCommitted(const class FText& NewText, ETextCommit CommitMethod);
	void HandleCardHovered(class UObject* HoveredItem, bool bIsHovered);
	void HandleNewCardSelected(class UObject* SelectedItem);
	void HandleToggleButtonSort();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"OrionDeckBuilderTab_Cards">();
	}
	static class UOrionDeckBuilderTab_Cards* GetDefaultObj()
	{
		return GetDefaultObjImpl<UOrionDeckBuilderTab_Cards>();
	}
};
static_assert(alignof(UOrionDeckBuilderTab_Cards) == 0x000008, "Wrong alignment on UOrionDeckBuilderTab_Cards");
static_assert(sizeof(UOrionDeckBuilderTab_Cards) == 0x000330, "Wrong size on UOrionDeckBuilderTab_Cards");
static_assert(offsetof(UOrionDeckBuilderTab_Cards, TileView_Cards) == 0x0002E0, "Member 'UOrionDeckBuilderTab_Cards::TileView_Cards' has a wrong offset!");
static_assert(offsetof(UOrionDeckBuilderTab_Cards, EntryBox_Affinities) == 0x0002E8, "Member 'UOrionDeckBuilderTab_Cards::EntryBox_Affinities' has a wrong offset!");
static_assert(offsetof(UOrionDeckBuilderTab_Cards, Image_Affinity1) == 0x0002F0, "Member 'UOrionDeckBuilderTab_Cards::Image_Affinity1' has a wrong offset!");
static_assert(offsetof(UOrionDeckBuilderTab_Cards, Image_Affinity2) == 0x0002F8, "Member 'UOrionDeckBuilderTab_Cards::Image_Affinity2' has a wrong offset!");
static_assert(offsetof(UOrionDeckBuilderTab_Cards, Switcher_AffinitiesCards) == 0x000300, "Member 'UOrionDeckBuilderTab_Cards::Switcher_AffinitiesCards' has a wrong offset!");
static_assert(offsetof(UOrionDeckBuilderTab_Cards, Button_Next) == 0x000308, "Member 'UOrionDeckBuilderTab_Cards::Button_Next' has a wrong offset!");
static_assert(offsetof(UOrionDeckBuilderTab_Cards, Button_Prev) == 0x000310, "Member 'UOrionDeckBuilderTab_Cards::Button_Prev' has a wrong offset!");
static_assert(offsetof(UOrionDeckBuilderTab_Cards, Button_Toggle) == 0x000318, "Member 'UOrionDeckBuilderTab_Cards::Button_Toggle' has a wrong offset!");
static_assert(offsetof(UOrionDeckBuilderTab_Cards, Text_SearchBox) == 0x000320, "Member 'UOrionDeckBuilderTab_Cards::Text_SearchBox' has a wrong offset!");

// Class OrionUI.OrionObjectListItem
// 0x0000 (0x0028 - 0x0028)
class IOrionObjectListItem final : public IOrionListItem
{
public:
	void Reset();
	void SetData(class UObject* InData);

	class UObject* GetData() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"OrionObjectListItem">();
	}
	static class IOrionObjectListItem* GetDefaultObj()
	{
		return GetDefaultObjImpl<IOrionObjectListItem>();
	}
};
static_assert(alignof(IOrionObjectListItem) == 0x000008, "Wrong alignment on IOrionObjectListItem");
static_assert(sizeof(IOrionObjectListItem) == 0x000028, "Wrong size on IOrionObjectListItem");

// Class OrionUI.OrionDeckBuilderTab_DeckCustomize
// 0x0010 (0x02D0 - 0x02C0)
class UOrionDeckBuilderTab_DeckCustomize final : public UOrionDeckBuilderTab
{
public:
	class UOrionEditableTextBox*                  EditText_DeckName;                                 // 0x02C0(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionDeckListEntry*                    Deck_Entry;                                        // 0x02C8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	void DynamicNameChanged(const class FText& NewText);
	void DynamicNameCommitted(const class FText& NewText, ETextCommit CommitMethod);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"OrionDeckBuilderTab_DeckCustomize">();
	}
	static class UOrionDeckBuilderTab_DeckCustomize* GetDefaultObj()
	{
		return GetDefaultObjImpl<UOrionDeckBuilderTab_DeckCustomize>();
	}
};
static_assert(alignof(UOrionDeckBuilderTab_DeckCustomize) == 0x000008, "Wrong alignment on UOrionDeckBuilderTab_DeckCustomize");
static_assert(sizeof(UOrionDeckBuilderTab_DeckCustomize) == 0x0002D0, "Wrong size on UOrionDeckBuilderTab_DeckCustomize");
static_assert(offsetof(UOrionDeckBuilderTab_DeckCustomize, EditText_DeckName) == 0x0002C0, "Member 'UOrionDeckBuilderTab_DeckCustomize::EditText_DeckName' has a wrong offset!");
static_assert(offsetof(UOrionDeckBuilderTab_DeckCustomize, Deck_Entry) == 0x0002C8, "Member 'UOrionDeckBuilderTab_DeckCustomize::Deck_Entry' has a wrong offset!");

// Class OrionUI.OrionDeckBuilderTab_Gems
// 0x0030 (0x02F0 - 0x02C0)
class UOrionDeckBuilderTab_Gems final : public UOrionDeckBuilderTab
{
public:
	TArray<class UOrionMcpGemItem*>               CurrentGems;                                       // 0x02C0(0x0010)(ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected)
	class UOrionGemSelectionDisplay*              Gem_SelectionDisplay;                              // 0x02D0(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionFilterToggleButton*               Button_Toggle;                                     // 0x02D8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionEditableTextBox*                  Text_SearchBox;                                    // 0x02E0(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_2E8[0x8];                                      // 0x02E8(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void DynamicSearchTextChanged(const class FText& NewText);
	void DynamicSearchTextCommitted(const class FText& NewText, ETextCommit CommitMethod);
	void HandleToggleButtonSort();
	void OnGemRecount(TArray<class UOrionMcpGemItem*>* NewGems);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"OrionDeckBuilderTab_Gems">();
	}
	static class UOrionDeckBuilderTab_Gems* GetDefaultObj()
	{
		return GetDefaultObjImpl<UOrionDeckBuilderTab_Gems>();
	}
};
static_assert(alignof(UOrionDeckBuilderTab_Gems) == 0x000008, "Wrong alignment on UOrionDeckBuilderTab_Gems");
static_assert(sizeof(UOrionDeckBuilderTab_Gems) == 0x0002F0, "Wrong size on UOrionDeckBuilderTab_Gems");
static_assert(offsetof(UOrionDeckBuilderTab_Gems, CurrentGems) == 0x0002C0, "Member 'UOrionDeckBuilderTab_Gems::CurrentGems' has a wrong offset!");
static_assert(offsetof(UOrionDeckBuilderTab_Gems, Gem_SelectionDisplay) == 0x0002D0, "Member 'UOrionDeckBuilderTab_Gems::Gem_SelectionDisplay' has a wrong offset!");
static_assert(offsetof(UOrionDeckBuilderTab_Gems, Button_Toggle) == 0x0002D8, "Member 'UOrionDeckBuilderTab_Gems::Button_Toggle' has a wrong offset!");
static_assert(offsetof(UOrionDeckBuilderTab_Gems, Text_SearchBox) == 0x0002E0, "Member 'UOrionDeckBuilderTab_Gems::Text_SearchBox' has a wrong offset!");

// Class OrionUI.OrionRecipeCostDisplay
// 0x00C8 (0x0380 - 0x02B8)
class UOrionRecipeCostDisplay final : public UOrionUserWidgetBase
{
public:
	uint8                                         Pad_2B8[0x98];                                     // 0x02B8(0x0098)(Fixing Size After Last Property [ Dumper-7 ])
	class UOrionRewardWidget*                     Reward_LargeIcon;                                  // 0x0350(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionLazyImage*                        Image_PrimaryCost;                                 // 0x0358(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionTextBlock*                        Text_PrimaryCost;                                  // 0x0360(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionTextBlock*                        Text_LargeIconHaveQuantity;                        // 0x0368(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionTextBlock*                        Text_LargeIconRequiredQuantity;                    // 0x0370(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionBaseButton*                       Button_Unlock;                                     // 0x0378(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	void OnCanAffordLargeIcon(bool bCanAfford);
	void OnCanAffordPrimary(bool bCanAfford);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"OrionRecipeCostDisplay">();
	}
	static class UOrionRecipeCostDisplay* GetDefaultObj()
	{
		return GetDefaultObjImpl<UOrionRecipeCostDisplay>();
	}
};
static_assert(alignof(UOrionRecipeCostDisplay) == 0x000008, "Wrong alignment on UOrionRecipeCostDisplay");
static_assert(sizeof(UOrionRecipeCostDisplay) == 0x000380, "Wrong size on UOrionRecipeCostDisplay");
static_assert(offsetof(UOrionRecipeCostDisplay, Reward_LargeIcon) == 0x000350, "Member 'UOrionRecipeCostDisplay::Reward_LargeIcon' has a wrong offset!");
static_assert(offsetof(UOrionRecipeCostDisplay, Image_PrimaryCost) == 0x000358, "Member 'UOrionRecipeCostDisplay::Image_PrimaryCost' has a wrong offset!");
static_assert(offsetof(UOrionRecipeCostDisplay, Text_PrimaryCost) == 0x000360, "Member 'UOrionRecipeCostDisplay::Text_PrimaryCost' has a wrong offset!");
static_assert(offsetof(UOrionRecipeCostDisplay, Text_LargeIconHaveQuantity) == 0x000368, "Member 'UOrionRecipeCostDisplay::Text_LargeIconHaveQuantity' has a wrong offset!");
static_assert(offsetof(UOrionRecipeCostDisplay, Text_LargeIconRequiredQuantity) == 0x000370, "Member 'UOrionRecipeCostDisplay::Text_LargeIconRequiredQuantity' has a wrong offset!");
static_assert(offsetof(UOrionRecipeCostDisplay, Button_Unlock) == 0x000378, "Member 'UOrionRecipeCostDisplay::Button_Unlock' has a wrong offset!");

// Class OrionUI.OrionTabButton
// 0x0010 (0x09F0 - 0x09E0)
class UOrionTabButton : public UOrionBaseButton
{
public:
	class UOrionTextBlock*                        Text_TabTitle;                                     // 0x09E0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionInputVisualizer*                  Input_BoundKey;                                    // 0x09E8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	void OnSetListType(EOrionTabListType ListType);
	void SetTabTitle(const class FText& TitleText);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"OrionTabButton">();
	}
	static class UOrionTabButton* GetDefaultObj()
	{
		return GetDefaultObjImpl<UOrionTabButton>();
	}
};
static_assert(alignof(UOrionTabButton) == 0x000008, "Wrong alignment on UOrionTabButton");
static_assert(sizeof(UOrionTabButton) == 0x0009F0, "Wrong size on UOrionTabButton");
static_assert(offsetof(UOrionTabButton, Text_TabTitle) == 0x0009E0, "Member 'UOrionTabButton::Text_TabTitle' has a wrong offset!");
static_assert(offsetof(UOrionTabButton, Input_BoundKey) == 0x0009E8, "Member 'UOrionTabButton::Input_BoundKey' has a wrong offset!");

// Class OrionUI.OrionDeckBuilderTabButton
// 0x0020 (0x0A10 - 0x09F0)
class UOrionDeckBuilderTabButton final : public UOrionTabButton
{
public:
	class UHorizontalBox*                         HorizontalBox_Count;                               // 0x09F0(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UOrionTextBlock*                        Text_Count;                                        // 0x09F8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UOrionTextBlock*                        Text_Requirement;                                  // 0x0A00(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_A08[0x8];                                      // 0x0A08(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"OrionDeckBuilderTabButton">();
	}
	static class UOrionDeckBuilderTabButton* GetDefaultObj()
	{
		return GetDefaultObjImpl<UOrionDeckBuilderTabButton>();
	}
};
static_assert(alignof(UOrionDeckBuilderTabButton) == 0x000008, "Wrong alignment on UOrionDeckBuilderTabButton");
static_assert(sizeof(UOrionDeckBuilderTabButton) == 0x000A10, "Wrong size on UOrionDeckBuilderTabButton");
static_assert(offsetof(UOrionDeckBuilderTabButton, HorizontalBox_Count) == 0x0009F0, "Member 'UOrionDeckBuilderTabButton::HorizontalBox_Count' has a wrong offset!");
static_assert(offsetof(UOrionDeckBuilderTabButton, Text_Count) == 0x0009F8, "Member 'UOrionDeckBuilderTabButton::Text_Count' has a wrong offset!");
static_assert(offsetof(UOrionDeckBuilderTabButton, Text_Requirement) == 0x000A00, "Member 'UOrionDeckBuilderTabButton::Text_Requirement' has a wrong offset!");

// Class OrionUI.OrionAbilityFeedbackDisplay
// 0x0068 (0x04B0 - 0x0448)
class UOrionAbilityFeedbackDisplay final : public UOrionActivatableWidget
{
public:
	struct FSlateColor                            ManaCostColor;                                     // 0x0448(0x0028)(Edit, Protected, NativeAccessSpecifierProtected)
	uint8                                         Pad_470[0xC];                                      // 0x0470(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         DisplayTime;                                       // 0x047C(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_480[0x8];                                      // 0x0480(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	class UOrionRichText*                         RichText_Message;                                  // 0x0488(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionTextBlock*                        Text_ValueDisplay;                                 // 0x0490(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UImage*                                 Image_Cooldown;                                    // 0x0498(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UImage*                                 Image_ManaRegen;                                   // 0x04A0(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_4A8[0x8];                                      // 0x04A8(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void OnAbilityLockedError();
	void OnCooldownError();
	void OnGeneralAbilityFailError();
	void OnNotEnoughManaError();
	void OnPulseCurrentInfo();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"OrionAbilityFeedbackDisplay">();
	}
	static class UOrionAbilityFeedbackDisplay* GetDefaultObj()
	{
		return GetDefaultObjImpl<UOrionAbilityFeedbackDisplay>();
	}
};
static_assert(alignof(UOrionAbilityFeedbackDisplay) == 0x000008, "Wrong alignment on UOrionAbilityFeedbackDisplay");
static_assert(sizeof(UOrionAbilityFeedbackDisplay) == 0x0004B0, "Wrong size on UOrionAbilityFeedbackDisplay");
static_assert(offsetof(UOrionAbilityFeedbackDisplay, ManaCostColor) == 0x000448, "Member 'UOrionAbilityFeedbackDisplay::ManaCostColor' has a wrong offset!");
static_assert(offsetof(UOrionAbilityFeedbackDisplay, DisplayTime) == 0x00047C, "Member 'UOrionAbilityFeedbackDisplay::DisplayTime' has a wrong offset!");
static_assert(offsetof(UOrionAbilityFeedbackDisplay, RichText_Message) == 0x000488, "Member 'UOrionAbilityFeedbackDisplay::RichText_Message' has a wrong offset!");
static_assert(offsetof(UOrionAbilityFeedbackDisplay, Text_ValueDisplay) == 0x000490, "Member 'UOrionAbilityFeedbackDisplay::Text_ValueDisplay' has a wrong offset!");
static_assert(offsetof(UOrionAbilityFeedbackDisplay, Image_Cooldown) == 0x000498, "Member 'UOrionAbilityFeedbackDisplay::Image_Cooldown' has a wrong offset!");
static_assert(offsetof(UOrionAbilityFeedbackDisplay, Image_ManaRegen) == 0x0004A0, "Member 'UOrionAbilityFeedbackDisplay::Image_ManaRegen' has a wrong offset!");

// Class OrionUI.OrionDeckBuilderWidget
// 0x00E8 (0x0530 - 0x0448)
class UOrionDeckBuilderWidget final : public UOrionActivatableWidget
{
public:
	TSubclassOf<class UOrionTabButton>            TabButtonClass;                                    // 0x0448(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FUserCreatedDeck                       UserCreatedDeck;                                   // 0x0450(0x0048)(Transient, Protected, NativeAccessSpecifierProtected)
	struct FUserCreatedDeck                       LastSavedDeck;                                     // 0x0498(0x0048)(Transient, Protected, NativeAccessSpecifierProtected)
	class UOrionMcpDeckItem*                      ActiveDeckItem;                                    // 0x04E0(0x0008)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_4E8[0x10];                                     // 0x04E8(0x0010)(Fixing Size After Last Property [ Dumper-7 ])
	class UOrionTabListWidget*                    TabList_Pages;                                     // 0x04F8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionWidgetSwitcher*                   Switcher_BuilderPages;                             // 0x0500(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionDeckBuilderTab_Cards*             Tab_Cards;                                         // 0x0508(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionDeckBuilderTab_Gems*              Tab_Gems;                                          // 0x0510(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionDeckBuilderTab_DeckCustomize*     Tab_Customize;                                     // 0x0518(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionDeckSummaryWidget*                DeckSummary;                                       // 0x0520(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionDeckBuilderCardTooltip*           Tooltip_HoveredCard;                               // 0x0528(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	void RequestDeckBuilderClose();
	void SetActiveDeck(class UOrionMcpDeckItem* DeckItem);
	void SetSavingText(bool bIsSaving);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"OrionDeckBuilderWidget">();
	}
	static class UOrionDeckBuilderWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UOrionDeckBuilderWidget>();
	}
};
static_assert(alignof(UOrionDeckBuilderWidget) == 0x000008, "Wrong alignment on UOrionDeckBuilderWidget");
static_assert(sizeof(UOrionDeckBuilderWidget) == 0x000530, "Wrong size on UOrionDeckBuilderWidget");
static_assert(offsetof(UOrionDeckBuilderWidget, TabButtonClass) == 0x000448, "Member 'UOrionDeckBuilderWidget::TabButtonClass' has a wrong offset!");
static_assert(offsetof(UOrionDeckBuilderWidget, UserCreatedDeck) == 0x000450, "Member 'UOrionDeckBuilderWidget::UserCreatedDeck' has a wrong offset!");
static_assert(offsetof(UOrionDeckBuilderWidget, LastSavedDeck) == 0x000498, "Member 'UOrionDeckBuilderWidget::LastSavedDeck' has a wrong offset!");
static_assert(offsetof(UOrionDeckBuilderWidget, ActiveDeckItem) == 0x0004E0, "Member 'UOrionDeckBuilderWidget::ActiveDeckItem' has a wrong offset!");
static_assert(offsetof(UOrionDeckBuilderWidget, TabList_Pages) == 0x0004F8, "Member 'UOrionDeckBuilderWidget::TabList_Pages' has a wrong offset!");
static_assert(offsetof(UOrionDeckBuilderWidget, Switcher_BuilderPages) == 0x000500, "Member 'UOrionDeckBuilderWidget::Switcher_BuilderPages' has a wrong offset!");
static_assert(offsetof(UOrionDeckBuilderWidget, Tab_Cards) == 0x000508, "Member 'UOrionDeckBuilderWidget::Tab_Cards' has a wrong offset!");
static_assert(offsetof(UOrionDeckBuilderWidget, Tab_Gems) == 0x000510, "Member 'UOrionDeckBuilderWidget::Tab_Gems' has a wrong offset!");
static_assert(offsetof(UOrionDeckBuilderWidget, Tab_Customize) == 0x000518, "Member 'UOrionDeckBuilderWidget::Tab_Customize' has a wrong offset!");
static_assert(offsetof(UOrionDeckBuilderWidget, DeckSummary) == 0x000520, "Member 'UOrionDeckBuilderWidget::DeckSummary' has a wrong offset!");
static_assert(offsetof(UOrionDeckBuilderWidget, Tooltip_HoveredCard) == 0x000528, "Member 'UOrionDeckBuilderWidget::Tooltip_HoveredCard' has a wrong offset!");

// Class OrionUI.OrionDeckCollection
// 0x0048 (0x0490 - 0x0448)
class UOrionDeckCollection final : public UOrionActivatableWidget
{
public:
	TArray<class UOrionMcpDeckItem*>              DeckData;                                          // 0x0448(0x0010)(ZeroConstructor, Transient, NativeAccessSpecifierPrivate)
	uint8                                         Pad_458[0x8];                                      // 0x0458(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	class UOrionTileView*                         TileView_Decks;                                    // 0x0460(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionBaseButton*                       Button_NewDeck;                                    // 0x0468(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionBaseButton*                       Button_DeleteDeck;                                 // 0x0470(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionBaseButton*                       Button_EditDeck;                                   // 0x0478(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionTextBlock*                        Text_DeckCountInformation;                         // 0x0480(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_488[0x8];                                      // 0x0488(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void DeckEntryClicked(class UObject* Item, bool bIsSelected);
	void HandleUnlockWidgetClose();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"OrionDeckCollection">();
	}
	static class UOrionDeckCollection* GetDefaultObj()
	{
		return GetDefaultObjImpl<UOrionDeckCollection>();
	}
};
static_assert(alignof(UOrionDeckCollection) == 0x000008, "Wrong alignment on UOrionDeckCollection");
static_assert(sizeof(UOrionDeckCollection) == 0x000490, "Wrong size on UOrionDeckCollection");
static_assert(offsetof(UOrionDeckCollection, DeckData) == 0x000448, "Member 'UOrionDeckCollection::DeckData' has a wrong offset!");
static_assert(offsetof(UOrionDeckCollection, TileView_Decks) == 0x000460, "Member 'UOrionDeckCollection::TileView_Decks' has a wrong offset!");
static_assert(offsetof(UOrionDeckCollection, Button_NewDeck) == 0x000468, "Member 'UOrionDeckCollection::Button_NewDeck' has a wrong offset!");
static_assert(offsetof(UOrionDeckCollection, Button_DeleteDeck) == 0x000470, "Member 'UOrionDeckCollection::Button_DeleteDeck' has a wrong offset!");
static_assert(offsetof(UOrionDeckCollection, Button_EditDeck) == 0x000478, "Member 'UOrionDeckCollection::Button_EditDeck' has a wrong offset!");
static_assert(offsetof(UOrionDeckCollection, Text_DeckCountInformation) == 0x000480, "Member 'UOrionDeckCollection::Text_DeckCountInformation' has a wrong offset!");

// Class OrionUI.OrionMiniMap
// 0x0338 (0x0430 - 0x00F8)
class UOrionMiniMap final : public UWidget
{
public:
	class UMaterialInterface*                     MinionMaterial;                                    // 0x00F8(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UMaterialInterface*                     TowerMaterial;                                     // 0x0100(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UMaterialInterface*                     MinionCampsMaterial;                               // 0x0108(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UMaterialInterface*                     BackgroundMaterial;                                // 0x0110(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTexture2D*                             FogOfWar_FullCoverageTexture;                      // 0x0118(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USlateVectorArtData*                    FogOfWar_Blip_VectorArt;                           // 0x0120(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_128[0x8];                                      // 0x0128(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateBrush                            SpectatorBrush;                                    // 0x0130(0x0078)(Transient, Protected, NativeAccessSpecifierProtected)
	struct FSlateBrush                            MinionBrush;                                       // 0x01A8(0x0078)(Transient, Protected, NativeAccessSpecifierProtected)
	class UMaterialInstanceDynamic*               MinionMID;                                         // 0x0220(0x0008)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FSlateBrush                            TowerBrush;                                        // 0x0228(0x0078)(Transient, Protected, NativeAccessSpecifierProtected)
	class UMaterialInstanceDynamic*               TowerMID;                                          // 0x02A0(0x0008)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FSlateBrush                            MinionCampBrush;                                   // 0x02A8(0x0078)(Transient, Protected, NativeAccessSpecifierProtected)
	class UMaterialInstanceDynamic*               MinionCampMID;                                     // 0x0320(0x0008)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTexture2D*                             BackgroundTexture;                                 // 0x0328(0x0008)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UMaterialInstanceDynamic*               BackgroundMID;                                     // 0x0330(0x0008)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextureRenderTarget2D*                 FogOfWar_RenderTarget;                             // 0x0338(0x0008)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_340[0xD0];                                     // 0x0340(0x00D0)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture2D*                             BackgroundTextureLarge;                            // 0x0410(0x0008)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_418[0x18];                                     // 0x0418(0x0018)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void OnTeamChanged(EOrionTeam NewTeamNum);
	void ResetMinimapScaling();
	void SetLocalPlayerController(class APlayerController* LocalPlayerController);
	void SetMapModeIsLarge(bool bIsLargeMap);
	void SetupMiniMap();

	const bool GetMapModeIsLarge() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"OrionMiniMap">();
	}
	static class UOrionMiniMap* GetDefaultObj()
	{
		return GetDefaultObjImpl<UOrionMiniMap>();
	}
};
static_assert(alignof(UOrionMiniMap) == 0x000008, "Wrong alignment on UOrionMiniMap");
static_assert(sizeof(UOrionMiniMap) == 0x000430, "Wrong size on UOrionMiniMap");
static_assert(offsetof(UOrionMiniMap, MinionMaterial) == 0x0000F8, "Member 'UOrionMiniMap::MinionMaterial' has a wrong offset!");
static_assert(offsetof(UOrionMiniMap, TowerMaterial) == 0x000100, "Member 'UOrionMiniMap::TowerMaterial' has a wrong offset!");
static_assert(offsetof(UOrionMiniMap, MinionCampsMaterial) == 0x000108, "Member 'UOrionMiniMap::MinionCampsMaterial' has a wrong offset!");
static_assert(offsetof(UOrionMiniMap, BackgroundMaterial) == 0x000110, "Member 'UOrionMiniMap::BackgroundMaterial' has a wrong offset!");
static_assert(offsetof(UOrionMiniMap, FogOfWar_FullCoverageTexture) == 0x000118, "Member 'UOrionMiniMap::FogOfWar_FullCoverageTexture' has a wrong offset!");
static_assert(offsetof(UOrionMiniMap, FogOfWar_Blip_VectorArt) == 0x000120, "Member 'UOrionMiniMap::FogOfWar_Blip_VectorArt' has a wrong offset!");
static_assert(offsetof(UOrionMiniMap, SpectatorBrush) == 0x000130, "Member 'UOrionMiniMap::SpectatorBrush' has a wrong offset!");
static_assert(offsetof(UOrionMiniMap, MinionBrush) == 0x0001A8, "Member 'UOrionMiniMap::MinionBrush' has a wrong offset!");
static_assert(offsetof(UOrionMiniMap, MinionMID) == 0x000220, "Member 'UOrionMiniMap::MinionMID' has a wrong offset!");
static_assert(offsetof(UOrionMiniMap, TowerBrush) == 0x000228, "Member 'UOrionMiniMap::TowerBrush' has a wrong offset!");
static_assert(offsetof(UOrionMiniMap, TowerMID) == 0x0002A0, "Member 'UOrionMiniMap::TowerMID' has a wrong offset!");
static_assert(offsetof(UOrionMiniMap, MinionCampBrush) == 0x0002A8, "Member 'UOrionMiniMap::MinionCampBrush' has a wrong offset!");
static_assert(offsetof(UOrionMiniMap, MinionCampMID) == 0x000320, "Member 'UOrionMiniMap::MinionCampMID' has a wrong offset!");
static_assert(offsetof(UOrionMiniMap, BackgroundTexture) == 0x000328, "Member 'UOrionMiniMap::BackgroundTexture' has a wrong offset!");
static_assert(offsetof(UOrionMiniMap, BackgroundMID) == 0x000330, "Member 'UOrionMiniMap::BackgroundMID' has a wrong offset!");
static_assert(offsetof(UOrionMiniMap, FogOfWar_RenderTarget) == 0x000338, "Member 'UOrionMiniMap::FogOfWar_RenderTarget' has a wrong offset!");
static_assert(offsetof(UOrionMiniMap, BackgroundTextureLarge) == 0x000410, "Member 'UOrionMiniMap::BackgroundTextureLarge' has a wrong offset!");

// Class OrionUI.OrionDeckListEntry
// 0x0040 (0x0A20 - 0x09E0)
class UOrionDeckListEntry final : public UOrionBaseButton
{
public:
	uint8                                         Pad_9E0[0x20];                                     // 0x09E0(0x0020)(Fixing Size After Last Property [ Dumper-7 ])
	class UOrionTextBlock*                        Text_Name;                                         // 0x0A00(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionTextBlock*                        Text_Affinity1;                                    // 0x0A08(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionTextBlock*                        Text_Affinity2;                                    // 0x0A10(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionUserWidgetBase*                   Icon_Warning;                                      // 0x0A18(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	void OnDeckSet(EAffinityType Affinity0, EAffinityType Affinity1);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"OrionDeckListEntry">();
	}
	static class UOrionDeckListEntry* GetDefaultObj()
	{
		return GetDefaultObjImpl<UOrionDeckListEntry>();
	}
};
static_assert(alignof(UOrionDeckListEntry) == 0x000008, "Wrong alignment on UOrionDeckListEntry");
static_assert(sizeof(UOrionDeckListEntry) == 0x000A20, "Wrong size on UOrionDeckListEntry");
static_assert(offsetof(UOrionDeckListEntry, Text_Name) == 0x000A00, "Member 'UOrionDeckListEntry::Text_Name' has a wrong offset!");
static_assert(offsetof(UOrionDeckListEntry, Text_Affinity1) == 0x000A08, "Member 'UOrionDeckListEntry::Text_Affinity1' has a wrong offset!");
static_assert(offsetof(UOrionDeckListEntry, Text_Affinity2) == 0x000A10, "Member 'UOrionDeckListEntry::Text_Affinity2' has a wrong offset!");
static_assert(offsetof(UOrionDeckListEntry, Icon_Warning) == 0x000A18, "Member 'UOrionDeckListEntry::Icon_Warning' has a wrong offset!");

// Class OrionUI.OrionDeckSelectionScreen
// 0x00B8 (0x0500 - 0x0448)
class UOrionDeckSelectionScreen final : public UOrionActivatableWidget
{
public:
	uint8                                         Pad_448[0x48];                                     // 0x0448(0x0048)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         TranslationTime;                                   // 0x0490(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_494[0x24];                                     // 0x0494(0x0024)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UOrionMcpDeckItem*>              CulledSortedDecks;                                 // 0x04B8(0x0010)(ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected)
	class UOverlay*                               Overlay_DeckEntries;                               // 0x04C8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionDynamicEntryBox*                  EntryBox_Decks;                                    // 0x04D0(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionDefaultButton*                    Button_Confirm;                                    // 0x04D8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionDefaultButton*                    Button_Next;                                       // 0x04E0(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionDefaultButton*                    Button_Previous;                                   // 0x04E8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionTextBlock*                        Text_SelectedDeckDescription;                      // 0x04F0(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_4F8[0x8];                                      // 0x04F8(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"OrionDeckSelectionScreen">();
	}
	static class UOrionDeckSelectionScreen* GetDefaultObj()
	{
		return GetDefaultObjImpl<UOrionDeckSelectionScreen>();
	}
};
static_assert(alignof(UOrionDeckSelectionScreen) == 0x000008, "Wrong alignment on UOrionDeckSelectionScreen");
static_assert(sizeof(UOrionDeckSelectionScreen) == 0x000500, "Wrong size on UOrionDeckSelectionScreen");
static_assert(offsetof(UOrionDeckSelectionScreen, TranslationTime) == 0x000490, "Member 'UOrionDeckSelectionScreen::TranslationTime' has a wrong offset!");
static_assert(offsetof(UOrionDeckSelectionScreen, CulledSortedDecks) == 0x0004B8, "Member 'UOrionDeckSelectionScreen::CulledSortedDecks' has a wrong offset!");
static_assert(offsetof(UOrionDeckSelectionScreen, Overlay_DeckEntries) == 0x0004C8, "Member 'UOrionDeckSelectionScreen::Overlay_DeckEntries' has a wrong offset!");
static_assert(offsetof(UOrionDeckSelectionScreen, EntryBox_Decks) == 0x0004D0, "Member 'UOrionDeckSelectionScreen::EntryBox_Decks' has a wrong offset!");
static_assert(offsetof(UOrionDeckSelectionScreen, Button_Confirm) == 0x0004D8, "Member 'UOrionDeckSelectionScreen::Button_Confirm' has a wrong offset!");
static_assert(offsetof(UOrionDeckSelectionScreen, Button_Next) == 0x0004E0, "Member 'UOrionDeckSelectionScreen::Button_Next' has a wrong offset!");
static_assert(offsetof(UOrionDeckSelectionScreen, Button_Previous) == 0x0004E8, "Member 'UOrionDeckSelectionScreen::Button_Previous' has a wrong offset!");
static_assert(offsetof(UOrionDeckSelectionScreen, Text_SelectedDeckDescription) == 0x0004F0, "Member 'UOrionDeckSelectionScreen::Text_SelectedDeckDescription' has a wrong offset!");

// Class OrionUI.OrionSinglePlayerRating
// 0x0028 (0x02E0 - 0x02B8)
class UOrionSinglePlayerRating : public UOrionUserWidgetBase
{
public:
	EPlayerRatingResult                           RatingValue;                                       // 0x02B8(0x0001)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2B9[0x7];                                      // 0x02B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UImage*                                 Character_Icon;                                    // 0x02C0(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionTextBlock*                        PlayerName;                                        // 0x02C8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionDefaultButton*                    Rating_Button;                                     // 0x02D0(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UBorder*                                Colored_Border;                                    // 0x02D8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	void CloseChildMenu();
	void RecordNewRating(EPlayerRatingResult InRatingValue);
	void RecordRatingInternal(EPlayerRatingResult Rating);
	void ResetRatingState();
	void RevertButtonGraphic();
	void UpdateButtonText(const class FText& _Text);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"OrionSinglePlayerRating">();
	}
	static class UOrionSinglePlayerRating* GetDefaultObj()
	{
		return GetDefaultObjImpl<UOrionSinglePlayerRating>();
	}
};
static_assert(alignof(UOrionSinglePlayerRating) == 0x000008, "Wrong alignment on UOrionSinglePlayerRating");
static_assert(sizeof(UOrionSinglePlayerRating) == 0x0002E0, "Wrong size on UOrionSinglePlayerRating");
static_assert(offsetof(UOrionSinglePlayerRating, RatingValue) == 0x0002B8, "Member 'UOrionSinglePlayerRating::RatingValue' has a wrong offset!");
static_assert(offsetof(UOrionSinglePlayerRating, Character_Icon) == 0x0002C0, "Member 'UOrionSinglePlayerRating::Character_Icon' has a wrong offset!");
static_assert(offsetof(UOrionSinglePlayerRating, PlayerName) == 0x0002C8, "Member 'UOrionSinglePlayerRating::PlayerName' has a wrong offset!");
static_assert(offsetof(UOrionSinglePlayerRating, Rating_Button) == 0x0002D0, "Member 'UOrionSinglePlayerRating::Rating_Button' has a wrong offset!");
static_assert(offsetof(UOrionSinglePlayerRating, Colored_Border) == 0x0002D8, "Member 'UOrionSinglePlayerRating::Colored_Border' has a wrong offset!");

// Class OrionUI.OrionDeckSummaryWidget
// 0x0098 (0x0350 - 0x02B8)
class UOrionDeckSummaryWidget final : public UOrionUserWidgetBase
{
public:
	uint8                                         Pad_2B8[0x88];                                     // 0x02B8(0x0088)(Fixing Size After Last Property [ Dumper-7 ])
	class UOrionDynamicEntryBox*                  EntryBox_Gems;                                     // 0x0340(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionDynamicEntryBox*                  EntryBox_Cards;                                    // 0x0348(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"OrionDeckSummaryWidget">();
	}
	static class UOrionDeckSummaryWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UOrionDeckSummaryWidget>();
	}
};
static_assert(alignof(UOrionDeckSummaryWidget) == 0x000008, "Wrong alignment on UOrionDeckSummaryWidget");
static_assert(sizeof(UOrionDeckSummaryWidget) == 0x000350, "Wrong size on UOrionDeckSummaryWidget");
static_assert(offsetof(UOrionDeckSummaryWidget, EntryBox_Gems) == 0x000340, "Member 'UOrionDeckSummaryWidget::EntryBox_Gems' has a wrong offset!");
static_assert(offsetof(UOrionDeckSummaryWidget, EntryBox_Cards) == 0x000348, "Member 'UOrionDeckSummaryWidget::EntryBox_Cards' has a wrong offset!");

// Class OrionUI.OrionDefaultButton
// 0x00E0 (0x0AC0 - 0x09E0)
class UOrionDefaultButton : public UOrionBaseButton
{
public:
	float                                         MinContentSpacing;                                 // 0x09E0(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                         WrapLabelTextAt;                                   // 0x09E4(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FText                                   Text;                                              // 0x09E8(0x0018)(Edit, BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)
	EOrionTextColor                               NormalTextColor;                                   // 0x0A00(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	EOrionTextColor                               HoveredTextColor;                                  // 0x0A01(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	EHorizontalAlignment                          TextAlignment_NoIcon;                              // 0x0A02(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	EHorizontalAlignment                          TextAlignment_WithIcon;                            // 0x0A03(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	EHorizontalAlignment                          IconAlignment;                                     // 0x0A04(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	EHorizontalAlignment                          ContentAlignment;                                  // 0x0A05(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_A06[0x2];                                      // 0x0A06(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateBrush                            IconBrush;                                         // 0x0A08(0x0078)(Edit, BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)
	float                                         IconSizes[0x3];                                    // 0x0A80(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bIconOnRight;                                      // 0x0A8C(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_A8D[0x3];                                      // 0x0A8D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class USizeBox*                               SizeBox_Container;                                 // 0x0A90(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UHorizontalBox*                         HBox_Content;                                      // 0x0A98(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UImage*                                 Image_Icon;                                        // 0x0AA0(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionTextBlock*                        Text_Label;                                        // 0x0AA8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionInputVisualizer*                  Input_BoundKey;                                    // 0x0AB0(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_AB8[0x8];                                      // 0x0AB8(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void RefreshLayout();
	void SetHoveredContentColor(EOrionTextColor InHoveredTextColor);
	void SetNormalContentColor(EOrionTextColor InNormalTextColor);
	void UpdateIcon(const struct FSlateBrush& Brush, bool bRetainBrushImageSize);
	void UpdateIconFromTexture(class UTexture2D* Texture);
	void UpdateSpecificImageSize(EOrionWidgetStyleSize Type, float InSize);
	void UpdateText(const class FText& InText);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"OrionDefaultButton">();
	}
	static class UOrionDefaultButton* GetDefaultObj()
	{
		return GetDefaultObjImpl<UOrionDefaultButton>();
	}
};
static_assert(alignof(UOrionDefaultButton) == 0x000008, "Wrong alignment on UOrionDefaultButton");
static_assert(sizeof(UOrionDefaultButton) == 0x000AC0, "Wrong size on UOrionDefaultButton");
static_assert(offsetof(UOrionDefaultButton, MinContentSpacing) == 0x0009E0, "Member 'UOrionDefaultButton::MinContentSpacing' has a wrong offset!");
static_assert(offsetof(UOrionDefaultButton, WrapLabelTextAt) == 0x0009E4, "Member 'UOrionDefaultButton::WrapLabelTextAt' has a wrong offset!");
static_assert(offsetof(UOrionDefaultButton, Text) == 0x0009E8, "Member 'UOrionDefaultButton::Text' has a wrong offset!");
static_assert(offsetof(UOrionDefaultButton, NormalTextColor) == 0x000A00, "Member 'UOrionDefaultButton::NormalTextColor' has a wrong offset!");
static_assert(offsetof(UOrionDefaultButton, HoveredTextColor) == 0x000A01, "Member 'UOrionDefaultButton::HoveredTextColor' has a wrong offset!");
static_assert(offsetof(UOrionDefaultButton, TextAlignment_NoIcon) == 0x000A02, "Member 'UOrionDefaultButton::TextAlignment_NoIcon' has a wrong offset!");
static_assert(offsetof(UOrionDefaultButton, TextAlignment_WithIcon) == 0x000A03, "Member 'UOrionDefaultButton::TextAlignment_WithIcon' has a wrong offset!");
static_assert(offsetof(UOrionDefaultButton, IconAlignment) == 0x000A04, "Member 'UOrionDefaultButton::IconAlignment' has a wrong offset!");
static_assert(offsetof(UOrionDefaultButton, ContentAlignment) == 0x000A05, "Member 'UOrionDefaultButton::ContentAlignment' has a wrong offset!");
static_assert(offsetof(UOrionDefaultButton, IconBrush) == 0x000A08, "Member 'UOrionDefaultButton::IconBrush' has a wrong offset!");
static_assert(offsetof(UOrionDefaultButton, IconSizes) == 0x000A80, "Member 'UOrionDefaultButton::IconSizes' has a wrong offset!");
static_assert(offsetof(UOrionDefaultButton, bIconOnRight) == 0x000A8C, "Member 'UOrionDefaultButton::bIconOnRight' has a wrong offset!");
static_assert(offsetof(UOrionDefaultButton, SizeBox_Container) == 0x000A90, "Member 'UOrionDefaultButton::SizeBox_Container' has a wrong offset!");
static_assert(offsetof(UOrionDefaultButton, HBox_Content) == 0x000A98, "Member 'UOrionDefaultButton::HBox_Content' has a wrong offset!");
static_assert(offsetof(UOrionDefaultButton, Image_Icon) == 0x000AA0, "Member 'UOrionDefaultButton::Image_Icon' has a wrong offset!");
static_assert(offsetof(UOrionDefaultButton, Text_Label) == 0x000AA8, "Member 'UOrionDefaultButton::Text_Label' has a wrong offset!");
static_assert(offsetof(UOrionDefaultButton, Input_BoundKey) == 0x000AB0, "Member 'UOrionDefaultButton::Input_BoundKey' has a wrong offset!");

// Class OrionUI.OrionMasteryRankDisplay
// 0x0010 (0x0210 - 0x0200)
class UOrionMasteryRankDisplay : public UUserWidget
{
public:
	class UOrionTextBlock*                        Text_RankNumber;                                   // 0x0200(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UImage*                                 Image_Lock;                                        // 0x0208(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	void OnRankSet(int32 Rank, float ProgressPercent, EOrionHeroRankTier RankTier);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"OrionMasteryRankDisplay">();
	}
	static class UOrionMasteryRankDisplay* GetDefaultObj()
	{
		return GetDefaultObjImpl<UOrionMasteryRankDisplay>();
	}
};
static_assert(alignof(UOrionMasteryRankDisplay) == 0x000008, "Wrong alignment on UOrionMasteryRankDisplay");
static_assert(sizeof(UOrionMasteryRankDisplay) == 0x000210, "Wrong size on UOrionMasteryRankDisplay");
static_assert(offsetof(UOrionMasteryRankDisplay, Text_RankNumber) == 0x000200, "Member 'UOrionMasteryRankDisplay::Text_RankNumber' has a wrong offset!");
static_assert(offsetof(UOrionMasteryRankDisplay, Image_Lock) == 0x000208, "Member 'UOrionMasteryRankDisplay::Image_Lock' has a wrong offset!");

// Class OrionUI.OrionDigitalFlameUserWidget
// 0x0010 (0x0300 - 0x02F0)
class UOrionDigitalFlameUserWidget final : public UOrionHUDWidgetBase
{
public:
	class UOrionDigitalFlameWidget*               DigitalFlame;                                      // 0x02F0(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_2F8[0x8];                                      // 0x02F8(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"OrionDigitalFlameUserWidget">();
	}
	static class UOrionDigitalFlameUserWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UOrionDigitalFlameUserWidget>();
	}
};
static_assert(alignof(UOrionDigitalFlameUserWidget) == 0x000008, "Wrong alignment on UOrionDigitalFlameUserWidget");
static_assert(sizeof(UOrionDigitalFlameUserWidget) == 0x000300, "Wrong size on UOrionDigitalFlameUserWidget");
static_assert(offsetof(UOrionDigitalFlameUserWidget, DigitalFlame) == 0x0002F0, "Member 'UOrionDigitalFlameUserWidget::DigitalFlame' has a wrong offset!");

// Class OrionUI.OrionDigitalFlameWidget
// 0x0338 (0x0430 - 0x00F8)
class UOrionDigitalFlameWidget final : public UWidget
{
public:
	uint8                                         Pad_F8[0x20];                                      // 0x00F8(0x0020)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         WidgetScale;                                       // 0x0118(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_11C[0x4];                                      // 0x011C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USlateVectorArtData*                    EmberAsset;                                        // 0x0120(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class USlateVectorArtData*                    OriginGlowAsset;                                   // 0x0128(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class USlateVectorArtData*                    OriginBloomAsset;                                  // 0x0130(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class USlateVectorArtData*                    StemGlowAsset;                                     // 0x0138(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         Ember_MinSpeed;                                    // 0x0140(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         Ember_MaxSpeed;                                    // 0x0144(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         EmberDensity;                                      // 0x0148(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_14C[0x4];                                      // 0x014C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRuntimeFloatCurve                     Meteor_OriginOffset;                               // 0x0150(0x0078)(Edit, NativeAccessSpecifierPrivate)
	struct FRuntimeFloatCurve                     Meteor_OriginBrightness;                           // 0x01C8(0x0078)(Edit, NativeAccessSpecifierPrivate)
	struct FRuntimeFloatCurve                     Pop_OriginBrightness;                              // 0x0240(0x0078)(Edit, NativeAccessSpecifierPrivate)
	struct FRuntimeFloatCurve                     Burn_OriginBrightness;                             // 0x02B8(0x0078)(Edit, NativeAccessSpecifierPrivate)
	struct FRuntimeFloatCurve                     Fade_OriginBrightness;                             // 0x0330(0x0078)(Edit, NativeAccessSpecifierPrivate)
	struct FRuntimeFloatCurve                     Fade_EmberDensity;                                 // 0x03A8(0x0078)(Edit, NativeAccessSpecifierPrivate)
	uint8                                         Pad_420[0x10];                                     // 0x0420(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void InitInHUD(class UOrionBaseHUDWidget* InHUDWidget);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"OrionDigitalFlameWidget">();
	}
	static class UOrionDigitalFlameWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UOrionDigitalFlameWidget>();
	}
};
static_assert(alignof(UOrionDigitalFlameWidget) == 0x000008, "Wrong alignment on UOrionDigitalFlameWidget");
static_assert(sizeof(UOrionDigitalFlameWidget) == 0x000430, "Wrong size on UOrionDigitalFlameWidget");
static_assert(offsetof(UOrionDigitalFlameWidget, WidgetScale) == 0x000118, "Member 'UOrionDigitalFlameWidget::WidgetScale' has a wrong offset!");
static_assert(offsetof(UOrionDigitalFlameWidget, EmberAsset) == 0x000120, "Member 'UOrionDigitalFlameWidget::EmberAsset' has a wrong offset!");
static_assert(offsetof(UOrionDigitalFlameWidget, OriginGlowAsset) == 0x000128, "Member 'UOrionDigitalFlameWidget::OriginGlowAsset' has a wrong offset!");
static_assert(offsetof(UOrionDigitalFlameWidget, OriginBloomAsset) == 0x000130, "Member 'UOrionDigitalFlameWidget::OriginBloomAsset' has a wrong offset!");
static_assert(offsetof(UOrionDigitalFlameWidget, StemGlowAsset) == 0x000138, "Member 'UOrionDigitalFlameWidget::StemGlowAsset' has a wrong offset!");
static_assert(offsetof(UOrionDigitalFlameWidget, Ember_MinSpeed) == 0x000140, "Member 'UOrionDigitalFlameWidget::Ember_MinSpeed' has a wrong offset!");
static_assert(offsetof(UOrionDigitalFlameWidget, Ember_MaxSpeed) == 0x000144, "Member 'UOrionDigitalFlameWidget::Ember_MaxSpeed' has a wrong offset!");
static_assert(offsetof(UOrionDigitalFlameWidget, EmberDensity) == 0x000148, "Member 'UOrionDigitalFlameWidget::EmberDensity' has a wrong offset!");
static_assert(offsetof(UOrionDigitalFlameWidget, Meteor_OriginOffset) == 0x000150, "Member 'UOrionDigitalFlameWidget::Meteor_OriginOffset' has a wrong offset!");
static_assert(offsetof(UOrionDigitalFlameWidget, Meteor_OriginBrightness) == 0x0001C8, "Member 'UOrionDigitalFlameWidget::Meteor_OriginBrightness' has a wrong offset!");
static_assert(offsetof(UOrionDigitalFlameWidget, Pop_OriginBrightness) == 0x000240, "Member 'UOrionDigitalFlameWidget::Pop_OriginBrightness' has a wrong offset!");
static_assert(offsetof(UOrionDigitalFlameWidget, Burn_OriginBrightness) == 0x0002B8, "Member 'UOrionDigitalFlameWidget::Burn_OriginBrightness' has a wrong offset!");
static_assert(offsetof(UOrionDigitalFlameWidget, Fade_OriginBrightness) == 0x000330, "Member 'UOrionDigitalFlameWidget::Fade_OriginBrightness' has a wrong offset!");
static_assert(offsetof(UOrionDigitalFlameWidget, Fade_EmberDensity) == 0x0003A8, "Member 'UOrionDigitalFlameWidget::Fade_EmberDensity' has a wrong offset!");

// Class OrionUI.OrionSkinVariationListItem
// 0x0030 (0x0A10 - 0x09E0)
class UOrionSkinVariationListItem final : public UOrionBaseButton
{
public:
	uint8                                         Pad_9E0[0x30];                                     // 0x09E0(0x0030)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void BP_OnSkinPurchased();
	void OnSkinVariationDefinitionSet(class UOrionSkinVariationItemDefinition* SkinVariation);
	void OnVariationUnlocked();

	bool IsOwned() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"OrionSkinVariationListItem">();
	}
	static class UOrionSkinVariationListItem* GetDefaultObj()
	{
		return GetDefaultObjImpl<UOrionSkinVariationListItem>();
	}
};
static_assert(alignof(UOrionSkinVariationListItem) == 0x000008, "Wrong alignment on UOrionSkinVariationListItem");
static_assert(sizeof(UOrionSkinVariationListItem) == 0x000A10, "Wrong size on UOrionSkinVariationListItem");

// Class OrionUI.OrionDraftHeroCustomization
// 0x0068 (0x04B0 - 0x0448)
class UOrionDraftHeroCustomization final : public UOrionActivatableWidget
{
public:
	uint8                                         Pad_448[0x10];                                     // 0x0448(0x0010)(Fixing Size After Last Property [ Dumper-7 ])
	class UOrionBaseButton_Group*                 SkinButtonGroup;                                   // 0x0458(0x0008)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionBaseButton_Group*                 SkinVariationButtonGroup;                          // 0x0460(0x0008)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_468[0x20];                                     // 0x0468(0x0020)(Fixing Size After Last Property [ Dumper-7 ])
	class UOrionDynamicEntryBox*                  EntryBox_Skins;                                    // 0x0488(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionDynamicEntryBox*                  EntryBox_Banners;                                  // 0x0490(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionDynamicEntryBox*                  EntryBox_SkinVariations;                           // 0x0498(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionBaseButton*                       Check_ShowMasteryCrown;                            // 0x04A0(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_4A8[0x8];                                      // 0x04A8(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void OnSkinChanged(bool bSkinHasVariants);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"OrionDraftHeroCustomization">();
	}
	static class UOrionDraftHeroCustomization* GetDefaultObj()
	{
		return GetDefaultObjImpl<UOrionDraftHeroCustomization>();
	}
};
static_assert(alignof(UOrionDraftHeroCustomization) == 0x000008, "Wrong alignment on UOrionDraftHeroCustomization");
static_assert(sizeof(UOrionDraftHeroCustomization) == 0x0004B0, "Wrong size on UOrionDraftHeroCustomization");
static_assert(offsetof(UOrionDraftHeroCustomization, SkinButtonGroup) == 0x000458, "Member 'UOrionDraftHeroCustomization::SkinButtonGroup' has a wrong offset!");
static_assert(offsetof(UOrionDraftHeroCustomization, SkinVariationButtonGroup) == 0x000460, "Member 'UOrionDraftHeroCustomization::SkinVariationButtonGroup' has a wrong offset!");
static_assert(offsetof(UOrionDraftHeroCustomization, EntryBox_Skins) == 0x000488, "Member 'UOrionDraftHeroCustomization::EntryBox_Skins' has a wrong offset!");
static_assert(offsetof(UOrionDraftHeroCustomization, EntryBox_Banners) == 0x000490, "Member 'UOrionDraftHeroCustomization::EntryBox_Banners' has a wrong offset!");
static_assert(offsetof(UOrionDraftHeroCustomization, EntryBox_SkinVariations) == 0x000498, "Member 'UOrionDraftHeroCustomization::EntryBox_SkinVariations' has a wrong offset!");
static_assert(offsetof(UOrionDraftHeroCustomization, Check_ShowMasteryCrown) == 0x0004A0, "Member 'UOrionDraftHeroCustomization::Check_ShowMasteryCrown' has a wrong offset!");

// Class OrionUI.OrionDraftMinimap
// 0x0028 (0x02E0 - 0x02B8)
class UOrionDraftMinimap final : public UOrionUserWidgetBase
{
public:
	class UImage*                                 Image_Screenshot;                                  // 0x02B8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UImage*                                 Image_Position;                                    // 0x02C0(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionTextBlock*                        Text_Position;                                     // 0x02C8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionTextBlock*                        Text_Description;                                  // 0x02D0(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_2D8[0x8];                                      // 0x02D8(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void OnHidePosition();
	void OnShowPosition(EOrionPosition NewPosition);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"OrionDraftMinimap">();
	}
	static class UOrionDraftMinimap* GetDefaultObj()
	{
		return GetDefaultObjImpl<UOrionDraftMinimap>();
	}
};
static_assert(alignof(UOrionDraftMinimap) == 0x000008, "Wrong alignment on UOrionDraftMinimap");
static_assert(sizeof(UOrionDraftMinimap) == 0x0002E0, "Wrong size on UOrionDraftMinimap");
static_assert(offsetof(UOrionDraftMinimap, Image_Screenshot) == 0x0002B8, "Member 'UOrionDraftMinimap::Image_Screenshot' has a wrong offset!");
static_assert(offsetof(UOrionDraftMinimap, Image_Position) == 0x0002C0, "Member 'UOrionDraftMinimap::Image_Position' has a wrong offset!");
static_assert(offsetof(UOrionDraftMinimap, Text_Position) == 0x0002C8, "Member 'UOrionDraftMinimap::Text_Position' has a wrong offset!");
static_assert(offsetof(UOrionDraftMinimap, Text_Description) == 0x0002D0, "Member 'UOrionDraftMinimap::Text_Description' has a wrong offset!");

// Class OrionUI.OrionChestReward
// 0x0030 (0x0A10 - 0x09E0)
class UOrionChestReward final : public UOrionBaseButton
{
public:
	class UOrionRewardWidget*                     Reward_Widget;                                     // 0x09E0(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionTextBlock*                        Text_Lucky;                                        // 0x09E8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionTextBlock*                        Text_DisplayName;                                  // 0x09F0(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionTextBlock*                        Text_Type;                                         // 0x09F8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOverlay*                               Overlay_Amount;                                    // 0x0A00(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionTextBlock*                        Text_CardQuantity;                                 // 0x0A08(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	void BeginFill();
	void OnReset();
	void OnReveal(int32 Index_0);
	void OnRewardAccepted();
	void OnRewardSet(EOrionItemRarity ItemRarity, bool bIsNice, EOrionItemFlyLocation ItemFlyLocation, EOrionItemType ItemType);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"OrionChestReward">();
	}
	static class UOrionChestReward* GetDefaultObj()
	{
		return GetDefaultObjImpl<UOrionChestReward>();
	}
};
static_assert(alignof(UOrionChestReward) == 0x000008, "Wrong alignment on UOrionChestReward");
static_assert(sizeof(UOrionChestReward) == 0x000A10, "Wrong size on UOrionChestReward");
static_assert(offsetof(UOrionChestReward, Reward_Widget) == 0x0009E0, "Member 'UOrionChestReward::Reward_Widget' has a wrong offset!");
static_assert(offsetof(UOrionChestReward, Text_Lucky) == 0x0009E8, "Member 'UOrionChestReward::Text_Lucky' has a wrong offset!");
static_assert(offsetof(UOrionChestReward, Text_DisplayName) == 0x0009F0, "Member 'UOrionChestReward::Text_DisplayName' has a wrong offset!");
static_assert(offsetof(UOrionChestReward, Text_Type) == 0x0009F8, "Member 'UOrionChestReward::Text_Type' has a wrong offset!");
static_assert(offsetof(UOrionChestReward, Overlay_Amount) == 0x000A00, "Member 'UOrionChestReward::Overlay_Amount' has a wrong offset!");
static_assert(offsetof(UOrionChestReward, Text_CardQuantity) == 0x000A08, "Member 'UOrionChestReward::Text_CardQuantity' has a wrong offset!");

// Class OrionUI.OrionDraftPlayerTooltip
// 0x0060 (0x0390 - 0x0330)
class UOrionDraftPlayerTooltip : public UOrionTooltipBase
{
public:
	uint8                                         Pad_330[0x10];                                     // 0x0330(0x0010)(Fixing Size After Last Property [ Dumper-7 ])
	class UOrionTextBlock*                        Text_PlayerName;                                   // 0x0340(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionTextBlock*                        Text_PickStatus;                                   // 0x0348(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionTextBlock*                        Text_HeroName;                                     // 0x0350(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionLazyImage*                        LazyImage_HeroPortrait;                            // 0x0358(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionMasteryRankDisplay*               Mastery_Progress;                                  // 0x0360(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UVerticalBox*                           VBox_Preferences;                                  // 0x0368(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UImage*                                 Image_RoleIcon;                                    // 0x0370(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionTextBlock*                        Text_RolePreference;                               // 0x0378(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UImage*                                 Image_PositionIcon;                                // 0x0380(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionTextBlock*                        Text_PositionPreference;                           // 0x0388(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"OrionDraftPlayerTooltip">();
	}
	static class UOrionDraftPlayerTooltip* GetDefaultObj()
	{
		return GetDefaultObjImpl<UOrionDraftPlayerTooltip>();
	}
};
static_assert(alignof(UOrionDraftPlayerTooltip) == 0x000008, "Wrong alignment on UOrionDraftPlayerTooltip");
static_assert(sizeof(UOrionDraftPlayerTooltip) == 0x000390, "Wrong size on UOrionDraftPlayerTooltip");
static_assert(offsetof(UOrionDraftPlayerTooltip, Text_PlayerName) == 0x000340, "Member 'UOrionDraftPlayerTooltip::Text_PlayerName' has a wrong offset!");
static_assert(offsetof(UOrionDraftPlayerTooltip, Text_PickStatus) == 0x000348, "Member 'UOrionDraftPlayerTooltip::Text_PickStatus' has a wrong offset!");
static_assert(offsetof(UOrionDraftPlayerTooltip, Text_HeroName) == 0x000350, "Member 'UOrionDraftPlayerTooltip::Text_HeroName' has a wrong offset!");
static_assert(offsetof(UOrionDraftPlayerTooltip, LazyImage_HeroPortrait) == 0x000358, "Member 'UOrionDraftPlayerTooltip::LazyImage_HeroPortrait' has a wrong offset!");
static_assert(offsetof(UOrionDraftPlayerTooltip, Mastery_Progress) == 0x000360, "Member 'UOrionDraftPlayerTooltip::Mastery_Progress' has a wrong offset!");
static_assert(offsetof(UOrionDraftPlayerTooltip, VBox_Preferences) == 0x000368, "Member 'UOrionDraftPlayerTooltip::VBox_Preferences' has a wrong offset!");
static_assert(offsetof(UOrionDraftPlayerTooltip, Image_RoleIcon) == 0x000370, "Member 'UOrionDraftPlayerTooltip::Image_RoleIcon' has a wrong offset!");
static_assert(offsetof(UOrionDraftPlayerTooltip, Text_RolePreference) == 0x000378, "Member 'UOrionDraftPlayerTooltip::Text_RolePreference' has a wrong offset!");
static_assert(offsetof(UOrionDraftPlayerTooltip, Image_PositionIcon) == 0x000380, "Member 'UOrionDraftPlayerTooltip::Image_PositionIcon' has a wrong offset!");
static_assert(offsetof(UOrionDraftPlayerTooltip, Text_PositionPreference) == 0x000388, "Member 'UOrionDraftPlayerTooltip::Text_PositionPreference' has a wrong offset!");

// Class OrionUI.OrionDraftPositionButton
// 0x0010 (0x09F0 - 0x09E0)
class UOrionDraftPositionButton final : public UOrionBaseButton
{
public:
	EOrionPosition                                RepresentPosition;                                 // 0x09E0(0x0001)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_9E1[0x7];                                      // 0x09E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UImage*                                 Image_Icon;                                        // 0x09E8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	void OnPositionFreeUp();
	void OnPositionSelectedByTeammates();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"OrionDraftPositionButton">();
	}
	static class UOrionDraftPositionButton* GetDefaultObj()
	{
		return GetDefaultObjImpl<UOrionDraftPositionButton>();
	}
};
static_assert(alignof(UOrionDraftPositionButton) == 0x000008, "Wrong alignment on UOrionDraftPositionButton");
static_assert(sizeof(UOrionDraftPositionButton) == 0x0009F0, "Wrong size on UOrionDraftPositionButton");
static_assert(offsetof(UOrionDraftPositionButton, RepresentPosition) == 0x0009E0, "Member 'UOrionDraftPositionButton::RepresentPosition' has a wrong offset!");
static_assert(offsetof(UOrionDraftPositionButton, Image_Icon) == 0x0009E8, "Member 'UOrionDraftPositionButton::Image_Icon' has a wrong offset!");

// Class OrionUI.OrionSprintIndicator
// 0x0020 (0x0310 - 0x02F0)
class UOrionSprintIndicator final : public UOrionHUDWidgetBase
{
public:
	class UImage*                                 SprintBar;                                         // 0x02F0(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UMaterialInstanceDynamic*               SprintBarMID;                                      // 0x02F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_300[0x10];                                     // 0x0300(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void OnSprintEmpty();
	void OnSprintFull();
	void OnSprintStartFill(float Duration);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"OrionSprintIndicator">();
	}
	static class UOrionSprintIndicator* GetDefaultObj()
	{
		return GetDefaultObjImpl<UOrionSprintIndicator>();
	}
};
static_assert(alignof(UOrionSprintIndicator) == 0x000008, "Wrong alignment on UOrionSprintIndicator");
static_assert(sizeof(UOrionSprintIndicator) == 0x000310, "Wrong size on UOrionSprintIndicator");
static_assert(offsetof(UOrionSprintIndicator, SprintBar) == 0x0002F0, "Member 'UOrionSprintIndicator::SprintBar' has a wrong offset!");
static_assert(offsetof(UOrionSprintIndicator, SprintBarMID) == 0x0002F8, "Member 'UOrionSprintIndicator::SprintBarMID' has a wrong offset!");

// Class OrionUI.OrionDraftPositionWarning
// 0x0008 (0x02C0 - 0x02B8)
class UOrionDraftPositionWarning final : public UOrionUserWidgetBase
{
public:
	class UOrionTextBlock*                        Text_Warning;                                      // 0x02B8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"OrionDraftPositionWarning">();
	}
	static class UOrionDraftPositionWarning* GetDefaultObj()
	{
		return GetDefaultObjImpl<UOrionDraftPositionWarning>();
	}
};
static_assert(alignof(UOrionDraftPositionWarning) == 0x000008, "Wrong alignment on UOrionDraftPositionWarning");
static_assert(sizeof(UOrionDraftPositionWarning) == 0x0002C0, "Wrong size on UOrionDraftPositionWarning");
static_assert(offsetof(UOrionDraftPositionWarning, Text_Warning) == 0x0002B8, "Member 'UOrionDraftPositionWarning::Text_Warning' has a wrong offset!");

// Class OrionUI.OrionDraftTeamMember
// 0x0058 (0x0310 - 0x02B8)
class UOrionDraftTeamMember final : public UOrionUserWidgetBase
{
public:
	TSubclassOf<class UOrionDraftPlayerTooltip>   DraftPlayerTooltipClass;                           // 0x02B8(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_2C0[0x10];                                     // 0x02C0(0x0010)(Fixing Size After Last Property [ Dumper-7 ])
	class UOrionLoadGuard*                        LoadGuard_Connecting;                              // 0x02D0(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionHeroListItem*                     HeroItem_Portrait;                                 // 0x02D8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionTextBlock*                        Text_HeroName;                                     // 0x02E0(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionTextBlock*                        Text_PlayerName;                                   // 0x02E8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionWidgetSwitcher*                   Switcher_PositionLoading;                          // 0x02F0(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UImage*                                 Image_Position;                                    // 0x02F8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UImage*                                 Image_PC;                                          // 0x0300(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_308[0x8];                                      // 0x0308(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void OnMemberSet(bool bIsLocalPlayer);
	void OnPickStatusChanged(EOrionDraftPickStatus PickStatus);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"OrionDraftTeamMember">();
	}
	static class UOrionDraftTeamMember* GetDefaultObj()
	{
		return GetDefaultObjImpl<UOrionDraftTeamMember>();
	}
};
static_assert(alignof(UOrionDraftTeamMember) == 0x000008, "Wrong alignment on UOrionDraftTeamMember");
static_assert(sizeof(UOrionDraftTeamMember) == 0x000310, "Wrong size on UOrionDraftTeamMember");
static_assert(offsetof(UOrionDraftTeamMember, DraftPlayerTooltipClass) == 0x0002B8, "Member 'UOrionDraftTeamMember::DraftPlayerTooltipClass' has a wrong offset!");
static_assert(offsetof(UOrionDraftTeamMember, LoadGuard_Connecting) == 0x0002D0, "Member 'UOrionDraftTeamMember::LoadGuard_Connecting' has a wrong offset!");
static_assert(offsetof(UOrionDraftTeamMember, HeroItem_Portrait) == 0x0002D8, "Member 'UOrionDraftTeamMember::HeroItem_Portrait' has a wrong offset!");
static_assert(offsetof(UOrionDraftTeamMember, Text_HeroName) == 0x0002E0, "Member 'UOrionDraftTeamMember::Text_HeroName' has a wrong offset!");
static_assert(offsetof(UOrionDraftTeamMember, Text_PlayerName) == 0x0002E8, "Member 'UOrionDraftTeamMember::Text_PlayerName' has a wrong offset!");
static_assert(offsetof(UOrionDraftTeamMember, Switcher_PositionLoading) == 0x0002F0, "Member 'UOrionDraftTeamMember::Switcher_PositionLoading' has a wrong offset!");
static_assert(offsetof(UOrionDraftTeamMember, Image_Position) == 0x0002F8, "Member 'UOrionDraftTeamMember::Image_Position' has a wrong offset!");
static_assert(offsetof(UOrionDraftTeamMember, Image_PC) == 0x000300, "Member 'UOrionDraftTeamMember::Image_PC' has a wrong offset!");

// Class OrionUI.OrionCarouselRadioButtons
// 0x0098 (0x0350 - 0x02B8)
class UOrionCarouselRadioButtons final : public UOrionUserWidgetBase
{
public:
	uint8                                         Pad_2B8[0x78];                                     // 0x02B8(0x0078)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UOrionBaseButton*>               CurrentButtons;                                    // 0x0330(0x0010)(ExportObject, ZeroConstructor, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	uint8                                         Pad_340[0x8];                                      // 0x0340(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	class UOrionDynamicEntryBox*                  EntryBox_Pips;                                     // 0x0348(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	void UpdateActivePip(int32 PipIdx, bool bBroadcast);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"OrionCarouselRadioButtons">();
	}
	static class UOrionCarouselRadioButtons* GetDefaultObj()
	{
		return GetDefaultObjImpl<UOrionCarouselRadioButtons>();
	}
};
static_assert(alignof(UOrionCarouselRadioButtons) == 0x000008, "Wrong alignment on UOrionCarouselRadioButtons");
static_assert(sizeof(UOrionCarouselRadioButtons) == 0x000350, "Wrong size on UOrionCarouselRadioButtons");
static_assert(offsetof(UOrionCarouselRadioButtons, CurrentButtons) == 0x000330, "Member 'UOrionCarouselRadioButtons::CurrentButtons' has a wrong offset!");
static_assert(offsetof(UOrionCarouselRadioButtons, EntryBox_Pips) == 0x000348, "Member 'UOrionCarouselRadioButtons::EntryBox_Pips' has a wrong offset!");

// Class OrionUI.OrionDraftTeamRoster
// 0x0078 (0x0330 - 0x02B8)
class UOrionDraftTeamRoster final : public UOrionUserWidgetBase
{
public:
	bool                                          bIsFriendly;                                       // 0x02B8(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_2B9[0x7];                                      // 0x02B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UOrionDraftTeamMember*>          TeamMemberWidgets;                                 // 0x02C0(0x0010)(ExportObject, ZeroConstructor, Transient, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	uint8                                         Pad_2D0[0x50];                                     // 0x02D0(0x0050)(Fixing Size After Last Property [ Dumper-7 ])
	class UPanelWidget*                           Panel_TeamMembers;                                 // 0x0320(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_328[0x8];                                      // 0x0328(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"OrionDraftTeamRoster">();
	}
	static class UOrionDraftTeamRoster* GetDefaultObj()
	{
		return GetDefaultObjImpl<UOrionDraftTeamRoster>();
	}
};
static_assert(alignof(UOrionDraftTeamRoster) == 0x000008, "Wrong alignment on UOrionDraftTeamRoster");
static_assert(sizeof(UOrionDraftTeamRoster) == 0x000330, "Wrong size on UOrionDraftTeamRoster");
static_assert(offsetof(UOrionDraftTeamRoster, bIsFriendly) == 0x0002B8, "Member 'UOrionDraftTeamRoster::bIsFriendly' has a wrong offset!");
static_assert(offsetof(UOrionDraftTeamRoster, TeamMemberWidgets) == 0x0002C0, "Member 'UOrionDraftTeamRoster::TeamMemberWidgets' has a wrong offset!");
static_assert(offsetof(UOrionDraftTeamRoster, Panel_TeamMembers) == 0x000320, "Member 'UOrionDraftTeamRoster::Panel_TeamMembers' has a wrong offset!");

// Class OrionUI.OrionDraftTurnPlayerIcon
// 0x0000 (0x0200 - 0x0200)
class UOrionDraftTurnPlayerIcon final : public UUserWidget
{
public:
	void InitPlayerIcon(bool bIsFriendly);
	void OnPlayerPickStatusChanged(EOrionDraftPickStatus PickStatus);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"OrionDraftTurnPlayerIcon">();
	}
	static class UOrionDraftTurnPlayerIcon* GetDefaultObj()
	{
		return GetDefaultObjImpl<UOrionDraftTurnPlayerIcon>();
	}
};
static_assert(alignof(UOrionDraftTurnPlayerIcon) == 0x000008, "Wrong alignment on UOrionDraftTurnPlayerIcon");
static_assert(sizeof(UOrionDraftTurnPlayerIcon) == 0x000200, "Wrong size on UOrionDraftTurnPlayerIcon");

// Class OrionUI.OrionStateWidget_UpdateBase
// 0x0028 (0x02E0 - 0x02B8)
class UOrionStateWidget_UpdateBase : public UOrionUIStateWidget
{
public:
	uint8                                         Pad_2B8[0x28];                                     // 0x02B8(0x0028)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void OnUpdateFailed_Blueprint();
	void OnUpdateFailed_NotLoggedIn_Blueprint();
	void OnUpdateHotfixFileProcessed(const class FString& FriendlyName, const class FString& CachedName);
	void OnUpdateHotfixProgress(int32 NumDownloaded, int32 TotalFiles, int32 NumBytes, int32 TotalBytes);
	void OnUpdateStateChange(EUpdateState NewState);
	void OnUpdateSuccess_Blueprint();
	void OnUpdateSuccess_NeedsPatch_Blueprint();
	void OnUpdateSuccess_NeedsRelaunch_Blueprint();
	void OnUpdateSuccess_NeedsReload_Blueprint();
	void OnUpdateSuccess_NoChange_Blueprint();
	void ShowLoginPlatformUI();

	float GetLoadProgress() const;
	EUpdateState GetUpdateState() const;
	bool IsBlockingForInitialLoadEnabled() const;
	bool IsUpdatingEnabled() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"OrionStateWidget_UpdateBase">();
	}
	static class UOrionStateWidget_UpdateBase* GetDefaultObj()
	{
		return GetDefaultObjImpl<UOrionStateWidget_UpdateBase>();
	}
};
static_assert(alignof(UOrionStateWidget_UpdateBase) == 0x000008, "Wrong alignment on UOrionStateWidget_UpdateBase");
static_assert(sizeof(UOrionStateWidget_UpdateBase) == 0x0002E0, "Wrong size on UOrionStateWidget_UpdateBase");

// Class OrionUI.OrionDraftTurnIndicator
// 0x0018 (0x02D0 - 0x02B8)
class UOrionDraftTurnIndicator final : public UOrionUserWidgetBase
{
public:
	TSubclassOf<class UOrionDraftTurnPlayerIcon>  PlayerIconClass;                                   // 0x02B8(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class USizeBox*                               SizeBox;                                           // 0x02C0(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UHorizontalBox*                         HBox_PlayerIcons;                                  // 0x02C8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"OrionDraftTurnIndicator">();
	}
	static class UOrionDraftTurnIndicator* GetDefaultObj()
	{
		return GetDefaultObjImpl<UOrionDraftTurnIndicator>();
	}
};
static_assert(alignof(UOrionDraftTurnIndicator) == 0x000008, "Wrong alignment on UOrionDraftTurnIndicator");
static_assert(sizeof(UOrionDraftTurnIndicator) == 0x0002D0, "Wrong size on UOrionDraftTurnIndicator");
static_assert(offsetof(UOrionDraftTurnIndicator, PlayerIconClass) == 0x0002B8, "Member 'UOrionDraftTurnIndicator::PlayerIconClass' has a wrong offset!");
static_assert(offsetof(UOrionDraftTurnIndicator, SizeBox) == 0x0002C0, "Member 'UOrionDraftTurnIndicator::SizeBox' has a wrong offset!");
static_assert(offsetof(UOrionDraftTurnIndicator, HBox_PlayerIcons) == 0x0002C8, "Member 'UOrionDraftTurnIndicator::HBox_PlayerIcons' has a wrong offset!");

// Class OrionUI.OrionDraftTimer
// 0x00C8 (0x0380 - 0x02B8)
class UOrionDraftTimer final : public UOrionUserWidgetBase
{
public:
	TSubclassOf<class UOrionDraftTurnIndicator>   TurnIndicatorClass;                                // 0x02B8(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         TurnIndicatorWidth;                                // 0x02C0(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_2C4[0x4];                                      // 0x02C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UOrionDraftTurnIndicator*>       TurnIndicators;                                    // 0x02C8(0x0010)(ExportObject, ZeroConstructor, Transient, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	class AOrionGameState_DraftLobby*             DraftGameState;                                    // 0x02D8(0x0008)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_2E0[0x78];                                     // 0x02E0(0x0078)(Fixing Size After Last Property [ Dumper-7 ])
	class UOrionTextBlock*                        Text_TimeRemaining;                                // 0x0358(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UHorizontalBox*                         HBox_TurnIndicators;                               // 0x0360(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionTextBlock*                        Text_TurnStatus;                                   // 0x0368(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UImage*                                 Image_CountdownBar_Left;                           // 0x0370(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UImage*                                 Image_CountdownBar_Right;                          // 0x0378(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	void OnDraftComplete(bool bSuccess);
	void OnDraftStarted(EOrionTeamMemberType FirstPickerType);
	void OnTimerUpdated(bool bIsPlayerTurn, float TimeLeftRatio);
	void OnTurnComplete(EOrionTeamMemberType FinishedMemberType);
	void OnTurnStarted(EOrionTeamMemberType PickingMemberType);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"OrionDraftTimer">();
	}
	static class UOrionDraftTimer* GetDefaultObj()
	{
		return GetDefaultObjImpl<UOrionDraftTimer>();
	}
};
static_assert(alignof(UOrionDraftTimer) == 0x000008, "Wrong alignment on UOrionDraftTimer");
static_assert(sizeof(UOrionDraftTimer) == 0x000380, "Wrong size on UOrionDraftTimer");
static_assert(offsetof(UOrionDraftTimer, TurnIndicatorClass) == 0x0002B8, "Member 'UOrionDraftTimer::TurnIndicatorClass' has a wrong offset!");
static_assert(offsetof(UOrionDraftTimer, TurnIndicatorWidth) == 0x0002C0, "Member 'UOrionDraftTimer::TurnIndicatorWidth' has a wrong offset!");
static_assert(offsetof(UOrionDraftTimer, TurnIndicators) == 0x0002C8, "Member 'UOrionDraftTimer::TurnIndicators' has a wrong offset!");
static_assert(offsetof(UOrionDraftTimer, DraftGameState) == 0x0002D8, "Member 'UOrionDraftTimer::DraftGameState' has a wrong offset!");
static_assert(offsetof(UOrionDraftTimer, Text_TimeRemaining) == 0x000358, "Member 'UOrionDraftTimer::Text_TimeRemaining' has a wrong offset!");
static_assert(offsetof(UOrionDraftTimer, HBox_TurnIndicators) == 0x000360, "Member 'UOrionDraftTimer::HBox_TurnIndicators' has a wrong offset!");
static_assert(offsetof(UOrionDraftTimer, Text_TurnStatus) == 0x000368, "Member 'UOrionDraftTimer::Text_TurnStatus' has a wrong offset!");
static_assert(offsetof(UOrionDraftTimer, Image_CountdownBar_Left) == 0x000370, "Member 'UOrionDraftTimer::Image_CountdownBar_Left' has a wrong offset!");
static_assert(offsetof(UOrionDraftTimer, Image_CountdownBar_Right) == 0x000378, "Member 'UOrionDraftTimer::Image_CountdownBar_Right' has a wrong offset!");

// Class OrionUI.OrionPlayerStatusWidget
// 0x00E0 (0x03D0 - 0x02F0)
class UOrionPlayerStatusWidget final : public UOrionHUDWidgetBase
{
public:
	class FText                                   RichTextHealthFormatString;                        // 0x02F0(0x0018)(Edit, NativeAccessSpecifierPublic)
	class FText                                   RichTextShieldsFormatString;                       // 0x0308(0x0018)(Edit, NativeAccessSpecifierPublic)
	class FText                                   RichTextEnergyFormatString;                        // 0x0320(0x0018)(Edit, NativeAccessSpecifierPublic)
	uint8                                         Pad_338[0x8];                                      // 0x0338(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	class UOrionRichText*                         HealthText;                                        // 0x0340(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextBlock*                             HealthRegenText;                                   // 0x0348(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UOrionRichText*                         EnergyText;                                        // 0x0350(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextBlock*                             EnergyRegenText;                                   // 0x0358(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UOrionGameProgressBar*                  HP_Meter;                                          // 0x0360(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UOrionGameProgressBar*                  MP_Meter;                                          // 0x0368(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UOverlay*                               Overlay_NumericalValues;                           // 0x0370(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextBlock*                             XP_PerSecond_Text;                                 // 0x0378(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextBlock*                             CardXP_PerSecond_Text;                             // 0x0380(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCanvasPanel*                           CardXPPerMinuteAssembly;                           // 0x0388(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCanvasPanel*                           XPPerMinuteAssembly;                               // 0x0390(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UOrionHealthEnergyWidget*               HealthEnergyWidget;                                // 0x0398(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_3A0[0x30];                                     // 0x03A0(0x0030)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void InitInHUD(class UOrionBaseHUDWidget* InHUDWidget);
	void OnShowNumbersSettingChanged(bool bWantsNumbers);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"OrionPlayerStatusWidget">();
	}
	static class UOrionPlayerStatusWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UOrionPlayerStatusWidget>();
	}
};
static_assert(alignof(UOrionPlayerStatusWidget) == 0x000008, "Wrong alignment on UOrionPlayerStatusWidget");
static_assert(sizeof(UOrionPlayerStatusWidget) == 0x0003D0, "Wrong size on UOrionPlayerStatusWidget");
static_assert(offsetof(UOrionPlayerStatusWidget, RichTextHealthFormatString) == 0x0002F0, "Member 'UOrionPlayerStatusWidget::RichTextHealthFormatString' has a wrong offset!");
static_assert(offsetof(UOrionPlayerStatusWidget, RichTextShieldsFormatString) == 0x000308, "Member 'UOrionPlayerStatusWidget::RichTextShieldsFormatString' has a wrong offset!");
static_assert(offsetof(UOrionPlayerStatusWidget, RichTextEnergyFormatString) == 0x000320, "Member 'UOrionPlayerStatusWidget::RichTextEnergyFormatString' has a wrong offset!");
static_assert(offsetof(UOrionPlayerStatusWidget, HealthText) == 0x000340, "Member 'UOrionPlayerStatusWidget::HealthText' has a wrong offset!");
static_assert(offsetof(UOrionPlayerStatusWidget, HealthRegenText) == 0x000348, "Member 'UOrionPlayerStatusWidget::HealthRegenText' has a wrong offset!");
static_assert(offsetof(UOrionPlayerStatusWidget, EnergyText) == 0x000350, "Member 'UOrionPlayerStatusWidget::EnergyText' has a wrong offset!");
static_assert(offsetof(UOrionPlayerStatusWidget, EnergyRegenText) == 0x000358, "Member 'UOrionPlayerStatusWidget::EnergyRegenText' has a wrong offset!");
static_assert(offsetof(UOrionPlayerStatusWidget, HP_Meter) == 0x000360, "Member 'UOrionPlayerStatusWidget::HP_Meter' has a wrong offset!");
static_assert(offsetof(UOrionPlayerStatusWidget, MP_Meter) == 0x000368, "Member 'UOrionPlayerStatusWidget::MP_Meter' has a wrong offset!");
static_assert(offsetof(UOrionPlayerStatusWidget, Overlay_NumericalValues) == 0x000370, "Member 'UOrionPlayerStatusWidget::Overlay_NumericalValues' has a wrong offset!");
static_assert(offsetof(UOrionPlayerStatusWidget, XP_PerSecond_Text) == 0x000378, "Member 'UOrionPlayerStatusWidget::XP_PerSecond_Text' has a wrong offset!");
static_assert(offsetof(UOrionPlayerStatusWidget, CardXP_PerSecond_Text) == 0x000380, "Member 'UOrionPlayerStatusWidget::CardXP_PerSecond_Text' has a wrong offset!");
static_assert(offsetof(UOrionPlayerStatusWidget, CardXPPerMinuteAssembly) == 0x000388, "Member 'UOrionPlayerStatusWidget::CardXPPerMinuteAssembly' has a wrong offset!");
static_assert(offsetof(UOrionPlayerStatusWidget, XPPerMinuteAssembly) == 0x000390, "Member 'UOrionPlayerStatusWidget::XPPerMinuteAssembly' has a wrong offset!");
static_assert(offsetof(UOrionPlayerStatusWidget, HealthEnergyWidget) == 0x000398, "Member 'UOrionPlayerStatusWidget::HealthEnergyWidget' has a wrong offset!");

// Class OrionUI.OrionDynamicEntryBox
// 0x00D0 (0x01C8 - 0x00F8)
class UOrionDynamicEntryBox final : public UWidget
{
public:
	TSubclassOf<class UUserWidget>                EntryWidgetClass;                                  // 0x00F8(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_100[0x88];                                     // 0x0100(0x0088)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              EntrySpacing;                                      // 0x0188(0x0008)(Edit, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FSlateChildSize                        EntrySize;                                         // 0x0190(0x0008)(Edit, NoDestructor, NativeAccessSpecifierPrivate)
	EHorizontalAlignment                          EntryHAlign;                                       // 0x0198(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	EVerticalAlignment                            EntryVAlign;                                       // 0x0199(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_19A[0x2];                                      // 0x019A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         MaxElementSize;                                    // 0x019C(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<struct FVector2D>                      SpacingPattern;                                    // 0x01A0(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPrivate)
	EWidgetClipping                               EntryClipping;                                     // 0x01B0(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	EDynamicBoxType                               BoxType;                                           // 0x01B1(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_1B2[0x16];                                     // 0x01B2(0x0016)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	class UUserWidget* BP_CreateEntry();
	void RemoveEntry(class UUserWidget* EntryWidget);
	void Reset(bool bDeleteWidgets);
	void SetEntrySpacing(const struct FVector2D& InEntrySpacing);

	const TArray<class UUserWidget*> GetAllEntries() const;
	int32 GetNumEntries() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"OrionDynamicEntryBox">();
	}
	static class UOrionDynamicEntryBox* GetDefaultObj()
	{
		return GetDefaultObjImpl<UOrionDynamicEntryBox>();
	}
};
static_assert(alignof(UOrionDynamicEntryBox) == 0x000008, "Wrong alignment on UOrionDynamicEntryBox");
static_assert(sizeof(UOrionDynamicEntryBox) == 0x0001C8, "Wrong size on UOrionDynamicEntryBox");
static_assert(offsetof(UOrionDynamicEntryBox, EntryWidgetClass) == 0x0000F8, "Member 'UOrionDynamicEntryBox::EntryWidgetClass' has a wrong offset!");
static_assert(offsetof(UOrionDynamicEntryBox, EntrySpacing) == 0x000188, "Member 'UOrionDynamicEntryBox::EntrySpacing' has a wrong offset!");
static_assert(offsetof(UOrionDynamicEntryBox, EntrySize) == 0x000190, "Member 'UOrionDynamicEntryBox::EntrySize' has a wrong offset!");
static_assert(offsetof(UOrionDynamicEntryBox, EntryHAlign) == 0x000198, "Member 'UOrionDynamicEntryBox::EntryHAlign' has a wrong offset!");
static_assert(offsetof(UOrionDynamicEntryBox, EntryVAlign) == 0x000199, "Member 'UOrionDynamicEntryBox::EntryVAlign' has a wrong offset!");
static_assert(offsetof(UOrionDynamicEntryBox, MaxElementSize) == 0x00019C, "Member 'UOrionDynamicEntryBox::MaxElementSize' has a wrong offset!");
static_assert(offsetof(UOrionDynamicEntryBox, SpacingPattern) == 0x0001A0, "Member 'UOrionDynamicEntryBox::SpacingPattern' has a wrong offset!");
static_assert(offsetof(UOrionDynamicEntryBox, EntryClipping) == 0x0001B0, "Member 'UOrionDynamicEntryBox::EntryClipping' has a wrong offset!");
static_assert(offsetof(UOrionDynamicEntryBox, BoxType) == 0x0001B1, "Member 'UOrionDynamicEntryBox::BoxType' has a wrong offset!");

// Class OrionUI.OrionEditableTextBox
// 0x0058 (0x09B0 - 0x0958)
class UOrionEditableTextBox final : public UEditableTextBox
{
public:
	uint8                                         Pad_958[0x10];                                     // 0x0958(0x0010)(Fixing Size After Last Property [ Dumper-7 ])
	TSubclassOf<class UOrionTextStyle>            TextStyle;                                         // 0x0968(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	EOrionTextColor                               TextColorType;                                     // 0x0970(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	EOrionWidgetStyleSize                         TextSize;                                          // 0x0971(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_972[0x2];                                      // 0x0972(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         MaxCharacterCount;                                 // 0x0974(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FText                                   ErrorMessage;                                      // 0x0978(0x0018)(Edit, NativeAccessSpecifierPrivate)
	TSubclassOf<class UOrionTextStyle>            ErrorTextStyle;                                    // 0x0990(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	EOrionWidgetStyleSize                         ErrorTextSize;                                     // 0x0998(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_999[0x7];                                      // 0x0999(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSubclassOf<class UOrionEditableTextPopup>    TextPopupClass;                                    // 0x09A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionEditableTextPopup*                TextPopupWidget;                                   // 0x09A8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"OrionEditableTextBox">();
	}
	static class UOrionEditableTextBox* GetDefaultObj()
	{
		return GetDefaultObjImpl<UOrionEditableTextBox>();
	}
};
static_assert(alignof(UOrionEditableTextBox) == 0x000008, "Wrong alignment on UOrionEditableTextBox");
static_assert(sizeof(UOrionEditableTextBox) == 0x0009B0, "Wrong size on UOrionEditableTextBox");
static_assert(offsetof(UOrionEditableTextBox, TextStyle) == 0x000968, "Member 'UOrionEditableTextBox::TextStyle' has a wrong offset!");
static_assert(offsetof(UOrionEditableTextBox, TextColorType) == 0x000970, "Member 'UOrionEditableTextBox::TextColorType' has a wrong offset!");
static_assert(offsetof(UOrionEditableTextBox, TextSize) == 0x000971, "Member 'UOrionEditableTextBox::TextSize' has a wrong offset!");
static_assert(offsetof(UOrionEditableTextBox, MaxCharacterCount) == 0x000974, "Member 'UOrionEditableTextBox::MaxCharacterCount' has a wrong offset!");
static_assert(offsetof(UOrionEditableTextBox, ErrorMessage) == 0x000978, "Member 'UOrionEditableTextBox::ErrorMessage' has a wrong offset!");
static_assert(offsetof(UOrionEditableTextBox, ErrorTextStyle) == 0x000990, "Member 'UOrionEditableTextBox::ErrorTextStyle' has a wrong offset!");
static_assert(offsetof(UOrionEditableTextBox, ErrorTextSize) == 0x000998, "Member 'UOrionEditableTextBox::ErrorTextSize' has a wrong offset!");
static_assert(offsetof(UOrionEditableTextBox, TextPopupClass) == 0x0009A0, "Member 'UOrionEditableTextBox::TextPopupClass' has a wrong offset!");
static_assert(offsetof(UOrionEditableTextBox, TextPopupWidget) == 0x0009A8, "Member 'UOrionEditableTextBox::TextPopupWidget' has a wrong offset!");

// Class OrionUI.OrionStateWidget_PreMatch
// 0x0008 (0x02C0 - 0x02B8)
class UOrionStateWidget_PreMatch final : public UOrionUIStateWidget
{
public:
	uint8                                         Pad_2B8[0x8];                                      // 0x02B8(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"OrionStateWidget_PreMatch">();
	}
	static class UOrionStateWidget_PreMatch* GetDefaultObj()
	{
		return GetDefaultObjImpl<UOrionStateWidget_PreMatch>();
	}
};
static_assert(alignof(UOrionStateWidget_PreMatch) == 0x000008, "Wrong alignment on UOrionStateWidget_PreMatch");
static_assert(sizeof(UOrionStateWidget_PreMatch) == 0x0002C0, "Wrong size on UOrionStateWidget_PreMatch");

// Class OrionUI.OrionEditableTextPopup
// 0x0028 (0x02E0 - 0x02B8)
class UOrionEditableTextPopup : public UOrionUserWidgetBase
{
public:
	class UOrionEditableTextBox*                  TargetTextBox;                                     // 0x02B8(0x0008)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_2C0[0x18];                                     // 0x02C0(0x0018)(Fixing Size After Last Property [ Dumper-7 ])
	class UEditableTextBox*                       MyTextBox;                                         // 0x02D8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	void CommitText(const class FText& TextToCommit);
	void HidePopup(bool bCommitText);
	void OnTextCommitted(const class FText& Text, ETextCommit CommitMethod);
	void ShowPopup();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"OrionEditableTextPopup">();
	}
	static class UOrionEditableTextPopup* GetDefaultObj()
	{
		return GetDefaultObjImpl<UOrionEditableTextPopup>();
	}
};
static_assert(alignof(UOrionEditableTextPopup) == 0x000008, "Wrong alignment on UOrionEditableTextPopup");
static_assert(sizeof(UOrionEditableTextPopup) == 0x0002E0, "Wrong size on UOrionEditableTextPopup");
static_assert(offsetof(UOrionEditableTextPopup, TargetTextBox) == 0x0002B8, "Member 'UOrionEditableTextPopup::TargetTextBox' has a wrong offset!");
static_assert(offsetof(UOrionEditableTextPopup, MyTextBox) == 0x0002D8, "Member 'UOrionEditableTextPopup::MyTextBox' has a wrong offset!");

// Class OrionUI.OrionEULAText
// 0x0040 (0x0138 - 0x00F8)
class UOrionEULAText final : public UWidget
{
public:
	class FText                                   Text;                                              // 0x00F8(0x0018)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	struct FMargin                                TextMargin;                                        // 0x0110(0x0010)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	float                                         WrapTextAt;                                        // 0x0120(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          AutoWrapText;                                      // 0x0124(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_125[0x13];                                     // 0x0125(0x0013)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void SetText(const class FText& InText);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"OrionEULAText">();
	}
	static class UOrionEULAText* GetDefaultObj()
	{
		return GetDefaultObjImpl<UOrionEULAText>();
	}
};
static_assert(alignof(UOrionEULAText) == 0x000008, "Wrong alignment on UOrionEULAText");
static_assert(sizeof(UOrionEULAText) == 0x000138, "Wrong size on UOrionEULAText");
static_assert(offsetof(UOrionEULAText, Text) == 0x0000F8, "Member 'UOrionEULAText::Text' has a wrong offset!");
static_assert(offsetof(UOrionEULAText, TextMargin) == 0x000110, "Member 'UOrionEULAText::TextMargin' has a wrong offset!");
static_assert(offsetof(UOrionEULAText, WrapTextAt) == 0x000120, "Member 'UOrionEULAText::WrapTextAt' has a wrong offset!");
static_assert(offsetof(UOrionEULAText, AutoWrapText) == 0x000124, "Member 'UOrionEULAText::AutoWrapText' has a wrong offset!");

// Class OrionUI.OrionNotificationList
// 0x0020 (0x0118 - 0x00F8)
class UOrionNotificationList final : public UWidget
{
public:
	TArray<class UUserWidget*>                    Notifications;                                     // 0x00F8(0x0010)(ExportObject, ZeroConstructor, Transient, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	uint8                                         Pad_108[0x10];                                     // 0x0108(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void PopNotification(class UUserWidget* UserWidget);
	void PushNotification(class UUserWidget* UserWidget);

	class UUserWidget* FindUserWidget(struct FOrionNotification& Notification) const;
	int32 NumNotifications() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"OrionNotificationList">();
	}
	static class UOrionNotificationList* GetDefaultObj()
	{
		return GetDefaultObjImpl<UOrionNotificationList>();
	}
};
static_assert(alignof(UOrionNotificationList) == 0x000008, "Wrong alignment on UOrionNotificationList");
static_assert(sizeof(UOrionNotificationList) == 0x000118, "Wrong size on UOrionNotificationList");
static_assert(offsetof(UOrionNotificationList, Notifications) == 0x0000F8, "Member 'UOrionNotificationList::Notifications' has a wrong offset!");

// Class OrionUI.OrionFeaturedHeroWidget
// 0x0118 (0x03D0 - 0x02B8)
class UOrionFeaturedHeroWidget final : public UOrionUserWidgetBase
{
public:
	uint8                                         Pad_2B8[0xE8];                                     // 0x02B8(0x00E8)(Fixing Size After Last Property [ Dumper-7 ])
	class UOrionTextBlock*                        Text_ItemOwned;                                    // 0x03A0(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UOrionTextBlock*                        Text_Title;                                        // 0x03A8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UOrionTextBlock*                        Text_Subtitle;                                     // 0x03B0(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UOrionTextBlock*                        Text_NowAvailable;                                 // 0x03B8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UOrionDefaultButton*                    Button_Action;                                     // 0x03C0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_3C8[0x8];                                      // 0x03C8(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void OnActionStateSet(bool bShow);
	void OnFeaturedHeroSet(bool bShowSubtitle);
	void UpdateActionButtonState();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"OrionFeaturedHeroWidget">();
	}
	static class UOrionFeaturedHeroWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UOrionFeaturedHeroWidget>();
	}
};
static_assert(alignof(UOrionFeaturedHeroWidget) == 0x000008, "Wrong alignment on UOrionFeaturedHeroWidget");
static_assert(sizeof(UOrionFeaturedHeroWidget) == 0x0003D0, "Wrong size on UOrionFeaturedHeroWidget");
static_assert(offsetof(UOrionFeaturedHeroWidget, Text_ItemOwned) == 0x0003A0, "Member 'UOrionFeaturedHeroWidget::Text_ItemOwned' has a wrong offset!");
static_assert(offsetof(UOrionFeaturedHeroWidget, Text_Title) == 0x0003A8, "Member 'UOrionFeaturedHeroWidget::Text_Title' has a wrong offset!");
static_assert(offsetof(UOrionFeaturedHeroWidget, Text_Subtitle) == 0x0003B0, "Member 'UOrionFeaturedHeroWidget::Text_Subtitle' has a wrong offset!");
static_assert(offsetof(UOrionFeaturedHeroWidget, Text_NowAvailable) == 0x0003B8, "Member 'UOrionFeaturedHeroWidget::Text_NowAvailable' has a wrong offset!");
static_assert(offsetof(UOrionFeaturedHeroWidget, Button_Action) == 0x0003C0, "Member 'UOrionFeaturedHeroWidget::Button_Action' has a wrong offset!");

// Class OrionUI.OrionFilterHeaderButton
// 0x00A0 (0x0A80 - 0x09E0)
class UOrionFilterHeaderButton final : public UOrionBaseButton
{
public:
	struct FSlateBrush                            IconBrush;                                         // 0x09E0(0x0078)(Edit, BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)
	EOrionFilterHeaderButtonType                  FilterType;                                        // 0x0A58(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	EAffinityType                                 FilterCardType;                                    // 0x0A59(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	EOrionGemRank                                 FilterGemType;                                     // 0x0A5A(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_A5B[0x5];                                      // 0x0A5B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UOrionTextBlock*                        Text_Title;                                        // 0x0A60(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionTextBlock*                        Text_Ownership;                                    // 0x0A68(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UImage*                                 Image_Icon;                                        // 0x0A70(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_A78[0x8];                                      // 0x0A78(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"OrionFilterHeaderButton">();
	}
	static class UOrionFilterHeaderButton* GetDefaultObj()
	{
		return GetDefaultObjImpl<UOrionFilterHeaderButton>();
	}
};
static_assert(alignof(UOrionFilterHeaderButton) == 0x000008, "Wrong alignment on UOrionFilterHeaderButton");
static_assert(sizeof(UOrionFilterHeaderButton) == 0x000A80, "Wrong size on UOrionFilterHeaderButton");
static_assert(offsetof(UOrionFilterHeaderButton, IconBrush) == 0x0009E0, "Member 'UOrionFilterHeaderButton::IconBrush' has a wrong offset!");
static_assert(offsetof(UOrionFilterHeaderButton, FilterType) == 0x000A58, "Member 'UOrionFilterHeaderButton::FilterType' has a wrong offset!");
static_assert(offsetof(UOrionFilterHeaderButton, FilterCardType) == 0x000A59, "Member 'UOrionFilterHeaderButton::FilterCardType' has a wrong offset!");
static_assert(offsetof(UOrionFilterHeaderButton, FilterGemType) == 0x000A5A, "Member 'UOrionFilterHeaderButton::FilterGemType' has a wrong offset!");
static_assert(offsetof(UOrionFilterHeaderButton, Text_Title) == 0x000A60, "Member 'UOrionFilterHeaderButton::Text_Title' has a wrong offset!");
static_assert(offsetof(UOrionFilterHeaderButton, Text_Ownership) == 0x000A68, "Member 'UOrionFilterHeaderButton::Text_Ownership' has a wrong offset!");
static_assert(offsetof(UOrionFilterHeaderButton, Image_Icon) == 0x000A70, "Member 'UOrionFilterHeaderButton::Image_Icon' has a wrong offset!");

// Class OrionUI.OrionProgressBar
// 0x0018 (0x02D0 - 0x02B8)
class UOrionProgressBar : public UOrionUserWidgetBase
{
public:
	class UProgressBar*                           ProgressBar_MinorFill;                             // 0x02B8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UProgressBar*                           ProgressBar_Fill;                                  // 0x02C0(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_2C8[0x8];                                      // 0x02C8(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"OrionProgressBar">();
	}
	static class UOrionProgressBar* GetDefaultObj()
	{
		return GetDefaultObjImpl<UOrionProgressBar>();
	}
};
static_assert(alignof(UOrionProgressBar) == 0x000008, "Wrong alignment on UOrionProgressBar");
static_assert(sizeof(UOrionProgressBar) == 0x0002D0, "Wrong size on UOrionProgressBar");
static_assert(offsetof(UOrionProgressBar, ProgressBar_MinorFill) == 0x0002B8, "Member 'UOrionProgressBar::ProgressBar_MinorFill' has a wrong offset!");
static_assert(offsetof(UOrionProgressBar, ProgressBar_Fill) == 0x0002C0, "Member 'UOrionProgressBar::ProgressBar_Fill' has a wrong offset!");

// Class OrionUI.OrionFilterToggleButton
// 0x0040 (0x0A20 - 0x09E0)
class UOrionFilterToggleButton final : public UOrionBaseButton
{
public:
	UMulticastDelegateProperty_                   OnToggleStateChanged;                              // 0x09E0(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	EOrionSortingTypes                            ToggleType;                                        // 0x09F0(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_9F1[0x7];                                      // 0x09F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMenuAnchor*                            Anchor_Menu;                                       // 0x09F8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UOrionTextBlock*                        Text_Title;                                        // 0x0A00(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSubclassOf<class UOrionFilterSelectorMenu>   FilterSelectorMenuClass;                           // 0x0A08(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_A10[0x10];                                     // 0x0A10(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	class UOrionFilterSelectorMenu* HandleAnchorOpening();
	void OnFilterSelectorButtonClicked(uint8 ActiveToggleIndex);
	void OnFilterSelectorReady(class UOrionFilterSelectorMenu* FilterSelectorMenuWidget);
	void OnGamePadChanged(bool bUsingGamePad);
	void OnToggleStateChange__DelegateSignature();

	bool IsDropDownMode() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"OrionFilterToggleButton">();
	}
	static class UOrionFilterToggleButton* GetDefaultObj()
	{
		return GetDefaultObjImpl<UOrionFilterToggleButton>();
	}
};
static_assert(alignof(UOrionFilterToggleButton) == 0x000008, "Wrong alignment on UOrionFilterToggleButton");
static_assert(sizeof(UOrionFilterToggleButton) == 0x000A20, "Wrong size on UOrionFilterToggleButton");
static_assert(offsetof(UOrionFilterToggleButton, OnToggleStateChanged) == 0x0009E0, "Member 'UOrionFilterToggleButton::OnToggleStateChanged' has a wrong offset!");
static_assert(offsetof(UOrionFilterToggleButton, ToggleType) == 0x0009F0, "Member 'UOrionFilterToggleButton::ToggleType' has a wrong offset!");
static_assert(offsetof(UOrionFilterToggleButton, Anchor_Menu) == 0x0009F8, "Member 'UOrionFilterToggleButton::Anchor_Menu' has a wrong offset!");
static_assert(offsetof(UOrionFilterToggleButton, Text_Title) == 0x000A00, "Member 'UOrionFilterToggleButton::Text_Title' has a wrong offset!");
static_assert(offsetof(UOrionFilterToggleButton, FilterSelectorMenuClass) == 0x000A08, "Member 'UOrionFilterToggleButton::FilterSelectorMenuClass' has a wrong offset!");

// Class OrionUI.OrionFilterSelectorMenu
// 0x0038 (0x02F0 - 0x02B8)
class UOrionFilterSelectorMenu final : public UOrionUserWidgetBase
{
public:
	UMulticastDelegateProperty_                   OnFilterSelectorReady;                             // 0x02B8(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                   OnFilterSelectorButtonClicked;                     // 0x02C8(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	class UOrionDynamicEntryBox*                  EntryBox_Menu;                                     // 0x02D8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class UOrionButtonStyle>          ButtonStyle;                                       // 0x02E0(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_2E8[0x8];                                      // 0x02E8(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"OrionFilterSelectorMenu">();
	}
	static class UOrionFilterSelectorMenu* GetDefaultObj()
	{
		return GetDefaultObjImpl<UOrionFilterSelectorMenu>();
	}
};
static_assert(alignof(UOrionFilterSelectorMenu) == 0x000008, "Wrong alignment on UOrionFilterSelectorMenu");
static_assert(sizeof(UOrionFilterSelectorMenu) == 0x0002F0, "Wrong size on UOrionFilterSelectorMenu");
static_assert(offsetof(UOrionFilterSelectorMenu, OnFilterSelectorReady) == 0x0002B8, "Member 'UOrionFilterSelectorMenu::OnFilterSelectorReady' has a wrong offset!");
static_assert(offsetof(UOrionFilterSelectorMenu, OnFilterSelectorButtonClicked) == 0x0002C8, "Member 'UOrionFilterSelectorMenu::OnFilterSelectorButtonClicked' has a wrong offset!");
static_assert(offsetof(UOrionFilterSelectorMenu, EntryBox_Menu) == 0x0002D8, "Member 'UOrionFilterSelectorMenu::EntryBox_Menu' has a wrong offset!");
static_assert(offsetof(UOrionFilterSelectorMenu, ButtonStyle) == 0x0002E0, "Member 'UOrionFilterSelectorMenu::ButtonStyle' has a wrong offset!");

// Class OrionUI.OrionSpinnerEntry
// 0x0010 (0x0210 - 0x0200)
class UOrionSpinnerEntry : public UUserWidget
{
public:
	uint8                                         Pad_200[0x10];                                     // 0x0200(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"OrionSpinnerEntry">();
	}
	static class UOrionSpinnerEntry* GetDefaultObj()
	{
		return GetDefaultObjImpl<UOrionSpinnerEntry>();
	}
};
static_assert(alignof(UOrionSpinnerEntry) == 0x000008, "Wrong alignment on UOrionSpinnerEntry");
static_assert(sizeof(UOrionSpinnerEntry) == 0x000210, "Wrong size on UOrionSpinnerEntry");

// Class OrionUI.OrionDailyChestPointEntry
// 0x0008 (0x0218 - 0x0210)
class UOrionDailyChestPointEntry final : public UOrionSpinnerEntry
{
public:
	class UOrionTextBlock*                        Text_PointValue;                                   // 0x0210(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"OrionDailyChestPointEntry">();
	}
	static class UOrionDailyChestPointEntry* GetDefaultObj()
	{
		return GetDefaultObjImpl<UOrionDailyChestPointEntry>();
	}
};
static_assert(alignof(UOrionDailyChestPointEntry) == 0x000008, "Wrong alignment on UOrionDailyChestPointEntry");
static_assert(sizeof(UOrionDailyChestPointEntry) == 0x000218, "Wrong size on UOrionDailyChestPointEntry");
static_assert(offsetof(UOrionDailyChestPointEntry, Text_PointValue) == 0x000210, "Member 'UOrionDailyChestPointEntry::Text_PointValue' has a wrong offset!");

// Class OrionUI.OrionFlairPopup
// 0x00D8 (0x0520 - 0x0448)
class UOrionFlairPopup final : public UOrionActivatableWidget
{
public:
	TArray<struct FOrionLootReward>               PendingRewards;                                    // 0x0448(0x0010)(ZeroConstructor, Transient, NativeAccessSpecifierPrivate)
	class UOrionRewardWidget*                     Reward_Widget;                                     // 0x0458(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionDefaultButton*                    Button_Accept;                                     // 0x0460(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionTextBlock*                        Text_TitleMsg;                                     // 0x0468(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionTextBlock*                        Text_SubtitleMsg;                                  // 0x0470(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionTextBlock*                        Text_Type;                                         // 0x0478(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionTextBlock*                        Text_Desc;                                         // 0x0480(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionTextBlock*                        Text_SourceDesc;                                   // 0x0488(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UImage*                                 Image_Sunburst;                                    // 0x0490(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOverlay*                               Overlay_Image;                                     // 0x0498(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_4A0[0x80];                                     // 0x04A0(0x0080)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void AnimateIn();
	void AnimateOut();
	void HandleAcceptClicked();
	void ShowNextFlair();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"OrionFlairPopup">();
	}
	static class UOrionFlairPopup* GetDefaultObj()
	{
		return GetDefaultObjImpl<UOrionFlairPopup>();
	}
};
static_assert(alignof(UOrionFlairPopup) == 0x000008, "Wrong alignment on UOrionFlairPopup");
static_assert(sizeof(UOrionFlairPopup) == 0x000520, "Wrong size on UOrionFlairPopup");
static_assert(offsetof(UOrionFlairPopup, PendingRewards) == 0x000448, "Member 'UOrionFlairPopup::PendingRewards' has a wrong offset!");
static_assert(offsetof(UOrionFlairPopup, Reward_Widget) == 0x000458, "Member 'UOrionFlairPopup::Reward_Widget' has a wrong offset!");
static_assert(offsetof(UOrionFlairPopup, Button_Accept) == 0x000460, "Member 'UOrionFlairPopup::Button_Accept' has a wrong offset!");
static_assert(offsetof(UOrionFlairPopup, Text_TitleMsg) == 0x000468, "Member 'UOrionFlairPopup::Text_TitleMsg' has a wrong offset!");
static_assert(offsetof(UOrionFlairPopup, Text_SubtitleMsg) == 0x000470, "Member 'UOrionFlairPopup::Text_SubtitleMsg' has a wrong offset!");
static_assert(offsetof(UOrionFlairPopup, Text_Type) == 0x000478, "Member 'UOrionFlairPopup::Text_Type' has a wrong offset!");
static_assert(offsetof(UOrionFlairPopup, Text_Desc) == 0x000480, "Member 'UOrionFlairPopup::Text_Desc' has a wrong offset!");
static_assert(offsetof(UOrionFlairPopup, Text_SourceDesc) == 0x000488, "Member 'UOrionFlairPopup::Text_SourceDesc' has a wrong offset!");
static_assert(offsetof(UOrionFlairPopup, Image_Sunburst) == 0x000490, "Member 'UOrionFlairPopup::Image_Sunburst' has a wrong offset!");
static_assert(offsetof(UOrionFlairPopup, Overlay_Image) == 0x000498, "Member 'UOrionFlairPopup::Overlay_Image' has a wrong offset!");

// Class OrionUI.OrionFloatingText
// 0x0070 (0x0168 - 0x00F8)
class UOrionFloatingText final : public UWidget
{
public:
	uint8                                         Pad_F8[0x10];                                      // 0x00F8(0x0010)(Fixing Size After Last Property [ Dumper-7 ])
	class USlateVectorArtData*                    GlyphAsset;                                        // 0x0108(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USlateVectorArtData*                    BackgroundShapeAsset;                              // 0x0110(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FFloatingTextGlyphInfo                 GlyphInfo[0x10];                                   // 0x0118(0x0004)(Edit, NoDestructor, Protected, NativeAccessSpecifierProtected)
	float                                         CharacterAdvanceBias;                              // 0x0158(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_15C[0xC];                                      // 0x015C(0x000C)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"OrionFloatingText">();
	}
	static class UOrionFloatingText* GetDefaultObj()
	{
		return GetDefaultObjImpl<UOrionFloatingText>();
	}
};
static_assert(alignof(UOrionFloatingText) == 0x000008, "Wrong alignment on UOrionFloatingText");
static_assert(sizeof(UOrionFloatingText) == 0x000168, "Wrong size on UOrionFloatingText");
static_assert(offsetof(UOrionFloatingText, GlyphAsset) == 0x000108, "Member 'UOrionFloatingText::GlyphAsset' has a wrong offset!");
static_assert(offsetof(UOrionFloatingText, BackgroundShapeAsset) == 0x000110, "Member 'UOrionFloatingText::BackgroundShapeAsset' has a wrong offset!");
static_assert(offsetof(UOrionFloatingText, GlyphInfo) == 0x000118, "Member 'UOrionFloatingText::GlyphInfo' has a wrong offset!");
static_assert(offsetof(UOrionFloatingText, CharacterAdvanceBias) == 0x000158, "Member 'UOrionFloatingText::CharacterAdvanceBias' has a wrong offset!");

// Class OrionUI.OrionQuestAlert
// 0x0078 (0x0330 - 0x02B8)
class UOrionQuestAlert final : public UOrionUserWidgetBase
{
public:
	class FText                                   ProgressTextFormat;                                // 0x02B8(0x0018)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	class UOrionRichText*                         QuestText;                                         // 0x02D0(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionRichText*                         ProgressText;                                      // 0x02D8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UImage*                                 FrontBar;                                          // 0x02E0(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UImage*                                 BackBar;                                           // 0x02E8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FOrionQuestAlertInfo                   AlertInfo;                                         // 0x02F0(0x0030)(NativeAccessSpecifierPrivate)
	class UOrionQuestAlertContainer*              ParentWidget;                                      // 0x0320(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_328[0x8];                                      // 0x0328(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void AlertFinished();
	void ShowAlert(const struct FOrionQuestAlertInfo& NewQuestAlert);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"OrionQuestAlert">();
	}
	static class UOrionQuestAlert* GetDefaultObj()
	{
		return GetDefaultObjImpl<UOrionQuestAlert>();
	}
};
static_assert(alignof(UOrionQuestAlert) == 0x000008, "Wrong alignment on UOrionQuestAlert");
static_assert(sizeof(UOrionQuestAlert) == 0x000330, "Wrong size on UOrionQuestAlert");
static_assert(offsetof(UOrionQuestAlert, ProgressTextFormat) == 0x0002B8, "Member 'UOrionQuestAlert::ProgressTextFormat' has a wrong offset!");
static_assert(offsetof(UOrionQuestAlert, QuestText) == 0x0002D0, "Member 'UOrionQuestAlert::QuestText' has a wrong offset!");
static_assert(offsetof(UOrionQuestAlert, ProgressText) == 0x0002D8, "Member 'UOrionQuestAlert::ProgressText' has a wrong offset!");
static_assert(offsetof(UOrionQuestAlert, FrontBar) == 0x0002E0, "Member 'UOrionQuestAlert::FrontBar' has a wrong offset!");
static_assert(offsetof(UOrionQuestAlert, BackBar) == 0x0002E8, "Member 'UOrionQuestAlert::BackBar' has a wrong offset!");
static_assert(offsetof(UOrionQuestAlert, AlertInfo) == 0x0002F0, "Member 'UOrionQuestAlert::AlertInfo' has a wrong offset!");
static_assert(offsetof(UOrionQuestAlert, ParentWidget) == 0x000320, "Member 'UOrionQuestAlert::ParentWidget' has a wrong offset!");

// Class OrionUI.OrionFPSAndPing
// 0x00C0 (0x01B8 - 0x00F8)
class UOrionFPSAndPing final : public UWidget
{
public:
	struct FSlateFontInfo                         Font;                                              // 0x00F8(0x0058)(Edit, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_150[0x68];                                     // 0x0150(0x0068)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void SetPlayerController(class APlayerController* InController);
	void UpdateForCurrentSettings();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"OrionFPSAndPing">();
	}
	static class UOrionFPSAndPing* GetDefaultObj()
	{
		return GetDefaultObjImpl<UOrionFPSAndPing>();
	}
};
static_assert(alignof(UOrionFPSAndPing) == 0x000008, "Wrong alignment on UOrionFPSAndPing");
static_assert(sizeof(UOrionFPSAndPing) == 0x0001B8, "Wrong size on UOrionFPSAndPing");
static_assert(offsetof(UOrionFPSAndPing, Font) == 0x0000F8, "Member 'UOrionFPSAndPing::Font' has a wrong offset!");

// Class OrionUI.OrionFrontEndCard
// 0x0070 (0x0A50 - 0x09E0)
class UOrionFrontEndCard : public UOrionBaseButton
{
public:
	uint8                                         Pad_9E0[0x8];                                      // 0x09E0(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	class UOrionMcpCardItemDefinition*            OverrideCardDefinition;                            // 0x09E8(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_9F0[0x28];                                     // 0x09F0(0x0028)(Fixing Size After Last Property [ Dumper-7 ])
	bool                                          bShowProgressBar;                                  // 0x0A18(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_A19[0x3];                                      // 0x0A19(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CustomScale;                                       // 0x0A1C(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UScaleBox*                              ScaleBox_Root;                                     // 0x0A20(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UBorder*                                Border_LevelProgress;                              // 0x0A28(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionCardProgressBar*                  ProgressBar_XP;                                    // 0x0A30(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionCardWidget*                       Card_Widget;                                       // 0x0A38(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionUserWidgetBase*                   Icon_Warning;                                      // 0x0A40(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_A48[0x8];                                      // 0x0A48(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void BeginFill();
	bool IsOwned();
	void OnProgressFillComplete();
	void SetCustomScale(float InScale);
	void SetShowProgressBar(bool InShowProgessBar);

	EOrionItemRarity GetCardRarity() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"OrionFrontEndCard">();
	}
	static class UOrionFrontEndCard* GetDefaultObj()
	{
		return GetDefaultObjImpl<UOrionFrontEndCard>();
	}
};
static_assert(alignof(UOrionFrontEndCard) == 0x000008, "Wrong alignment on UOrionFrontEndCard");
static_assert(sizeof(UOrionFrontEndCard) == 0x000A50, "Wrong size on UOrionFrontEndCard");
static_assert(offsetof(UOrionFrontEndCard, OverrideCardDefinition) == 0x0009E8, "Member 'UOrionFrontEndCard::OverrideCardDefinition' has a wrong offset!");
static_assert(offsetof(UOrionFrontEndCard, bShowProgressBar) == 0x000A18, "Member 'UOrionFrontEndCard::bShowProgressBar' has a wrong offset!");
static_assert(offsetof(UOrionFrontEndCard, CustomScale) == 0x000A1C, "Member 'UOrionFrontEndCard::CustomScale' has a wrong offset!");
static_assert(offsetof(UOrionFrontEndCard, ScaleBox_Root) == 0x000A20, "Member 'UOrionFrontEndCard::ScaleBox_Root' has a wrong offset!");
static_assert(offsetof(UOrionFrontEndCard, Border_LevelProgress) == 0x000A28, "Member 'UOrionFrontEndCard::Border_LevelProgress' has a wrong offset!");
static_assert(offsetof(UOrionFrontEndCard, ProgressBar_XP) == 0x000A30, "Member 'UOrionFrontEndCard::ProgressBar_XP' has a wrong offset!");
static_assert(offsetof(UOrionFrontEndCard, Card_Widget) == 0x000A38, "Member 'UOrionFrontEndCard::Card_Widget' has a wrong offset!");
static_assert(offsetof(UOrionFrontEndCard, Icon_Warning) == 0x000A40, "Member 'UOrionFrontEndCard::Icon_Warning' has a wrong offset!");

// Class OrionUI.OrionGamepadButtonLabel
// 0x0078 (0x0330 - 0x02B8)
class UOrionGamepadButtonLabel final : public UOrionUserWidgetBase
{
public:
	class FText                                   DefaultText;                                       // 0x02B8(0x0018)(Edit, Protected, NativeAccessSpecifierProtected)
	class FText                                   Suffix;                                            // 0x02D0(0x0018)(Edit, Protected, NativeAccessSpecifierProtected)
	ETextJustify                                  Justification;                                     // 0x02E8(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_2E9[0x7];                                      // 0x02E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKey                                   SelectedKey;                                       // 0x02F0(0x0018)(Edit, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FKey                                   SecondKey;                                         // 0x0308(0x0018)(Edit, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bRequiresHold;                                     // 0x0320(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_321[0x7];                                      // 0x0321(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UOrionTextBlock*                        Text;                                              // 0x0328(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	struct FKey GetSelectedKey();
	void Refresh();
	void SetSelectedKey(const struct FKey& NewValue);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"OrionGamepadButtonLabel">();
	}
	static class UOrionGamepadButtonLabel* GetDefaultObj()
	{
		return GetDefaultObjImpl<UOrionGamepadButtonLabel>();
	}
};
static_assert(alignof(UOrionGamepadButtonLabel) == 0x000008, "Wrong alignment on UOrionGamepadButtonLabel");
static_assert(sizeof(UOrionGamepadButtonLabel) == 0x000330, "Wrong size on UOrionGamepadButtonLabel");
static_assert(offsetof(UOrionGamepadButtonLabel, DefaultText) == 0x0002B8, "Member 'UOrionGamepadButtonLabel::DefaultText' has a wrong offset!");
static_assert(offsetof(UOrionGamepadButtonLabel, Suffix) == 0x0002D0, "Member 'UOrionGamepadButtonLabel::Suffix' has a wrong offset!");
static_assert(offsetof(UOrionGamepadButtonLabel, Justification) == 0x0002E8, "Member 'UOrionGamepadButtonLabel::Justification' has a wrong offset!");
static_assert(offsetof(UOrionGamepadButtonLabel, SelectedKey) == 0x0002F0, "Member 'UOrionGamepadButtonLabel::SelectedKey' has a wrong offset!");
static_assert(offsetof(UOrionGamepadButtonLabel, SecondKey) == 0x000308, "Member 'UOrionGamepadButtonLabel::SecondKey' has a wrong offset!");
static_assert(offsetof(UOrionGamepadButtonLabel, bRequiresHold) == 0x000320, "Member 'UOrionGamepadButtonLabel::bRequiresHold' has a wrong offset!");
static_assert(offsetof(UOrionGamepadButtonLabel, Text) == 0x000328, "Member 'UOrionGamepadButtonLabel::Text' has a wrong offset!");

// Class OrionUI.OrionGamepadLayoutWidget
// 0x0028 (0x0470 - 0x0448)
class UOrionGamepadLayoutWidget final : public UOrionActivatableWidget
{
public:
	class UImage*                                 Layout0Lines;                                      // 0x0448(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                 Layout1Lines;                                      // 0x0450(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class UOrionGamepadButtonLabel*>       Labels;                                            // 0x0458(0x0010)(ExportObject, ZeroConstructor, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	uint8                                         Pad_468[0x8];                                      // 0x0468(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void BP_OnGamepadTypeChange(EOrionGamepadType NewType);
	void OnConfigChange(int32 Index_0);
	void RefreshLabels();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"OrionGamepadLayoutWidget">();
	}
	static class UOrionGamepadLayoutWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UOrionGamepadLayoutWidget>();
	}
};
static_assert(alignof(UOrionGamepadLayoutWidget) == 0x000008, "Wrong alignment on UOrionGamepadLayoutWidget");
static_assert(sizeof(UOrionGamepadLayoutWidget) == 0x000470, "Wrong size on UOrionGamepadLayoutWidget");
static_assert(offsetof(UOrionGamepadLayoutWidget, Layout0Lines) == 0x000448, "Member 'UOrionGamepadLayoutWidget::Layout0Lines' has a wrong offset!");
static_assert(offsetof(UOrionGamepadLayoutWidget, Layout1Lines) == 0x000450, "Member 'UOrionGamepadLayoutWidget::Layout1Lines' has a wrong offset!");
static_assert(offsetof(UOrionGamepadLayoutWidget, Labels) == 0x000458, "Member 'UOrionGamepadLayoutWidget::Labels' has a wrong offset!");

// Class OrionUI.OrionQuickShopPanel
// 0x0028 (0x02E0 - 0x02B8)
class UOrionQuickShopPanel final : public UOrionUserWidgetBase
{
public:
	bool                                          bIsInHUD;                                          // 0x02B8(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_2B9[0x7];                                      // 0x02B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidgetAnimation*                       EnterAnimation;                                    // 0x02C0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetAnimation*                       ExitAnimation;                                     // 0x02C8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UOrionBaseButton_Group*                 AttributeButtonGroup;                              // 0x02D0(0x0008)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_2D8[0x8];                                      // 0x02D8(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void CloseMenu();
	void OnClosedFinished();
	void OpenMenu();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"OrionQuickShopPanel">();
	}
	static class UOrionQuickShopPanel* GetDefaultObj()
	{
		return GetDefaultObjImpl<UOrionQuickShopPanel>();
	}
};
static_assert(alignof(UOrionQuickShopPanel) == 0x000008, "Wrong alignment on UOrionQuickShopPanel");
static_assert(sizeof(UOrionQuickShopPanel) == 0x0002E0, "Wrong size on UOrionQuickShopPanel");
static_assert(offsetof(UOrionQuickShopPanel, bIsInHUD) == 0x0002B8, "Member 'UOrionQuickShopPanel::bIsInHUD' has a wrong offset!");
static_assert(offsetof(UOrionQuickShopPanel, EnterAnimation) == 0x0002C0, "Member 'UOrionQuickShopPanel::EnterAnimation' has a wrong offset!");
static_assert(offsetof(UOrionQuickShopPanel, ExitAnimation) == 0x0002C8, "Member 'UOrionQuickShopPanel::ExitAnimation' has a wrong offset!");
static_assert(offsetof(UOrionQuickShopPanel, AttributeButtonGroup) == 0x0002D0, "Member 'UOrionQuickShopPanel::AttributeButtonGroup' has a wrong offset!");

// Class OrionUI.OrionGameProgressBar
// 0x0920 (0x0A18 - 0x00F8)
class UOrionGameProgressBar final : public UWidget
{
public:
	float                                         BarInterpTime;                                     // 0x00F8(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         BarLagInterpTime;                                  // 0x00FC(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FSlateBrush                            BackgroundImage;                                   // 0x0100(0x0078)(Edit, Protected, NativeAccessSpecifierProtected)
	float                                         BackgroundImagePaddingPercent;                     // 0x0178(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_17C[0x4];                                      // 0x017C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateBrush                            PrimaryBarImage;                                   // 0x0180(0x0078)(Edit, Protected, NativeAccessSpecifierProtected)
	float                                         PrimaryBarImagePaddingPercent;                     // 0x01F8(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_1FC[0x4];                                      // 0x01FC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateBrush                            PrimaryBarGlow;                                    // 0x0200(0x0078)(Edit, Protected, NativeAccessSpecifierProtected)
	float                                         PrimaryGlowImagePaddingPercent;                    // 0x0278(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_27C[0x4];                                      // 0x027C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateBrush                            WarningBarImage;                                   // 0x0280(0x0078)(Edit, Protected, NativeAccessSpecifierProtected)
	float                                         WarningBarImagePaddingPercent;                     // 0x02F8(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_2FC[0x4];                                      // 0x02FC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateBrush                            WarningBarGlow;                                    // 0x0300(0x0078)(Edit, Protected, NativeAccessSpecifierProtected)
	float                                         WarningBarGlowImagePaddingPercent;                 // 0x0378(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         WarningThreshold;                                  // 0x037C(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FSlateBrush                            DangerBarImage;                                    // 0x0380(0x0078)(Edit, Protected, NativeAccessSpecifierProtected)
	float                                         DangerBarImagePaddingPercent;                      // 0x03F8(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_3FC[0x4];                                      // 0x03FC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateBrush                            DangerBarGlow;                                     // 0x0400(0x0078)(Edit, Protected, NativeAccessSpecifierProtected)
	float                                         DangerBarGlowImagePaddingPercent;                  // 0x0478(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         DangerThreshold;                                   // 0x047C(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FSlateBrush                            SecondaryBarImage;                                 // 0x0480(0x0078)(Edit, Protected, NativeAccessSpecifierProtected)
	float                                         SecondaryBarImagePaddingPercent;                   // 0x04F8(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_4FC[0x4];                                      // 0x04FC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateBrush                            SecondaryBarGlow;                                  // 0x0500(0x0078)(Edit, Protected, NativeAccessSpecifierProtected)
	float                                         SecondaryBarGlowImagePaddingPercent;               // 0x0578(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_57C[0x4];                                      // 0x057C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateBrush                            IncreasingDeltaFillImage;                          // 0x0580(0x0078)(Edit, Protected, NativeAccessSpecifierProtected)
	float                                         IncreasingDeltaFillImagePaddingPercent;            // 0x05F8(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_5FC[0x4];                                      // 0x05FC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateBrush                            IncreasingDeltaFillGlow;                           // 0x0600(0x0078)(Edit, Protected, NativeAccessSpecifierProtected)
	float                                         IncreasingDeltaFillGlowImagePaddingPercent;        // 0x0678(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_67C[0x4];                                      // 0x067C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateBrush                            DecreasingDeltaFillImage;                          // 0x0680(0x0078)(Edit, Protected, NativeAccessSpecifierProtected)
	float                                         DecreasingDeltaFillImagePaddingPercent;            // 0x06F8(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_6FC[0x4];                                      // 0x06FC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateBrush                            DecreasingDeltaFillGlow;                           // 0x0700(0x0078)(Edit, Protected, NativeAccessSpecifierProtected)
	float                                         DecreasingDeltaFillGlowImagePaddingPercent;        // 0x0778(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_77C[0x4];                                      // 0x077C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateBrush                            IncreasingBarImage;                                // 0x0780(0x0078)(Edit, Protected, NativeAccessSpecifierProtected)
	float                                         IncreasingBarImagePaddingPercent;                  // 0x07F8(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_7FC[0x4];                                      // 0x07FC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateBrush                            IncreasingBarGlow;                                 // 0x0800(0x0078)(Edit, Protected, NativeAccessSpecifierProtected)
	float                                         IncreasingBarGlowImagePaddingPercent;              // 0x0878(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_87C[0x4];                                      // 0x087C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateBrush                            PipImage;                                          // 0x0880(0x0078)(Edit, Protected, NativeAccessSpecifierProtected)
	float                                         PipDrawSize;                                       // 0x08F8(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         Percent;                                           // 0x08FC(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         SecondaryPercent;                                  // 0x0900(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         DeltaPercent;                                      // 0x0904(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	EProgressBarFillType                          BarFillType;                                       // 0x0908(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_909[0x3];                                      // 0x0909(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         PipGapPercent;                                     // 0x090C(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bIsDeltaIncreasing;                                // 0x0910(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_911[0x3];                                      // 0x0911(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              BorderPadding;                                     // 0x0914(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_91C[0x4];                                      // 0x091C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             PercentDelegate;                                   // 0x0920(0x0010)(ZeroConstructor, InstancedReference, NoDestructor, Protected, NativeAccessSpecifierProtected)
	TDelegate<void()>                             SecondaryPercentDelegate;                          // 0x0930(0x0010)(ZeroConstructor, InstancedReference, NoDestructor, Protected, NativeAccessSpecifierProtected)
	TDelegate<void()>                             DeltaPercentDelegate;                              // 0x0940(0x0010)(ZeroConstructor, InstancedReference, NoDestructor, Protected, NativeAccessSpecifierProtected)
	struct FLinearColor                           FillColorAndOpacity;                               // 0x0950(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FLinearColor                           FillDeltaColorAndOpacity;                          // 0x0960(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TDelegate<void()>                             FillColorAndOpacityDelegate;                       // 0x0970(0x0010)(ZeroConstructor, InstancedReference, NoDestructor, Protected, NativeAccessSpecifierProtected)
	TDelegate<void()>                             FillDeltaColorAndOpacityDelegate;                  // 0x0980(0x0010)(ZeroConstructor, InstancedReference, NoDestructor, Protected, NativeAccessSpecifierProtected)
	uint8                                         Pad_990[0x88];                                     // 0x0990(0x0088)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void SetBarFillType(EProgressBarFillType InType);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"OrionGameProgressBar">();
	}
	static class UOrionGameProgressBar* GetDefaultObj()
	{
		return GetDefaultObjImpl<UOrionGameProgressBar>();
	}
};
static_assert(alignof(UOrionGameProgressBar) == 0x000008, "Wrong alignment on UOrionGameProgressBar");
static_assert(sizeof(UOrionGameProgressBar) == 0x000A18, "Wrong size on UOrionGameProgressBar");
static_assert(offsetof(UOrionGameProgressBar, BarInterpTime) == 0x0000F8, "Member 'UOrionGameProgressBar::BarInterpTime' has a wrong offset!");
static_assert(offsetof(UOrionGameProgressBar, BarLagInterpTime) == 0x0000FC, "Member 'UOrionGameProgressBar::BarLagInterpTime' has a wrong offset!");
static_assert(offsetof(UOrionGameProgressBar, BackgroundImage) == 0x000100, "Member 'UOrionGameProgressBar::BackgroundImage' has a wrong offset!");
static_assert(offsetof(UOrionGameProgressBar, BackgroundImagePaddingPercent) == 0x000178, "Member 'UOrionGameProgressBar::BackgroundImagePaddingPercent' has a wrong offset!");
static_assert(offsetof(UOrionGameProgressBar, PrimaryBarImage) == 0x000180, "Member 'UOrionGameProgressBar::PrimaryBarImage' has a wrong offset!");
static_assert(offsetof(UOrionGameProgressBar, PrimaryBarImagePaddingPercent) == 0x0001F8, "Member 'UOrionGameProgressBar::PrimaryBarImagePaddingPercent' has a wrong offset!");
static_assert(offsetof(UOrionGameProgressBar, PrimaryBarGlow) == 0x000200, "Member 'UOrionGameProgressBar::PrimaryBarGlow' has a wrong offset!");
static_assert(offsetof(UOrionGameProgressBar, PrimaryGlowImagePaddingPercent) == 0x000278, "Member 'UOrionGameProgressBar::PrimaryGlowImagePaddingPercent' has a wrong offset!");
static_assert(offsetof(UOrionGameProgressBar, WarningBarImage) == 0x000280, "Member 'UOrionGameProgressBar::WarningBarImage' has a wrong offset!");
static_assert(offsetof(UOrionGameProgressBar, WarningBarImagePaddingPercent) == 0x0002F8, "Member 'UOrionGameProgressBar::WarningBarImagePaddingPercent' has a wrong offset!");
static_assert(offsetof(UOrionGameProgressBar, WarningBarGlow) == 0x000300, "Member 'UOrionGameProgressBar::WarningBarGlow' has a wrong offset!");
static_assert(offsetof(UOrionGameProgressBar, WarningBarGlowImagePaddingPercent) == 0x000378, "Member 'UOrionGameProgressBar::WarningBarGlowImagePaddingPercent' has a wrong offset!");
static_assert(offsetof(UOrionGameProgressBar, WarningThreshold) == 0x00037C, "Member 'UOrionGameProgressBar::WarningThreshold' has a wrong offset!");
static_assert(offsetof(UOrionGameProgressBar, DangerBarImage) == 0x000380, "Member 'UOrionGameProgressBar::DangerBarImage' has a wrong offset!");
static_assert(offsetof(UOrionGameProgressBar, DangerBarImagePaddingPercent) == 0x0003F8, "Member 'UOrionGameProgressBar::DangerBarImagePaddingPercent' has a wrong offset!");
static_assert(offsetof(UOrionGameProgressBar, DangerBarGlow) == 0x000400, "Member 'UOrionGameProgressBar::DangerBarGlow' has a wrong offset!");
static_assert(offsetof(UOrionGameProgressBar, DangerBarGlowImagePaddingPercent) == 0x000478, "Member 'UOrionGameProgressBar::DangerBarGlowImagePaddingPercent' has a wrong offset!");
static_assert(offsetof(UOrionGameProgressBar, DangerThreshold) == 0x00047C, "Member 'UOrionGameProgressBar::DangerThreshold' has a wrong offset!");
static_assert(offsetof(UOrionGameProgressBar, SecondaryBarImage) == 0x000480, "Member 'UOrionGameProgressBar::SecondaryBarImage' has a wrong offset!");
static_assert(offsetof(UOrionGameProgressBar, SecondaryBarImagePaddingPercent) == 0x0004F8, "Member 'UOrionGameProgressBar::SecondaryBarImagePaddingPercent' has a wrong offset!");
static_assert(offsetof(UOrionGameProgressBar, SecondaryBarGlow) == 0x000500, "Member 'UOrionGameProgressBar::SecondaryBarGlow' has a wrong offset!");
static_assert(offsetof(UOrionGameProgressBar, SecondaryBarGlowImagePaddingPercent) == 0x000578, "Member 'UOrionGameProgressBar::SecondaryBarGlowImagePaddingPercent' has a wrong offset!");
static_assert(offsetof(UOrionGameProgressBar, IncreasingDeltaFillImage) == 0x000580, "Member 'UOrionGameProgressBar::IncreasingDeltaFillImage' has a wrong offset!");
static_assert(offsetof(UOrionGameProgressBar, IncreasingDeltaFillImagePaddingPercent) == 0x0005F8, "Member 'UOrionGameProgressBar::IncreasingDeltaFillImagePaddingPercent' has a wrong offset!");
static_assert(offsetof(UOrionGameProgressBar, IncreasingDeltaFillGlow) == 0x000600, "Member 'UOrionGameProgressBar::IncreasingDeltaFillGlow' has a wrong offset!");
static_assert(offsetof(UOrionGameProgressBar, IncreasingDeltaFillGlowImagePaddingPercent) == 0x000678, "Member 'UOrionGameProgressBar::IncreasingDeltaFillGlowImagePaddingPercent' has a wrong offset!");
static_assert(offsetof(UOrionGameProgressBar, DecreasingDeltaFillImage) == 0x000680, "Member 'UOrionGameProgressBar::DecreasingDeltaFillImage' has a wrong offset!");
static_assert(offsetof(UOrionGameProgressBar, DecreasingDeltaFillImagePaddingPercent) == 0x0006F8, "Member 'UOrionGameProgressBar::DecreasingDeltaFillImagePaddingPercent' has a wrong offset!");
static_assert(offsetof(UOrionGameProgressBar, DecreasingDeltaFillGlow) == 0x000700, "Member 'UOrionGameProgressBar::DecreasingDeltaFillGlow' has a wrong offset!");
static_assert(offsetof(UOrionGameProgressBar, DecreasingDeltaFillGlowImagePaddingPercent) == 0x000778, "Member 'UOrionGameProgressBar::DecreasingDeltaFillGlowImagePaddingPercent' has a wrong offset!");
static_assert(offsetof(UOrionGameProgressBar, IncreasingBarImage) == 0x000780, "Member 'UOrionGameProgressBar::IncreasingBarImage' has a wrong offset!");
static_assert(offsetof(UOrionGameProgressBar, IncreasingBarImagePaddingPercent) == 0x0007F8, "Member 'UOrionGameProgressBar::IncreasingBarImagePaddingPercent' has a wrong offset!");
static_assert(offsetof(UOrionGameProgressBar, IncreasingBarGlow) == 0x000800, "Member 'UOrionGameProgressBar::IncreasingBarGlow' has a wrong offset!");
static_assert(offsetof(UOrionGameProgressBar, IncreasingBarGlowImagePaddingPercent) == 0x000878, "Member 'UOrionGameProgressBar::IncreasingBarGlowImagePaddingPercent' has a wrong offset!");
static_assert(offsetof(UOrionGameProgressBar, PipImage) == 0x000880, "Member 'UOrionGameProgressBar::PipImage' has a wrong offset!");
static_assert(offsetof(UOrionGameProgressBar, PipDrawSize) == 0x0008F8, "Member 'UOrionGameProgressBar::PipDrawSize' has a wrong offset!");
static_assert(offsetof(UOrionGameProgressBar, Percent) == 0x0008FC, "Member 'UOrionGameProgressBar::Percent' has a wrong offset!");
static_assert(offsetof(UOrionGameProgressBar, SecondaryPercent) == 0x000900, "Member 'UOrionGameProgressBar::SecondaryPercent' has a wrong offset!");
static_assert(offsetof(UOrionGameProgressBar, DeltaPercent) == 0x000904, "Member 'UOrionGameProgressBar::DeltaPercent' has a wrong offset!");
static_assert(offsetof(UOrionGameProgressBar, BarFillType) == 0x000908, "Member 'UOrionGameProgressBar::BarFillType' has a wrong offset!");
static_assert(offsetof(UOrionGameProgressBar, PipGapPercent) == 0x00090C, "Member 'UOrionGameProgressBar::PipGapPercent' has a wrong offset!");
static_assert(offsetof(UOrionGameProgressBar, bIsDeltaIncreasing) == 0x000910, "Member 'UOrionGameProgressBar::bIsDeltaIncreasing' has a wrong offset!");
static_assert(offsetof(UOrionGameProgressBar, BorderPadding) == 0x000914, "Member 'UOrionGameProgressBar::BorderPadding' has a wrong offset!");
static_assert(offsetof(UOrionGameProgressBar, PercentDelegate) == 0x000920, "Member 'UOrionGameProgressBar::PercentDelegate' has a wrong offset!");
static_assert(offsetof(UOrionGameProgressBar, SecondaryPercentDelegate) == 0x000930, "Member 'UOrionGameProgressBar::SecondaryPercentDelegate' has a wrong offset!");
static_assert(offsetof(UOrionGameProgressBar, DeltaPercentDelegate) == 0x000940, "Member 'UOrionGameProgressBar::DeltaPercentDelegate' has a wrong offset!");
static_assert(offsetof(UOrionGameProgressBar, FillColorAndOpacity) == 0x000950, "Member 'UOrionGameProgressBar::FillColorAndOpacity' has a wrong offset!");
static_assert(offsetof(UOrionGameProgressBar, FillDeltaColorAndOpacity) == 0x000960, "Member 'UOrionGameProgressBar::FillDeltaColorAndOpacity' has a wrong offset!");
static_assert(offsetof(UOrionGameProgressBar, FillColorAndOpacityDelegate) == 0x000970, "Member 'UOrionGameProgressBar::FillColorAndOpacityDelegate' has a wrong offset!");
static_assert(offsetof(UOrionGameProgressBar, FillDeltaColorAndOpacityDelegate) == 0x000980, "Member 'UOrionGameProgressBar::FillDeltaColorAndOpacityDelegate' has a wrong offset!");

// Class OrionUI.OrionGameTypeButton
// 0x0020 (0x0A00 - 0x09E0)
class UOrionGameTypeButton final : public UOrionBaseButton
{
public:
	int32                                         Playlist;                                          // 0x09E0(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_9E4[0x4];                                      // 0x09E4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UOrionTextBlock*                        Text_ModeTitle;                                    // 0x09E8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionTextBlock*                        Text_ModeDescription;                              // 0x09F0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UImage*                                 Image_ModeIcon;                                    // 0x09F8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"OrionGameTypeButton">();
	}
	static class UOrionGameTypeButton* GetDefaultObj()
	{
		return GetDefaultObjImpl<UOrionGameTypeButton>();
	}
};
static_assert(alignof(UOrionGameTypeButton) == 0x000008, "Wrong alignment on UOrionGameTypeButton");
static_assert(sizeof(UOrionGameTypeButton) == 0x000A00, "Wrong size on UOrionGameTypeButton");
static_assert(offsetof(UOrionGameTypeButton, Playlist) == 0x0009E0, "Member 'UOrionGameTypeButton::Playlist' has a wrong offset!");
static_assert(offsetof(UOrionGameTypeButton, Text_ModeTitle) == 0x0009E8, "Member 'UOrionGameTypeButton::Text_ModeTitle' has a wrong offset!");
static_assert(offsetof(UOrionGameTypeButton, Text_ModeDescription) == 0x0009F0, "Member 'UOrionGameTypeButton::Text_ModeDescription' has a wrong offset!");
static_assert(offsetof(UOrionGameTypeButton, Image_ModeIcon) == 0x0009F8, "Member 'UOrionGameTypeButton::Image_ModeIcon' has a wrong offset!");

// Class OrionUI.OrionPostGameTab_Summary
// 0x0058 (0x0590 - 0x0538)
class UOrionPostGameTab_Summary final : public UOrionPostGameTab
{
public:
	TSubclassOf<class UOrionHeroDetailsMasteryRankPurchaseModal> RankPurchaseModalClass;                            // 0x0538(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_540[0x8];                                      // 0x0540(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         RewardRevealDelay;                                 // 0x0548(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int32                                         NumBonusStars;                                     // 0x054C(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionItemizedCounter*                  Counter_TotalXP;                                   // 0x0550(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionItemizedCounter*                  Counter_TotalTimeCurrency;                         // 0x0558(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionItemizedCounter*                  Counter_TotalStars;                                // 0x0560(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionDynamicEntryBox*                  EntryBox_EarnedRewards;                            // 0x0568(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionMatchSummaryMastery*              Mastery_Summary;                                   // 0x0570(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionDefaultButton*                    Button_Unlock;                                     // 0x0578(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionTextBlock*                        Text_UnlockAdvertisement;                          // 0x0580(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_588[0x8];                                      // 0x0588(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void HandleMasteryUnlockClicked();
	void HandleUnlockWidgetClose();
	void OnMasteryProgressLocked(bool bProgressLocked);
	void OnMasteryUnlocked();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"OrionPostGameTab_Summary">();
	}
	static class UOrionPostGameTab_Summary* GetDefaultObj()
	{
		return GetDefaultObjImpl<UOrionPostGameTab_Summary>();
	}
};
static_assert(alignof(UOrionPostGameTab_Summary) == 0x000008, "Wrong alignment on UOrionPostGameTab_Summary");
static_assert(sizeof(UOrionPostGameTab_Summary) == 0x000590, "Wrong size on UOrionPostGameTab_Summary");
static_assert(offsetof(UOrionPostGameTab_Summary, RankPurchaseModalClass) == 0x000538, "Member 'UOrionPostGameTab_Summary::RankPurchaseModalClass' has a wrong offset!");
static_assert(offsetof(UOrionPostGameTab_Summary, RewardRevealDelay) == 0x000548, "Member 'UOrionPostGameTab_Summary::RewardRevealDelay' has a wrong offset!");
static_assert(offsetof(UOrionPostGameTab_Summary, NumBonusStars) == 0x00054C, "Member 'UOrionPostGameTab_Summary::NumBonusStars' has a wrong offset!");
static_assert(offsetof(UOrionPostGameTab_Summary, Counter_TotalXP) == 0x000550, "Member 'UOrionPostGameTab_Summary::Counter_TotalXP' has a wrong offset!");
static_assert(offsetof(UOrionPostGameTab_Summary, Counter_TotalTimeCurrency) == 0x000558, "Member 'UOrionPostGameTab_Summary::Counter_TotalTimeCurrency' has a wrong offset!");
static_assert(offsetof(UOrionPostGameTab_Summary, Counter_TotalStars) == 0x000560, "Member 'UOrionPostGameTab_Summary::Counter_TotalStars' has a wrong offset!");
static_assert(offsetof(UOrionPostGameTab_Summary, EntryBox_EarnedRewards) == 0x000568, "Member 'UOrionPostGameTab_Summary::EntryBox_EarnedRewards' has a wrong offset!");
static_assert(offsetof(UOrionPostGameTab_Summary, Mastery_Summary) == 0x000570, "Member 'UOrionPostGameTab_Summary::Mastery_Summary' has a wrong offset!");
static_assert(offsetof(UOrionPostGameTab_Summary, Button_Unlock) == 0x000578, "Member 'UOrionPostGameTab_Summary::Button_Unlock' has a wrong offset!");
static_assert(offsetof(UOrionPostGameTab_Summary, Text_UnlockAdvertisement) == 0x000580, "Member 'UOrionPostGameTab_Summary::Text_UnlockAdvertisement' has a wrong offset!");

// Class OrionUI.OrionGameTypeWidget
// 0x0178 (0x0430 - 0x02B8)
class UOrionGameTypeWidget final : public UOrionUserWidgetBase
{
public:
	uint8                                         Pad_2B8[0x78];                                     // 0x02B8(0x0078)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 SupportedPlaylists;                                // 0x0330(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	class UOrionDefaultButton*                    Button_CurrentAIDifficulty;                        // 0x0340(0x0008)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_348[0xD0];                                     // 0x0348(0x00D0)(Fixing Size After Last Property [ Dumper-7 ])
	class UOrionGameTypeButton*                   Button_GameType;                                   // 0x0418(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_420[0x10];                                     // 0x0420(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void HideOptions();
	void OnActivePlaylistChanged(int32 Playlist);
	void OnDifficultyChanged(EAIBotDifficulty InType);
	void OnDisableOptions(bool bDisable);
	void OnHideOptions();
	void OnShowOptions();
	void SetDesiredPlaylist(int32 Playlist);
	void SetDifficultySelectorEntriesText(const TArray<class UOrionDefaultButton*>& DifficultyButtons, const class FText& CurrentDifficultyText);
	void SetSelectedDifficulty(EAIBotDifficulty InType);
	void ShowOptions();

	EAIBotDifficulty FindEnumFromDifficultySelectorText(const class FText& InText) const;
	const struct FAIBotDifficultyDisplayEntry GetDifficultyDisplayEntry(EAIBotDifficulty InDifficulty) const;
	bool ShouldEnableDifficultySelector() const;
	bool ShouldShowDifficultySelector() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"OrionGameTypeWidget">();
	}
	static class UOrionGameTypeWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UOrionGameTypeWidget>();
	}
};
static_assert(alignof(UOrionGameTypeWidget) == 0x000008, "Wrong alignment on UOrionGameTypeWidget");
static_assert(sizeof(UOrionGameTypeWidget) == 0x000430, "Wrong size on UOrionGameTypeWidget");
static_assert(offsetof(UOrionGameTypeWidget, SupportedPlaylists) == 0x000330, "Member 'UOrionGameTypeWidget::SupportedPlaylists' has a wrong offset!");
static_assert(offsetof(UOrionGameTypeWidget, Button_CurrentAIDifficulty) == 0x000340, "Member 'UOrionGameTypeWidget::Button_CurrentAIDifficulty' has a wrong offset!");
static_assert(offsetof(UOrionGameTypeWidget, Button_GameType) == 0x000418, "Member 'UOrionGameTypeWidget::Button_GameType' has a wrong offset!");

// Class OrionUI.OrionGemBasic
// 0x0038 (0x02F0 - 0x02B8)
class UOrionGemBasic : public UOrionUserWidgetBase
{
public:
	float                                         ScaleValue;                                        // 0x02B8(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_2BC[0x4];                                      // 0x02BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TSubclassOf<class UOrionGemTooltip>           GemTooltipClass;                                   // 0x02C0(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_2C8[0x18];                                     // 0x02C8(0x0018)(Fixing Size After Last Property [ Dumper-7 ])
	class UScaleBox*                              ScaleBox_Root;                                     // 0x02E0(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UImage*                                 Image_Gem;                                         // 0x02E8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"OrionGemBasic">();
	}
	static class UOrionGemBasic* GetDefaultObj()
	{
		return GetDefaultObjImpl<UOrionGemBasic>();
	}
};
static_assert(alignof(UOrionGemBasic) == 0x000008, "Wrong alignment on UOrionGemBasic");
static_assert(sizeof(UOrionGemBasic) == 0x0002F0, "Wrong size on UOrionGemBasic");
static_assert(offsetof(UOrionGemBasic, ScaleValue) == 0x0002B8, "Member 'UOrionGemBasic::ScaleValue' has a wrong offset!");
static_assert(offsetof(UOrionGemBasic, GemTooltipClass) == 0x0002C0, "Member 'UOrionGemBasic::GemTooltipClass' has a wrong offset!");
static_assert(offsetof(UOrionGemBasic, ScaleBox_Root) == 0x0002E0, "Member 'UOrionGemBasic::ScaleBox_Root' has a wrong offset!");
static_assert(offsetof(UOrionGemBasic, Image_Gem) == 0x0002E8, "Member 'UOrionGemBasic::Image_Gem' has a wrong offset!");

// Class OrionUI.OrionRegionListItem
// 0x0020 (0x0A00 - 0x09E0)
class UOrionRegionListItem final : public UOrionBaseButton
{
public:
	uint8                                         Pad_9E0[0x20];                                     // 0x09E0(0x0020)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"OrionRegionListItem">();
	}
	static class UOrionRegionListItem* GetDefaultObj()
	{
		return GetDefaultObjImpl<UOrionRegionListItem>();
	}
};
static_assert(alignof(UOrionRegionListItem) == 0x000008, "Wrong alignment on UOrionRegionListItem");
static_assert(sizeof(UOrionRegionListItem) == 0x000A00, "Wrong size on UOrionRegionListItem");

// Class OrionUI.OrionGemCollectionScreen
// 0x0018 (0x0460 - 0x0448)
class UOrionGemCollectionScreen final : public UOrionActivatableWidget
{
public:
	class UOrionGemFilterHeader*                  Header_Filter;                                     // 0x0448(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionTileView*                         TileView_Gems;                                     // 0x0450(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_458[0x8];                                      // 0x0458(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void DynamicGemClicked(class UObject* Obj);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"OrionGemCollectionScreen">();
	}
	static class UOrionGemCollectionScreen* GetDefaultObj()
	{
		return GetDefaultObjImpl<UOrionGemCollectionScreen>();
	}
};
static_assert(alignof(UOrionGemCollectionScreen) == 0x000008, "Wrong alignment on UOrionGemCollectionScreen");
static_assert(sizeof(UOrionGemCollectionScreen) == 0x000460, "Wrong size on UOrionGemCollectionScreen");
static_assert(offsetof(UOrionGemCollectionScreen, Header_Filter) == 0x000448, "Member 'UOrionGemCollectionScreen::Header_Filter' has a wrong offset!");
static_assert(offsetof(UOrionGemCollectionScreen, TileView_Gems) == 0x000450, "Member 'UOrionGemCollectionScreen::TileView_Gems' has a wrong offset!");

// Class OrionUI.OrionGemFilterHeader
// 0x0058 (0x0310 - 0x02B8)
class UOrionGemFilterHeader final : public UOrionUserWidgetBase
{
public:
	uint8                                         Pad_2B8[0x10];                                     // 0x02B8(0x0010)(Fixing Size After Last Property [ Dumper-7 ])
	class UOrionTileView*                         TileViewToFilter;                                  // 0x02C8(0x0008)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionFilterHeaderButton*               Button_FilterOne;                                  // 0x02D0(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionFilterHeaderButton*               Button_FilterTwo;                                  // 0x02D8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionFilterHeaderButton*               Button_FilterThree;                                // 0x02E0(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionFilterHeaderButton*               Button_FilterFour;                                 // 0x02E8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionFilterHeaderButton*               Button_FilterFive;                                 // 0x02F0(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionFilterToggleButton*               Button_Toggle;                                     // 0x02F8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionEditableTextBox*                  Text_SearchBox;                                    // 0x0300(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_308[0x8];                                      // 0x0308(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void DynamicSearchTextChanged(const class FText& NewText);
	void DynamicSearchTextCommitted(const class FText& NewText, ETextCommit CommitMethod);
	void HandleToggleButtonSort();
	void OnFilterFiveSelected(bool bSelected);
	void OnFilterFourSelected(bool bSelected);
	void OnFilterOneSelected(bool bSelected);
	void OnFilterThreeSelected(bool bSelected);
	void OnFilterTwoSelected(bool bSelected);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"OrionGemFilterHeader">();
	}
	static class UOrionGemFilterHeader* GetDefaultObj()
	{
		return GetDefaultObjImpl<UOrionGemFilterHeader>();
	}
};
static_assert(alignof(UOrionGemFilterHeader) == 0x000008, "Wrong alignment on UOrionGemFilterHeader");
static_assert(sizeof(UOrionGemFilterHeader) == 0x000310, "Wrong size on UOrionGemFilterHeader");
static_assert(offsetof(UOrionGemFilterHeader, TileViewToFilter) == 0x0002C8, "Member 'UOrionGemFilterHeader::TileViewToFilter' has a wrong offset!");
static_assert(offsetof(UOrionGemFilterHeader, Button_FilterOne) == 0x0002D0, "Member 'UOrionGemFilterHeader::Button_FilterOne' has a wrong offset!");
static_assert(offsetof(UOrionGemFilterHeader, Button_FilterTwo) == 0x0002D8, "Member 'UOrionGemFilterHeader::Button_FilterTwo' has a wrong offset!");
static_assert(offsetof(UOrionGemFilterHeader, Button_FilterThree) == 0x0002E0, "Member 'UOrionGemFilterHeader::Button_FilterThree' has a wrong offset!");
static_assert(offsetof(UOrionGemFilterHeader, Button_FilterFour) == 0x0002E8, "Member 'UOrionGemFilterHeader::Button_FilterFour' has a wrong offset!");
static_assert(offsetof(UOrionGemFilterHeader, Button_FilterFive) == 0x0002F0, "Member 'UOrionGemFilterHeader::Button_FilterFive' has a wrong offset!");
static_assert(offsetof(UOrionGemFilterHeader, Button_Toggle) == 0x0002F8, "Member 'UOrionGemFilterHeader::Button_Toggle' has a wrong offset!");
static_assert(offsetof(UOrionGemFilterHeader, Text_SearchBox) == 0x000300, "Member 'UOrionGemFilterHeader::Text_SearchBox' has a wrong offset!");

// Class OrionUI.OrionSurveyQuestion
// 0x0018 (0x02D0 - 0x02B8)
class UOrionSurveyQuestion : public UOrionUserWidgetBase
{
public:
	int32                                         ResponseValue;                                     // 0x02B8(0x0004)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_2BC[0x4];                                      // 0x02BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UOrionTextBlock*                        Text_Question;                                     // 0x02C0(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_2C8[0x8];                                      // 0x02C8(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"OrionSurveyQuestion">();
	}
	static class UOrionSurveyQuestion* GetDefaultObj()
	{
		return GetDefaultObjImpl<UOrionSurveyQuestion>();
	}
};
static_assert(alignof(UOrionSurveyQuestion) == 0x000008, "Wrong alignment on UOrionSurveyQuestion");
static_assert(sizeof(UOrionSurveyQuestion) == 0x0002D0, "Wrong size on UOrionSurveyQuestion");
static_assert(offsetof(UOrionSurveyQuestion, ResponseValue) == 0x0002B8, "Member 'UOrionSurveyQuestion::ResponseValue' has a wrong offset!");
static_assert(offsetof(UOrionSurveyQuestion, Text_Question) == 0x0002C0, "Member 'UOrionSurveyQuestion::Text_Question' has a wrong offset!");

// Class OrionUI.OrionGemListItem
// 0x0080 (0x0A60 - 0x09E0)
class UOrionGemListItem final : public UOrionBaseButton
{
public:
	uint8                                         Pad_9E0[0x68];                                     // 0x09E0(0x0068)(Fixing Size After Last Property [ Dumper-7 ])
	class UOrionGemBasic*                         Gem_Widget;                                        // 0x0A48(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionTextBlock*                        Text_Name;                                         // 0x0A50(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionUserWidgetBase*                   Icon_Warning;                                      // 0x0A58(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	void OnGemSelected(bool bIsSelected);
	void OnGemSet(const class UOrionMcpGemItem* Gem);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"OrionGemListItem">();
	}
	static class UOrionGemListItem* GetDefaultObj()
	{
		return GetDefaultObjImpl<UOrionGemListItem>();
	}
};
static_assert(alignof(UOrionGemListItem) == 0x000008, "Wrong alignment on UOrionGemListItem");
static_assert(sizeof(UOrionGemListItem) == 0x000A60, "Wrong size on UOrionGemListItem");
static_assert(offsetof(UOrionGemListItem, Gem_Widget) == 0x000A48, "Member 'UOrionGemListItem::Gem_Widget' has a wrong offset!");
static_assert(offsetof(UOrionGemListItem, Text_Name) == 0x000A50, "Member 'UOrionGemListItem::Text_Name' has a wrong offset!");
static_assert(offsetof(UOrionGemListItem, Icon_Warning) == 0x000A58, "Member 'UOrionGemListItem::Icon_Warning' has a wrong offset!");

// Class OrionUI.OrionGemSelectionCategory
// 0x0018 (0x02D0 - 0x02B8)
class UOrionGemSelectionCategory final : public UOrionUserWidgetBase
{
public:
	class UOrionTextBlock*                        Text_Name;                                         // 0x02B8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionTileView*                         TileView_Gems;                                     // 0x02C0(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_2C8[0x8];                                      // 0x02C8(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"OrionGemSelectionCategory">();
	}
	static class UOrionGemSelectionCategory* GetDefaultObj()
	{
		return GetDefaultObjImpl<UOrionGemSelectionCategory>();
	}
};
static_assert(alignof(UOrionGemSelectionCategory) == 0x000008, "Wrong alignment on UOrionGemSelectionCategory");
static_assert(sizeof(UOrionGemSelectionCategory) == 0x0002D0, "Wrong size on UOrionGemSelectionCategory");
static_assert(offsetof(UOrionGemSelectionCategory, Text_Name) == 0x0002B8, "Member 'UOrionGemSelectionCategory::Text_Name' has a wrong offset!");
static_assert(offsetof(UOrionGemSelectionCategory, TileView_Gems) == 0x0002C0, "Member 'UOrionGemSelectionCategory::TileView_Gems' has a wrong offset!");

// Class OrionUI.OrionMasteryOnboardPopupCongratulations
// 0x0028 (0x0470 - 0x0448)
class UOrionMasteryOnboardPopupCongratulations final : public UOrionActivatableWidget
{
public:
	class UOrionHeroListItem*                     HeroListItem_SelectedHero;                         // 0x0448(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionDefaultButton*                    Button_Close;                                      // 0x0450(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionTextBlock*                        Text_Rank;                                         // 0x0458(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionTextBlock*                        Text_Hero;                                         // 0x0460(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_468[0x8];                                      // 0x0468(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"OrionMasteryOnboardPopupCongratulations">();
	}
	static class UOrionMasteryOnboardPopupCongratulations* GetDefaultObj()
	{
		return GetDefaultObjImpl<UOrionMasteryOnboardPopupCongratulations>();
	}
};
static_assert(alignof(UOrionMasteryOnboardPopupCongratulations) == 0x000008, "Wrong alignment on UOrionMasteryOnboardPopupCongratulations");
static_assert(sizeof(UOrionMasteryOnboardPopupCongratulations) == 0x000470, "Wrong size on UOrionMasteryOnboardPopupCongratulations");
static_assert(offsetof(UOrionMasteryOnboardPopupCongratulations, HeroListItem_SelectedHero) == 0x000448, "Member 'UOrionMasteryOnboardPopupCongratulations::HeroListItem_SelectedHero' has a wrong offset!");
static_assert(offsetof(UOrionMasteryOnboardPopupCongratulations, Button_Close) == 0x000450, "Member 'UOrionMasteryOnboardPopupCongratulations::Button_Close' has a wrong offset!");
static_assert(offsetof(UOrionMasteryOnboardPopupCongratulations, Text_Rank) == 0x000458, "Member 'UOrionMasteryOnboardPopupCongratulations::Text_Rank' has a wrong offset!");
static_assert(offsetof(UOrionMasteryOnboardPopupCongratulations, Text_Hero) == 0x000460, "Member 'UOrionMasteryOnboardPopupCongratulations::Text_Hero' has a wrong offset!");

// Class OrionUI.OrionGemSelectionDisplay
// 0x0088 (0x0340 - 0x02B8)
class UOrionGemSelectionDisplay final : public UOrionUserWidgetBase
{
public:
	uint8                                         Pad_2B8[0x20];                                     // 0x02B8(0x0020)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           GemsFullErrorColor;                                // 0x02D8(0x0010)(Edit, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UOrionDeckBuilderPip*                   CurrentlyClickedPip;                               // 0x02E8(0x0008)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UOrionBaseButton_Group*                 AffinityButtonGroup;                               // 0x02F0(0x0008)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionRoundGemGrid*                     Round_GemGrid;                                     // 0x02F8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionAttributeEntry*                   Grid_Attack;                                       // 0x0300(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionAttributeEntry*                   Grid_Health;                                       // 0x0308(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionAttributeEntry*                   Grid_Energy;                                       // 0x0310(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionGemSelector*                      Gem_Selector;                                      // 0x0318(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UImage*                                 Image_Attribute_Backing;                           // 0x0320(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UImage*                                 Image_DividerLine;                                 // 0x0328(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionTextBlock*                        Text_TierName;                                     // 0x0330(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionTextBlock*                        Text_TierDesc;                                     // 0x0338(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	void DynamicHandleAffinityClicked(class UOrionBaseButton* SelectedButton, int32 ButtonIndex);
	void OnGemEquipped();
	void OnGemPicked(class UOrionMcpGemItem* GemPicked);
	void OnGemUnequipped();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"OrionGemSelectionDisplay">();
	}
	static class UOrionGemSelectionDisplay* GetDefaultObj()
	{
		return GetDefaultObjImpl<UOrionGemSelectionDisplay>();
	}
};
static_assert(alignof(UOrionGemSelectionDisplay) == 0x000008, "Wrong alignment on UOrionGemSelectionDisplay");
static_assert(sizeof(UOrionGemSelectionDisplay) == 0x000340, "Wrong size on UOrionGemSelectionDisplay");
static_assert(offsetof(UOrionGemSelectionDisplay, GemsFullErrorColor) == 0x0002D8, "Member 'UOrionGemSelectionDisplay::GemsFullErrorColor' has a wrong offset!");
static_assert(offsetof(UOrionGemSelectionDisplay, CurrentlyClickedPip) == 0x0002E8, "Member 'UOrionGemSelectionDisplay::CurrentlyClickedPip' has a wrong offset!");
static_assert(offsetof(UOrionGemSelectionDisplay, AffinityButtonGroup) == 0x0002F0, "Member 'UOrionGemSelectionDisplay::AffinityButtonGroup' has a wrong offset!");
static_assert(offsetof(UOrionGemSelectionDisplay, Round_GemGrid) == 0x0002F8, "Member 'UOrionGemSelectionDisplay::Round_GemGrid' has a wrong offset!");
static_assert(offsetof(UOrionGemSelectionDisplay, Grid_Attack) == 0x000300, "Member 'UOrionGemSelectionDisplay::Grid_Attack' has a wrong offset!");
static_assert(offsetof(UOrionGemSelectionDisplay, Grid_Health) == 0x000308, "Member 'UOrionGemSelectionDisplay::Grid_Health' has a wrong offset!");
static_assert(offsetof(UOrionGemSelectionDisplay, Grid_Energy) == 0x000310, "Member 'UOrionGemSelectionDisplay::Grid_Energy' has a wrong offset!");
static_assert(offsetof(UOrionGemSelectionDisplay, Gem_Selector) == 0x000318, "Member 'UOrionGemSelectionDisplay::Gem_Selector' has a wrong offset!");
static_assert(offsetof(UOrionGemSelectionDisplay, Image_Attribute_Backing) == 0x000320, "Member 'UOrionGemSelectionDisplay::Image_Attribute_Backing' has a wrong offset!");
static_assert(offsetof(UOrionGemSelectionDisplay, Image_DividerLine) == 0x000328, "Member 'UOrionGemSelectionDisplay::Image_DividerLine' has a wrong offset!");
static_assert(offsetof(UOrionGemSelectionDisplay, Text_TierName) == 0x000330, "Member 'UOrionGemSelectionDisplay::Text_TierName' has a wrong offset!");
static_assert(offsetof(UOrionGemSelectionDisplay, Text_TierDesc) == 0x000338, "Member 'UOrionGemSelectionDisplay::Text_TierDesc' has a wrong offset!");

// Class OrionUI.OrionGemSelector
// 0x0058 (0x0310 - 0x02B8)
class UOrionGemSelector final : public UOrionUserWidgetBase
{
public:
	uint8                                         Pad_2B8[0x10];                                     // 0x02B8(0x0010)(Fixing Size After Last Property [ Dumper-7 ])
	class UOrionWidgetSwitcher*                   Switcher_GemTile;                                  // 0x02C8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionTextBlock*                        Text_TierDesc;                                     // 0x02D0(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionDynamicEntryBox*                  EntryBox_Gems;                                     // 0x02D8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_2E0[0x30];                                     // 0x02E0(0x0030)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void OnGemChosen(class UObject* Item);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"OrionGemSelector">();
	}
	static class UOrionGemSelector* GetDefaultObj()
	{
		return GetDefaultObjImpl<UOrionGemSelector>();
	}
};
static_assert(alignof(UOrionGemSelector) == 0x000008, "Wrong alignment on UOrionGemSelector");
static_assert(sizeof(UOrionGemSelector) == 0x000310, "Wrong size on UOrionGemSelector");
static_assert(offsetof(UOrionGemSelector, Switcher_GemTile) == 0x0002C8, "Member 'UOrionGemSelector::Switcher_GemTile' has a wrong offset!");
static_assert(offsetof(UOrionGemSelector, Text_TierDesc) == 0x0002D0, "Member 'UOrionGemSelector::Text_TierDesc' has a wrong offset!");
static_assert(offsetof(UOrionGemSelector, EntryBox_Gems) == 0x0002D8, "Member 'UOrionGemSelector::EntryBox_Gems' has a wrong offset!");

// Class OrionUI.OrionQuestWidget
// 0x0088 (0x0340 - 0x02B8)
class UOrionQuestWidget final : public UOrionUserWidgetBase
{
public:
	class FText                                   CountTextFormat;                                   // 0x02B8(0x0018)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	class UOrionRichText*                         QuestText;                                         // 0x02D0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                 ProgressBarImage;                                  // 0x02D8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextBlock*                             ProgressBarText;                                   // 0x02E0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UHorizontalBox*                         ProgressBarBox;                                    // 0x02E8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UMaterialInstanceDynamic*               ProgressBarMID;                                    // 0x02F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FOrionQuestObjectiveData               PreviousState;                                     // 0x02F8(0x0040)(NativeAccessSpecifierPrivate)
	uint8                                         Pad_338[0x8];                                      // 0x0338(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void CompleteQuest();
	void HideQuestWidget();
	void OnProgressBarUpdated();
	void ShowQuestWidget();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"OrionQuestWidget">();
	}
	static class UOrionQuestWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UOrionQuestWidget>();
	}
};
static_assert(alignof(UOrionQuestWidget) == 0x000008, "Wrong alignment on UOrionQuestWidget");
static_assert(sizeof(UOrionQuestWidget) == 0x000340, "Wrong size on UOrionQuestWidget");
static_assert(offsetof(UOrionQuestWidget, CountTextFormat) == 0x0002B8, "Member 'UOrionQuestWidget::CountTextFormat' has a wrong offset!");
static_assert(offsetof(UOrionQuestWidget, QuestText) == 0x0002D0, "Member 'UOrionQuestWidget::QuestText' has a wrong offset!");
static_assert(offsetof(UOrionQuestWidget, ProgressBarImage) == 0x0002D8, "Member 'UOrionQuestWidget::ProgressBarImage' has a wrong offset!");
static_assert(offsetof(UOrionQuestWidget, ProgressBarText) == 0x0002E0, "Member 'UOrionQuestWidget::ProgressBarText' has a wrong offset!");
static_assert(offsetof(UOrionQuestWidget, ProgressBarBox) == 0x0002E8, "Member 'UOrionQuestWidget::ProgressBarBox' has a wrong offset!");
static_assert(offsetof(UOrionQuestWidget, ProgressBarMID) == 0x0002F0, "Member 'UOrionQuestWidget::ProgressBarMID' has a wrong offset!");
static_assert(offsetof(UOrionQuestWidget, PreviousState) == 0x0002F8, "Member 'UOrionQuestWidget::PreviousState' has a wrong offset!");

// Class OrionUI.OrionGemSummaryWidget
// 0x0048 (0x0320 - 0x02D8)
class UOrionGemSummaryWidget : public UOrionGameplayItemSummaryWidgetBase
{
public:
	class UOrionTextBlock*                        Text_GemName;                                      // 0x02D8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionTextBlock*                        Text_GemType;                                      // 0x02E0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UImage*                                 Image_Stone;                                       // 0x02E8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionTextBlock*                        Text_Stone;                                        // 0x02F0(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UImage*                                 Image_Slot;                                        // 0x02F8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionTextBlock*                        Text_Slot;                                         // 0x0300(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UImage*                                 Image_Shape;                                       // 0x0308(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionTextBlock*                        Text_Shape;                                        // 0x0310(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionTextBlock*                        Text_PvPLevelMsg;                                  // 0x0318(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	void OnDataSet(EOrionItemRarity GemRarity);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"OrionGemSummaryWidget">();
	}
	static class UOrionGemSummaryWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UOrionGemSummaryWidget>();
	}
};
static_assert(alignof(UOrionGemSummaryWidget) == 0x000008, "Wrong alignment on UOrionGemSummaryWidget");
static_assert(sizeof(UOrionGemSummaryWidget) == 0x000320, "Wrong size on UOrionGemSummaryWidget");
static_assert(offsetof(UOrionGemSummaryWidget, Text_GemName) == 0x0002D8, "Member 'UOrionGemSummaryWidget::Text_GemName' has a wrong offset!");
static_assert(offsetof(UOrionGemSummaryWidget, Text_GemType) == 0x0002E0, "Member 'UOrionGemSummaryWidget::Text_GemType' has a wrong offset!");
static_assert(offsetof(UOrionGemSummaryWidget, Image_Stone) == 0x0002E8, "Member 'UOrionGemSummaryWidget::Image_Stone' has a wrong offset!");
static_assert(offsetof(UOrionGemSummaryWidget, Text_Stone) == 0x0002F0, "Member 'UOrionGemSummaryWidget::Text_Stone' has a wrong offset!");
static_assert(offsetof(UOrionGemSummaryWidget, Image_Slot) == 0x0002F8, "Member 'UOrionGemSummaryWidget::Image_Slot' has a wrong offset!");
static_assert(offsetof(UOrionGemSummaryWidget, Text_Slot) == 0x000300, "Member 'UOrionGemSummaryWidget::Text_Slot' has a wrong offset!");
static_assert(offsetof(UOrionGemSummaryWidget, Image_Shape) == 0x000308, "Member 'UOrionGemSummaryWidget::Image_Shape' has a wrong offset!");
static_assert(offsetof(UOrionGemSummaryWidget, Text_Shape) == 0x000310, "Member 'UOrionGemSummaryWidget::Text_Shape' has a wrong offset!");
static_assert(offsetof(UOrionGemSummaryWidget, Text_PvPLevelMsg) == 0x000318, "Member 'UOrionGemSummaryWidget::Text_PvPLevelMsg' has a wrong offset!");

// Class OrionUI.OrionGemTooltip
// 0x0010 (0x0340 - 0x0330)
class UOrionGemTooltip : public UOrionTooltipBase
{
public:
	class UOrionGemSummaryWidget*                 Gem_Summary;                                       // 0x0330(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionTextBlock*                        Text_RewardContext;                                // 0x0338(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"OrionGemTooltip">();
	}
	static class UOrionGemTooltip* GetDefaultObj()
	{
		return GetDefaultObjImpl<UOrionGemTooltip>();
	}
};
static_assert(alignof(UOrionGemTooltip) == 0x000008, "Wrong alignment on UOrionGemTooltip");
static_assert(sizeof(UOrionGemTooltip) == 0x000340, "Wrong size on UOrionGemTooltip");
static_assert(offsetof(UOrionGemTooltip, Gem_Summary) == 0x000330, "Member 'UOrionGemTooltip::Gem_Summary' has a wrong offset!");
static_assert(offsetof(UOrionGemTooltip, Text_RewardContext) == 0x000338, "Member 'UOrionGemTooltip::Text_RewardContext' has a wrong offset!");

// Class OrionUI.OrionMatchScoreboard
// 0x0048 (0x0490 - 0x0448)
class UOrionMatchScoreboard final : public UOrionActivatableWidget
{
public:
	uint8                                         Pad_448[0x10];                                     // 0x0448(0x0010)(Fixing Size After Last Property [ Dumper-7 ])
	class UOrionTextBlock*                        Text_ScoreboardTitle;                              // 0x0458(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionTextBlock*                        Text_MatchDuration;                                // 0x0460(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionDynamicEntryBox*                  EntryBox_TeammateRows;                             // 0x0468(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionDynamicEntryBox*                  EntryBox_EnemyRows;                                // 0x0470(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionDefaultButton*                    Button_Continue;                                   // 0x0478(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionScoreboardTeamRow*                TeamRow_Teammates;                                 // 0x0480(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionScoreboardTeamRow*                TeamRow_Enemies;                                   // 0x0488(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	void OnShowAfterMatchEnd();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"OrionMatchScoreboard">();
	}
	static class UOrionMatchScoreboard* GetDefaultObj()
	{
		return GetDefaultObjImpl<UOrionMatchScoreboard>();
	}
};
static_assert(alignof(UOrionMatchScoreboard) == 0x000008, "Wrong alignment on UOrionMatchScoreboard");
static_assert(sizeof(UOrionMatchScoreboard) == 0x000490, "Wrong size on UOrionMatchScoreboard");
static_assert(offsetof(UOrionMatchScoreboard, Text_ScoreboardTitle) == 0x000458, "Member 'UOrionMatchScoreboard::Text_ScoreboardTitle' has a wrong offset!");
static_assert(offsetof(UOrionMatchScoreboard, Text_MatchDuration) == 0x000460, "Member 'UOrionMatchScoreboard::Text_MatchDuration' has a wrong offset!");
static_assert(offsetof(UOrionMatchScoreboard, EntryBox_TeammateRows) == 0x000468, "Member 'UOrionMatchScoreboard::EntryBox_TeammateRows' has a wrong offset!");
static_assert(offsetof(UOrionMatchScoreboard, EntryBox_EnemyRows) == 0x000470, "Member 'UOrionMatchScoreboard::EntryBox_EnemyRows' has a wrong offset!");
static_assert(offsetof(UOrionMatchScoreboard, Button_Continue) == 0x000478, "Member 'UOrionMatchScoreboard::Button_Continue' has a wrong offset!");
static_assert(offsetof(UOrionMatchScoreboard, TeamRow_Teammates) == 0x000480, "Member 'UOrionMatchScoreboard::TeamRow_Teammates' has a wrong offset!");
static_assert(offsetof(UOrionMatchScoreboard, TeamRow_Enemies) == 0x000488, "Member 'UOrionMatchScoreboard::TeamRow_Enemies' has a wrong offset!");

// Class OrionUI.OrionGenericMarkingMenuNodeWidget
// 0x0008 (0x02C0 - 0x02B8)
class UOrionGenericMarkingMenuNodeWidget : public UOrionUserWidgetBase
{
public:
	uint8                                         Pad_2B8[0x8];                                      // 0x02B8(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void HideNode();
	void HighlightNode();
	void ResetNode();
	void SelectNode();
	void ShowNode(bool bUsingGamePad);
	void UnHighlightNode();
	void UnSelectNode();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"OrionGenericMarkingMenuNodeWidget">();
	}
	static class UOrionGenericMarkingMenuNodeWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UOrionGenericMarkingMenuNodeWidget>();
	}
};
static_assert(alignof(UOrionGenericMarkingMenuNodeWidget) == 0x000008, "Wrong alignment on UOrionGenericMarkingMenuNodeWidget");
static_assert(sizeof(UOrionGenericMarkingMenuNodeWidget) == 0x0002C0, "Wrong size on UOrionGenericMarkingMenuNodeWidget");

// Class OrionUI.OrionGenericMarkingMenuNodeWidget_TeamComms
// 0x0030 (0x02F0 - 0x02C0)
class UOrionGenericMarkingMenuNodeWidget_TeamComms final : public UOrionGenericMarkingMenuNodeWidget
{
public:
	class UTextBlock*                             LabelText;                                         // 0x02C0(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UOrionInputVisualizer*                  ButtonIcon_Up;                                     // 0x02C8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UOrionInputVisualizer*                  ButtonIcon_Down;                                   // 0x02D0(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UOrionInputVisualizer*                  ButtonIcon_Left;                                   // 0x02D8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UOrionInputVisualizer*                  ButtonIcon_Right;                                  // 0x02E0(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_2E8[0x8];                                      // 0x02E8(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"OrionGenericMarkingMenuNodeWidget_TeamComms">();
	}
	static class UOrionGenericMarkingMenuNodeWidget_TeamComms* GetDefaultObj()
	{
		return GetDefaultObjImpl<UOrionGenericMarkingMenuNodeWidget_TeamComms>();
	}
};
static_assert(alignof(UOrionGenericMarkingMenuNodeWidget_TeamComms) == 0x000008, "Wrong alignment on UOrionGenericMarkingMenuNodeWidget_TeamComms");
static_assert(sizeof(UOrionGenericMarkingMenuNodeWidget_TeamComms) == 0x0002F0, "Wrong size on UOrionGenericMarkingMenuNodeWidget_TeamComms");
static_assert(offsetof(UOrionGenericMarkingMenuNodeWidget_TeamComms, LabelText) == 0x0002C0, "Member 'UOrionGenericMarkingMenuNodeWidget_TeamComms::LabelText' has a wrong offset!");
static_assert(offsetof(UOrionGenericMarkingMenuNodeWidget_TeamComms, ButtonIcon_Up) == 0x0002C8, "Member 'UOrionGenericMarkingMenuNodeWidget_TeamComms::ButtonIcon_Up' has a wrong offset!");
static_assert(offsetof(UOrionGenericMarkingMenuNodeWidget_TeamComms, ButtonIcon_Down) == 0x0002D0, "Member 'UOrionGenericMarkingMenuNodeWidget_TeamComms::ButtonIcon_Down' has a wrong offset!");
static_assert(offsetof(UOrionGenericMarkingMenuNodeWidget_TeamComms, ButtonIcon_Left) == 0x0002D8, "Member 'UOrionGenericMarkingMenuNodeWidget_TeamComms::ButtonIcon_Left' has a wrong offset!");
static_assert(offsetof(UOrionGenericMarkingMenuNodeWidget_TeamComms, ButtonIcon_Right) == 0x0002E0, "Member 'UOrionGenericMarkingMenuNodeWidget_TeamComms::ButtonIcon_Right' has a wrong offset!");

// Class OrionUI.OrionPostGameTab_Quests
// 0x0018 (0x0550 - 0x0538)
class UOrionPostGameTab_Quests final : public UOrionPostGameTab
{
public:
	float                                         QuestPresentationTime;                             // 0x0538(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_53C[0x4];                                      // 0x053C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UOrionDailyQuestWidget*                 Quests_Summary;                                    // 0x0540(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class USizeBox*                               SizeBox_QuestSummary;                              // 0x0548(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"OrionPostGameTab_Quests">();
	}
	static class UOrionPostGameTab_Quests* GetDefaultObj()
	{
		return GetDefaultObjImpl<UOrionPostGameTab_Quests>();
	}
};
static_assert(alignof(UOrionPostGameTab_Quests) == 0x000008, "Wrong alignment on UOrionPostGameTab_Quests");
static_assert(sizeof(UOrionPostGameTab_Quests) == 0x000550, "Wrong size on UOrionPostGameTab_Quests");
static_assert(offsetof(UOrionPostGameTab_Quests, QuestPresentationTime) == 0x000538, "Member 'UOrionPostGameTab_Quests::QuestPresentationTime' has a wrong offset!");
static_assert(offsetof(UOrionPostGameTab_Quests, Quests_Summary) == 0x000540, "Member 'UOrionPostGameTab_Quests::Quests_Summary' has a wrong offset!");
static_assert(offsetof(UOrionPostGameTab_Quests, SizeBox_QuestSummary) == 0x000548, "Member 'UOrionPostGameTab_Quests::SizeBox_QuestSummary' has a wrong offset!");

// Class OrionUI.OrionMarkingMenuLayerWidget
// 0x0068 (0x0320 - 0x02B8)
class UOrionMarkingMenuLayerWidget : public UOrionUserWidgetBase
{
public:
	class UOrionGenericMarkingMenuNodeWidget*     UpNode;                                            // 0x02B8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UOrionGenericMarkingMenuNodeWidget*     RightNode;                                         // 0x02C0(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UOrionGenericMarkingMenuNodeWidget*     DownNode;                                          // 0x02C8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UOrionGenericMarkingMenuNodeWidget*     LeftNode;                                          // 0x02D0(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class UOrionGenericMarkingMenuNodeWidget*> Nodes;                                             // 0x02D8(0x0010)(ExportObject, ZeroConstructor, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	struct FGeometry                              CachedGeometry;                                    // 0x02E8(0x0038)(BlueprintVisible, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)

public:
	void HideWidget();
	void ResetWidget();
	void ShowWidget(bool bUsingGamePad);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"OrionMarkingMenuLayerWidget">();
	}
	static class UOrionMarkingMenuLayerWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UOrionMarkingMenuLayerWidget>();
	}
};
static_assert(alignof(UOrionMarkingMenuLayerWidget) == 0x000008, "Wrong alignment on UOrionMarkingMenuLayerWidget");
static_assert(sizeof(UOrionMarkingMenuLayerWidget) == 0x000320, "Wrong size on UOrionMarkingMenuLayerWidget");
static_assert(offsetof(UOrionMarkingMenuLayerWidget, UpNode) == 0x0002B8, "Member 'UOrionMarkingMenuLayerWidget::UpNode' has a wrong offset!");
static_assert(offsetof(UOrionMarkingMenuLayerWidget, RightNode) == 0x0002C0, "Member 'UOrionMarkingMenuLayerWidget::RightNode' has a wrong offset!");
static_assert(offsetof(UOrionMarkingMenuLayerWidget, DownNode) == 0x0002C8, "Member 'UOrionMarkingMenuLayerWidget::DownNode' has a wrong offset!");
static_assert(offsetof(UOrionMarkingMenuLayerWidget, LeftNode) == 0x0002D0, "Member 'UOrionMarkingMenuLayerWidget::LeftNode' has a wrong offset!");
static_assert(offsetof(UOrionMarkingMenuLayerWidget, Nodes) == 0x0002D8, "Member 'UOrionMarkingMenuLayerWidget::Nodes' has a wrong offset!");
static_assert(offsetof(UOrionMarkingMenuLayerWidget, CachedGeometry) == 0x0002E8, "Member 'UOrionMarkingMenuLayerWidget::CachedGeometry' has a wrong offset!");

// Class OrionUI.OrionMarkingMenuLayerWidget_TeamComms
// 0x0000 (0x0320 - 0x0320)
class UOrionMarkingMenuLayerWidget_TeamComms final : public UOrionMarkingMenuLayerWidget
{
public:
	void SetInEmoteMode(bool bInEmoteMode);
	void ShowEmoteTogglePrompt(bool bShowPrompt);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"OrionMarkingMenuLayerWidget_TeamComms">();
	}
	static class UOrionMarkingMenuLayerWidget_TeamComms* GetDefaultObj()
	{
		return GetDefaultObjImpl<UOrionMarkingMenuLayerWidget_TeamComms>();
	}
};
static_assert(alignof(UOrionMarkingMenuLayerWidget_TeamComms) == 0x000008, "Wrong alignment on UOrionMarkingMenuLayerWidget_TeamComms");
static_assert(sizeof(UOrionMarkingMenuLayerWidget_TeamComms) == 0x000320, "Wrong size on UOrionMarkingMenuLayerWidget_TeamComms");

// Class OrionUI.OrionMeshWidget
// 0x0040 (0x0138 - 0x00F8)
class UOrionMeshWidget final : public UWidget
{
public:
	struct FVector2D                              DesiredSize;                                       // 0x00F8(0x0008)(Edit, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         MeshScale;                                         // 0x0100(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	EHorizontalAlignment                          MeshHorizontalAlignment;                           // 0x0104(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	EVerticalAlignment                            MeshVerticalAlignment;                             // 0x0105(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_106[0x2];                                      // 0x0106(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMargin                                MeshMargin;                                        // 0x0108(0x0010)(Edit, NoDestructor, NativeAccessSpecifierPrivate)
	class USlateVectorArtData*                    MeshData;                                          // 0x0118(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UMaterialInstanceDynamic*               MeshMID;                                           // 0x0120(0x0008)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_128[0x10];                                     // 0x0128(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	class UMaterialInstanceDynamic* GetDynamicMaterial();
	void SetDesiredSize(const struct FVector2D& InDesiredSize);
	void SetMeshHorizontalAlignment(EHorizontalAlignment InHorizontalAlignment);
	void SetMeshMargin(const struct FMargin& InMargin);
	void SetMeshScale(float InScale);
	void SetMeshVerticalAlignment(EVerticalAlignment InVerticalAlignment);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"OrionMeshWidget">();
	}
	static class UOrionMeshWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UOrionMeshWidget>();
	}
};
static_assert(alignof(UOrionMeshWidget) == 0x000008, "Wrong alignment on UOrionMeshWidget");
static_assert(sizeof(UOrionMeshWidget) == 0x000138, "Wrong size on UOrionMeshWidget");
static_assert(offsetof(UOrionMeshWidget, DesiredSize) == 0x0000F8, "Member 'UOrionMeshWidget::DesiredSize' has a wrong offset!");
static_assert(offsetof(UOrionMeshWidget, MeshScale) == 0x000100, "Member 'UOrionMeshWidget::MeshScale' has a wrong offset!");
static_assert(offsetof(UOrionMeshWidget, MeshHorizontalAlignment) == 0x000104, "Member 'UOrionMeshWidget::MeshHorizontalAlignment' has a wrong offset!");
static_assert(offsetof(UOrionMeshWidget, MeshVerticalAlignment) == 0x000105, "Member 'UOrionMeshWidget::MeshVerticalAlignment' has a wrong offset!");
static_assert(offsetof(UOrionMeshWidget, MeshMargin) == 0x000108, "Member 'UOrionMeshWidget::MeshMargin' has a wrong offset!");
static_assert(offsetof(UOrionMeshWidget, MeshData) == 0x000118, "Member 'UOrionMeshWidget::MeshData' has a wrong offset!");
static_assert(offsetof(UOrionMeshWidget, MeshMID) == 0x000120, "Member 'UOrionMeshWidget::MeshMID' has a wrong offset!");

// Class OrionUI.OrionGenericMarkingMenuWidget
// 0x00B0 (0x0368 - 0x02B8)
#pragma pack(push, 0x1)
class alignas(0x08) UOrionGenericMarkingMenuWidget : public UOrionUserWidgetBase
{
public:
	class UCanvasPanel*                           MainCanvasPanel;                                   // 0x02B8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UOrionMarkingMenuLayerWidget*           LayerWidget;                                       // 0x02C0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UOrionGenericMarkingMenuNodeWidget*     GestureNode;                                       // 0x02C8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UOrionLineDrawingWidget*                Lines;                                             // 0x02D0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UOrionLineDrawingWidget*                StraightLines;                                     // 0x02D8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UOrionLineDrawingWidget*                CurvedLines;                                       // 0x02E0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FGeometry                              CachedGeometry;                                    // 0x02E8(0x0038)(BlueprintVisible, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	bool                                          bMouseIsDown;                                      // 0x0320(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bFirstClickHappened;                               // 0x0321(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_322[0x2];                                      // 0x0322(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         MinDragDelta;                                      // 0x0324(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         MaxMouseMoveDelta;                                 // 0x0328(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector2D                              FaceButtonOffsetPercent;                           // 0x032C(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bMovedFarEnoughForSelection;                       // 0x0334(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_335[0x3];                                      // 0x0335(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              MouseUpMovementDeltaTotal;                         // 0x0338(0x0008)(BlueprintVisible, BlueprintReadOnly, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_340[0x28];                                     // 0x0340(0x0028)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void DownButtonPressed();
	void LeftButtonPressed();
	void NativeOnClose();
	void NativeOnOpen();
	void OnFaceButtonPressed(EOrionGestureDirection Direction);
	void RightButtonPressed();
	void ToggleButtonPressed();
	void UpButtonPressed();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"OrionGenericMarkingMenuWidget">();
	}
	static class UOrionGenericMarkingMenuWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UOrionGenericMarkingMenuWidget>();
	}
};
#pragma pack(pop)
static_assert(alignof(UOrionGenericMarkingMenuWidget) == 0x000008, "Wrong alignment on UOrionGenericMarkingMenuWidget");
static_assert(sizeof(UOrionGenericMarkingMenuWidget) == 0x000368, "Wrong size on UOrionGenericMarkingMenuWidget");
static_assert(offsetof(UOrionGenericMarkingMenuWidget, MainCanvasPanel) == 0x0002B8, "Member 'UOrionGenericMarkingMenuWidget::MainCanvasPanel' has a wrong offset!");
static_assert(offsetof(UOrionGenericMarkingMenuWidget, LayerWidget) == 0x0002C0, "Member 'UOrionGenericMarkingMenuWidget::LayerWidget' has a wrong offset!");
static_assert(offsetof(UOrionGenericMarkingMenuWidget, GestureNode) == 0x0002C8, "Member 'UOrionGenericMarkingMenuWidget::GestureNode' has a wrong offset!");
static_assert(offsetof(UOrionGenericMarkingMenuWidget, Lines) == 0x0002D0, "Member 'UOrionGenericMarkingMenuWidget::Lines' has a wrong offset!");
static_assert(offsetof(UOrionGenericMarkingMenuWidget, StraightLines) == 0x0002D8, "Member 'UOrionGenericMarkingMenuWidget::StraightLines' has a wrong offset!");
static_assert(offsetof(UOrionGenericMarkingMenuWidget, CurvedLines) == 0x0002E0, "Member 'UOrionGenericMarkingMenuWidget::CurvedLines' has a wrong offset!");
static_assert(offsetof(UOrionGenericMarkingMenuWidget, CachedGeometry) == 0x0002E8, "Member 'UOrionGenericMarkingMenuWidget::CachedGeometry' has a wrong offset!");
static_assert(offsetof(UOrionGenericMarkingMenuWidget, bMouseIsDown) == 0x000320, "Member 'UOrionGenericMarkingMenuWidget::bMouseIsDown' has a wrong offset!");
static_assert(offsetof(UOrionGenericMarkingMenuWidget, bFirstClickHappened) == 0x000321, "Member 'UOrionGenericMarkingMenuWidget::bFirstClickHappened' has a wrong offset!");
static_assert(offsetof(UOrionGenericMarkingMenuWidget, MinDragDelta) == 0x000324, "Member 'UOrionGenericMarkingMenuWidget::MinDragDelta' has a wrong offset!");
static_assert(offsetof(UOrionGenericMarkingMenuWidget, MaxMouseMoveDelta) == 0x000328, "Member 'UOrionGenericMarkingMenuWidget::MaxMouseMoveDelta' has a wrong offset!");
static_assert(offsetof(UOrionGenericMarkingMenuWidget, FaceButtonOffsetPercent) == 0x00032C, "Member 'UOrionGenericMarkingMenuWidget::FaceButtonOffsetPercent' has a wrong offset!");
static_assert(offsetof(UOrionGenericMarkingMenuWidget, bMovedFarEnoughForSelection) == 0x000334, "Member 'UOrionGenericMarkingMenuWidget::bMovedFarEnoughForSelection' has a wrong offset!");
static_assert(offsetof(UOrionGenericMarkingMenuWidget, MouseUpMovementDeltaTotal) == 0x000338, "Member 'UOrionGenericMarkingMenuWidget::MouseUpMovementDeltaTotal' has a wrong offset!");

// Class OrionUI.OrionGenericMarkingMenu_TeamComms
// 0x0048 (0x03B0 - 0x0368)
class UOrionGenericMarkingMenu_TeamComms final : public UOrionGenericMarkingMenuWidget
{
public:
	class UOrionGestureData*                      GestureData;                                       // 0x0368(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UOrionGestureData*                      GestureData_PS4;                                   // 0x0370(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UOrionGestureData*                      GestureData_Emotes;                                // 0x0378(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FText                                   LockedEmoteText;                                   // 0x0380(0x0018)(Edit, BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)
	uint8                                         Pad_398[0x18];                                     // 0x0398(0x0018)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void SetEmoteMode(bool bNewInEmoteMode);
	void ToggleAutoRun();
	void ToggleEmoteMode();

	bool EmotesAvailable() const;
	bool GetInEmoteMode() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"OrionGenericMarkingMenu_TeamComms">();
	}
	static class UOrionGenericMarkingMenu_TeamComms* GetDefaultObj()
	{
		return GetDefaultObjImpl<UOrionGenericMarkingMenu_TeamComms>();
	}
};
static_assert(alignof(UOrionGenericMarkingMenu_TeamComms) == 0x000008, "Wrong alignment on UOrionGenericMarkingMenu_TeamComms");
static_assert(sizeof(UOrionGenericMarkingMenu_TeamComms) == 0x0003B0, "Wrong size on UOrionGenericMarkingMenu_TeamComms");
static_assert(offsetof(UOrionGenericMarkingMenu_TeamComms, GestureData) == 0x000368, "Member 'UOrionGenericMarkingMenu_TeamComms::GestureData' has a wrong offset!");
static_assert(offsetof(UOrionGenericMarkingMenu_TeamComms, GestureData_PS4) == 0x000370, "Member 'UOrionGenericMarkingMenu_TeamComms::GestureData_PS4' has a wrong offset!");
static_assert(offsetof(UOrionGenericMarkingMenu_TeamComms, GestureData_Emotes) == 0x000378, "Member 'UOrionGenericMarkingMenu_TeamComms::GestureData_Emotes' has a wrong offset!");
static_assert(offsetof(UOrionGenericMarkingMenu_TeamComms, LockedEmoteText) == 0x000380, "Member 'UOrionGenericMarkingMenu_TeamComms::LockedEmoteText' has a wrong offset!");

// Class OrionUI.OrionReplayBrowserList
// 0x0098 (0x04E0 - 0x0448)
class UOrionReplayBrowserList final : public UOrionActivatableWidget
{
public:
	EOrionNetworkReplayFilter                     Filter;                                            // 0x0448(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_449[0x3];                                      // 0x0449(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         PageViewIndex;                                     // 0x044C(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         RefreshIndex;                                      // 0x0450(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         NoReplayIndex;                                     // 0x0454(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UOrionTableView*                        TableView;                                         // 0x0458(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UWidgetSwitcher*                        StatusSwitcher;                                    // 0x0460(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionBaseButton*                       SpoilerButton;                                     // 0x0468(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UEditableTextBox*                       ReplaySearchText;                                  // 0x0470(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class USizeBox*                               SearchSizeBox;                                     // 0x0478(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                          bEnumerateStarted;                                 // 0x0480(0x0001)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_481[0x7];                                      // 0x0481(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<class FString, class UOrionReplayStreamInfo*> StreamInfo;                                        // 0x0488(0x0050)(ZeroConstructor, NativeAccessSpecifierPrivate)
	uint8                                         Pad_4D8[0x8];                                      // 0x04D8(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void OnReplaySearchButtonClicked();
	void OnReplaySearchTextCommitted();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"OrionReplayBrowserList">();
	}
	static class UOrionReplayBrowserList* GetDefaultObj()
	{
		return GetDefaultObjImpl<UOrionReplayBrowserList>();
	}
};
static_assert(alignof(UOrionReplayBrowserList) == 0x000008, "Wrong alignment on UOrionReplayBrowserList");
static_assert(sizeof(UOrionReplayBrowserList) == 0x0004E0, "Wrong size on UOrionReplayBrowserList");
static_assert(offsetof(UOrionReplayBrowserList, Filter) == 0x000448, "Member 'UOrionReplayBrowserList::Filter' has a wrong offset!");
static_assert(offsetof(UOrionReplayBrowserList, PageViewIndex) == 0x00044C, "Member 'UOrionReplayBrowserList::PageViewIndex' has a wrong offset!");
static_assert(offsetof(UOrionReplayBrowserList, RefreshIndex) == 0x000450, "Member 'UOrionReplayBrowserList::RefreshIndex' has a wrong offset!");
static_assert(offsetof(UOrionReplayBrowserList, NoReplayIndex) == 0x000454, "Member 'UOrionReplayBrowserList::NoReplayIndex' has a wrong offset!");
static_assert(offsetof(UOrionReplayBrowserList, TableView) == 0x000458, "Member 'UOrionReplayBrowserList::TableView' has a wrong offset!");
static_assert(offsetof(UOrionReplayBrowserList, StatusSwitcher) == 0x000460, "Member 'UOrionReplayBrowserList::StatusSwitcher' has a wrong offset!");
static_assert(offsetof(UOrionReplayBrowserList, SpoilerButton) == 0x000468, "Member 'UOrionReplayBrowserList::SpoilerButton' has a wrong offset!");
static_assert(offsetof(UOrionReplayBrowserList, ReplaySearchText) == 0x000470, "Member 'UOrionReplayBrowserList::ReplaySearchText' has a wrong offset!");
static_assert(offsetof(UOrionReplayBrowserList, SearchSizeBox) == 0x000478, "Member 'UOrionReplayBrowserList::SearchSizeBox' has a wrong offset!");
static_assert(offsetof(UOrionReplayBrowserList, bEnumerateStarted) == 0x000480, "Member 'UOrionReplayBrowserList::bEnumerateStarted' has a wrong offset!");
static_assert(offsetof(UOrionReplayBrowserList, StreamInfo) == 0x000488, "Member 'UOrionReplayBrowserList::StreamInfo' has a wrong offset!");

// Class OrionUI.OrionLineDrawingWidget
// 0x0038 (0x0238 - 0x0200)
class UOrionLineDrawingWidget final : public UUserWidget
{
public:
	TArray<struct FVector2D>                      Points;                                            // 0x0200(0x0010)(ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	struct FLinearColor                           LineColor;                                         // 0x0210(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         LineThickness;                                     // 0x0220(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FLinearColor                           BackLineColor;                                     // 0x0224(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         BackLineThickness;                                 // 0x0234(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"OrionLineDrawingWidget">();
	}
	static class UOrionLineDrawingWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UOrionLineDrawingWidget>();
	}
};
static_assert(alignof(UOrionLineDrawingWidget) == 0x000008, "Wrong alignment on UOrionLineDrawingWidget");
static_assert(sizeof(UOrionLineDrawingWidget) == 0x000238, "Wrong size on UOrionLineDrawingWidget");
static_assert(offsetof(UOrionLineDrawingWidget, Points) == 0x000200, "Member 'UOrionLineDrawingWidget::Points' has a wrong offset!");
static_assert(offsetof(UOrionLineDrawingWidget, LineColor) == 0x000210, "Member 'UOrionLineDrawingWidget::LineColor' has a wrong offset!");
static_assert(offsetof(UOrionLineDrawingWidget, LineThickness) == 0x000220, "Member 'UOrionLineDrawingWidget::LineThickness' has a wrong offset!");
static_assert(offsetof(UOrionLineDrawingWidget, BackLineColor) == 0x000224, "Member 'UOrionLineDrawingWidget::BackLineColor' has a wrong offset!");
static_assert(offsetof(UOrionLineDrawingWidget, BackLineThickness) == 0x000234, "Member 'UOrionLineDrawingWidget::BackLineThickness' has a wrong offset!");

// Class OrionUI.OrionGlowingRarityText
// 0x0008 (0x02C0 - 0x02B8)
class UOrionGlowingRarityText : public UOrionUserWidgetBase
{
public:
	class UOrionTextBlock*                        Text_Title;                                        // 0x02B8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	void SetRarityBP(EOrionItemRarity ItemRarity, bool bHideGlowingText);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"OrionGlowingRarityText">();
	}
	static class UOrionGlowingRarityText* GetDefaultObj()
	{
		return GetDefaultObjImpl<UOrionGlowingRarityText>();
	}
};
static_assert(alignof(UOrionGlowingRarityText) == 0x000008, "Wrong alignment on UOrionGlowingRarityText");
static_assert(sizeof(UOrionGlowingRarityText) == 0x0002C0, "Wrong size on UOrionGlowingRarityText");
static_assert(offsetof(UOrionGlowingRarityText, Text_Title) == 0x0002B8, "Member 'UOrionGlowingRarityText::Text_Title' has a wrong offset!");

// Class OrionUI.OrionMilestoneRewardProgress
// 0x00A0 (0x0410 - 0x0370)
class UOrionMilestoneRewardProgress final : public UOrionTimedFillWidget
{
public:
	uint8                                         Pad_370[0x40];                                     // 0x0370(0x0040)(Fixing Size After Last Property [ Dumper-7 ])
	class UOrionRewardProgressBar*                ActiveProgressBar;                                 // 0x03B0(0x0008)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_3B8[0x8];                                      // 0x03B8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	class UHorizontalBox*                         HBox_StarCount1;                                   // 0x03C0(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UHorizontalBox*                         HBox_StarCount2;                                   // 0x03C8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UHorizontalBox*                         HBox_StarCount3;                                   // 0x03D0(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionTextBlock*                        Text_Progress1;                                    // 0x03D8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionTextBlock*                        Text_Progress2;                                    // 0x03E0(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionTextBlock*                        Text_Progress3;                                    // 0x03E8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionRewardProgressBar*                Progress_Chest;                                    // 0x03F0(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionRewardProgressBar*                Progress_Chest2;                                   // 0x03F8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionRewardProgressBar*                Progress_Chest3;                                   // 0x0400(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_408[0x8];                                      // 0x0408(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void ChestFanfareComplete();
	void OnNextChestReached(const class UOrionRewardProgressBar* ActiveProgressBar_0);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"OrionMilestoneRewardProgress">();
	}
	static class UOrionMilestoneRewardProgress* GetDefaultObj()
	{
		return GetDefaultObjImpl<UOrionMilestoneRewardProgress>();
	}
};
static_assert(alignof(UOrionMilestoneRewardProgress) == 0x000008, "Wrong alignment on UOrionMilestoneRewardProgress");
static_assert(sizeof(UOrionMilestoneRewardProgress) == 0x000410, "Wrong size on UOrionMilestoneRewardProgress");
static_assert(offsetof(UOrionMilestoneRewardProgress, ActiveProgressBar) == 0x0003B0, "Member 'UOrionMilestoneRewardProgress::ActiveProgressBar' has a wrong offset!");
static_assert(offsetof(UOrionMilestoneRewardProgress, HBox_StarCount1) == 0x0003C0, "Member 'UOrionMilestoneRewardProgress::HBox_StarCount1' has a wrong offset!");
static_assert(offsetof(UOrionMilestoneRewardProgress, HBox_StarCount2) == 0x0003C8, "Member 'UOrionMilestoneRewardProgress::HBox_StarCount2' has a wrong offset!");
static_assert(offsetof(UOrionMilestoneRewardProgress, HBox_StarCount3) == 0x0003D0, "Member 'UOrionMilestoneRewardProgress::HBox_StarCount3' has a wrong offset!");
static_assert(offsetof(UOrionMilestoneRewardProgress, Text_Progress1) == 0x0003D8, "Member 'UOrionMilestoneRewardProgress::Text_Progress1' has a wrong offset!");
static_assert(offsetof(UOrionMilestoneRewardProgress, Text_Progress2) == 0x0003E0, "Member 'UOrionMilestoneRewardProgress::Text_Progress2' has a wrong offset!");
static_assert(offsetof(UOrionMilestoneRewardProgress, Text_Progress3) == 0x0003E8, "Member 'UOrionMilestoneRewardProgress::Text_Progress3' has a wrong offset!");
static_assert(offsetof(UOrionMilestoneRewardProgress, Progress_Chest) == 0x0003F0, "Member 'UOrionMilestoneRewardProgress::Progress_Chest' has a wrong offset!");
static_assert(offsetof(UOrionMilestoneRewardProgress, Progress_Chest2) == 0x0003F8, "Member 'UOrionMilestoneRewardProgress::Progress_Chest2' has a wrong offset!");
static_assert(offsetof(UOrionMilestoneRewardProgress, Progress_Chest3) == 0x000400, "Member 'UOrionMilestoneRewardProgress::Progress_Chest3' has a wrong offset!");

// Class OrionUI.OrionHandEntry
// 0x0120 (0x0B00 - 0x09E0)
class UOrionHandEntry final : public UOrionBaseButton
{
public:
	uint8                                         Pad_9E0[0xF8];                                     // 0x09E0(0x00F8)(Fixing Size After Last Property [ Dumper-7 ])
	TSubclassOf<class UOrionHandEntryTooltip>     TooltipClass;                                      // 0x0AD8(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_AE0[0x8];                                      // 0x0AE0(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	class UOrionBaseButton_Group*                 AssociatedButtonGroup;                             // 0x0AE8(0x0008)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionCardShopCard*                     Card_Widget;                                       // 0x0AF0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_AF8[0x8];                                      // 0x0AF8(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	EHandEntryVisualState GetCurrentVisualState();
	void OnIsAffordableChanged(bool bIsAffordable);
	void OnIsPurchasableChanged(bool bIsPurchasable);
	void OnUnequipTargetStateChanged(bool bIsUnequipTarget);

	bool GetIsPurchasable() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"OrionHandEntry">();
	}
	static class UOrionHandEntry* GetDefaultObj()
	{
		return GetDefaultObjImpl<UOrionHandEntry>();
	}
};
static_assert(alignof(UOrionHandEntry) == 0x000008, "Wrong alignment on UOrionHandEntry");
static_assert(sizeof(UOrionHandEntry) == 0x000B00, "Wrong size on UOrionHandEntry");
static_assert(offsetof(UOrionHandEntry, TooltipClass) == 0x000AD8, "Member 'UOrionHandEntry::TooltipClass' has a wrong offset!");
static_assert(offsetof(UOrionHandEntry, AssociatedButtonGroup) == 0x000AE8, "Member 'UOrionHandEntry::AssociatedButtonGroup' has a wrong offset!");
static_assert(offsetof(UOrionHandEntry, Card_Widget) == 0x000AF0, "Member 'UOrionHandEntry::Card_Widget' has a wrong offset!");

// Class OrionUI.OrionHandEntryTooltip
// 0x0010 (0x0340 - 0x0330)
class UOrionHandEntryTooltip final : public UOrionTooltipBase
{
public:
	class UOrionCardShopCard*                     Card_Widget;                                       // 0x0330(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_338[0x8];                                      // 0x0338(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void OnPurchasabilityChanged(bool bIsPurchasable, bool bIsAffordable);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"OrionHandEntryTooltip">();
	}
	static class UOrionHandEntryTooltip* GetDefaultObj()
	{
		return GetDefaultObjImpl<UOrionHandEntryTooltip>();
	}
};
static_assert(alignof(UOrionHandEntryTooltip) == 0x000008, "Wrong alignment on UOrionHandEntryTooltip");
static_assert(sizeof(UOrionHandEntryTooltip) == 0x000340, "Wrong size on UOrionHandEntryTooltip");
static_assert(offsetof(UOrionHandEntryTooltip, Card_Widget) == 0x000330, "Member 'UOrionHandEntryTooltip::Card_Widget' has a wrong offset!");

// Class OrionUI.OrionProgressiveRewardWidgetBase
// 0x0048 (0x0490 - 0x0448)
class UOrionProgressiveRewardWidgetBase final : public UOrionActivatableWidget
{
public:
	uint8                                         Pad_448[0x10];                                     // 0x0448(0x0010)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         RewardWidgetScale;                                 // 0x0458(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bDisableAnimations;                                // 0x045C(0x0001)(Edit, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_45D[0x3];                                      // 0x045D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UOrionProgressiveRewardProgress*        Reward_Progress;                                   // 0x0460(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionRichText*                         Text_PeriodNumber;                                 // 0x0468(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionRichText*                         Text_TimeLeft;                                     // 0x0470(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionRichText*                         Text_Title;                                        // 0x0478(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionRichText*                         Text_NextReward;                                   // 0x0480(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_488[0x8];                                      // 0x0488(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void DynamicHandlePostMatchShown();
	void HandleRewardAnimationComplete();
	void OnBeginProgressAnimation();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"OrionProgressiveRewardWidgetBase">();
	}
	static class UOrionProgressiveRewardWidgetBase* GetDefaultObj()
	{
		return GetDefaultObjImpl<UOrionProgressiveRewardWidgetBase>();
	}
};
static_assert(alignof(UOrionProgressiveRewardWidgetBase) == 0x000008, "Wrong alignment on UOrionProgressiveRewardWidgetBase");
static_assert(sizeof(UOrionProgressiveRewardWidgetBase) == 0x000490, "Wrong size on UOrionProgressiveRewardWidgetBase");
static_assert(offsetof(UOrionProgressiveRewardWidgetBase, RewardWidgetScale) == 0x000458, "Member 'UOrionProgressiveRewardWidgetBase::RewardWidgetScale' has a wrong offset!");
static_assert(offsetof(UOrionProgressiveRewardWidgetBase, bDisableAnimations) == 0x00045C, "Member 'UOrionProgressiveRewardWidgetBase::bDisableAnimations' has a wrong offset!");
static_assert(offsetof(UOrionProgressiveRewardWidgetBase, Reward_Progress) == 0x000460, "Member 'UOrionProgressiveRewardWidgetBase::Reward_Progress' has a wrong offset!");
static_assert(offsetof(UOrionProgressiveRewardWidgetBase, Text_PeriodNumber) == 0x000468, "Member 'UOrionProgressiveRewardWidgetBase::Text_PeriodNumber' has a wrong offset!");
static_assert(offsetof(UOrionProgressiveRewardWidgetBase, Text_TimeLeft) == 0x000470, "Member 'UOrionProgressiveRewardWidgetBase::Text_TimeLeft' has a wrong offset!");
static_assert(offsetof(UOrionProgressiveRewardWidgetBase, Text_Title) == 0x000478, "Member 'UOrionProgressiveRewardWidgetBase::Text_Title' has a wrong offset!");
static_assert(offsetof(UOrionProgressiveRewardWidgetBase, Text_NextReward) == 0x000480, "Member 'UOrionProgressiveRewardWidgetBase::Text_NextReward' has a wrong offset!");

// Class OrionUI.OrionHealthEnergyWidget
// 0x0068 (0x0160 - 0x00F8)
class UOrionHealthEnergyWidget final : public UWidget
{
public:
	struct FVector2D                              HealthBar_LocalPosition;                           // 0x00F8(0x0008)(Edit, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class USlateVectorArtData*                    HealthBarAsset;                                    // 0x0100(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FVector2D                              EnergyBar_LocalPosition;                           // 0x0108(0x0008)(Edit, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class USlateVectorArtData*                    EnergyBarAsset;                                    // 0x0110(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class USlateVectorArtData*                    GlowyBarAsset;                                     // 0x0118(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_120[0x20];                                     // 0x0120(0x0020)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         BarInterpTime;                                     // 0x0140(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         BarLagInterpTime;                                  // 0x0144(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         HealthGlowMax;                                     // 0x0148(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         EnergyGlowMax;                                     // 0x014C(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_150[0x10];                                     // 0x0150(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"OrionHealthEnergyWidget">();
	}
	static class UOrionHealthEnergyWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UOrionHealthEnergyWidget>();
	}
};
static_assert(alignof(UOrionHealthEnergyWidget) == 0x000008, "Wrong alignment on UOrionHealthEnergyWidget");
static_assert(sizeof(UOrionHealthEnergyWidget) == 0x000160, "Wrong size on UOrionHealthEnergyWidget");
static_assert(offsetof(UOrionHealthEnergyWidget, HealthBar_LocalPosition) == 0x0000F8, "Member 'UOrionHealthEnergyWidget::HealthBar_LocalPosition' has a wrong offset!");
static_assert(offsetof(UOrionHealthEnergyWidget, HealthBarAsset) == 0x000100, "Member 'UOrionHealthEnergyWidget::HealthBarAsset' has a wrong offset!");
static_assert(offsetof(UOrionHealthEnergyWidget, EnergyBar_LocalPosition) == 0x000108, "Member 'UOrionHealthEnergyWidget::EnergyBar_LocalPosition' has a wrong offset!");
static_assert(offsetof(UOrionHealthEnergyWidget, EnergyBarAsset) == 0x000110, "Member 'UOrionHealthEnergyWidget::EnergyBarAsset' has a wrong offset!");
static_assert(offsetof(UOrionHealthEnergyWidget, GlowyBarAsset) == 0x000118, "Member 'UOrionHealthEnergyWidget::GlowyBarAsset' has a wrong offset!");
static_assert(offsetof(UOrionHealthEnergyWidget, BarInterpTime) == 0x000140, "Member 'UOrionHealthEnergyWidget::BarInterpTime' has a wrong offset!");
static_assert(offsetof(UOrionHealthEnergyWidget, BarLagInterpTime) == 0x000144, "Member 'UOrionHealthEnergyWidget::BarLagInterpTime' has a wrong offset!");
static_assert(offsetof(UOrionHealthEnergyWidget, HealthGlowMax) == 0x000148, "Member 'UOrionHealthEnergyWidget::HealthGlowMax' has a wrong offset!");
static_assert(offsetof(UOrionHealthEnergyWidget, EnergyGlowMax) == 0x00014C, "Member 'UOrionHealthEnergyWidget::EnergyGlowMax' has a wrong offset!");

// Class OrionUI.OrionHeroAbilityDisplay
// 0x0028 (0x02E0 - 0x02B8)
class UOrionHeroAbilityDisplay final : public UOrionUserWidgetBase
{
public:
	TArray<class UOrionHeroAbilityWidget*>        AbilityWidgets;                                    // 0x02B8(0x0010)(ExportObject, ZeroConstructor, Transient, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	class UOrionLoadGuard*                        LoadGuard;                                         // 0x02C8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UPanelWidget*                           Panel_Abilities;                                   // 0x02D0(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionTextBlock*                        Text_HeroName;                                     // 0x02D8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	void SetHero(class UOrionHeroData* HeroData);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"OrionHeroAbilityDisplay">();
	}
	static class UOrionHeroAbilityDisplay* GetDefaultObj()
	{
		return GetDefaultObjImpl<UOrionHeroAbilityDisplay>();
	}
};
static_assert(alignof(UOrionHeroAbilityDisplay) == 0x000008, "Wrong alignment on UOrionHeroAbilityDisplay");
static_assert(sizeof(UOrionHeroAbilityDisplay) == 0x0002E0, "Wrong size on UOrionHeroAbilityDisplay");
static_assert(offsetof(UOrionHeroAbilityDisplay, AbilityWidgets) == 0x0002B8, "Member 'UOrionHeroAbilityDisplay::AbilityWidgets' has a wrong offset!");
static_assert(offsetof(UOrionHeroAbilityDisplay, LoadGuard) == 0x0002C8, "Member 'UOrionHeroAbilityDisplay::LoadGuard' has a wrong offset!");
static_assert(offsetof(UOrionHeroAbilityDisplay, Panel_Abilities) == 0x0002D0, "Member 'UOrionHeroAbilityDisplay::Panel_Abilities' has a wrong offset!");
static_assert(offsetof(UOrionHeroAbilityDisplay, Text_HeroName) == 0x0002D8, "Member 'UOrionHeroAbilityDisplay::Text_HeroName' has a wrong offset!");

// Class OrionUI.OrionRewardWidget
// 0x00D8 (0x0390 - 0x02B8)
class UOrionRewardWidget : public UOrionUserWidgetBase
{
public:
	uint8                                         Pad_2B8[0x8];                                      // 0x02B8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	TSubclassOf<class UOrionRewardTooltip>        RewardTooltipClass;                                // 0x02C0(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_2C8[0x8];                                      // 0x02C8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         RewardScale;                                       // 0x02D0(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                          bShowQuantity;                                     // 0x02D4(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                          bShowStingerText;                                  // 0x02D5(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_2D6[0x2];                                      // 0x02D6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UOrionMcpItemDefinition> DefaultItemDefinition;                             // 0x02D8(0x0028)(Edit, AdvancedDisplay, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_300[0x50];                                     // 0x0300(0x0050)(Fixing Size After Last Property [ Dumper-7 ])
	class UScaleBox*                              ScaleBox_Root;                                     // 0x0350(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionLazyImage*                        Image_RewardPortrait;                              // 0x0358(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionTextBlock*                        Text_Quantity;                                     // 0x0360(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionMcpTypeRewardImage*               Reward_TypeImage;                                  // 0x0368(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionGlowingRarityText*                GlowingText_Stinger;                               // 0x0370(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionFrontEndCard*                     Card_Widget;                                       // 0x0378(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionGemBasic*                         Gem_Widget;                                        // 0x0380(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_388[0x8];                                      // 0x0388(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void BeginFill();
	void BP_SetRewardInfo(const class UOrionMcpItemDefinition* ItemDefinition, int32 Quantity, bool bIsEarned);
	void OnActiveStateSet(EOrionRewardWidgetState State);
	void OnDataSet(EOrionItemRarity ItemRarity, EOrionItemType ItemType);
	void OnVaultFlash(int32 RoundsRemaining);
	void OnVaultFlourish();
	void SetActiveState(EOrionRewardWidgetState State);
	void SetRewardScale(float InScale);
	void ShowStinger(bool bShowStinger);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"OrionRewardWidget">();
	}
	static class UOrionRewardWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UOrionRewardWidget>();
	}
};
static_assert(alignof(UOrionRewardWidget) == 0x000008, "Wrong alignment on UOrionRewardWidget");
static_assert(sizeof(UOrionRewardWidget) == 0x000390, "Wrong size on UOrionRewardWidget");
static_assert(offsetof(UOrionRewardWidget, RewardTooltipClass) == 0x0002C0, "Member 'UOrionRewardWidget::RewardTooltipClass' has a wrong offset!");
static_assert(offsetof(UOrionRewardWidget, RewardScale) == 0x0002D0, "Member 'UOrionRewardWidget::RewardScale' has a wrong offset!");
static_assert(offsetof(UOrionRewardWidget, bShowQuantity) == 0x0002D4, "Member 'UOrionRewardWidget::bShowQuantity' has a wrong offset!");
static_assert(offsetof(UOrionRewardWidget, bShowStingerText) == 0x0002D5, "Member 'UOrionRewardWidget::bShowStingerText' has a wrong offset!");
static_assert(offsetof(UOrionRewardWidget, DefaultItemDefinition) == 0x0002D8, "Member 'UOrionRewardWidget::DefaultItemDefinition' has a wrong offset!");
static_assert(offsetof(UOrionRewardWidget, ScaleBox_Root) == 0x000350, "Member 'UOrionRewardWidget::ScaleBox_Root' has a wrong offset!");
static_assert(offsetof(UOrionRewardWidget, Image_RewardPortrait) == 0x000358, "Member 'UOrionRewardWidget::Image_RewardPortrait' has a wrong offset!");
static_assert(offsetof(UOrionRewardWidget, Text_Quantity) == 0x000360, "Member 'UOrionRewardWidget::Text_Quantity' has a wrong offset!");
static_assert(offsetof(UOrionRewardWidget, Reward_TypeImage) == 0x000368, "Member 'UOrionRewardWidget::Reward_TypeImage' has a wrong offset!");
static_assert(offsetof(UOrionRewardWidget, GlowingText_Stinger) == 0x000370, "Member 'UOrionRewardWidget::GlowingText_Stinger' has a wrong offset!");
static_assert(offsetof(UOrionRewardWidget, Card_Widget) == 0x000378, "Member 'UOrionRewardWidget::Card_Widget' has a wrong offset!");
static_assert(offsetof(UOrionRewardWidget, Gem_Widget) == 0x000380, "Member 'UOrionRewardWidget::Gem_Widget' has a wrong offset!");

// Class OrionUI.OrionHeroAbilitySummary
// 0x0038 (0x02F0 - 0x02B8)
class UOrionHeroAbilitySummary : public UOrionUserWidgetBase
{
public:
	class UOrionTextBlock*                        Text_AbilityName;                                  // 0x02B8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionTextBlock*                        Text_AbilityLevel;                                 // 0x02C0(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionRichText*                         RichText_AbilityDesc;                              // 0x02C8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionRichText*                         RichText_ManaCost;                                 // 0x02D0(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionRichText*                         RichText_Cooldown;                                 // 0x02D8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UImage*                                 Image_AbilityIcon;                                 // 0x02E0(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionInputVisualizer*                  Input_AbilityKey;                                  // 0x02E8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"OrionHeroAbilitySummary">();
	}
	static class UOrionHeroAbilitySummary* GetDefaultObj()
	{
		return GetDefaultObjImpl<UOrionHeroAbilitySummary>();
	}
};
static_assert(alignof(UOrionHeroAbilitySummary) == 0x000008, "Wrong alignment on UOrionHeroAbilitySummary");
static_assert(sizeof(UOrionHeroAbilitySummary) == 0x0002F0, "Wrong size on UOrionHeroAbilitySummary");
static_assert(offsetof(UOrionHeroAbilitySummary, Text_AbilityName) == 0x0002B8, "Member 'UOrionHeroAbilitySummary::Text_AbilityName' has a wrong offset!");
static_assert(offsetof(UOrionHeroAbilitySummary, Text_AbilityLevel) == 0x0002C0, "Member 'UOrionHeroAbilitySummary::Text_AbilityLevel' has a wrong offset!");
static_assert(offsetof(UOrionHeroAbilitySummary, RichText_AbilityDesc) == 0x0002C8, "Member 'UOrionHeroAbilitySummary::RichText_AbilityDesc' has a wrong offset!");
static_assert(offsetof(UOrionHeroAbilitySummary, RichText_ManaCost) == 0x0002D0, "Member 'UOrionHeroAbilitySummary::RichText_ManaCost' has a wrong offset!");
static_assert(offsetof(UOrionHeroAbilitySummary, RichText_Cooldown) == 0x0002D8, "Member 'UOrionHeroAbilitySummary::RichText_Cooldown' has a wrong offset!");
static_assert(offsetof(UOrionHeroAbilitySummary, Image_AbilityIcon) == 0x0002E0, "Member 'UOrionHeroAbilitySummary::Image_AbilityIcon' has a wrong offset!");
static_assert(offsetof(UOrionHeroAbilitySummary, Input_AbilityKey) == 0x0002E8, "Member 'UOrionHeroAbilitySummary::Input_AbilityKey' has a wrong offset!");

// Class OrionUI.OrionHeroAbilityWidget
// 0x0288 (0x0540 - 0x02B8)
class UOrionHeroAbilityWidget final : public UOrionUserWidgetBase
{
public:
	TSubclassOf<class UOrionAbilityTooltip>       AbilityTooltipClass;                               // 0x02B8(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	EOrionAbilityBinding                          AbilityBinding;                                    // 0x02C0(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_2C1[0x26F];                                    // 0x02C1(0x026F)(Fixing Size After Last Property [ Dumper-7 ])
	class UImage*                                 Image_AbilityIcon;                                 // 0x0530(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionTextBlock*                        Text_AbilityName;                                  // 0x0538(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"OrionHeroAbilityWidget">();
	}
	static class UOrionHeroAbilityWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UOrionHeroAbilityWidget>();
	}
};
static_assert(alignof(UOrionHeroAbilityWidget) == 0x000008, "Wrong alignment on UOrionHeroAbilityWidget");
static_assert(sizeof(UOrionHeroAbilityWidget) == 0x000540, "Wrong size on UOrionHeroAbilityWidget");
static_assert(offsetof(UOrionHeroAbilityWidget, AbilityTooltipClass) == 0x0002B8, "Member 'UOrionHeroAbilityWidget::AbilityTooltipClass' has a wrong offset!");
static_assert(offsetof(UOrionHeroAbilityWidget, AbilityBinding) == 0x0002C0, "Member 'UOrionHeroAbilityWidget::AbilityBinding' has a wrong offset!");
static_assert(offsetof(UOrionHeroAbilityWidget, Image_AbilityIcon) == 0x000530, "Member 'UOrionHeroAbilityWidget::Image_AbilityIcon' has a wrong offset!");
static_assert(offsetof(UOrionHeroAbilityWidget, Text_AbilityName) == 0x000538, "Member 'UOrionHeroAbilityWidget::Text_AbilityName' has a wrong offset!");

// Class OrionUI.OrionMasteryReward
// 0x0018 (0x02D0 - 0x02B8)
class UOrionMasteryReward : public UOrionUserWidgetBase
{
public:
	TSubclassOf<class UOrionRewardTooltip>        RewardTooltipClass;                                // 0x02B8(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_2C0[0x8];                                      // 0x02C0(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	class UImage*                                 Image_Reward;                                      // 0x02C8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"OrionMasteryReward">();
	}
	static class UOrionMasteryReward* GetDefaultObj()
	{
		return GetDefaultObjImpl<UOrionMasteryReward>();
	}
};
static_assert(alignof(UOrionMasteryReward) == 0x000008, "Wrong alignment on UOrionMasteryReward");
static_assert(sizeof(UOrionMasteryReward) == 0x0002D0, "Wrong size on UOrionMasteryReward");
static_assert(offsetof(UOrionMasteryReward, RewardTooltipClass) == 0x0002B8, "Member 'UOrionMasteryReward::RewardTooltipClass' has a wrong offset!");
static_assert(offsetof(UOrionMasteryReward, Image_Reward) == 0x0002C8, "Member 'UOrionMasteryReward::Image_Reward' has a wrong offset!");

// Class OrionUI.OrionRewardCarouselItem
// 0x0030 (0x0300 - 0x02D0)
class UOrionRewardCarouselItem final : public UOrionMasteryReward
{
public:
	bool                                          bIsFirstItem;                                      // 0x02D0(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bIsReceivable;                                     // 0x02D1(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_2D2[0x6];                                      // 0x02D2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TSubclassOf<class UOrionHeroRewardTooltip>    HeroRewardTooltipClass;                            // 0x02D8(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_2E0[0x18];                                     // 0x02E0(0x0018)(Fixing Size After Last Property [ Dumper-7 ])
	class UOrionTextBlock*                        Text_Level;                                        // 0x02F8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	void OnRewardEarned();
	void RefreshLayout();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"OrionRewardCarouselItem">();
	}
	static class UOrionRewardCarouselItem* GetDefaultObj()
	{
		return GetDefaultObjImpl<UOrionRewardCarouselItem>();
	}
};
static_assert(alignof(UOrionRewardCarouselItem) == 0x000008, "Wrong alignment on UOrionRewardCarouselItem");
static_assert(sizeof(UOrionRewardCarouselItem) == 0x000300, "Wrong size on UOrionRewardCarouselItem");
static_assert(offsetof(UOrionRewardCarouselItem, bIsFirstItem) == 0x0002D0, "Member 'UOrionRewardCarouselItem::bIsFirstItem' has a wrong offset!");
static_assert(offsetof(UOrionRewardCarouselItem, bIsReceivable) == 0x0002D1, "Member 'UOrionRewardCarouselItem::bIsReceivable' has a wrong offset!");
static_assert(offsetof(UOrionRewardCarouselItem, HeroRewardTooltipClass) == 0x0002D8, "Member 'UOrionRewardCarouselItem::HeroRewardTooltipClass' has a wrong offset!");
static_assert(offsetof(UOrionRewardCarouselItem, Text_Level) == 0x0002F8, "Member 'UOrionRewardCarouselItem::Text_Level' has a wrong offset!");

// Class OrionUI.OrionHeroCollectionStat
// 0x0010 (0x0210 - 0x0200)
class UOrionHeroCollectionStat final : public UUserWidget
{
public:
	class UOrionTextBlock*                        Text_StatName;                                     // 0x0200(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionTextBlock*                        Text_StatValue;                                    // 0x0208(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"OrionHeroCollectionStat">();
	}
	static class UOrionHeroCollectionStat* GetDefaultObj()
	{
		return GetDefaultObjImpl<UOrionHeroCollectionStat>();
	}
};
static_assert(alignof(UOrionHeroCollectionStat) == 0x000008, "Wrong alignment on UOrionHeroCollectionStat");
static_assert(sizeof(UOrionHeroCollectionStat) == 0x000210, "Wrong size on UOrionHeroCollectionStat");
static_assert(offsetof(UOrionHeroCollectionStat, Text_StatName) == 0x000200, "Member 'UOrionHeroCollectionStat::Text_StatName' has a wrong offset!");
static_assert(offsetof(UOrionHeroCollectionStat, Text_StatValue) == 0x000208, "Member 'UOrionHeroCollectionStat::Text_StatValue' has a wrong offset!");

// Class OrionUI.OrionHeroCollectionScreen
// 0x0068 (0x04B0 - 0x0448)
class UOrionHeroCollectionScreen final : public UOrionActivatableWidget
{
public:
	class FName                                   CameraForScene;                                    // 0x0448(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UOrionTileView*                         TileView_Heroes;                                   // 0x0450(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UVerticalBox*                           VBox_LevelingSoon;                                 // 0x0458(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionHeroListItem*                     Hero_Close1;                                       // 0x0460(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionHeroListItem*                     Hero_Close2;                                       // 0x0468(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UVerticalBox*                           VBox_MostPlayed;                                   // 0x0470(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionHeroListItem*                     Hero_MostPlayed1;                                  // 0x0478(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionHeroListItem*                     Hero_MostPlayed2;                                  // 0x0480(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UVerticalBox*                           VBox_Unlock;                                       // 0x0488(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionHeroListItem*                     Hero_Unlock1;                                      // 0x0490(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionHeroListItem*                     Hero_Unlock2;                                      // 0x0498(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionDynamicEntryBox*                  Box_Stats;                                         // 0x04A0(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_4A8[0x8];                                      // 0x04A8(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void DynamicHandleItemSelected(class UObject* Item);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"OrionHeroCollectionScreen">();
	}
	static class UOrionHeroCollectionScreen* GetDefaultObj()
	{
		return GetDefaultObjImpl<UOrionHeroCollectionScreen>();
	}
};
static_assert(alignof(UOrionHeroCollectionScreen) == 0x000008, "Wrong alignment on UOrionHeroCollectionScreen");
static_assert(sizeof(UOrionHeroCollectionScreen) == 0x0004B0, "Wrong size on UOrionHeroCollectionScreen");
static_assert(offsetof(UOrionHeroCollectionScreen, CameraForScene) == 0x000448, "Member 'UOrionHeroCollectionScreen::CameraForScene' has a wrong offset!");
static_assert(offsetof(UOrionHeroCollectionScreen, TileView_Heroes) == 0x000450, "Member 'UOrionHeroCollectionScreen::TileView_Heroes' has a wrong offset!");
static_assert(offsetof(UOrionHeroCollectionScreen, VBox_LevelingSoon) == 0x000458, "Member 'UOrionHeroCollectionScreen::VBox_LevelingSoon' has a wrong offset!");
static_assert(offsetof(UOrionHeroCollectionScreen, Hero_Close1) == 0x000460, "Member 'UOrionHeroCollectionScreen::Hero_Close1' has a wrong offset!");
static_assert(offsetof(UOrionHeroCollectionScreen, Hero_Close2) == 0x000468, "Member 'UOrionHeroCollectionScreen::Hero_Close2' has a wrong offset!");
static_assert(offsetof(UOrionHeroCollectionScreen, VBox_MostPlayed) == 0x000470, "Member 'UOrionHeroCollectionScreen::VBox_MostPlayed' has a wrong offset!");
static_assert(offsetof(UOrionHeroCollectionScreen, Hero_MostPlayed1) == 0x000478, "Member 'UOrionHeroCollectionScreen::Hero_MostPlayed1' has a wrong offset!");
static_assert(offsetof(UOrionHeroCollectionScreen, Hero_MostPlayed2) == 0x000480, "Member 'UOrionHeroCollectionScreen::Hero_MostPlayed2' has a wrong offset!");
static_assert(offsetof(UOrionHeroCollectionScreen, VBox_Unlock) == 0x000488, "Member 'UOrionHeroCollectionScreen::VBox_Unlock' has a wrong offset!");
static_assert(offsetof(UOrionHeroCollectionScreen, Hero_Unlock1) == 0x000490, "Member 'UOrionHeroCollectionScreen::Hero_Unlock1' has a wrong offset!");
static_assert(offsetof(UOrionHeroCollectionScreen, Hero_Unlock2) == 0x000498, "Member 'UOrionHeroCollectionScreen::Hero_Unlock2' has a wrong offset!");
static_assert(offsetof(UOrionHeroCollectionScreen, Box_Stats) == 0x0004A0, "Member 'UOrionHeroCollectionScreen::Box_Stats' has a wrong offset!");

// Class OrionUI.OrionScoreboardGemEntry
// 0x0048 (0x0300 - 0x02B8)
class UOrionScoreboardGemEntry final : public UOrionUserWidgetBase
{
public:
	TSubclassOf<class UOrionGemTooltip>           GemTooltipClass;                                   // 0x02B8(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_2C0[0x30];                                     // 0x02C0(0x0030)(Fixing Size After Last Property [ Dumper-7 ])
	class UImage*                                 Image_CompositGem;                                 // 0x02F0(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_2F8[0x8];                                      // 0x02F8(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"OrionScoreboardGemEntry">();
	}
	static class UOrionScoreboardGemEntry* GetDefaultObj()
	{
		return GetDefaultObjImpl<UOrionScoreboardGemEntry>();
	}
};
static_assert(alignof(UOrionScoreboardGemEntry) == 0x000008, "Wrong alignment on UOrionScoreboardGemEntry");
static_assert(sizeof(UOrionScoreboardGemEntry) == 0x000300, "Wrong size on UOrionScoreboardGemEntry");
static_assert(offsetof(UOrionScoreboardGemEntry, GemTooltipClass) == 0x0002B8, "Member 'UOrionScoreboardGemEntry::GemTooltipClass' has a wrong offset!");
static_assert(offsetof(UOrionScoreboardGemEntry, Image_CompositGem) == 0x0002F0, "Member 'UOrionScoreboardGemEntry::Image_CompositGem' has a wrong offset!");

// Class OrionUI.OrionHeroDetails_Mastery
// 0x0088 (0x04D0 - 0x0448)
class UOrionHeroDetails_Mastery final : public UOrionActivatableWidget
{
public:
	TSubclassOf<class UOrionHeroDetailsMasteryRankPurchaseModal> RankPurchaseModalClass;                            // 0x0448(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_450[0x10];                                     // 0x0450(0x0010)(Fixing Size After Last Property [ Dumper-7 ])
	class UOrionMasteryRankDisplay*               Mastery_RankDisplay;                               // 0x0460(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionHeroDetailsMasteryLevelDisplay*   Mastery_LevelDisplay;                              // 0x0468(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionHeroDetailsMasteryRewardTimeline* Mastery_RewardTimeline;                            // 0x0470(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionHeroDetailsMasteryRewardPopup*    Mastery_RewardPopup;                               // 0x0478(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionDefaultButton*                    Button_UnlockRank;                                 // 0x0480(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionBaseButton*                       Button_CloseRewardPopup;                           // 0x0488(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionBaseButton*                       Button_ShowRewardPopup;                            // 0x0490(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionLightBox*                         Container_RewardPopup;                             // 0x0498(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionTextBlock*                        Text_RankXRewards;                                 // 0x04A0(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionTextBlock*                        Text_NextReward;                                   // 0x04A8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionTextBlock*                        Text_XpToLevel;                                    // 0x04B0(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionTextBlock*                        Text_LockedMessage;                                // 0x04B8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionRewardWidget*                     Reward_NextRank;                                   // 0x04C0(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_4C8[0x8];                                      // 0x04C8(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void HandleUnlockWidgetClose();
	void OnShowHeroLocked(bool bLocked);
	void OnShowMasteryLocked();
	void OnShowNextRankedLocked();
	void OnShowXpToLevel();
	void SetHero(class UOrionMcpHeroItem* HeroItem);
	void ShowRewardPopup();
	void UnlockButtonClicked();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"OrionHeroDetails_Mastery">();
	}
	static class UOrionHeroDetails_Mastery* GetDefaultObj()
	{
		return GetDefaultObjImpl<UOrionHeroDetails_Mastery>();
	}
};
static_assert(alignof(UOrionHeroDetails_Mastery) == 0x000008, "Wrong alignment on UOrionHeroDetails_Mastery");
static_assert(sizeof(UOrionHeroDetails_Mastery) == 0x0004D0, "Wrong size on UOrionHeroDetails_Mastery");
static_assert(offsetof(UOrionHeroDetails_Mastery, RankPurchaseModalClass) == 0x000448, "Member 'UOrionHeroDetails_Mastery::RankPurchaseModalClass' has a wrong offset!");
static_assert(offsetof(UOrionHeroDetails_Mastery, Mastery_RankDisplay) == 0x000460, "Member 'UOrionHeroDetails_Mastery::Mastery_RankDisplay' has a wrong offset!");
static_assert(offsetof(UOrionHeroDetails_Mastery, Mastery_LevelDisplay) == 0x000468, "Member 'UOrionHeroDetails_Mastery::Mastery_LevelDisplay' has a wrong offset!");
static_assert(offsetof(UOrionHeroDetails_Mastery, Mastery_RewardTimeline) == 0x000470, "Member 'UOrionHeroDetails_Mastery::Mastery_RewardTimeline' has a wrong offset!");
static_assert(offsetof(UOrionHeroDetails_Mastery, Mastery_RewardPopup) == 0x000478, "Member 'UOrionHeroDetails_Mastery::Mastery_RewardPopup' has a wrong offset!");
static_assert(offsetof(UOrionHeroDetails_Mastery, Button_UnlockRank) == 0x000480, "Member 'UOrionHeroDetails_Mastery::Button_UnlockRank' has a wrong offset!");
static_assert(offsetof(UOrionHeroDetails_Mastery, Button_CloseRewardPopup) == 0x000488, "Member 'UOrionHeroDetails_Mastery::Button_CloseRewardPopup' has a wrong offset!");
static_assert(offsetof(UOrionHeroDetails_Mastery, Button_ShowRewardPopup) == 0x000490, "Member 'UOrionHeroDetails_Mastery::Button_ShowRewardPopup' has a wrong offset!");
static_assert(offsetof(UOrionHeroDetails_Mastery, Container_RewardPopup) == 0x000498, "Member 'UOrionHeroDetails_Mastery::Container_RewardPopup' has a wrong offset!");
static_assert(offsetof(UOrionHeroDetails_Mastery, Text_RankXRewards) == 0x0004A0, "Member 'UOrionHeroDetails_Mastery::Text_RankXRewards' has a wrong offset!");
static_assert(offsetof(UOrionHeroDetails_Mastery, Text_NextReward) == 0x0004A8, "Member 'UOrionHeroDetails_Mastery::Text_NextReward' has a wrong offset!");
static_assert(offsetof(UOrionHeroDetails_Mastery, Text_XpToLevel) == 0x0004B0, "Member 'UOrionHeroDetails_Mastery::Text_XpToLevel' has a wrong offset!");
static_assert(offsetof(UOrionHeroDetails_Mastery, Text_LockedMessage) == 0x0004B8, "Member 'UOrionHeroDetails_Mastery::Text_LockedMessage' has a wrong offset!");
static_assert(offsetof(UOrionHeroDetails_Mastery, Reward_NextRank) == 0x0004C0, "Member 'UOrionHeroDetails_Mastery::Reward_NextRank' has a wrong offset!");

// Class OrionUI.OrionHeroDetailsMasteryLevelDisplay
// 0x0028 (0x02E0 - 0x02B8)
class UOrionHeroDetailsMasteryLevelDisplay final : public UOrionUserWidgetBase
{
public:
	class UOrionTextBlock*                        Text_Rank;                                         // 0x02B8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionTextBlock*                        Text_Level;                                        // 0x02C0(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionTextBlock*                        Text_XPRequired;                                   // 0x02C8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionRewardProgressBar*                Progress_Level;                                    // 0x02D0(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_2D8[0x8];                                      // 0x02D8(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void OnLevelSet(bool bProgressLocked);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"OrionHeroDetailsMasteryLevelDisplay">();
	}
	static class UOrionHeroDetailsMasteryLevelDisplay* GetDefaultObj()
	{
		return GetDefaultObjImpl<UOrionHeroDetailsMasteryLevelDisplay>();
	}
};
static_assert(alignof(UOrionHeroDetailsMasteryLevelDisplay) == 0x000008, "Wrong alignment on UOrionHeroDetailsMasteryLevelDisplay");
static_assert(sizeof(UOrionHeroDetailsMasteryLevelDisplay) == 0x0002E0, "Wrong size on UOrionHeroDetailsMasteryLevelDisplay");
static_assert(offsetof(UOrionHeroDetailsMasteryLevelDisplay, Text_Rank) == 0x0002B8, "Member 'UOrionHeroDetailsMasteryLevelDisplay::Text_Rank' has a wrong offset!");
static_assert(offsetof(UOrionHeroDetailsMasteryLevelDisplay, Text_Level) == 0x0002C0, "Member 'UOrionHeroDetailsMasteryLevelDisplay::Text_Level' has a wrong offset!");
static_assert(offsetof(UOrionHeroDetailsMasteryLevelDisplay, Text_XPRequired) == 0x0002C8, "Member 'UOrionHeroDetailsMasteryLevelDisplay::Text_XPRequired' has a wrong offset!");
static_assert(offsetof(UOrionHeroDetailsMasteryLevelDisplay, Progress_Level) == 0x0002D0, "Member 'UOrionHeroDetailsMasteryLevelDisplay::Progress_Level' has a wrong offset!");

// Class OrionUI.OrionInfoFeedEntryBase
// 0x00D8 (0x0390 - 0x02B8)
class UOrionInfoFeedEntryBase : public UOrionUserWidgetBase
{
public:
	float                                         MaxEntryHeight;                                    // 0x02B8(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         MinEntryWidth;                                     // 0x02BC(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         OutroAnimDuration;                                 // 0x02C0(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_2C4[0x4];                                      // 0x02C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   ExpirationCountdownPrefix;                         // 0x02C8(0x0018)(Edit, NativeAccessSpecifierPrivate)
	uint8                                         Pad_2E0[0xA8];                                     // 0x02E0(0x00A8)(Fixing Size After Last Property [ Dumper-7 ])
	class UOrionTextBlock*                        Text_Duration;                                     // 0x0388(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	void OnEntryInitialized();
	void OnRemoveEntry(bool bImmediate);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"OrionInfoFeedEntryBase">();
	}
	static class UOrionInfoFeedEntryBase* GetDefaultObj()
	{
		return GetDefaultObjImpl<UOrionInfoFeedEntryBase>();
	}
};
static_assert(alignof(UOrionInfoFeedEntryBase) == 0x000008, "Wrong alignment on UOrionInfoFeedEntryBase");
static_assert(sizeof(UOrionInfoFeedEntryBase) == 0x000390, "Wrong size on UOrionInfoFeedEntryBase");
static_assert(offsetof(UOrionInfoFeedEntryBase, MaxEntryHeight) == 0x0002B8, "Member 'UOrionInfoFeedEntryBase::MaxEntryHeight' has a wrong offset!");
static_assert(offsetof(UOrionInfoFeedEntryBase, MinEntryWidth) == 0x0002BC, "Member 'UOrionInfoFeedEntryBase::MinEntryWidth' has a wrong offset!");
static_assert(offsetof(UOrionInfoFeedEntryBase, OutroAnimDuration) == 0x0002C0, "Member 'UOrionInfoFeedEntryBase::OutroAnimDuration' has a wrong offset!");
static_assert(offsetof(UOrionInfoFeedEntryBase, ExpirationCountdownPrefix) == 0x0002C8, "Member 'UOrionInfoFeedEntryBase::ExpirationCountdownPrefix' has a wrong offset!");
static_assert(offsetof(UOrionInfoFeedEntryBase, Text_Duration) == 0x000388, "Member 'UOrionInfoFeedEntryBase::Text_Duration' has a wrong offset!");

// Class OrionUI.OrionTeamCommMessageFeedEntry
// 0x0020 (0x03B0 - 0x0390)
class UOrionTeamCommMessageFeedEntry final : public UOrionInfoFeedEntryBase
{
public:
	uint8                                         Pad_390[0x8];                                      // 0x0390(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	class UOrionLazyImage*                        LazyImage_Sender;                                  // 0x0398(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionTextBlock*                        Text_StackCount;                                   // 0x03A0(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionTextBlock*                        Text_Message;                                      // 0x03A8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	void OnDuplicateMessageReceived();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"OrionTeamCommMessageFeedEntry">();
	}
	static class UOrionTeamCommMessageFeedEntry* GetDefaultObj()
	{
		return GetDefaultObjImpl<UOrionTeamCommMessageFeedEntry>();
	}
};
static_assert(alignof(UOrionTeamCommMessageFeedEntry) == 0x000008, "Wrong alignment on UOrionTeamCommMessageFeedEntry");
static_assert(sizeof(UOrionTeamCommMessageFeedEntry) == 0x0003B0, "Wrong size on UOrionTeamCommMessageFeedEntry");
static_assert(offsetof(UOrionTeamCommMessageFeedEntry, LazyImage_Sender) == 0x000398, "Member 'UOrionTeamCommMessageFeedEntry::LazyImage_Sender' has a wrong offset!");
static_assert(offsetof(UOrionTeamCommMessageFeedEntry, Text_StackCount) == 0x0003A0, "Member 'UOrionTeamCommMessageFeedEntry::Text_StackCount' has a wrong offset!");
static_assert(offsetof(UOrionTeamCommMessageFeedEntry, Text_Message) == 0x0003A8, "Member 'UOrionTeamCommMessageFeedEntry::Text_Message' has a wrong offset!");

// Class OrionUI.OrionHeroDetailsMasteryRankPurchaseModal
// 0x0018 (0x0460 - 0x0448)
class UOrionHeroDetailsMasteryRankPurchaseModal final : public UOrionActivatableWidget
{
public:
	uint8                                         Pad_448[0x8];                                      // 0x0448(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	class UOrionDefaultButton*                    Close_button;                                      // 0x0450(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionMasteryRankDisplay*               Mastery_RankProgress;                              // 0x0458(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	void UpdateToTrueRank();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"OrionHeroDetailsMasteryRankPurchaseModal">();
	}
	static class UOrionHeroDetailsMasteryRankPurchaseModal* GetDefaultObj()
	{
		return GetDefaultObjImpl<UOrionHeroDetailsMasteryRankPurchaseModal>();
	}
};
static_assert(alignof(UOrionHeroDetailsMasteryRankPurchaseModal) == 0x000008, "Wrong alignment on UOrionHeroDetailsMasteryRankPurchaseModal");
static_assert(sizeof(UOrionHeroDetailsMasteryRankPurchaseModal) == 0x000460, "Wrong size on UOrionHeroDetailsMasteryRankPurchaseModal");
static_assert(offsetof(UOrionHeroDetailsMasteryRankPurchaseModal, Close_button) == 0x000450, "Member 'UOrionHeroDetailsMasteryRankPurchaseModal::Close_button' has a wrong offset!");
static_assert(offsetof(UOrionHeroDetailsMasteryRankPurchaseModal, Mastery_RankProgress) == 0x000458, "Member 'UOrionHeroDetailsMasteryRankPurchaseModal::Mastery_RankProgress' has a wrong offset!");

// Class OrionUI.OrionHeroDetailsMasteryRewardPopup
// 0x0038 (0x0480 - 0x0448)
class UOrionHeroDetailsMasteryRewardPopup final : public UOrionActivatableWidget
{
public:
	class UOrionTileView*                         TileView_Rewards;                                  // 0x0448(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionTextBlock*                        Text_Locked;                                       // 0x0450(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionRichText*                         RText_RewardTitle;                                 // 0x0458(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionRewardWidget*                     Reward_CurrentRank;                                // 0x0460(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionTextBlock*                        Text_NextRank;                                     // 0x0468(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionBaseButton*                       Button_Close;                                      // 0x0470(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_478[0x8];                                      // 0x0478(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"OrionHeroDetailsMasteryRewardPopup">();
	}
	static class UOrionHeroDetailsMasteryRewardPopup* GetDefaultObj()
	{
		return GetDefaultObjImpl<UOrionHeroDetailsMasteryRewardPopup>();
	}
};
static_assert(alignof(UOrionHeroDetailsMasteryRewardPopup) == 0x000008, "Wrong alignment on UOrionHeroDetailsMasteryRewardPopup");
static_assert(sizeof(UOrionHeroDetailsMasteryRewardPopup) == 0x000480, "Wrong size on UOrionHeroDetailsMasteryRewardPopup");
static_assert(offsetof(UOrionHeroDetailsMasteryRewardPopup, TileView_Rewards) == 0x000448, "Member 'UOrionHeroDetailsMasteryRewardPopup::TileView_Rewards' has a wrong offset!");
static_assert(offsetof(UOrionHeroDetailsMasteryRewardPopup, Text_Locked) == 0x000450, "Member 'UOrionHeroDetailsMasteryRewardPopup::Text_Locked' has a wrong offset!");
static_assert(offsetof(UOrionHeroDetailsMasteryRewardPopup, RText_RewardTitle) == 0x000458, "Member 'UOrionHeroDetailsMasteryRewardPopup::RText_RewardTitle' has a wrong offset!");
static_assert(offsetof(UOrionHeroDetailsMasteryRewardPopup, Reward_CurrentRank) == 0x000460, "Member 'UOrionHeroDetailsMasteryRewardPopup::Reward_CurrentRank' has a wrong offset!");
static_assert(offsetof(UOrionHeroDetailsMasteryRewardPopup, Text_NextRank) == 0x000468, "Member 'UOrionHeroDetailsMasteryRewardPopup::Text_NextRank' has a wrong offset!");
static_assert(offsetof(UOrionHeroDetailsMasteryRewardPopup, Button_Close) == 0x000470, "Member 'UOrionHeroDetailsMasteryRewardPopup::Button_Close' has a wrong offset!");

// Class OrionUI.OrionScoreboardTeamRow
// 0x0028 (0x0228 - 0x0200)
class UOrionScoreboardTeamRow final : public UUserWidget
{
public:
	TArray<class UOrionScoreboardPlayerRow*>      MyPlayerRows;                                      // 0x0200(0x0010)(ExportObject, ZeroConstructor, Transient, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	class UOrionTextBlock*                        Text_KDA;                                          // 0x0210(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UHorizontalBox*                         HBox_TotalGold;                                    // 0x0218(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionTextBlock*                        Text_TotalGold;                                    // 0x0220(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"OrionScoreboardTeamRow">();
	}
	static class UOrionScoreboardTeamRow* GetDefaultObj()
	{
		return GetDefaultObjImpl<UOrionScoreboardTeamRow>();
	}
};
static_assert(alignof(UOrionScoreboardTeamRow) == 0x000008, "Wrong alignment on UOrionScoreboardTeamRow");
static_assert(sizeof(UOrionScoreboardTeamRow) == 0x000228, "Wrong size on UOrionScoreboardTeamRow");
static_assert(offsetof(UOrionScoreboardTeamRow, MyPlayerRows) == 0x000200, "Member 'UOrionScoreboardTeamRow::MyPlayerRows' has a wrong offset!");
static_assert(offsetof(UOrionScoreboardTeamRow, Text_KDA) == 0x000210, "Member 'UOrionScoreboardTeamRow::Text_KDA' has a wrong offset!");
static_assert(offsetof(UOrionScoreboardTeamRow, HBox_TotalGold) == 0x000218, "Member 'UOrionScoreboardTeamRow::HBox_TotalGold' has a wrong offset!");
static_assert(offsetof(UOrionScoreboardTeamRow, Text_TotalGold) == 0x000220, "Member 'UOrionScoreboardTeamRow::Text_TotalGold' has a wrong offset!");

// Class OrionUI.OrionHeroDetailsMasteryRewardTimeline
// 0x0028 (0x02E0 - 0x02B8)
class UOrionHeroDetailsMasteryRewardTimeline final : public UOrionUserWidgetBase
{
public:
	int32                                         TimelineWidth;                                     // 0x02B8(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                         TimelineStartPosition;                             // 0x02BC(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                         EntryWidth;                                        // 0x02C0(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_2C4[0x4];                                      // 0x02C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UOrionDynamicEntryBox*                  EntryBox_RewardEntries;                            // 0x02C8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionRewardProgressBar*                Progress_Display;                                  // 0x02D0(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UImage*                                 Image_RankTimeline;                                // 0x02D8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	void OnRankTierSet(EOrionHeroRankTier RankTier);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"OrionHeroDetailsMasteryRewardTimeline">();
	}
	static class UOrionHeroDetailsMasteryRewardTimeline* GetDefaultObj()
	{
		return GetDefaultObjImpl<UOrionHeroDetailsMasteryRewardTimeline>();
	}
};
static_assert(alignof(UOrionHeroDetailsMasteryRewardTimeline) == 0x000008, "Wrong alignment on UOrionHeroDetailsMasteryRewardTimeline");
static_assert(sizeof(UOrionHeroDetailsMasteryRewardTimeline) == 0x0002E0, "Wrong size on UOrionHeroDetailsMasteryRewardTimeline");
static_assert(offsetof(UOrionHeroDetailsMasteryRewardTimeline, TimelineWidth) == 0x0002B8, "Member 'UOrionHeroDetailsMasteryRewardTimeline::TimelineWidth' has a wrong offset!");
static_assert(offsetof(UOrionHeroDetailsMasteryRewardTimeline, TimelineStartPosition) == 0x0002BC, "Member 'UOrionHeroDetailsMasteryRewardTimeline::TimelineStartPosition' has a wrong offset!");
static_assert(offsetof(UOrionHeroDetailsMasteryRewardTimeline, EntryWidth) == 0x0002C0, "Member 'UOrionHeroDetailsMasteryRewardTimeline::EntryWidth' has a wrong offset!");
static_assert(offsetof(UOrionHeroDetailsMasteryRewardTimeline, EntryBox_RewardEntries) == 0x0002C8, "Member 'UOrionHeroDetailsMasteryRewardTimeline::EntryBox_RewardEntries' has a wrong offset!");
static_assert(offsetof(UOrionHeroDetailsMasteryRewardTimeline, Progress_Display) == 0x0002D0, "Member 'UOrionHeroDetailsMasteryRewardTimeline::Progress_Display' has a wrong offset!");
static_assert(offsetof(UOrionHeroDetailsMasteryRewardTimeline, Image_RankTimeline) == 0x0002D8, "Member 'UOrionHeroDetailsMasteryRewardTimeline::Image_RankTimeline' has a wrong offset!");

// Class OrionUI.OrionHeroDetailsMasteryRewardTimelineEntry
// 0x0018 (0x02D0 - 0x02B8)
class UOrionHeroDetailsMasteryRewardTimelineEntry final : public UOrionUserWidgetBase
{
public:
	float                                         FirstBoxScaleValue;                                // 0x02B8(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2BC[0x4];                                      // 0x02BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UOrionRewardWidget*                     Reward_Widget;                                     // 0x02C0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionTextBlock*                        Text_Level;                                        // 0x02C8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	void OnFirstRank(bool bIsFirst);
	void OnRewardLocked(bool bIsLocked);
	void SetRewardRenderTransformPivot(float X, float Y);
	void SetRewardScaleTooltipSafe(float ScaleValue);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"OrionHeroDetailsMasteryRewardTimelineEntry">();
	}
	static class UOrionHeroDetailsMasteryRewardTimelineEntry* GetDefaultObj()
	{
		return GetDefaultObjImpl<UOrionHeroDetailsMasteryRewardTimelineEntry>();
	}
};
static_assert(alignof(UOrionHeroDetailsMasteryRewardTimelineEntry) == 0x000008, "Wrong alignment on UOrionHeroDetailsMasteryRewardTimelineEntry");
static_assert(sizeof(UOrionHeroDetailsMasteryRewardTimelineEntry) == 0x0002D0, "Wrong size on UOrionHeroDetailsMasteryRewardTimelineEntry");
static_assert(offsetof(UOrionHeroDetailsMasteryRewardTimelineEntry, FirstBoxScaleValue) == 0x0002B8, "Member 'UOrionHeroDetailsMasteryRewardTimelineEntry::FirstBoxScaleValue' has a wrong offset!");
static_assert(offsetof(UOrionHeroDetailsMasteryRewardTimelineEntry, Reward_Widget) == 0x0002C0, "Member 'UOrionHeroDetailsMasteryRewardTimelineEntry::Reward_Widget' has a wrong offset!");
static_assert(offsetof(UOrionHeroDetailsMasteryRewardTimelineEntry, Text_Level) == 0x0002C8, "Member 'UOrionHeroDetailsMasteryRewardTimelineEntry::Text_Level' has a wrong offset!");

// Class OrionUI.OrionRewardTooltip
// 0x0020 (0x0350 - 0x0330)
class UOrionRewardTooltip : public UOrionTooltipBase
{
public:
	struct FLinearColor                           UnearnedContentTint;                               // 0x0330(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bIsEarned;                                         // 0x0340(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_341[0x7];                                      // 0x0341(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UOrionRewardTooltipItem*                Item_Reward;                                       // 0x0348(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"OrionRewardTooltip">();
	}
	static class UOrionRewardTooltip* GetDefaultObj()
	{
		return GetDefaultObjImpl<UOrionRewardTooltip>();
	}
};
static_assert(alignof(UOrionRewardTooltip) == 0x000008, "Wrong alignment on UOrionRewardTooltip");
static_assert(sizeof(UOrionRewardTooltip) == 0x000350, "Wrong size on UOrionRewardTooltip");
static_assert(offsetof(UOrionRewardTooltip, UnearnedContentTint) == 0x000330, "Member 'UOrionRewardTooltip::UnearnedContentTint' has a wrong offset!");
static_assert(offsetof(UOrionRewardTooltip, bIsEarned) == 0x000340, "Member 'UOrionRewardTooltip::bIsEarned' has a wrong offset!");
static_assert(offsetof(UOrionRewardTooltip, Item_Reward) == 0x000348, "Member 'UOrionRewardTooltip::Item_Reward' has a wrong offset!");

// Class OrionUI.OrionHeroRewardTooltip
// 0x0010 (0x0360 - 0x0350)
class UOrionHeroRewardTooltip final : public UOrionRewardTooltip
{
public:
	int32                                         RewardLevel;                                       // 0x0350(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_354[0x4];                                      // 0x0354(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UOrionRewardTooltipItem*                Item_OwnerReward;                                  // 0x0358(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	void OnUpdateLock(bool bIsOwned);
	void OnUpdateXPBonuses(float SelfBonus, float TeammateBonus);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"OrionHeroRewardTooltip">();
	}
	static class UOrionHeroRewardTooltip* GetDefaultObj()
	{
		return GetDefaultObjImpl<UOrionHeroRewardTooltip>();
	}
};
static_assert(alignof(UOrionHeroRewardTooltip) == 0x000008, "Wrong alignment on UOrionHeroRewardTooltip");
static_assert(sizeof(UOrionHeroRewardTooltip) == 0x000360, "Wrong size on UOrionHeroRewardTooltip");
static_assert(offsetof(UOrionHeroRewardTooltip, RewardLevel) == 0x000350, "Member 'UOrionHeroRewardTooltip::RewardLevel' has a wrong offset!");
static_assert(offsetof(UOrionHeroRewardTooltip, Item_OwnerReward) == 0x000358, "Member 'UOrionHeroRewardTooltip::Item_OwnerReward' has a wrong offset!");

// Class OrionUI.OrionHeroDetails_SandboxButton
// 0x0018 (0x02D0 - 0x02B8)
class UOrionHeroDetails_SandboxButton final : public UOrionUserWidgetBase
{
public:
	class UOrionDefaultButton*                    Button_OpenSandbox;                                // 0x02B8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_2C0[0x10];                                     // 0x02C0(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"OrionHeroDetails_SandboxButton">();
	}
	static class UOrionHeroDetails_SandboxButton* GetDefaultObj()
	{
		return GetDefaultObjImpl<UOrionHeroDetails_SandboxButton>();
	}
};
static_assert(alignof(UOrionHeroDetails_SandboxButton) == 0x000008, "Wrong alignment on UOrionHeroDetails_SandboxButton");
static_assert(sizeof(UOrionHeroDetails_SandboxButton) == 0x0002D0, "Wrong size on UOrionHeroDetails_SandboxButton");
static_assert(offsetof(UOrionHeroDetails_SandboxButton, Button_OpenSandbox) == 0x0002B8, "Member 'UOrionHeroDetails_SandboxButton::Button_OpenSandbox' has a wrong offset!");

// Class OrionUI.OrionHeroDetails_Skins
// 0x0048 (0x0490 - 0x0448)
class UOrionHeroDetails_Skins final : public UOrionActivatableWidget
{
public:
	uint8                                         Pad_448[0x10];                                     // 0x0448(0x0010)(Fixing Size After Last Property [ Dumper-7 ])
	class UOrionTileView*                         TileView_Skins;                                    // 0x0458(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionTextBlock*                        Text_SkinName;                                     // 0x0460(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionTextBlock*                        Text_SkinDesc;                                     // 0x0468(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionDefaultButton*                    Button_BuySkin;                                    // 0x0470(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionTileView*                         TileView_SkinVariations;                           // 0x0478(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UVerticalBox*                           VBox_SkinVariations;                               // 0x0480(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_488[0x8];                                      // 0x0488(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void DynamicHandleSkinSelected(class UObject* SelectedItem, bool bSelected);
	void DynamicHandleSkinVariationSelected(class UObject* SelectedItem, bool bSelected);
	void OnSkinPurchased();
	void SetHero(class UOrionMcpHeroItem* HeroItem);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"OrionHeroDetails_Skins">();
	}
	static class UOrionHeroDetails_Skins* GetDefaultObj()
	{
		return GetDefaultObjImpl<UOrionHeroDetails_Skins>();
	}
};
static_assert(alignof(UOrionHeroDetails_Skins) == 0x000008, "Wrong alignment on UOrionHeroDetails_Skins");
static_assert(sizeof(UOrionHeroDetails_Skins) == 0x000490, "Wrong size on UOrionHeroDetails_Skins");
static_assert(offsetof(UOrionHeroDetails_Skins, TileView_Skins) == 0x000458, "Member 'UOrionHeroDetails_Skins::TileView_Skins' has a wrong offset!");
static_assert(offsetof(UOrionHeroDetails_Skins, Text_SkinName) == 0x000460, "Member 'UOrionHeroDetails_Skins::Text_SkinName' has a wrong offset!");
static_assert(offsetof(UOrionHeroDetails_Skins, Text_SkinDesc) == 0x000468, "Member 'UOrionHeroDetails_Skins::Text_SkinDesc' has a wrong offset!");
static_assert(offsetof(UOrionHeroDetails_Skins, Button_BuySkin) == 0x000470, "Member 'UOrionHeroDetails_Skins::Button_BuySkin' has a wrong offset!");
static_assert(offsetof(UOrionHeroDetails_Skins, TileView_SkinVariations) == 0x000478, "Member 'UOrionHeroDetails_Skins::TileView_SkinVariations' has a wrong offset!");
static_assert(offsetof(UOrionHeroDetails_Skins, VBox_SkinVariations) == 0x000480, "Member 'UOrionHeroDetails_Skins::VBox_SkinVariations' has a wrong offset!");

// Class OrionUI.OrionScoreboardWidget
// 0x0038 (0x02F0 - 0x02B8)
class UOrionScoreboardWidget final : public UOrionUserWidgetBase
{
public:
	bool                                          bIsFriendly;                                       // 0x02B8(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_2B9[0x7];                                      // 0x02B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSubclassOf<class UOrionScoreboardRow>        RowClass;                                          // 0x02C0(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class UOrionScoreboardTotalsWidget> TotalsClass;                                       // 0x02C8(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UVerticalBox*                           VertBox;                                           // 0x02D0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class UOrionScoreboardRow*>            Rows;                                              // 0x02D8(0x0010)(ExportObject, ZeroConstructor, Transient, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	uint8                                         Pad_2E8[0x8];                                      // 0x02E8(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"OrionScoreboardWidget">();
	}
	static class UOrionScoreboardWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UOrionScoreboardWidget>();
	}
};
static_assert(alignof(UOrionScoreboardWidget) == 0x000008, "Wrong alignment on UOrionScoreboardWidget");
static_assert(sizeof(UOrionScoreboardWidget) == 0x0002F0, "Wrong size on UOrionScoreboardWidget");
static_assert(offsetof(UOrionScoreboardWidget, bIsFriendly) == 0x0002B8, "Member 'UOrionScoreboardWidget::bIsFriendly' has a wrong offset!");
static_assert(offsetof(UOrionScoreboardWidget, RowClass) == 0x0002C0, "Member 'UOrionScoreboardWidget::RowClass' has a wrong offset!");
static_assert(offsetof(UOrionScoreboardWidget, TotalsClass) == 0x0002C8, "Member 'UOrionScoreboardWidget::TotalsClass' has a wrong offset!");
static_assert(offsetof(UOrionScoreboardWidget, VertBox) == 0x0002D0, "Member 'UOrionScoreboardWidget::VertBox' has a wrong offset!");
static_assert(offsetof(UOrionScoreboardWidget, Rows) == 0x0002D8, "Member 'UOrionScoreboardWidget::Rows' has a wrong offset!");

// Class OrionUI.OrionHeroDetailsRoot
// 0x0028 (0x0470 - 0x0448)
class UOrionHeroDetailsRoot final : public UOrionActivatableWidget
{
public:
	uint8                                         Pad_448[0x8];                                      // 0x0448(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	class UOrionDynamicEntryBox*                  EntryBox_HeroAbilities;                            // 0x0450(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UOrionHeroAbilitySummary*               HeroAbilitySummary;                                // 0x0458(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UOrionVideoPlayerWidget*                AbilityVideo;                                      // 0x0460(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UOrionTextBlock*                        Text_CommingSoon;                                  // 0x0468(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	void NativeSetHero(const class UOrionHeroData* NewHero);
	void OnAbilityWidgetHovered();
	void OnAbilityWidgetUnHovered();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"OrionHeroDetailsRoot">();
	}
	static class UOrionHeroDetailsRoot* GetDefaultObj()
	{
		return GetDefaultObjImpl<UOrionHeroDetailsRoot>();
	}
};
static_assert(alignof(UOrionHeroDetailsRoot) == 0x000008, "Wrong alignment on UOrionHeroDetailsRoot");
static_assert(sizeof(UOrionHeroDetailsRoot) == 0x000470, "Wrong size on UOrionHeroDetailsRoot");
static_assert(offsetof(UOrionHeroDetailsRoot, EntryBox_HeroAbilities) == 0x000450, "Member 'UOrionHeroDetailsRoot::EntryBox_HeroAbilities' has a wrong offset!");
static_assert(offsetof(UOrionHeroDetailsRoot, HeroAbilitySummary) == 0x000458, "Member 'UOrionHeroDetailsRoot::HeroAbilitySummary' has a wrong offset!");
static_assert(offsetof(UOrionHeroDetailsRoot, AbilityVideo) == 0x000460, "Member 'UOrionHeroDetailsRoot::AbilityVideo' has a wrong offset!");
static_assert(offsetof(UOrionHeroDetailsRoot, Text_CommingSoon) == 0x000468, "Member 'UOrionHeroDetailsRoot::Text_CommingSoon' has a wrong offset!");

// Class OrionUI.OrionHeroListItem
// 0x0078 (0x0A58 - 0x09E0)
#pragma pack(push, 0x1)
class alignas(0x08) UOrionHeroListItem : public UOrionBaseButton
{
public:
	uint8                                         Pad_9E0[0x38];                                     // 0x09E0(0x0038)(Fixing Size After Last Property [ Dumper-7 ])
	TSubclassOf<class UOrionHeroTooltip>          HeroTooltipClass;                                  // 0x0A18(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bShowHeroText;                                     // 0x0A20(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_A21[0x17];                                     // 0x0A21(0x0017)(Fixing Size After Last Property [ Dumper-7 ])
	class UOrionLazyImage*                        LazyImage_HeroPortrait;                            // 0x0A38(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionTextBlock*                        Text_HeroName;                                     // 0x0A40(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionMasteryRankDisplay*               Widget_RankDisplay;                                // 0x0A48(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionBlurWidget*                       Blur_TextContainer;                                // 0x0A50(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	void OnHeroDataSet(EOrionHeroRankTier RankTier, bool bRecommended);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"OrionHeroListItem">();
	}
	static class UOrionHeroListItem* GetDefaultObj()
	{
		return GetDefaultObjImpl<UOrionHeroListItem>();
	}
};
#pragma pack(pop)
static_assert(alignof(UOrionHeroListItem) == 0x000008, "Wrong alignment on UOrionHeroListItem");
static_assert(sizeof(UOrionHeroListItem) == 0x000A58, "Wrong size on UOrionHeroListItem");
static_assert(offsetof(UOrionHeroListItem, HeroTooltipClass) == 0x000A18, "Member 'UOrionHeroListItem::HeroTooltipClass' has a wrong offset!");
static_assert(offsetof(UOrionHeroListItem, bShowHeroText) == 0x000A20, "Member 'UOrionHeroListItem::bShowHeroText' has a wrong offset!");
static_assert(offsetof(UOrionHeroListItem, LazyImage_HeroPortrait) == 0x000A38, "Member 'UOrionHeroListItem::LazyImage_HeroPortrait' has a wrong offset!");
static_assert(offsetof(UOrionHeroListItem, Text_HeroName) == 0x000A40, "Member 'UOrionHeroListItem::Text_HeroName' has a wrong offset!");
static_assert(offsetof(UOrionHeroListItem, Widget_RankDisplay) == 0x000A48, "Member 'UOrionHeroListItem::Widget_RankDisplay' has a wrong offset!");
static_assert(offsetof(UOrionHeroListItem, Blur_TextContainer) == 0x000A50, "Member 'UOrionHeroListItem::Blur_TextContainer' has a wrong offset!");

// Class OrionUI.OrionReplayWidget
// 0x00F8 (0x03B0 - 0x02B8)
class UOrionReplayWidget final : public UOrionUserWidgetBase
{
public:
	uint8                                         Pad_2B8[0x8];                                      // 0x02B8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UTexture2D*>                     Images;                                            // 0x02C0(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_2D0[0x48];                                     // 0x02D0(0x0048)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDateTime                              Timestamp;                                         // 0x0318(0x0008)(NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	EReplayDetailsState                           CurrentState;                                      // 0x0320(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_321[0x7];                                      // 0x0321(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 StreamName;                                        // 0x0328(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FTimeAgo                               TimeAgo;                                           // 0x0338(0x0038)(NativeAccessSpecifierPrivate)
	class UWidgetSwitcher*                        LiveStatusSwitcher;                                // 0x0370(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UTextBlock*                             TimestampText;                                     // 0x0378(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UTextBlock*                             ViewersText;                                       // 0x0380(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UTextBlock*                             TitleText;                                         // 0x0388(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UWidgetSwitcher*                        StateSwitcher;                                     // 0x0390(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UImage*                                 BackgroundImage;                                   // 0x0398(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                          bShowSpoilers;                                     // 0x03A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_3A1[0xF];                                      // 0x03A1(0x000F)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void OnDetailStateChanged(EReplayDetailsState NewState);
	void OnReplayClicked();
	void SetReplayStream(class UOrionReplayStreamInfo* InStream);
	void SetShowSpoilers(bool InShowSpoilers);

	class UOrionHeroData* GetHeroData(EOrionTeam Team, int32 SlotIndex) const;
	class FText GetKDA(EOrionTeam Team, int32 SlotIndex) const;
	void GetName(class FString* ResultString) const;
	class FText GetPlayerName(EOrionTeam Team, int32 SlotIndex) const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"OrionReplayWidget">();
	}
	static class UOrionReplayWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UOrionReplayWidget>();
	}
};
static_assert(alignof(UOrionReplayWidget) == 0x000008, "Wrong alignment on UOrionReplayWidget");
static_assert(sizeof(UOrionReplayWidget) == 0x0003B0, "Wrong size on UOrionReplayWidget");
static_assert(offsetof(UOrionReplayWidget, Images) == 0x0002C0, "Member 'UOrionReplayWidget::Images' has a wrong offset!");
static_assert(offsetof(UOrionReplayWidget, Timestamp) == 0x000318, "Member 'UOrionReplayWidget::Timestamp' has a wrong offset!");
static_assert(offsetof(UOrionReplayWidget, CurrentState) == 0x000320, "Member 'UOrionReplayWidget::CurrentState' has a wrong offset!");
static_assert(offsetof(UOrionReplayWidget, StreamName) == 0x000328, "Member 'UOrionReplayWidget::StreamName' has a wrong offset!");
static_assert(offsetof(UOrionReplayWidget, TimeAgo) == 0x000338, "Member 'UOrionReplayWidget::TimeAgo' has a wrong offset!");
static_assert(offsetof(UOrionReplayWidget, LiveStatusSwitcher) == 0x000370, "Member 'UOrionReplayWidget::LiveStatusSwitcher' has a wrong offset!");
static_assert(offsetof(UOrionReplayWidget, TimestampText) == 0x000378, "Member 'UOrionReplayWidget::TimestampText' has a wrong offset!");
static_assert(offsetof(UOrionReplayWidget, ViewersText) == 0x000380, "Member 'UOrionReplayWidget::ViewersText' has a wrong offset!");
static_assert(offsetof(UOrionReplayWidget, TitleText) == 0x000388, "Member 'UOrionReplayWidget::TitleText' has a wrong offset!");
static_assert(offsetof(UOrionReplayWidget, StateSwitcher) == 0x000390, "Member 'UOrionReplayWidget::StateSwitcher' has a wrong offset!");
static_assert(offsetof(UOrionReplayWidget, BackgroundImage) == 0x000398, "Member 'UOrionReplayWidget::BackgroundImage' has a wrong offset!");
static_assert(offsetof(UOrionReplayWidget, bShowSpoilers) == 0x0003A0, "Member 'UOrionReplayWidget::bShowSpoilers' has a wrong offset!");

// Class OrionUI.OrionHeroListItem_Matchmaking
// 0x0028 (0x0A80 - 0x0A58)
class UOrionHeroListItem_Matchmaking final : public UOrionHeroListItem
{
public:
	float                                         InappropriateHeroDesaturationPercent;              // 0x0A58(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_A5C[0xC];                                      // 0x0A5C(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	class UImage*                                 Image_UnavailableTint;                             // 0x0A68(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UImage*                                 Image_SelectionStatus;                             // 0x0A70(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UImage*                                 Image_Recommended;                                 // 0x0A78(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	void OnPositionPreferenceChanged(bool bHasPreference, bool bIsPreferred);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"OrionHeroListItem_Matchmaking">();
	}
	static class UOrionHeroListItem_Matchmaking* GetDefaultObj()
	{
		return GetDefaultObjImpl<UOrionHeroListItem_Matchmaking>();
	}
};
static_assert(alignof(UOrionHeroListItem_Matchmaking) == 0x000008, "Wrong alignment on UOrionHeroListItem_Matchmaking");
static_assert(sizeof(UOrionHeroListItem_Matchmaking) == 0x000A80, "Wrong size on UOrionHeroListItem_Matchmaking");
static_assert(offsetof(UOrionHeroListItem_Matchmaking, InappropriateHeroDesaturationPercent) == 0x000A58, "Member 'UOrionHeroListItem_Matchmaking::InappropriateHeroDesaturationPercent' has a wrong offset!");
static_assert(offsetof(UOrionHeroListItem_Matchmaking, Image_UnavailableTint) == 0x000A68, "Member 'UOrionHeroListItem_Matchmaking::Image_UnavailableTint' has a wrong offset!");
static_assert(offsetof(UOrionHeroListItem_Matchmaking, Image_SelectionStatus) == 0x000A70, "Member 'UOrionHeroListItem_Matchmaking::Image_SelectionStatus' has a wrong offset!");
static_assert(offsetof(UOrionHeroListItem_Matchmaking, Image_Recommended) == 0x000A78, "Member 'UOrionHeroListItem_Matchmaking::Image_Recommended' has a wrong offset!");

// Class OrionUI.OrionHeroStatBar
// 0x0018 (0x0218 - 0x0200)
class UOrionHeroStatBar : public UUserWidget
{
public:
	class UOrionTextBlock*                        Text_StatName;                                     // 0x0200(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionTextBlock*                        Text_StatValue;                                    // 0x0208(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UProgressBar*                           ProgressBar_StatFill;                              // 0x0210(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	void OnStatEmphasized(bool bEmphasize);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"OrionHeroStatBar">();
	}
	static class UOrionHeroStatBar* GetDefaultObj()
	{
		return GetDefaultObjImpl<UOrionHeroStatBar>();
	}
};
static_assert(alignof(UOrionHeroStatBar) == 0x000008, "Wrong alignment on UOrionHeroStatBar");
static_assert(sizeof(UOrionHeroStatBar) == 0x000218, "Wrong size on UOrionHeroStatBar");
static_assert(offsetof(UOrionHeroStatBar, Text_StatName) == 0x000200, "Member 'UOrionHeroStatBar::Text_StatName' has a wrong offset!");
static_assert(offsetof(UOrionHeroStatBar, Text_StatValue) == 0x000208, "Member 'UOrionHeroStatBar::Text_StatValue' has a wrong offset!");
static_assert(offsetof(UOrionHeroStatBar, ProgressBar_StatFill) == 0x000210, "Member 'UOrionHeroStatBar::ProgressBar_StatFill' has a wrong offset!");

// Class OrionUI.OrionHeroTooltipPositionEntry
// 0x0010 (0x0210 - 0x0200)
class UOrionHeroTooltipPositionEntry : public UUserWidget
{
public:
	class UImage*                                 Image_PositionIcon;                                // 0x0200(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UTextBlock*                             Text_PositionName;                                 // 0x0208(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"OrionHeroTooltipPositionEntry">();
	}
	static class UOrionHeroTooltipPositionEntry* GetDefaultObj()
	{
		return GetDefaultObjImpl<UOrionHeroTooltipPositionEntry>();
	}
};
static_assert(alignof(UOrionHeroTooltipPositionEntry) == 0x000008, "Wrong alignment on UOrionHeroTooltipPositionEntry");
static_assert(sizeof(UOrionHeroTooltipPositionEntry) == 0x000210, "Wrong size on UOrionHeroTooltipPositionEntry");
static_assert(offsetof(UOrionHeroTooltipPositionEntry, Image_PositionIcon) == 0x000200, "Member 'UOrionHeroTooltipPositionEntry::Image_PositionIcon' has a wrong offset!");
static_assert(offsetof(UOrionHeroTooltipPositionEntry, Text_PositionName) == 0x000208, "Member 'UOrionHeroTooltipPositionEntry::Text_PositionName' has a wrong offset!");

// Class OrionUI.OrionHeroTooltip
// 0x00B0 (0x03E0 - 0x0330)
class UOrionHeroTooltip : public UOrionTooltipBase
{
public:
	class UOrionHeroData*                         HeroData;                                          // 0x0330(0x0008)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class UOrionHeroStatBar>          StatBarClass;                                      // 0x0338(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TMap<EOrionHeroStat, class UOrionHeroStatBar*> StatBarsByType;                                    // 0x0340(0x0050)(ExportObject, ZeroConstructor, Transient, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	uint8                                         Pad_390[0x8];                                      // 0x0390(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	class UOrionTextBlock*                        Text_HeroName;                                     // 0x0398(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionTextBlock*                        Text_HeroRole;                                     // 0x03A0(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionTextBlock*                        Text_Difficulty;                                   // 0x03A8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionTextBlock*                        Text_LockedMessage;                                // 0x03B0(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UVerticalBox*                           VBox_StatBars;                                     // 0x03B8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionMasteryRankDisplay*               Widget_RankDisplay;                                // 0x03C0(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionMasteryLevelDisplay*              Widget_LevelDisplay;                               // 0x03C8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionDynamicEntryBox*                  DynamicEntryBox_Positions;                         // 0x03D0(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_3D8[0x8];                                      // 0x03D8(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void OnHeroDataSet(EOrionHeroRankTier RankTier, EOrionHeroTooltipStatus Status);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"OrionHeroTooltip">();
	}
	static class UOrionHeroTooltip* GetDefaultObj()
	{
		return GetDefaultObjImpl<UOrionHeroTooltip>();
	}
};
static_assert(alignof(UOrionHeroTooltip) == 0x000008, "Wrong alignment on UOrionHeroTooltip");
static_assert(sizeof(UOrionHeroTooltip) == 0x0003E0, "Wrong size on UOrionHeroTooltip");
static_assert(offsetof(UOrionHeroTooltip, HeroData) == 0x000330, "Member 'UOrionHeroTooltip::HeroData' has a wrong offset!");
static_assert(offsetof(UOrionHeroTooltip, StatBarClass) == 0x000338, "Member 'UOrionHeroTooltip::StatBarClass' has a wrong offset!");
static_assert(offsetof(UOrionHeroTooltip, StatBarsByType) == 0x000340, "Member 'UOrionHeroTooltip::StatBarsByType' has a wrong offset!");
static_assert(offsetof(UOrionHeroTooltip, Text_HeroName) == 0x000398, "Member 'UOrionHeroTooltip::Text_HeroName' has a wrong offset!");
static_assert(offsetof(UOrionHeroTooltip, Text_HeroRole) == 0x0003A0, "Member 'UOrionHeroTooltip::Text_HeroRole' has a wrong offset!");
static_assert(offsetof(UOrionHeroTooltip, Text_Difficulty) == 0x0003A8, "Member 'UOrionHeroTooltip::Text_Difficulty' has a wrong offset!");
static_assert(offsetof(UOrionHeroTooltip, Text_LockedMessage) == 0x0003B0, "Member 'UOrionHeroTooltip::Text_LockedMessage' has a wrong offset!");
static_assert(offsetof(UOrionHeroTooltip, VBox_StatBars) == 0x0003B8, "Member 'UOrionHeroTooltip::VBox_StatBars' has a wrong offset!");
static_assert(offsetof(UOrionHeroTooltip, Widget_RankDisplay) == 0x0003C0, "Member 'UOrionHeroTooltip::Widget_RankDisplay' has a wrong offset!");
static_assert(offsetof(UOrionHeroTooltip, Widget_LevelDisplay) == 0x0003C8, "Member 'UOrionHeroTooltip::Widget_LevelDisplay' has a wrong offset!");
static_assert(offsetof(UOrionHeroTooltip, DynamicEntryBox_Positions) == 0x0003D0, "Member 'UOrionHeroTooltip::DynamicEntryBox_Positions' has a wrong offset!");

// Class OrionUI.OrionScoreboardItemizationSummary
// 0x0048 (0x0300 - 0x02B8)
class UOrionScoreboardItemizationSummary final : public UOrionUserWidgetBase
{
public:
	uint8                                         Pad_2B8[0x10];                                     // 0x02B8(0x0010)(Fixing Size After Last Property [ Dumper-7 ])
	class UOrionTextBlock*                        Text_KDA;                                          // 0x02C8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionTextBlock*                        Text_NumActiveDexPips;                             // 0x02D0(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionTextBlock*                        Text_NumActiveVitPips;                             // 0x02D8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionTextBlock*                        Text_NumActiveIntPips;                             // 0x02E0(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionDynamicEntryBox*                  EntryBox_Gems;                                     // 0x02E8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionDynamicEntryBox*                  EntryBox_EquippedCards;                            // 0x02F0(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_2F8[0x8];                                      // 0x02F8(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void OnPlayerInfoSet(bool bIsLocalPlayer);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"OrionScoreboardItemizationSummary">();
	}
	static class UOrionScoreboardItemizationSummary* GetDefaultObj()
	{
		return GetDefaultObjImpl<UOrionScoreboardItemizationSummary>();
	}
};
static_assert(alignof(UOrionScoreboardItemizationSummary) == 0x000008, "Wrong alignment on UOrionScoreboardItemizationSummary");
static_assert(sizeof(UOrionScoreboardItemizationSummary) == 0x000300, "Wrong size on UOrionScoreboardItemizationSummary");
static_assert(offsetof(UOrionScoreboardItemizationSummary, Text_KDA) == 0x0002C8, "Member 'UOrionScoreboardItemizationSummary::Text_KDA' has a wrong offset!");
static_assert(offsetof(UOrionScoreboardItemizationSummary, Text_NumActiveDexPips) == 0x0002D0, "Member 'UOrionScoreboardItemizationSummary::Text_NumActiveDexPips' has a wrong offset!");
static_assert(offsetof(UOrionScoreboardItemizationSummary, Text_NumActiveVitPips) == 0x0002D8, "Member 'UOrionScoreboardItemizationSummary::Text_NumActiveVitPips' has a wrong offset!");
static_assert(offsetof(UOrionScoreboardItemizationSummary, Text_NumActiveIntPips) == 0x0002E0, "Member 'UOrionScoreboardItemizationSummary::Text_NumActiveIntPips' has a wrong offset!");
static_assert(offsetof(UOrionScoreboardItemizationSummary, EntryBox_Gems) == 0x0002E8, "Member 'UOrionScoreboardItemizationSummary::EntryBox_Gems' has a wrong offset!");
static_assert(offsetof(UOrionScoreboardItemizationSummary, EntryBox_EquippedCards) == 0x0002F0, "Member 'UOrionScoreboardItemizationSummary::EntryBox_EquippedCards' has a wrong offset!");

// Class OrionUI.OrionHomeScreen
// 0x0018 (0x0460 - 0x0448)
class UOrionHomeScreen final : public UOrionActivatableWidget
{
public:
	class UOrionCMSDisplayWidget*                 CMS_Display;                                       // 0x0448(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionFeaturedHeroWidget*               FeaturedHero_Widget;                               // 0x0450(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_458[0x8];                                      // 0x0458(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void DynamicHandleFrontEndContentFlowComplete();
	void DynamicHandleStoreCatalogChanged();
	void OnFrontEndContentFlowComplete();
	void UpdateScreenContent();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"OrionHomeScreen">();
	}
	static class UOrionHomeScreen* GetDefaultObj()
	{
		return GetDefaultObjImpl<UOrionHomeScreen>();
	}
};
static_assert(alignof(UOrionHomeScreen) == 0x000008, "Wrong alignment on UOrionHomeScreen");
static_assert(sizeof(UOrionHomeScreen) == 0x000460, "Wrong size on UOrionHomeScreen");
static_assert(offsetof(UOrionHomeScreen, CMS_Display) == 0x000448, "Member 'UOrionHomeScreen::CMS_Display' has a wrong offset!");
static_assert(offsetof(UOrionHomeScreen, FeaturedHero_Widget) == 0x000450, "Member 'UOrionHomeScreen::FeaturedHero_Widget' has a wrong offset!");

// Class OrionUI.OrionHomeTileCarousel
// 0x0058 (0x0310 - 0x02B8)
class UOrionHomeTileCarousel final : public UOrionUserWidgetBase
{
public:
	int32                                         CarouselScrollInSeconds;                           // 0x02B8(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_2BC[0x4];                                      // 0x02BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateSound                            PreviousButtonSound;                               // 0x02C0(0x0018)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, Protected, NativeAccessSpecifierProtected)
	struct FSlateSound                            NextButtonSound;                                   // 0x02D8(0x0018)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, Protected, NativeAccessSpecifierProtected)
	EOrionUIAnalyticsTrackingLevel                CMSTileImpressionTrackingLevel;                    // 0x02F0(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_2F1[0x7];                                      // 0x02F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UOrionWidgetCarousel*                   Carousel;                                          // 0x02F8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UButton*                                NextPageButton;                                    // 0x0300(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UButton*                                PreviousPageButton;                                // 0x0308(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	void FireTileImpressionEvent();
	void NextPage();
	void OnHideNavigationDisplay();
	void OnShowNavigationDisplay();
	void PreviousPage();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"OrionHomeTileCarousel">();
	}
	static class UOrionHomeTileCarousel* GetDefaultObj()
	{
		return GetDefaultObjImpl<UOrionHomeTileCarousel>();
	}
};
static_assert(alignof(UOrionHomeTileCarousel) == 0x000008, "Wrong alignment on UOrionHomeTileCarousel");
static_assert(sizeof(UOrionHomeTileCarousel) == 0x000310, "Wrong size on UOrionHomeTileCarousel");
static_assert(offsetof(UOrionHomeTileCarousel, CarouselScrollInSeconds) == 0x0002B8, "Member 'UOrionHomeTileCarousel::CarouselScrollInSeconds' has a wrong offset!");
static_assert(offsetof(UOrionHomeTileCarousel, PreviousButtonSound) == 0x0002C0, "Member 'UOrionHomeTileCarousel::PreviousButtonSound' has a wrong offset!");
static_assert(offsetof(UOrionHomeTileCarousel, NextButtonSound) == 0x0002D8, "Member 'UOrionHomeTileCarousel::NextButtonSound' has a wrong offset!");
static_assert(offsetof(UOrionHomeTileCarousel, CMSTileImpressionTrackingLevel) == 0x0002F0, "Member 'UOrionHomeTileCarousel::CMSTileImpressionTrackingLevel' has a wrong offset!");
static_assert(offsetof(UOrionHomeTileCarousel, Carousel) == 0x0002F8, "Member 'UOrionHomeTileCarousel::Carousel' has a wrong offset!");
static_assert(offsetof(UOrionHomeTileCarousel, NextPageButton) == 0x000300, "Member 'UOrionHomeTileCarousel::NextPageButton' has a wrong offset!");
static_assert(offsetof(UOrionHomeTileCarousel, PreviousPageButton) == 0x000308, "Member 'UOrionHomeTileCarousel::PreviousPageButton' has a wrong offset!");

// Class OrionUI.OrionHotKeyPanel
// 0x0020 (0x0310 - 0x02F0)
class UOrionHotKeyPanel final : public UOrionHUDWidgetBase
{
public:
	float                                         HideSuggestionTextSeconds;                         // 0x02F0(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_2F4[0xC];                                      // 0x02F4(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	class UOrionTextBlock*                        Text_TurnOffTip;                                   // 0x0300(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_308[0x8];                                      // 0x0308(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"OrionHotKeyPanel">();
	}
	static class UOrionHotKeyPanel* GetDefaultObj()
	{
		return GetDefaultObjImpl<UOrionHotKeyPanel>();
	}
};
static_assert(alignof(UOrionHotKeyPanel) == 0x000008, "Wrong alignment on UOrionHotKeyPanel");
static_assert(sizeof(UOrionHotKeyPanel) == 0x000310, "Wrong size on UOrionHotKeyPanel");
static_assert(offsetof(UOrionHotKeyPanel, HideSuggestionTextSeconds) == 0x0002F0, "Member 'UOrionHotKeyPanel::HideSuggestionTextSeconds' has a wrong offset!");
static_assert(offsetof(UOrionHotKeyPanel, Text_TurnOffTip) == 0x000300, "Member 'UOrionHotKeyPanel::Text_TurnOffTip' has a wrong offset!");

// Class OrionUI.OrionHUDCard
// 0x0088 (0x0340 - 0x02B8)
class UOrionHUDCard final : public UOrionUserWidgetBase
{
public:
	uint8                                         Pad_2B8[0x10];                                     // 0x02B8(0x0010)(Fixing Size After Last Property [ Dumper-7 ])
	TSubclassOf<class UOrionCardTooltip>          CardTooltipClass;                                  // 0x02C8(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_2D0[0x38];                                     // 0x02D0(0x0038)(Fixing Size After Last Property [ Dumper-7 ])
	class UOrionCardWidget*                       Card_Widget;                                       // 0x0308(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionInputVisualizer*                  InputVis_ActivationKey;                            // 0x0310(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionTextBlock*                        Text_Cooldown;                                     // 0x0318(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionTextBlock*                        Text_ManaCost;                                     // 0x0320(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionTextBlock*                        Text_AbilityName;                                  // 0x0328(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionTextBlock*                        Text_EffectStackCount;                             // 0x0330(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_338[0x8];                                      // 0x0338(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void NotifyRemovalAnimComplete();
	void OnCardEquipped(bool bIsActivatable);
	void OnEffectStackCountChanged(int32 NumStacks);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"OrionHUDCard">();
	}
	static class UOrionHUDCard* GetDefaultObj()
	{
		return GetDefaultObjImpl<UOrionHUDCard>();
	}
};
static_assert(alignof(UOrionHUDCard) == 0x000008, "Wrong alignment on UOrionHUDCard");
static_assert(sizeof(UOrionHUDCard) == 0x000340, "Wrong size on UOrionHUDCard");
static_assert(offsetof(UOrionHUDCard, CardTooltipClass) == 0x0002C8, "Member 'UOrionHUDCard::CardTooltipClass' has a wrong offset!");
static_assert(offsetof(UOrionHUDCard, Card_Widget) == 0x000308, "Member 'UOrionHUDCard::Card_Widget' has a wrong offset!");
static_assert(offsetof(UOrionHUDCard, InputVis_ActivationKey) == 0x000310, "Member 'UOrionHUDCard::InputVis_ActivationKey' has a wrong offset!");
static_assert(offsetof(UOrionHUDCard, Text_Cooldown) == 0x000318, "Member 'UOrionHUDCard::Text_Cooldown' has a wrong offset!");
static_assert(offsetof(UOrionHUDCard, Text_ManaCost) == 0x000320, "Member 'UOrionHUDCard::Text_ManaCost' has a wrong offset!");
static_assert(offsetof(UOrionHUDCard, Text_AbilityName) == 0x000328, "Member 'UOrionHUDCard::Text_AbilityName' has a wrong offset!");
static_assert(offsetof(UOrionHUDCard, Text_EffectStackCount) == 0x000330, "Member 'UOrionHUDCard::Text_EffectStackCount' has a wrong offset!");

// Class OrionUI.OrionRewardProgressBar
// 0x0138 (0x03F0 - 0x02B8)
class UOrionRewardProgressBar final : public UOrionUserWidgetBase
{
public:
	uint8                                         Pad_2B8[0xC8];                                     // 0x02B8(0x00C8)(Fixing Size After Last Property [ Dumper-7 ])
	TSubclassOf<class UOrionRewardTooltip>        RewardTooltipClass;                                // 0x0380(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         RewardEntryScale;                                  // 0x0388(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         RewardEarnDelay;                                   // 0x038C(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         BarResetAnimDelay;                                 // 0x0390(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_394[0x14];                                     // 0x0394(0x0014)(Fixing Size After Last Property [ Dumper-7 ])
	UMulticastDelegateProperty_                   OnProgressBarFilled;                               // 0x03A8(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPrivate)
	UMulticastDelegateProperty_                   OnProgressFullyCompleted;                          // 0x03B8(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPrivate)
	UMulticastDelegateProperty_                   OnProgressResetPostFanfare;                        // 0x03C8(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPrivate)
	class UProgressBar*                           Progress_TopBar;                                   // 0x03D8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UProgressBar*                           Progress_BottomBar;                                // 0x03E0(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionDynamicEntryBox*                  EntryBox_Rewards;                                  // 0x03E8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	void OnBarFilled(bool bImmediate);
	void OnFanfaresCompleted(bool bImmediate, bool bWasProgressReset);
	void SetProgressBarColorAndOpacity(const struct FLinearColor& InColorAndOpacity);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"OrionRewardProgressBar">();
	}
	static class UOrionRewardProgressBar* GetDefaultObj()
	{
		return GetDefaultObjImpl<UOrionRewardProgressBar>();
	}
};
static_assert(alignof(UOrionRewardProgressBar) == 0x000008, "Wrong alignment on UOrionRewardProgressBar");
static_assert(sizeof(UOrionRewardProgressBar) == 0x0003F0, "Wrong size on UOrionRewardProgressBar");
static_assert(offsetof(UOrionRewardProgressBar, RewardTooltipClass) == 0x000380, "Member 'UOrionRewardProgressBar::RewardTooltipClass' has a wrong offset!");
static_assert(offsetof(UOrionRewardProgressBar, RewardEntryScale) == 0x000388, "Member 'UOrionRewardProgressBar::RewardEntryScale' has a wrong offset!");
static_assert(offsetof(UOrionRewardProgressBar, RewardEarnDelay) == 0x00038C, "Member 'UOrionRewardProgressBar::RewardEarnDelay' has a wrong offset!");
static_assert(offsetof(UOrionRewardProgressBar, BarResetAnimDelay) == 0x000390, "Member 'UOrionRewardProgressBar::BarResetAnimDelay' has a wrong offset!");
static_assert(offsetof(UOrionRewardProgressBar, OnProgressBarFilled) == 0x0003A8, "Member 'UOrionRewardProgressBar::OnProgressBarFilled' has a wrong offset!");
static_assert(offsetof(UOrionRewardProgressBar, OnProgressFullyCompleted) == 0x0003B8, "Member 'UOrionRewardProgressBar::OnProgressFullyCompleted' has a wrong offset!");
static_assert(offsetof(UOrionRewardProgressBar, OnProgressResetPostFanfare) == 0x0003C8, "Member 'UOrionRewardProgressBar::OnProgressResetPostFanfare' has a wrong offset!");
static_assert(offsetof(UOrionRewardProgressBar, Progress_TopBar) == 0x0003D8, "Member 'UOrionRewardProgressBar::Progress_TopBar' has a wrong offset!");
static_assert(offsetof(UOrionRewardProgressBar, Progress_BottomBar) == 0x0003E0, "Member 'UOrionRewardProgressBar::Progress_BottomBar' has a wrong offset!");
static_assert(offsetof(UOrionRewardProgressBar, EntryBox_Rewards) == 0x0003E8, "Member 'UOrionRewardProgressBar::EntryBox_Rewards' has a wrong offset!");

// Class OrionUI.OrionHUDGold
// 0x0010 (0x0300 - 0x02F0)
class UOrionHUDGold final : public UOrionHUDWidgetBase
{
public:
	uint8                                         Pad_2F0[0x4];                                      // 0x02F0(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         SpendGoldThreshold;                                // 0x02F4(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UOrionTextBlock*                        Text_GoldAmount;                                   // 0x02F8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	void HandleCardXPUpdate(float NewGold, float MaxGold);
	void HandleDamageUpdate(const struct FOrionUIDamageEventInfo& UIDamageEventInfo);
	void InitInHUD(class UOrionBaseHUDWidget* InHUDWidget);
	void OnGoldReceived(int32 Amount);
	void OnGoldSpent();
	void OnThresholdPassed();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"OrionHUDGold">();
	}
	static class UOrionHUDGold* GetDefaultObj()
	{
		return GetDefaultObjImpl<UOrionHUDGold>();
	}
};
static_assert(alignof(UOrionHUDGold) == 0x000008, "Wrong alignment on UOrionHUDGold");
static_assert(sizeof(UOrionHUDGold) == 0x000300, "Wrong size on UOrionHUDGold");
static_assert(offsetof(UOrionHUDGold, SpendGoldThreshold) == 0x0002F4, "Member 'UOrionHUDGold::SpendGoldThreshold' has a wrong offset!");
static_assert(offsetof(UOrionHUDGold, Text_GoldAmount) == 0x0002F8, "Member 'UOrionHUDGold::Text_GoldAmount' has a wrong offset!");

// Class OrionUI.OrionHUDInfoFeedBase
// 0x0020 (0x0310 - 0x02F0)
class UOrionHUDInfoFeedBase : public UOrionHUDWidgetBase
{
public:
	float                                         DefaultEntryLifetime;                              // 0x02F0(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                         MaxConcurrentEntries;                              // 0x02F4(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_2F8[0x8];                                      // 0x02F8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	class UOrionDynamicEntryBox*                  EntryBox_FeedEntries;                              // 0x0300(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_308[0x8];                                      // 0x0308(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"OrionHUDInfoFeedBase">();
	}
	static class UOrionHUDInfoFeedBase* GetDefaultObj()
	{
		return GetDefaultObjImpl<UOrionHUDInfoFeedBase>();
	}
};
static_assert(alignof(UOrionHUDInfoFeedBase) == 0x000008, "Wrong alignment on UOrionHUDInfoFeedBase");
static_assert(sizeof(UOrionHUDInfoFeedBase) == 0x000310, "Wrong size on UOrionHUDInfoFeedBase");
static_assert(offsetof(UOrionHUDInfoFeedBase, DefaultEntryLifetime) == 0x0002F0, "Member 'UOrionHUDInfoFeedBase::DefaultEntryLifetime' has a wrong offset!");
static_assert(offsetof(UOrionHUDInfoFeedBase, MaxConcurrentEntries) == 0x0002F4, "Member 'UOrionHUDInfoFeedBase::MaxConcurrentEntries' has a wrong offset!");
static_assert(offsetof(UOrionHUDInfoFeedBase, EntryBox_FeedEntries) == 0x000300, "Member 'UOrionHUDInfoFeedBase::EntryBox_FeedEntries' has a wrong offset!");

// Class OrionUI.OrionHUDItemizationDisplay
// 0x0030 (0x0320 - 0x02F0)
class UOrionHUDItemizationDisplay final : public UOrionHUDWidgetBase
{
public:
	uint8                                         Pad_2F0[0x8];                                      // 0x02F0(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	class UOrionHUDCard*                          Card_1;                                            // 0x02F8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionHUDCard*                          Card_2;                                            // 0x0300(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionHUDCard*                          Card_3;                                            // 0x0308(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionDynamicEntryBox*                  EntryBox_Gems;                                     // 0x0310(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_318[0x8];                                      // 0x0318(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"OrionHUDItemizationDisplay">();
	}
	static class UOrionHUDItemizationDisplay* GetDefaultObj()
	{
		return GetDefaultObjImpl<UOrionHUDItemizationDisplay>();
	}
};
static_assert(alignof(UOrionHUDItemizationDisplay) == 0x000008, "Wrong alignment on UOrionHUDItemizationDisplay");
static_assert(sizeof(UOrionHUDItemizationDisplay) == 0x000320, "Wrong size on UOrionHUDItemizationDisplay");
static_assert(offsetof(UOrionHUDItemizationDisplay, Card_1) == 0x0002F8, "Member 'UOrionHUDItemizationDisplay::Card_1' has a wrong offset!");
static_assert(offsetof(UOrionHUDItemizationDisplay, Card_2) == 0x000300, "Member 'UOrionHUDItemizationDisplay::Card_2' has a wrong offset!");
static_assert(offsetof(UOrionHUDItemizationDisplay, Card_3) == 0x000308, "Member 'UOrionHUDItemizationDisplay::Card_3' has a wrong offset!");
static_assert(offsetof(UOrionHUDItemizationDisplay, EntryBox_Gems) == 0x000310, "Member 'UOrionHUDItemizationDisplay::EntryBox_Gems' has a wrong offset!");

// Class OrionUI.OrionSimpleAbilityWidget_FullDescription
// 0x0010 (0x0228 - 0x0218)
class UOrionSimpleAbilityWidget_FullDescription : public UOrionSimpleAbilityWidget
{
public:
	class UOrionRichText*                         RichText_Stats;                                    // 0x0218(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionRichText*                         RichText_Description;                              // 0x0220(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"OrionSimpleAbilityWidget_FullDescription">();
	}
	static class UOrionSimpleAbilityWidget_FullDescription* GetDefaultObj()
	{
		return GetDefaultObjImpl<UOrionSimpleAbilityWidget_FullDescription>();
	}
};
static_assert(alignof(UOrionSimpleAbilityWidget_FullDescription) == 0x000008, "Wrong alignment on UOrionSimpleAbilityWidget_FullDescription");
static_assert(sizeof(UOrionSimpleAbilityWidget_FullDescription) == 0x000228, "Wrong size on UOrionSimpleAbilityWidget_FullDescription");
static_assert(offsetof(UOrionSimpleAbilityWidget_FullDescription, RichText_Stats) == 0x000218, "Member 'UOrionSimpleAbilityWidget_FullDescription::RichText_Stats' has a wrong offset!");
static_assert(offsetof(UOrionSimpleAbilityWidget_FullDescription, RichText_Description) == 0x000220, "Member 'UOrionSimpleAbilityWidget_FullDescription::RichText_Description' has a wrong offset!");

// Class OrionUI.OrionHUDRespawnTimer
// 0x0058 (0x0310 - 0x02B8)
class UOrionHUDRespawnTimer final : public UOrionUserWidgetBase
{
public:
	class UMaterialInstanceDynamic*               TimerMID;                                          // 0x02B8(0x0008)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextBlock*                             TimerText;                                         // 0x02C0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_2C8[0x30];                                     // 0x02C8(0x0030)(Fixing Size After Last Property [ Dumper-7 ])
	class UOrionRichText*                         RichText_CameraMode;                               // 0x02F8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionRichText*                         RichText_CycleCameras;                             // 0x0300(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionRichText*                         RichText_OpenCardShop;                             // 0x0308(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	void HideWidget();
	void SetTextVisibility(ESlateVisibility TextVisibility);
	void ShowWidget();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"OrionHUDRespawnTimer">();
	}
	static class UOrionHUDRespawnTimer* GetDefaultObj()
	{
		return GetDefaultObjImpl<UOrionHUDRespawnTimer>();
	}
};
static_assert(alignof(UOrionHUDRespawnTimer) == 0x000008, "Wrong alignment on UOrionHUDRespawnTimer");
static_assert(sizeof(UOrionHUDRespawnTimer) == 0x000310, "Wrong size on UOrionHUDRespawnTimer");
static_assert(offsetof(UOrionHUDRespawnTimer, TimerMID) == 0x0002B8, "Member 'UOrionHUDRespawnTimer::TimerMID' has a wrong offset!");
static_assert(offsetof(UOrionHUDRespawnTimer, TimerText) == 0x0002C0, "Member 'UOrionHUDRespawnTimer::TimerText' has a wrong offset!");
static_assert(offsetof(UOrionHUDRespawnTimer, RichText_CameraMode) == 0x0002F8, "Member 'UOrionHUDRespawnTimer::RichText_CameraMode' has a wrong offset!");
static_assert(offsetof(UOrionHUDRespawnTimer, RichText_CycleCameras) == 0x000300, "Member 'UOrionHUDRespawnTimer::RichText_CycleCameras' has a wrong offset!");
static_assert(offsetof(UOrionHUDRespawnTimer, RichText_OpenCardShop) == 0x000308, "Member 'UOrionHUDRespawnTimer::RichText_OpenCardShop' has a wrong offset!");

// Class OrionUI.OrionHUDWidget
// 0x0250 (0x0510 - 0x02C0)
class UOrionHUDWidget : public UOrionBaseHUDWidget
{
public:
	struct FOrionHUDWidgetEntry                   HUDWidgets[0x22];                                  // 0x02C0(0x0010)(Edit, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	class UScaleBox*                              ScaleBox_GlobalUIScale;                            // 0x04E0(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UScaleBox*                              ScaleBox_IndicatorScale;                           // 0x04E8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UInvalidationBox*                       MainInvalidationBox;                               // 0x04F0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UOrionLazyImage*                        LazyImage_HeroPortrait;                            // 0x04F8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class FName>                           AnimatingWidgetNames;                              // 0x0500(0x0010)(ZeroConstructor, Protected, NativeAccessSpecifierProtected)

public:
	void HideKillCamWidgets();
	void OnFadeHUDIn_BlueprintEvent(bool bFadeFast);
	void OnFadeHUDOut_BlueprintEvent(bool bFadeFast);
	void OnFlashOutOfRangeIndicator();
	void OnHideKillCam_BlueprintEvent(EOrionHUDShowKillCamMode Mode);
	void OnMatchEnd_BlueprintEvent();
	void OnShowKillCam_BlueprintEvent(EOrionHUDShowKillCamMode Mode);
	void SetHUDWidget(EOrionHUDWidgetType WidgetType, class UWidget* Widget);
	void SetWidgetVisibilityDuringDeath(bool bIsPlayerDead);
	void ShowKillCamWidgets();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"OrionHUDWidget">();
	}
	static class UOrionHUDWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UOrionHUDWidget>();
	}
};
static_assert(alignof(UOrionHUDWidget) == 0x000008, "Wrong alignment on UOrionHUDWidget");
static_assert(sizeof(UOrionHUDWidget) == 0x000510, "Wrong size on UOrionHUDWidget");
static_assert(offsetof(UOrionHUDWidget, HUDWidgets) == 0x0002C0, "Member 'UOrionHUDWidget::HUDWidgets' has a wrong offset!");
static_assert(offsetof(UOrionHUDWidget, ScaleBox_GlobalUIScale) == 0x0004E0, "Member 'UOrionHUDWidget::ScaleBox_GlobalUIScale' has a wrong offset!");
static_assert(offsetof(UOrionHUDWidget, ScaleBox_IndicatorScale) == 0x0004E8, "Member 'UOrionHUDWidget::ScaleBox_IndicatorScale' has a wrong offset!");
static_assert(offsetof(UOrionHUDWidget, MainInvalidationBox) == 0x0004F0, "Member 'UOrionHUDWidget::MainInvalidationBox' has a wrong offset!");
static_assert(offsetof(UOrionHUDWidget, LazyImage_HeroPortrait) == 0x0004F8, "Member 'UOrionHUDWidget::LazyImage_HeroPortrait' has a wrong offset!");
static_assert(offsetof(UOrionHUDWidget, AnimatingWidgetNames) == 0x000500, "Member 'UOrionHUDWidget::AnimatingWidgetNames' has a wrong offset!");

// Class OrionUI.OrionHUDWidget_Arcade
// 0x0010 (0x0520 - 0x0510)
class UOrionHUDWidget_Arcade final : public UOrionHUDWidget
{
public:
	class UOrionArcadeRoundPrompt*                RoundPromptWidget;                                 // 0x0510(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_518[0x8];                                      // 0x0518(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void OnStartCountdown();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"OrionHUDWidget_Arcade">();
	}
	static class UOrionHUDWidget_Arcade* GetDefaultObj()
	{
		return GetDefaultObjImpl<UOrionHUDWidget_Arcade>();
	}
};
static_assert(alignof(UOrionHUDWidget_Arcade) == 0x000008, "Wrong alignment on UOrionHUDWidget_Arcade");
static_assert(sizeof(UOrionHUDWidget_Arcade) == 0x000520, "Wrong size on UOrionHUDWidget_Arcade");
static_assert(offsetof(UOrionHUDWidget_Arcade, RoundPromptWidget) == 0x000510, "Member 'UOrionHUDWidget_Arcade::RoundPromptWidget' has a wrong offset!");

// Class OrionUI.OrionInfoPanel
// 0x00B8 (0x0370 - 0x02B8)
class UOrionInfoPanel final : public UOrionUserWidgetBase
{
public:
	class UOrionAbilitySystemComponent*           BaseASC;                                           // 0x02B8(0x0008)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<class UOrionInfoPanelStatRow*>         StatRows;                                          // 0x02C0(0x0010)(ExportObject, ZeroConstructor, Transient, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	TArray<class UOrionInfoPanelAbilityRow*>      CardAbilityRows;                                   // 0x02D0(0x0010)(ExportObject, ZeroConstructor, Transient, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	TArray<class UOrionInfoPanelAbilityRow*>      GemAbilityRows;                                    // 0x02E0(0x0010)(ExportObject, ZeroConstructor, Transient, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	class UOrionInfoPanelStatRow*                 StatRow_0;                                         // 0x02F0(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionInfoPanelStatRow*                 StatRow_1;                                         // 0x02F8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionInfoPanelStatRow*                 StatRow_2;                                         // 0x0300(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionInfoPanelStatRow*                 StatRow_3;                                         // 0x0308(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionInfoPanelStatRow*                 StatRow_4;                                         // 0x0310(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionInfoPanelStatRow*                 StatRow_5;                                         // 0x0318(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionInfoPanelStatRow*                 StatRow_6;                                         // 0x0320(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionInfoPanelAbilityRow*              CardAbilityRow_0;                                  // 0x0328(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionInfoPanelAbilityRow*              CardAbilityRow_1;                                  // 0x0330(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionInfoPanelAbilityRow*              CardAbilityRow_2;                                  // 0x0338(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionInfoPanelAbilityRow*              GemAbilityRow_0;                                   // 0x0340(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionInfoPanelAbilityRow*              GemAbilityRow_1;                                   // 0x0348(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionInfoPanelAbilityRow*              GemAbilityRow_2;                                   // 0x0350(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionInfoPanelAbilityRow*              GemAbilityRow_3;                                   // 0x0358(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionInfoPanelAbilityRow*              GemAbilityRow_4;                                   // 0x0360(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionInfoPanelAbilityRow*              GemAbilityRow_5;                                   // 0x0368(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"OrionInfoPanel">();
	}
	static class UOrionInfoPanel* GetDefaultObj()
	{
		return GetDefaultObjImpl<UOrionInfoPanel>();
	}
};
static_assert(alignof(UOrionInfoPanel) == 0x000008, "Wrong alignment on UOrionInfoPanel");
static_assert(sizeof(UOrionInfoPanel) == 0x000370, "Wrong size on UOrionInfoPanel");
static_assert(offsetof(UOrionInfoPanel, BaseASC) == 0x0002B8, "Member 'UOrionInfoPanel::BaseASC' has a wrong offset!");
static_assert(offsetof(UOrionInfoPanel, StatRows) == 0x0002C0, "Member 'UOrionInfoPanel::StatRows' has a wrong offset!");
static_assert(offsetof(UOrionInfoPanel, CardAbilityRows) == 0x0002D0, "Member 'UOrionInfoPanel::CardAbilityRows' has a wrong offset!");
static_assert(offsetof(UOrionInfoPanel, GemAbilityRows) == 0x0002E0, "Member 'UOrionInfoPanel::GemAbilityRows' has a wrong offset!");
static_assert(offsetof(UOrionInfoPanel, StatRow_0) == 0x0002F0, "Member 'UOrionInfoPanel::StatRow_0' has a wrong offset!");
static_assert(offsetof(UOrionInfoPanel, StatRow_1) == 0x0002F8, "Member 'UOrionInfoPanel::StatRow_1' has a wrong offset!");
static_assert(offsetof(UOrionInfoPanel, StatRow_2) == 0x000300, "Member 'UOrionInfoPanel::StatRow_2' has a wrong offset!");
static_assert(offsetof(UOrionInfoPanel, StatRow_3) == 0x000308, "Member 'UOrionInfoPanel::StatRow_3' has a wrong offset!");
static_assert(offsetof(UOrionInfoPanel, StatRow_4) == 0x000310, "Member 'UOrionInfoPanel::StatRow_4' has a wrong offset!");
static_assert(offsetof(UOrionInfoPanel, StatRow_5) == 0x000318, "Member 'UOrionInfoPanel::StatRow_5' has a wrong offset!");
static_assert(offsetof(UOrionInfoPanel, StatRow_6) == 0x000320, "Member 'UOrionInfoPanel::StatRow_6' has a wrong offset!");
static_assert(offsetof(UOrionInfoPanel, CardAbilityRow_0) == 0x000328, "Member 'UOrionInfoPanel::CardAbilityRow_0' has a wrong offset!");
static_assert(offsetof(UOrionInfoPanel, CardAbilityRow_1) == 0x000330, "Member 'UOrionInfoPanel::CardAbilityRow_1' has a wrong offset!");
static_assert(offsetof(UOrionInfoPanel, CardAbilityRow_2) == 0x000338, "Member 'UOrionInfoPanel::CardAbilityRow_2' has a wrong offset!");
static_assert(offsetof(UOrionInfoPanel, GemAbilityRow_0) == 0x000340, "Member 'UOrionInfoPanel::GemAbilityRow_0' has a wrong offset!");
static_assert(offsetof(UOrionInfoPanel, GemAbilityRow_1) == 0x000348, "Member 'UOrionInfoPanel::GemAbilityRow_1' has a wrong offset!");
static_assert(offsetof(UOrionInfoPanel, GemAbilityRow_2) == 0x000350, "Member 'UOrionInfoPanel::GemAbilityRow_2' has a wrong offset!");
static_assert(offsetof(UOrionInfoPanel, GemAbilityRow_3) == 0x000358, "Member 'UOrionInfoPanel::GemAbilityRow_3' has a wrong offset!");
static_assert(offsetof(UOrionInfoPanel, GemAbilityRow_4) == 0x000360, "Member 'UOrionInfoPanel::GemAbilityRow_4' has a wrong offset!");
static_assert(offsetof(UOrionInfoPanel, GemAbilityRow_5) == 0x000368, "Member 'UOrionInfoPanel::GemAbilityRow_5' has a wrong offset!");

// Class OrionUI.OrionRoundGemGrid
// 0x0118 (0x03D0 - 0x02B8)
class UOrionRoundGemGrid final : public UOrionUserWidgetBase
{
public:
	uint8                                         Pad_2B8[0xC8];                                     // 0x02B8(0x00C8)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UOrionDeckBuilderPip*>           Pips;                                              // 0x0380(0x0010)(ExportObject, ZeroConstructor, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	class UOrionDeckBuilderPip*                   CurrentlySelectedPip;                              // 0x0390(0x0008)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_398[0x8];                                      // 0x0398(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	class UOrionTextBlock*                        Text_AttributeName;                                // 0x03A0(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionDeckBuilderPip*                   Pip_0;                                             // 0x03A8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionDeckBuilderPip*                   Pip_1;                                             // 0x03B0(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionDeckBuilderPip*                   Pip_2;                                             // 0x03B8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionDeckBuilderPip*                   Pip_3;                                             // 0x03C0(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionDeckBuilderPip*                   Pip_4;                                             // 0x03C8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	void OnGemRecount(TArray<class UOrionMcpGemItem*>* CurrentGems);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"OrionRoundGemGrid">();
	}
	static class UOrionRoundGemGrid* GetDefaultObj()
	{
		return GetDefaultObjImpl<UOrionRoundGemGrid>();
	}
};
static_assert(alignof(UOrionRoundGemGrid) == 0x000008, "Wrong alignment on UOrionRoundGemGrid");
static_assert(sizeof(UOrionRoundGemGrid) == 0x0003D0, "Wrong size on UOrionRoundGemGrid");
static_assert(offsetof(UOrionRoundGemGrid, Pips) == 0x000380, "Member 'UOrionRoundGemGrid::Pips' has a wrong offset!");
static_assert(offsetof(UOrionRoundGemGrid, CurrentlySelectedPip) == 0x000390, "Member 'UOrionRoundGemGrid::CurrentlySelectedPip' has a wrong offset!");
static_assert(offsetof(UOrionRoundGemGrid, Text_AttributeName) == 0x0003A0, "Member 'UOrionRoundGemGrid::Text_AttributeName' has a wrong offset!");
static_assert(offsetof(UOrionRoundGemGrid, Pip_0) == 0x0003A8, "Member 'UOrionRoundGemGrid::Pip_0' has a wrong offset!");
static_assert(offsetof(UOrionRoundGemGrid, Pip_1) == 0x0003B0, "Member 'UOrionRoundGemGrid::Pip_1' has a wrong offset!");
static_assert(offsetof(UOrionRoundGemGrid, Pip_2) == 0x0003B8, "Member 'UOrionRoundGemGrid::Pip_2' has a wrong offset!");
static_assert(offsetof(UOrionRoundGemGrid, Pip_3) == 0x0003C0, "Member 'UOrionRoundGemGrid::Pip_3' has a wrong offset!");
static_assert(offsetof(UOrionRoundGemGrid, Pip_4) == 0x0003C8, "Member 'UOrionRoundGemGrid::Pip_4' has a wrong offset!");

// Class OrionUI.OrionInfoPanelAbilityRow
// 0x0028 (0x02E0 - 0x02B8)
class UOrionInfoPanelAbilityRow final : public UOrionUserWidgetBase
{
public:
	EAbilitySource                                SourceType;                                        // 0x02B8(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         SourceIndex;                                       // 0x02BC(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2C0[0x8];                                      // 0x02C0(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	class UOrionTextBlock*                        Text_AbilityName;                                  // 0x02C8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionTextBlock*                        Text_AbilityDescription;                           // 0x02D0(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UImage*                                 Image_AbilitySource;                               // 0x02D8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	void HandleDeckEstablished();
	void InitializeActiveState(bool bIsActive);
	void OnAlreadyActivated();
	void OnCardEquipped();
	void OnCardRemoved();
	void OnGemActivated();
	void OnInitializedFromCard();
	void OnInitializedFromGem(const struct FLinearColor& Color);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"OrionInfoPanelAbilityRow">();
	}
	static class UOrionInfoPanelAbilityRow* GetDefaultObj()
	{
		return GetDefaultObjImpl<UOrionInfoPanelAbilityRow>();
	}
};
static_assert(alignof(UOrionInfoPanelAbilityRow) == 0x000008, "Wrong alignment on UOrionInfoPanelAbilityRow");
static_assert(sizeof(UOrionInfoPanelAbilityRow) == 0x0002E0, "Wrong size on UOrionInfoPanelAbilityRow");
static_assert(offsetof(UOrionInfoPanelAbilityRow, SourceType) == 0x0002B8, "Member 'UOrionInfoPanelAbilityRow::SourceType' has a wrong offset!");
static_assert(offsetof(UOrionInfoPanelAbilityRow, SourceIndex) == 0x0002BC, "Member 'UOrionInfoPanelAbilityRow::SourceIndex' has a wrong offset!");
static_assert(offsetof(UOrionInfoPanelAbilityRow, Text_AbilityName) == 0x0002C8, "Member 'UOrionInfoPanelAbilityRow::Text_AbilityName' has a wrong offset!");
static_assert(offsetof(UOrionInfoPanelAbilityRow, Text_AbilityDescription) == 0x0002D0, "Member 'UOrionInfoPanelAbilityRow::Text_AbilityDescription' has a wrong offset!");
static_assert(offsetof(UOrionInfoPanelAbilityRow, Image_AbilitySource) == 0x0002D8, "Member 'UOrionInfoPanelAbilityRow::Image_AbilitySource' has a wrong offset!");

// Class OrionUI.OrionInfoPanelStatRow
// 0x0148 (0x0400 - 0x02B8)
class UOrionInfoPanelStatRow final : public UOrionUserWidgetBase
{
public:
	struct FGameplayAttribute                     Attribute;                                         // 0x02B8(0x0020)(Edit, BlueprintVisible, BlueprintReadOnly, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FGameplayAttribute>             AttributeMultipliers;                              // 0x02D8(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<float>                                 ConstantMultipliers;                               // 0x02E8(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FGameplayAttribute>             AttributeAddends;                                  // 0x02F8(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<float>                                 ConstantAddends;                                   // 0x0308(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	struct FGameplayTagRequirements               SearchTags;                                        // 0x0318(0x0040)(Edit, NativeAccessSpecifierPublic)
	struct FGameplayTagContainer                  TargetTags;                                        // 0x0358(0x0020)(Edit, NativeAccessSpecifierPublic)
	bool                                          bHideWhenUnchanged;                                // 0x0378(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bHideBaseValue;                                    // 0x0379(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bDisplayAsPercentBonus;                            // 0x037A(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_37B[0x5];                                      // 0x037B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture2D*                             DisplayIconOverride;                               // 0x0380(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FText                                   DisplayNameOverride;                               // 0x0388(0x0018)(Edit, NativeAccessSpecifierPublic)
	float                                         MaxValueOverride;                                  // 0x03A0(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         BasePercentOverride;                               // 0x03A4(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UOrionAbilitySystemComponent*           BaseASC;                                           // 0x03A8(0x0008)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_3B0[0x10];                                     // 0x03B0(0x0010)(Fixing Size After Last Property [ Dumper-7 ])
	class UImage*                                 Image_StatIcon;                                    // 0x03C0(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionTextBlock*                        Text_StatName;                                     // 0x03C8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionTextBlock*                        Text_HeroValue;                                    // 0x03D0(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionTextBlock*                        Text_AdditionalBonus;                              // 0x03D8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionTextBlock*                        Text_PotentialBonus;                               // 0x03E0(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UBorder*                                Border_Base;                                       // 0x03E8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UBorder*                                Border_Additional;                                 // 0x03F0(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UBorder*                                Border_Potential;                                  // 0x03F8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	void OnMenuOpenStateChange(EOrionMenuSlotTypes MenuSlot, bool bNewIsOpenState);
	void StatValueChanged();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"OrionInfoPanelStatRow">();
	}
	static class UOrionInfoPanelStatRow* GetDefaultObj()
	{
		return GetDefaultObjImpl<UOrionInfoPanelStatRow>();
	}
};
static_assert(alignof(UOrionInfoPanelStatRow) == 0x000008, "Wrong alignment on UOrionInfoPanelStatRow");
static_assert(sizeof(UOrionInfoPanelStatRow) == 0x000400, "Wrong size on UOrionInfoPanelStatRow");
static_assert(offsetof(UOrionInfoPanelStatRow, Attribute) == 0x0002B8, "Member 'UOrionInfoPanelStatRow::Attribute' has a wrong offset!");
static_assert(offsetof(UOrionInfoPanelStatRow, AttributeMultipliers) == 0x0002D8, "Member 'UOrionInfoPanelStatRow::AttributeMultipliers' has a wrong offset!");
static_assert(offsetof(UOrionInfoPanelStatRow, ConstantMultipliers) == 0x0002E8, "Member 'UOrionInfoPanelStatRow::ConstantMultipliers' has a wrong offset!");
static_assert(offsetof(UOrionInfoPanelStatRow, AttributeAddends) == 0x0002F8, "Member 'UOrionInfoPanelStatRow::AttributeAddends' has a wrong offset!");
static_assert(offsetof(UOrionInfoPanelStatRow, ConstantAddends) == 0x000308, "Member 'UOrionInfoPanelStatRow::ConstantAddends' has a wrong offset!");
static_assert(offsetof(UOrionInfoPanelStatRow, SearchTags) == 0x000318, "Member 'UOrionInfoPanelStatRow::SearchTags' has a wrong offset!");
static_assert(offsetof(UOrionInfoPanelStatRow, TargetTags) == 0x000358, "Member 'UOrionInfoPanelStatRow::TargetTags' has a wrong offset!");
static_assert(offsetof(UOrionInfoPanelStatRow, bHideWhenUnchanged) == 0x000378, "Member 'UOrionInfoPanelStatRow::bHideWhenUnchanged' has a wrong offset!");
static_assert(offsetof(UOrionInfoPanelStatRow, bHideBaseValue) == 0x000379, "Member 'UOrionInfoPanelStatRow::bHideBaseValue' has a wrong offset!");
static_assert(offsetof(UOrionInfoPanelStatRow, bDisplayAsPercentBonus) == 0x00037A, "Member 'UOrionInfoPanelStatRow::bDisplayAsPercentBonus' has a wrong offset!");
static_assert(offsetof(UOrionInfoPanelStatRow, DisplayIconOverride) == 0x000380, "Member 'UOrionInfoPanelStatRow::DisplayIconOverride' has a wrong offset!");
static_assert(offsetof(UOrionInfoPanelStatRow, DisplayNameOverride) == 0x000388, "Member 'UOrionInfoPanelStatRow::DisplayNameOverride' has a wrong offset!");
static_assert(offsetof(UOrionInfoPanelStatRow, MaxValueOverride) == 0x0003A0, "Member 'UOrionInfoPanelStatRow::MaxValueOverride' has a wrong offset!");
static_assert(offsetof(UOrionInfoPanelStatRow, BasePercentOverride) == 0x0003A4, "Member 'UOrionInfoPanelStatRow::BasePercentOverride' has a wrong offset!");
static_assert(offsetof(UOrionInfoPanelStatRow, BaseASC) == 0x0003A8, "Member 'UOrionInfoPanelStatRow::BaseASC' has a wrong offset!");
static_assert(offsetof(UOrionInfoPanelStatRow, Image_StatIcon) == 0x0003C0, "Member 'UOrionInfoPanelStatRow::Image_StatIcon' has a wrong offset!");
static_assert(offsetof(UOrionInfoPanelStatRow, Text_StatName) == 0x0003C8, "Member 'UOrionInfoPanelStatRow::Text_StatName' has a wrong offset!");
static_assert(offsetof(UOrionInfoPanelStatRow, Text_HeroValue) == 0x0003D0, "Member 'UOrionInfoPanelStatRow::Text_HeroValue' has a wrong offset!");
static_assert(offsetof(UOrionInfoPanelStatRow, Text_AdditionalBonus) == 0x0003D8, "Member 'UOrionInfoPanelStatRow::Text_AdditionalBonus' has a wrong offset!");
static_assert(offsetof(UOrionInfoPanelStatRow, Text_PotentialBonus) == 0x0003E0, "Member 'UOrionInfoPanelStatRow::Text_PotentialBonus' has a wrong offset!");
static_assert(offsetof(UOrionInfoPanelStatRow, Border_Base) == 0x0003E8, "Member 'UOrionInfoPanelStatRow::Border_Base' has a wrong offset!");
static_assert(offsetof(UOrionInfoPanelStatRow, Border_Additional) == 0x0003F0, "Member 'UOrionInfoPanelStatRow::Border_Additional' has a wrong offset!");
static_assert(offsetof(UOrionInfoPanelStatRow, Border_Potential) == 0x0003F8, "Member 'UOrionInfoPanelStatRow::Border_Potential' has a wrong offset!");

// Class OrionUI.OrionStatusEffectEntry
// 0x0040 (0x03D0 - 0x0390)
class UOrionStatusEffectEntry final : public UOrionInfoFeedEntryBase
{
public:
	uint8                                         Pad_390[0x8];                                      // 0x0390(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	bool                                          bIsBuff;                                           // 0x0398(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_399[0xF];                                      // 0x0399(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	class UImage*                                 Image_EffectIcon;                                  // 0x03A8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionTextBlock*                        Text_EffectName;                                   // 0x03B0(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UImage*                                 Image_SourceAbilityIcon;                           // 0x03B8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionTextBlock*                        Text_SourceAbilityName;                            // 0x03C0(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionTextBlock*                        Text_StackCount;                                   // 0x03C8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"OrionStatusEffectEntry">();
	}
	static class UOrionStatusEffectEntry* GetDefaultObj()
	{
		return GetDefaultObjImpl<UOrionStatusEffectEntry>();
	}
};
static_assert(alignof(UOrionStatusEffectEntry) == 0x000008, "Wrong alignment on UOrionStatusEffectEntry");
static_assert(sizeof(UOrionStatusEffectEntry) == 0x0003D0, "Wrong size on UOrionStatusEffectEntry");
static_assert(offsetof(UOrionStatusEffectEntry, bIsBuff) == 0x000398, "Member 'UOrionStatusEffectEntry::bIsBuff' has a wrong offset!");
static_assert(offsetof(UOrionStatusEffectEntry, Image_EffectIcon) == 0x0003A8, "Member 'UOrionStatusEffectEntry::Image_EffectIcon' has a wrong offset!");
static_assert(offsetof(UOrionStatusEffectEntry, Text_EffectName) == 0x0003B0, "Member 'UOrionStatusEffectEntry::Text_EffectName' has a wrong offset!");
static_assert(offsetof(UOrionStatusEffectEntry, Image_SourceAbilityIcon) == 0x0003B8, "Member 'UOrionStatusEffectEntry::Image_SourceAbilityIcon' has a wrong offset!");
static_assert(offsetof(UOrionStatusEffectEntry, Text_SourceAbilityName) == 0x0003C0, "Member 'UOrionStatusEffectEntry::Text_SourceAbilityName' has a wrong offset!");
static_assert(offsetof(UOrionStatusEffectEntry, Text_StackCount) == 0x0003C8, "Member 'UOrionStatusEffectEntry::Text_StackCount' has a wrong offset!");

// Class OrionUI.OrionInviteCalloutMenu
// 0x0008 (0x0208 - 0x0200)
class UOrionInviteCalloutMenu final : public UUserWidget
{
public:
	class UOrionListView*                         ListView_InvitableFriends;                         // 0x0200(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"OrionInviteCalloutMenu">();
	}
	static class UOrionInviteCalloutMenu* GetDefaultObj()
	{
		return GetDefaultObjImpl<UOrionInviteCalloutMenu>();
	}
};
static_assert(alignof(UOrionInviteCalloutMenu) == 0x000008, "Wrong alignment on UOrionInviteCalloutMenu");
static_assert(sizeof(UOrionInviteCalloutMenu) == 0x000208, "Wrong size on UOrionInviteCalloutMenu");
static_assert(offsetof(UOrionInviteCalloutMenu, ListView_InvitableFriends) == 0x000200, "Member 'UOrionInviteCalloutMenu::ListView_InvitableFriends' has a wrong offset!");

// Class OrionUI.OrionItemizedCounter
// 0x0090 (0x0400 - 0x0370)
class UOrionItemizedCounter final : public UOrionTimedFillWidget
{
public:
	uint8                                         Pad_370[0x40];                                     // 0x0370(0x0040)(Fixing Size After Last Property [ Dumper-7 ])
	class UOrionMcpItemDefinition*                SubjectItemDefinition;                             // 0x03B0(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                          bAllowBonusDisplay;                                // 0x03B8(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_3B9[0x3];                                      // 0x03B9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         BonusIntroTime;                                    // 0x03BC(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_3C0[0x8];                                      // 0x03C0(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	class UOrionTextBlock*                        Text_ValueType;                                    // 0x03C8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionTextBlock*                        Text_Total;                                        // 0x03D0(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UImage*                                 Image_BonusValueIcon;                              // 0x03D8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionTextBlock*                        Text_BonusValueSource;                             // 0x03E0(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionTextBlock*                        Text_BonusAmount;                                  // 0x03E8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionRewardWidget*                     Reward_ValueTypeIcon;                              // 0x03F0(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_3F8[0x8];                                      // 0x03F8(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void OnShowBonusAmount(int32 BonusAmount);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"OrionItemizedCounter">();
	}
	static class UOrionItemizedCounter* GetDefaultObj()
	{
		return GetDefaultObjImpl<UOrionItemizedCounter>();
	}
};
static_assert(alignof(UOrionItemizedCounter) == 0x000008, "Wrong alignment on UOrionItemizedCounter");
static_assert(sizeof(UOrionItemizedCounter) == 0x000400, "Wrong size on UOrionItemizedCounter");
static_assert(offsetof(UOrionItemizedCounter, SubjectItemDefinition) == 0x0003B0, "Member 'UOrionItemizedCounter::SubjectItemDefinition' has a wrong offset!");
static_assert(offsetof(UOrionItemizedCounter, bAllowBonusDisplay) == 0x0003B8, "Member 'UOrionItemizedCounter::bAllowBonusDisplay' has a wrong offset!");
static_assert(offsetof(UOrionItemizedCounter, BonusIntroTime) == 0x0003BC, "Member 'UOrionItemizedCounter::BonusIntroTime' has a wrong offset!");
static_assert(offsetof(UOrionItemizedCounter, Text_ValueType) == 0x0003C8, "Member 'UOrionItemizedCounter::Text_ValueType' has a wrong offset!");
static_assert(offsetof(UOrionItemizedCounter, Text_Total) == 0x0003D0, "Member 'UOrionItemizedCounter::Text_Total' has a wrong offset!");
static_assert(offsetof(UOrionItemizedCounter, Image_BonusValueIcon) == 0x0003D8, "Member 'UOrionItemizedCounter::Image_BonusValueIcon' has a wrong offset!");
static_assert(offsetof(UOrionItemizedCounter, Text_BonusValueSource) == 0x0003E0, "Member 'UOrionItemizedCounter::Text_BonusValueSource' has a wrong offset!");
static_assert(offsetof(UOrionItemizedCounter, Text_BonusAmount) == 0x0003E8, "Member 'UOrionItemizedCounter::Text_BonusAmount' has a wrong offset!");
static_assert(offsetof(UOrionItemizedCounter, Reward_ValueTypeIcon) == 0x0003F0, "Member 'UOrionItemizedCounter::Reward_ValueTypeIcon' has a wrong offset!");

// Class OrionUI.OrionStateWidget_DraftLobby
// 0x0138 (0x03F0 - 0x02B8)
class UOrionStateWidget_DraftLobby final : public UOrionUIStateWidget
{
public:
	TSubclassOf<class UOrionTutorial>             DraftTutorialClass;                                // 0x02B8(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionBaseButton_Group*                 PositionButtonGroup;                               // 0x02C0(0x0008)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_2C8[0x80];                                     // 0x02C8(0x0080)(Fixing Size After Last Property [ Dumper-7 ])
	class UOrionTutorial*                         DraftTutorial;                                     // 0x0348(0x0008)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_350[0x13];                                     // 0x0350(0x0013)(Fixing Size After Last Property [ Dumper-7 ])
	EOrionUIAnalyticsTrackingLevel                AnalyticsTrackingLevel;                            // 0x0363(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_364[0xC];                                      // 0x0364(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	class UOrionDraftHeroCustomization*           HeroCustomization;                                 // 0x0370(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionDraftMinimap*                     Position_Minimap;                                  // 0x0378(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionDynamicEntryBox*                  EntryBox_SuggestedHeroes;                          // 0x0380(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionDynamicEntryBox*                  EntryBox_PositionWarnings;                         // 0x0388(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionTileView*                         TileView_HeroSelect;                               // 0x0390(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionDynamicEntryBox*                  EntryBox_Positions;                                // 0x0398(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionTextBlock*                        Text_HeroName;                                     // 0x03A0(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionTextBlock*                        Text_FriendlySide;                                 // 0x03A8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionTextBlock*                        Text_EnemySide;                                    // 0x03B0(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionHeroAbilityDisplay*               AbilityDisplay;                                    // 0x03B8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionDefaultButton*                    Button_LockInHero;                                 // 0x03C0(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionDefaultButton*                    Button_Customize;                                  // 0x03C8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionDraftTimer*                       DraftTimer;                                        // 0x03D0(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionDraftTeamRoster*                  Roster_Friendly;                                   // 0x03D8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionDraftTeamRoster*                  Roster_Enemy;                                      // 0x03E0(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionBaseButton*                       Button_SummonTutorial;                             // 0x03E8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	void HandleBannerSelected(class UOrionMcpBannerItem* BannerItem);
	void HandleCustomizeClicked(bool bIsCustomizing);
	void HandleHeroSelected(class UObject* SelectedHero, bool bSelected);
	void HandlePositionSelected(class UOrionBaseButton* Button, int32 Index_0);
	void OnBeginLocalPlayerTurn();
	void OnDraftComplete(bool bSuccess);
	void OnDraftStarted(EOrionTeamMemberType FirstPickerType);
	void OnEndLocalPlayerTurn();
	void OnFirstHeroSelected();
	void OnHeroLockedIn(class UOrionHeroData* HeroData);
	void OnLocalPlayerTurnUpNext();
	void OnLockInButtonEnabledChanged(bool bLockInEnabled);
	void OnLockInFailed();
	void OnPositionSelected(bool bIsFirstSelection);
	void OnTeamSet(EOrionTeam Team);
	void OnTurnComplete(EOrionTeamMemberType FinishedMemberType);
	void OnTurnStarted(EOrionTeamMemberType PickingMemberType);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"OrionStateWidget_DraftLobby">();
	}
	static class UOrionStateWidget_DraftLobby* GetDefaultObj()
	{
		return GetDefaultObjImpl<UOrionStateWidget_DraftLobby>();
	}
};
static_assert(alignof(UOrionStateWidget_DraftLobby) == 0x000008, "Wrong alignment on UOrionStateWidget_DraftLobby");
static_assert(sizeof(UOrionStateWidget_DraftLobby) == 0x0003F0, "Wrong size on UOrionStateWidget_DraftLobby");
static_assert(offsetof(UOrionStateWidget_DraftLobby, DraftTutorialClass) == 0x0002B8, "Member 'UOrionStateWidget_DraftLobby::DraftTutorialClass' has a wrong offset!");
static_assert(offsetof(UOrionStateWidget_DraftLobby, PositionButtonGroup) == 0x0002C0, "Member 'UOrionStateWidget_DraftLobby::PositionButtonGroup' has a wrong offset!");
static_assert(offsetof(UOrionStateWidget_DraftLobby, DraftTutorial) == 0x000348, "Member 'UOrionStateWidget_DraftLobby::DraftTutorial' has a wrong offset!");
static_assert(offsetof(UOrionStateWidget_DraftLobby, AnalyticsTrackingLevel) == 0x000363, "Member 'UOrionStateWidget_DraftLobby::AnalyticsTrackingLevel' has a wrong offset!");
static_assert(offsetof(UOrionStateWidget_DraftLobby, HeroCustomization) == 0x000370, "Member 'UOrionStateWidget_DraftLobby::HeroCustomization' has a wrong offset!");
static_assert(offsetof(UOrionStateWidget_DraftLobby, Position_Minimap) == 0x000378, "Member 'UOrionStateWidget_DraftLobby::Position_Minimap' has a wrong offset!");
static_assert(offsetof(UOrionStateWidget_DraftLobby, EntryBox_SuggestedHeroes) == 0x000380, "Member 'UOrionStateWidget_DraftLobby::EntryBox_SuggestedHeroes' has a wrong offset!");
static_assert(offsetof(UOrionStateWidget_DraftLobby, EntryBox_PositionWarnings) == 0x000388, "Member 'UOrionStateWidget_DraftLobby::EntryBox_PositionWarnings' has a wrong offset!");
static_assert(offsetof(UOrionStateWidget_DraftLobby, TileView_HeroSelect) == 0x000390, "Member 'UOrionStateWidget_DraftLobby::TileView_HeroSelect' has a wrong offset!");
static_assert(offsetof(UOrionStateWidget_DraftLobby, EntryBox_Positions) == 0x000398, "Member 'UOrionStateWidget_DraftLobby::EntryBox_Positions' has a wrong offset!");
static_assert(offsetof(UOrionStateWidget_DraftLobby, Text_HeroName) == 0x0003A0, "Member 'UOrionStateWidget_DraftLobby::Text_HeroName' has a wrong offset!");
static_assert(offsetof(UOrionStateWidget_DraftLobby, Text_FriendlySide) == 0x0003A8, "Member 'UOrionStateWidget_DraftLobby::Text_FriendlySide' has a wrong offset!");
static_assert(offsetof(UOrionStateWidget_DraftLobby, Text_EnemySide) == 0x0003B0, "Member 'UOrionStateWidget_DraftLobby::Text_EnemySide' has a wrong offset!");
static_assert(offsetof(UOrionStateWidget_DraftLobby, AbilityDisplay) == 0x0003B8, "Member 'UOrionStateWidget_DraftLobby::AbilityDisplay' has a wrong offset!");
static_assert(offsetof(UOrionStateWidget_DraftLobby, Button_LockInHero) == 0x0003C0, "Member 'UOrionStateWidget_DraftLobby::Button_LockInHero' has a wrong offset!");
static_assert(offsetof(UOrionStateWidget_DraftLobby, Button_Customize) == 0x0003C8, "Member 'UOrionStateWidget_DraftLobby::Button_Customize' has a wrong offset!");
static_assert(offsetof(UOrionStateWidget_DraftLobby, DraftTimer) == 0x0003D0, "Member 'UOrionStateWidget_DraftLobby::DraftTimer' has a wrong offset!");
static_assert(offsetof(UOrionStateWidget_DraftLobby, Roster_Friendly) == 0x0003D8, "Member 'UOrionStateWidget_DraftLobby::Roster_Friendly' has a wrong offset!");
static_assert(offsetof(UOrionStateWidget_DraftLobby, Roster_Enemy) == 0x0003E0, "Member 'UOrionStateWidget_DraftLobby::Roster_Enemy' has a wrong offset!");
static_assert(offsetof(UOrionStateWidget_DraftLobby, Button_SummonTutorial) == 0x0003E8, "Member 'UOrionStateWidget_DraftLobby::Button_SummonTutorial' has a wrong offset!");

// Class OrionUI.OrionItemPackOpeningScreen
// 0x0050 (0x0498 - 0x0448)
#pragma pack(push, 0x1)
class alignas(0x08) UOrionItemPackOpeningScreen : public UOrionActivatableWidget
{
public:
	class UOrionMcpCardPackItemDefinition*        ActivePack;                                        // 0x0448(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         MinimumOpenDelay;                                  // 0x0450(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_454[0x2C];                                     // 0x0454(0x002C)(Fixing Size After Last Property [ Dumper-7 ])
	class UOrionStorefrontPopup*                  Storefront_GetMorePacks;                           // 0x0480(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UOrionTextBlock*                        Text_PackName;                                     // 0x0488(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UOrionDefaultButton*                    Button_OpenPack;                                   // 0x0490(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	void OnActivePackSet();
	void OnBeginPackOpen();
	void OnPackOpened(EOrionItemRarity Rarity, const class UOrionMcpCardPackItemDefinition* PackTypeOpened);
	void OnResetForNextPack();
	void SetPackToOpen(class UOrionMcpCardPackItem* PackItem);

	int32 GetNumAvailableActivePacks() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"OrionItemPackOpeningScreen">();
	}
	static class UOrionItemPackOpeningScreen* GetDefaultObj()
	{
		return GetDefaultObjImpl<UOrionItemPackOpeningScreen>();
	}
};
#pragma pack(pop)
static_assert(alignof(UOrionItemPackOpeningScreen) == 0x000008, "Wrong alignment on UOrionItemPackOpeningScreen");
static_assert(sizeof(UOrionItemPackOpeningScreen) == 0x000498, "Wrong size on UOrionItemPackOpeningScreen");
static_assert(offsetof(UOrionItemPackOpeningScreen, ActivePack) == 0x000448, "Member 'UOrionItemPackOpeningScreen::ActivePack' has a wrong offset!");
static_assert(offsetof(UOrionItemPackOpeningScreen, MinimumOpenDelay) == 0x000450, "Member 'UOrionItemPackOpeningScreen::MinimumOpenDelay' has a wrong offset!");
static_assert(offsetof(UOrionItemPackOpeningScreen, Storefront_GetMorePacks) == 0x000480, "Member 'UOrionItemPackOpeningScreen::Storefront_GetMorePacks' has a wrong offset!");
static_assert(offsetof(UOrionItemPackOpeningScreen, Text_PackName) == 0x000488, "Member 'UOrionItemPackOpeningScreen::Text_PackName' has a wrong offset!");
static_assert(offsetof(UOrionItemPackOpeningScreen, Button_OpenPack) == 0x000490, "Member 'UOrionItemPackOpeningScreen::Button_OpenPack' has a wrong offset!");

// Class OrionUI.OrionJungleBuffWidget
// 0x0048 (0x0300 - 0x02B8)
class UOrionJungleBuffWidget final : public UOrionUserWidgetBase
{
public:
	class UImage*                                 IconImage;                                         // 0x02B8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                 FillBarImage;                                      // 0x02C0(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextBlock*                             TimerText;                                         // 0x02C8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UMaterialInstanceDynamic*               FillBarMID;                                        // 0x02D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FGameplayTag                           BuffTag;                                           // 0x02D8(0x0008)(NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_2E0[0x20];                                     // 0x02E0(0x0020)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"OrionJungleBuffWidget">();
	}
	static class UOrionJungleBuffWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UOrionJungleBuffWidget>();
	}
};
static_assert(alignof(UOrionJungleBuffWidget) == 0x000008, "Wrong alignment on UOrionJungleBuffWidget");
static_assert(sizeof(UOrionJungleBuffWidget) == 0x000300, "Wrong size on UOrionJungleBuffWidget");
static_assert(offsetof(UOrionJungleBuffWidget, IconImage) == 0x0002B8, "Member 'UOrionJungleBuffWidget::IconImage' has a wrong offset!");
static_assert(offsetof(UOrionJungleBuffWidget, FillBarImage) == 0x0002C0, "Member 'UOrionJungleBuffWidget::FillBarImage' has a wrong offset!");
static_assert(offsetof(UOrionJungleBuffWidget, TimerText) == 0x0002C8, "Member 'UOrionJungleBuffWidget::TimerText' has a wrong offset!");
static_assert(offsetof(UOrionJungleBuffWidget, FillBarMID) == 0x0002D0, "Member 'UOrionJungleBuffWidget::FillBarMID' has a wrong offset!");
static_assert(offsetof(UOrionJungleBuffWidget, BuffTag) == 0x0002D8, "Member 'UOrionJungleBuffWidget::BuffTag' has a wrong offset!");

// Class OrionUI.OrionStoreScreen
// 0x0088 (0x04D0 - 0x0448)
class UOrionStoreScreen final : public UOrionActivatableWidget
{
public:
	uint8                                         Pad_448[0x18];                                     // 0x0448(0x0018)(Fixing Size After Last Property [ Dumper-7 ])
	class UOrionTabListWidget*                    TabList_SubMenus;                                  // 0x0460(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionWidgetSwitcher*                   OrionSwitcher_Menus;                               // 0x0468(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionLoadGuard*                        LoadGuard_LoadingScreen;                           // 0x0470(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class USizeBox*                               SizeBox_CMS;                                       // 0x0478(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionCMSDisplayWidget*                 CMS_Display;                                       // 0x0480(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionStorefront*                       Storefront_Boosts;                                 // 0x0488(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionStorefront*                       Storefront_CardPacks;                              // 0x0490(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionStorefront*                       Storefront_Skins;                                  // 0x0498(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionStorefront*                       Storefront_Coins;                                  // 0x04A0(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionStorefront*                       Storefront_Masteries;                              // 0x04A8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionStorefront*                       Storefront_Banners;                                // 0x04B0(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionStorefront*                       Storefront_Emotes;                                 // 0x04B8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionStorefront*                       Storefront_Crates;                                 // 0x04C0(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionStorefront*                       Storefront_Bundles;                                // 0x04C8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	void NavigateToStoreItem(const class FString& OfferId);
	void OnTabChanged(class FName TabId);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"OrionStoreScreen">();
	}
	static class UOrionStoreScreen* GetDefaultObj()
	{
		return GetDefaultObjImpl<UOrionStoreScreen>();
	}
};
static_assert(alignof(UOrionStoreScreen) == 0x000008, "Wrong alignment on UOrionStoreScreen");
static_assert(sizeof(UOrionStoreScreen) == 0x0004D0, "Wrong size on UOrionStoreScreen");
static_assert(offsetof(UOrionStoreScreen, TabList_SubMenus) == 0x000460, "Member 'UOrionStoreScreen::TabList_SubMenus' has a wrong offset!");
static_assert(offsetof(UOrionStoreScreen, OrionSwitcher_Menus) == 0x000468, "Member 'UOrionStoreScreen::OrionSwitcher_Menus' has a wrong offset!");
static_assert(offsetof(UOrionStoreScreen, LoadGuard_LoadingScreen) == 0x000470, "Member 'UOrionStoreScreen::LoadGuard_LoadingScreen' has a wrong offset!");
static_assert(offsetof(UOrionStoreScreen, SizeBox_CMS) == 0x000478, "Member 'UOrionStoreScreen::SizeBox_CMS' has a wrong offset!");
static_assert(offsetof(UOrionStoreScreen, CMS_Display) == 0x000480, "Member 'UOrionStoreScreen::CMS_Display' has a wrong offset!");
static_assert(offsetof(UOrionStoreScreen, Storefront_Boosts) == 0x000488, "Member 'UOrionStoreScreen::Storefront_Boosts' has a wrong offset!");
static_assert(offsetof(UOrionStoreScreen, Storefront_CardPacks) == 0x000490, "Member 'UOrionStoreScreen::Storefront_CardPacks' has a wrong offset!");
static_assert(offsetof(UOrionStoreScreen, Storefront_Skins) == 0x000498, "Member 'UOrionStoreScreen::Storefront_Skins' has a wrong offset!");
static_assert(offsetof(UOrionStoreScreen, Storefront_Coins) == 0x0004A0, "Member 'UOrionStoreScreen::Storefront_Coins' has a wrong offset!");
static_assert(offsetof(UOrionStoreScreen, Storefront_Masteries) == 0x0004A8, "Member 'UOrionStoreScreen::Storefront_Masteries' has a wrong offset!");
static_assert(offsetof(UOrionStoreScreen, Storefront_Banners) == 0x0004B0, "Member 'UOrionStoreScreen::Storefront_Banners' has a wrong offset!");
static_assert(offsetof(UOrionStoreScreen, Storefront_Emotes) == 0x0004B8, "Member 'UOrionStoreScreen::Storefront_Emotes' has a wrong offset!");
static_assert(offsetof(UOrionStoreScreen, Storefront_Crates) == 0x0004C0, "Member 'UOrionStoreScreen::Storefront_Crates' has a wrong offset!");
static_assert(offsetof(UOrionStoreScreen, Storefront_Bundles) == 0x0004C8, "Member 'UOrionStoreScreen::Storefront_Bundles' has a wrong offset!");

// Class OrionUI.OrionJungleBuffWidgetContainer
// 0x0030 (0x0320 - 0x02F0)
class UOrionJungleBuffWidgetContainer final : public UOrionHUDWidgetBase
{
public:
	class UHorizontalBox*                         BuffBox;                                           // 0x02F0(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<struct FOrionStaticBuffInfo>           StaticBuffInfo;                                    // 0x02F8(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	TSubclassOf<class UOrionJungleBuffWidget>     BuffWidgetClass;                                   // 0x0308(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class UOrionJungleBuffWidget*>         BuffWidgets;                                       // 0x0310(0x0010)(ExportObject, ZeroConstructor, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)

public:
	void OnBuffAdded(const struct FOrionJungleBuffInfo& BuffInfo);
	void OnBuffRemoved(const struct FOrionJungleBuffInfo& BuffInfo);
	void OnBuffUpdated(const struct FOrionJungleBuffInfo& BuffInfo);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"OrionJungleBuffWidgetContainer">();
	}
	static class UOrionJungleBuffWidgetContainer* GetDefaultObj()
	{
		return GetDefaultObjImpl<UOrionJungleBuffWidgetContainer>();
	}
};
static_assert(alignof(UOrionJungleBuffWidgetContainer) == 0x000008, "Wrong alignment on UOrionJungleBuffWidgetContainer");
static_assert(sizeof(UOrionJungleBuffWidgetContainer) == 0x000320, "Wrong size on UOrionJungleBuffWidgetContainer");
static_assert(offsetof(UOrionJungleBuffWidgetContainer, BuffBox) == 0x0002F0, "Member 'UOrionJungleBuffWidgetContainer::BuffBox' has a wrong offset!");
static_assert(offsetof(UOrionJungleBuffWidgetContainer, StaticBuffInfo) == 0x0002F8, "Member 'UOrionJungleBuffWidgetContainer::StaticBuffInfo' has a wrong offset!");
static_assert(offsetof(UOrionJungleBuffWidgetContainer, BuffWidgetClass) == 0x000308, "Member 'UOrionJungleBuffWidgetContainer::BuffWidgetClass' has a wrong offset!");
static_assert(offsetof(UOrionJungleBuffWidgetContainer, BuffWidgets) == 0x000310, "Member 'UOrionJungleBuffWidgetContainer::BuffWidgets' has a wrong offset!");

// Class OrionUI.OrionKDAWidget
// 0x0050 (0x0340 - 0x02F0)
class UOrionKDAWidget final : public UOrionHUDWidgetBase
{
public:
	class FText                                   KDAFormatText;                                     // 0x02F0(0x0018)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	class UTextBlock*                             KillsText;                                         // 0x0308(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextBlock*                             DeathsText;                                        // 0x0310(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextBlock*                             AssistsText;                                       // 0x0318(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextBlock*                             MinionsText;                                       // 0x0320(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_328[0x18];                                     // 0x0328(0x0018)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void OnKDAUpdate(int32 Kills, int32 Deaths, int32 Assists, int32 Minions);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"OrionKDAWidget">();
	}
	static class UOrionKDAWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UOrionKDAWidget>();
	}
};
static_assert(alignof(UOrionKDAWidget) == 0x000008, "Wrong alignment on UOrionKDAWidget");
static_assert(sizeof(UOrionKDAWidget) == 0x000340, "Wrong size on UOrionKDAWidget");
static_assert(offsetof(UOrionKDAWidget, KDAFormatText) == 0x0002F0, "Member 'UOrionKDAWidget::KDAFormatText' has a wrong offset!");
static_assert(offsetof(UOrionKDAWidget, KillsText) == 0x000308, "Member 'UOrionKDAWidget::KillsText' has a wrong offset!");
static_assert(offsetof(UOrionKDAWidget, DeathsText) == 0x000310, "Member 'UOrionKDAWidget::DeathsText' has a wrong offset!");
static_assert(offsetof(UOrionKDAWidget, AssistsText) == 0x000318, "Member 'UOrionKDAWidget::AssistsText' has a wrong offset!");
static_assert(offsetof(UOrionKDAWidget, MinionsText) == 0x000320, "Member 'UOrionKDAWidget::MinionsText' has a wrong offset!");

// Class OrionUI.OrionPlayerFeedbackMessageArea
// 0x0000 (0x02F0 - 0x02F0)
class UOrionPlayerFeedbackMessageArea final : public UOrionHUDWidgetBase
{
public:
	void OnShowDetailedMessage(const class FText& BuffMessage, bool bCanAutoFade);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"OrionPlayerFeedbackMessageArea">();
	}
	static class UOrionPlayerFeedbackMessageArea* GetDefaultObj()
	{
		return GetDefaultObjImpl<UOrionPlayerFeedbackMessageArea>();
	}
};
static_assert(alignof(UOrionPlayerFeedbackMessageArea) == 0x000008, "Wrong alignment on UOrionPlayerFeedbackMessageArea");
static_assert(sizeof(UOrionPlayerFeedbackMessageArea) == 0x0002F0, "Wrong size on UOrionPlayerFeedbackMessageArea");

// Class OrionUI.OrionKeyboardBinding
// 0x00D8 (0x0390 - 0x02B8)
class UOrionKeyboardBinding final : public UOrionUserWidgetBase
{
public:
	uint8                                         Pad_2B8[0xB0];                                     // 0x02B8(0x00B0)(Fixing Size After Last Property [ Dumper-7 ])
	class UOrionTextBlock*                        Text_ActionDisplayName;                            // 0x0368(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionInputKeySelector*                 PrimaryKeySelector;                                // 0x0370(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionInputKeySelector*                 SecondaryKeySelector;                              // 0x0378(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionBaseButton*                       Button_EmptyPrimary;                               // 0x0380(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionBaseButton*                       Button_EmptySecondary;                             // 0x0388(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	void HandleOnPrimaryKeySelected(const struct FInputChord& SelectedKey);
	void HandleOnSecondaryKeySelected(const struct FInputChord& SelectedKey);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"OrionKeyboardBinding">();
	}
	static class UOrionKeyboardBinding* GetDefaultObj()
	{
		return GetDefaultObjImpl<UOrionKeyboardBinding>();
	}
};
static_assert(alignof(UOrionKeyboardBinding) == 0x000008, "Wrong alignment on UOrionKeyboardBinding");
static_assert(sizeof(UOrionKeyboardBinding) == 0x000390, "Wrong size on UOrionKeyboardBinding");
static_assert(offsetof(UOrionKeyboardBinding, Text_ActionDisplayName) == 0x000368, "Member 'UOrionKeyboardBinding::Text_ActionDisplayName' has a wrong offset!");
static_assert(offsetof(UOrionKeyboardBinding, PrimaryKeySelector) == 0x000370, "Member 'UOrionKeyboardBinding::PrimaryKeySelector' has a wrong offset!");
static_assert(offsetof(UOrionKeyboardBinding, SecondaryKeySelector) == 0x000378, "Member 'UOrionKeyboardBinding::SecondaryKeySelector' has a wrong offset!");
static_assert(offsetof(UOrionKeyboardBinding, Button_EmptyPrimary) == 0x000380, "Member 'UOrionKeyboardBinding::Button_EmptyPrimary' has a wrong offset!");
static_assert(offsetof(UOrionKeyboardBinding, Button_EmptySecondary) == 0x000388, "Member 'UOrionKeyboardBinding::Button_EmptySecondary' has a wrong offset!");

// Class OrionUI.OrionKeyboardBindingBlock
// 0x0018 (0x02D0 - 0x02B8)
class UOrionKeyboardBindingBlock final : public UOrionUserWidgetBase
{
public:
	class UOrionDefaultButton*                    Button_Category;                                   // 0x02B8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionDynamicEntryBox*                  EntryBox_Bindings;                                 // 0x02C0(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_2C8[0x8];                                      // 0x02C8(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"OrionKeyboardBindingBlock">();
	}
	static class UOrionKeyboardBindingBlock* GetDefaultObj()
	{
		return GetDefaultObjImpl<UOrionKeyboardBindingBlock>();
	}
};
static_assert(alignof(UOrionKeyboardBindingBlock) == 0x000008, "Wrong alignment on UOrionKeyboardBindingBlock");
static_assert(sizeof(UOrionKeyboardBindingBlock) == 0x0002D0, "Wrong size on UOrionKeyboardBindingBlock");
static_assert(offsetof(UOrionKeyboardBindingBlock, Button_Category) == 0x0002B8, "Member 'UOrionKeyboardBindingBlock::Button_Category' has a wrong offset!");
static_assert(offsetof(UOrionKeyboardBindingBlock, EntryBox_Bindings) == 0x0002C0, "Member 'UOrionKeyboardBindingBlock::EntryBox_Bindings' has a wrong offset!");

// Class OrionUI.OrionTeamCommGameEventButtonIcon
// 0x0050 (0x0340 - 0x02F0)
class UOrionTeamCommGameEventButtonIcon final : public UOrionHUDWidgetBase
{
public:
	class UTexture2D*                             PCIcons[0x4];                                      // 0x02F0(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTexture2D*                             GamepadIcons[0x4];                                 // 0x0310(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_330[0x8];                                      // 0x0330(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	class UImage*                                 ButtonImage;                                       // 0x0338(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"OrionTeamCommGameEventButtonIcon">();
	}
	static class UOrionTeamCommGameEventButtonIcon* GetDefaultObj()
	{
		return GetDefaultObjImpl<UOrionTeamCommGameEventButtonIcon>();
	}
};
static_assert(alignof(UOrionTeamCommGameEventButtonIcon) == 0x000008, "Wrong alignment on UOrionTeamCommGameEventButtonIcon");
static_assert(sizeof(UOrionTeamCommGameEventButtonIcon) == 0x000340, "Wrong size on UOrionTeamCommGameEventButtonIcon");
static_assert(offsetof(UOrionTeamCommGameEventButtonIcon, PCIcons) == 0x0002F0, "Member 'UOrionTeamCommGameEventButtonIcon::PCIcons' has a wrong offset!");
static_assert(offsetof(UOrionTeamCommGameEventButtonIcon, GamepadIcons) == 0x000310, "Member 'UOrionTeamCommGameEventButtonIcon::GamepadIcons' has a wrong offset!");
static_assert(offsetof(UOrionTeamCommGameEventButtonIcon, ButtonImage) == 0x000338, "Member 'UOrionTeamCommGameEventButtonIcon::ButtonImage' has a wrong offset!");

// Class OrionUI.OrionKeyboardSettingsTab
// 0x00A8 (0x04F0 - 0x0448)
class UOrionKeyboardSettingsTab final : public UOrionActivatableWidget
{
public:
	TArray<struct FPlayerOverwriteBindingCategory> BindingCategories;                                 // 0x0448(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPrivate)
	uint8                                         Pad_458[0x50];                                     // 0x0458(0x0050)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FInputChord>                    ConflictChordArray;                                // 0x04A8(0x0010)(ZeroConstructor, Transient, NativeAccessSpecifierPrivate)
	uint8                                         Pad_4B8[0x10];                                     // 0x04B8(0x0010)(Fixing Size After Last Property [ Dumper-7 ])
	class UOrionDynamicEntryBox*                  EntryBox_BindingBlocks;                            // 0x04C8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionDynamicEntryBox*                  EntryBox_ConflictBindings;                         // 0x04D0(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionBaseButton*                       Button_Apply;                                      // 0x04D8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionBaseButton*                       Button_Cancel;                                     // 0x04E0(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_4E8[0x8];                                      // 0x04E8(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void OnHideConflictBindings();
	void OnShowConflictBindings();
	void ResetSettings();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"OrionKeyboardSettingsTab">();
	}
	static class UOrionKeyboardSettingsTab* GetDefaultObj()
	{
		return GetDefaultObjImpl<UOrionKeyboardSettingsTab>();
	}
};
static_assert(alignof(UOrionKeyboardSettingsTab) == 0x000008, "Wrong alignment on UOrionKeyboardSettingsTab");
static_assert(sizeof(UOrionKeyboardSettingsTab) == 0x0004F0, "Wrong size on UOrionKeyboardSettingsTab");
static_assert(offsetof(UOrionKeyboardSettingsTab, BindingCategories) == 0x000448, "Member 'UOrionKeyboardSettingsTab::BindingCategories' has a wrong offset!");
static_assert(offsetof(UOrionKeyboardSettingsTab, ConflictChordArray) == 0x0004A8, "Member 'UOrionKeyboardSettingsTab::ConflictChordArray' has a wrong offset!");
static_assert(offsetof(UOrionKeyboardSettingsTab, EntryBox_BindingBlocks) == 0x0004C8, "Member 'UOrionKeyboardSettingsTab::EntryBox_BindingBlocks' has a wrong offset!");
static_assert(offsetof(UOrionKeyboardSettingsTab, EntryBox_ConflictBindings) == 0x0004D0, "Member 'UOrionKeyboardSettingsTab::EntryBox_ConflictBindings' has a wrong offset!");
static_assert(offsetof(UOrionKeyboardSettingsTab, Button_Apply) == 0x0004D8, "Member 'UOrionKeyboardSettingsTab::Button_Apply' has a wrong offset!");
static_assert(offsetof(UOrionKeyboardSettingsTab, Button_Cancel) == 0x0004E0, "Member 'UOrionKeyboardSettingsTab::Button_Cancel' has a wrong offset!");

// Class OrionUI.OrionKillFeedEntryPortrait
// 0x0008 (0x0208 - 0x0200)
class UOrionKillFeedEntryPortrait final : public UUserWidget
{
public:
	class UOrionLazyImage*                        LazyImage_Portrait;                                // 0x0200(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	void OnPortraitSet(EKillFeedParticipantType Type);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"OrionKillFeedEntryPortrait">();
	}
	static class UOrionKillFeedEntryPortrait* GetDefaultObj()
	{
		return GetDefaultObjImpl<UOrionKillFeedEntryPortrait>();
	}
};
static_assert(alignof(UOrionKillFeedEntryPortrait) == 0x000008, "Wrong alignment on UOrionKillFeedEntryPortrait");
static_assert(sizeof(UOrionKillFeedEntryPortrait) == 0x000208, "Wrong size on UOrionKillFeedEntryPortrait");
static_assert(offsetof(UOrionKillFeedEntryPortrait, LazyImage_Portrait) == 0x000200, "Member 'UOrionKillFeedEntryPortrait::LazyImage_Portrait' has a wrong offset!");

// Class OrionUI.OrionStateWidget_Replay
// 0x0008 (0x02C0 - 0x02B8)
class UOrionStateWidget_Replay final : public UOrionUIStateWidget
{
public:
	uint8                                         Pad_2B8[0x8];                                      // 0x02B8(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"OrionStateWidget_Replay">();
	}
	static class UOrionStateWidget_Replay* GetDefaultObj()
	{
		return GetDefaultObjImpl<UOrionStateWidget_Replay>();
	}
};
static_assert(alignof(UOrionStateWidget_Replay) == 0x000008, "Wrong alignment on UOrionStateWidget_Replay");
static_assert(sizeof(UOrionStateWidget_Replay) == 0x0002C0, "Wrong size on UOrionStateWidget_Replay");

// Class OrionUI.OrionKillFeedEntry
// 0x0020 (0x03B0 - 0x0390)
class UOrionKillFeedEntry final : public UOrionInfoFeedEntryBase
{
public:
	EKillFeedParticipantType                      KillerType;                                        // 0x0390(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	EKillFeedParticipantType                      VictimType;                                        // 0x0391(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_392[0x6];                                      // 0x0392(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UOrionKillFeedEntryPortrait*            Portrait_Killer;                                   // 0x0398(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionKillFeedEntryPortrait*            Portrait_KilledPlayer;                             // 0x03A0(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_3A8[0x8];                                      // 0x03A8(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"OrionKillFeedEntry">();
	}
	static class UOrionKillFeedEntry* GetDefaultObj()
	{
		return GetDefaultObjImpl<UOrionKillFeedEntry>();
	}
};
static_assert(alignof(UOrionKillFeedEntry) == 0x000008, "Wrong alignment on UOrionKillFeedEntry");
static_assert(sizeof(UOrionKillFeedEntry) == 0x0003B0, "Wrong size on UOrionKillFeedEntry");
static_assert(offsetof(UOrionKillFeedEntry, KillerType) == 0x000390, "Member 'UOrionKillFeedEntry::KillerType' has a wrong offset!");
static_assert(offsetof(UOrionKillFeedEntry, VictimType) == 0x000391, "Member 'UOrionKillFeedEntry::VictimType' has a wrong offset!");
static_assert(offsetof(UOrionKillFeedEntry, Portrait_Killer) == 0x000398, "Member 'UOrionKillFeedEntry::Portrait_Killer' has a wrong offset!");
static_assert(offsetof(UOrionKillFeedEntry, Portrait_KilledPlayer) == 0x0003A0, "Member 'UOrionKillFeedEntry::Portrait_KilledPlayer' has a wrong offset!");

// Class OrionUI.OrionKillFeed
// 0x0000 (0x0310 - 0x0310)
class UOrionKillFeed final : public UOrionHUDInfoFeedBase
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"OrionKillFeed">();
	}
	static class UOrionKillFeed* GetDefaultObj()
	{
		return GetDefaultObjImpl<UOrionKillFeed>();
	}
};
static_assert(alignof(UOrionKillFeed) == 0x000008, "Wrong alignment on UOrionKillFeed");
static_assert(sizeof(UOrionKillFeed) == 0x000310, "Wrong size on UOrionKillFeed");

// Class OrionUI.OrionTeamFrame
// 0x0020 (0x0310 - 0x02F0)
class UOrionTeamFrame final : public UOrionHUDWidgetBase
{
public:
	bool                                          bIsFriendlyTeam;                                   // 0x02F0(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_2F1[0xF];                                      // 0x02F1(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	class UOrionDynamicEntryBox*                  EntryBox_Players;                                  // 0x0300(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_308[0x8];                                      // 0x0308(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void UpdateBuffCount(int32 NewCount);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"OrionTeamFrame">();
	}
	static class UOrionTeamFrame* GetDefaultObj()
	{
		return GetDefaultObjImpl<UOrionTeamFrame>();
	}
};
static_assert(alignof(UOrionTeamFrame) == 0x000008, "Wrong alignment on UOrionTeamFrame");
static_assert(sizeof(UOrionTeamFrame) == 0x000310, "Wrong size on UOrionTeamFrame");
static_assert(offsetof(UOrionTeamFrame, bIsFriendlyTeam) == 0x0002F0, "Member 'UOrionTeamFrame::bIsFriendlyTeam' has a wrong offset!");
static_assert(offsetof(UOrionTeamFrame, EntryBox_Players) == 0x000300, "Member 'UOrionTeamFrame::EntryBox_Players' has a wrong offset!");

// Class OrionUI.OrionLazyImage
// 0x0058 (0x0218 - 0x01C0)
class UOrionLazyImage final : public UImage
{
public:
	UMulticastDelegateProperty_                   OnLoadingStateChanged;                             // 0x01C0(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	class FName                                   MaterialTextureParamName;                          // 0x01D0(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_1D8[0x40];                                     // 0x01D8(0x0040)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void SetBrushFromItemDefinition(class UOrionMcpItemDefinition* ItemDefinition, bool bMatchTextureSize);
	void SetBrushFromLazyDisplayAsset(const TSoftObjectPtr<class UObject>& LazyObject, bool bMatchTextureSize);
	void SetBrushFromLazyMaterial(const TSoftObjectPtr<class UMaterialInterface>& LazyMaterial);
	void SetBrushFromLazyTexture(const TSoftObjectPtr<class UTexture2D>& LazyTexture, bool bMatchSize);

	bool IsLoading() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"OrionLazyImage">();
	}
	static class UOrionLazyImage* GetDefaultObj()
	{
		return GetDefaultObjImpl<UOrionLazyImage>();
	}
};
static_assert(alignof(UOrionLazyImage) == 0x000008, "Wrong alignment on UOrionLazyImage");
static_assert(sizeof(UOrionLazyImage) == 0x000218, "Wrong size on UOrionLazyImage");
static_assert(offsetof(UOrionLazyImage, OnLoadingStateChanged) == 0x0001C0, "Member 'UOrionLazyImage::OnLoadingStateChanged' has a wrong offset!");
static_assert(offsetof(UOrionLazyImage, MaterialTextureParamName) == 0x0001D0, "Member 'UOrionLazyImage::MaterialTextureParamName' has a wrong offset!");

// Class OrionUI.OrionLegacySlateWidget
// 0x0018 (0x0120 - 0x0108)
class UOrionLegacySlateWidget final : public UNativeWidgetHost
{
public:
	EOrionLegacySlateWidgetType                   ContainedWidgetType;                               // 0x0108(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_109[0x7];                                      // 0x0109(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             OnClose;                                           // 0x0110(0x0010)(ZeroConstructor, Transient, InstancedReference, NoDestructor, NativeAccessSpecifierPrivate)

public:
	void SetOnCloseHandler(const TDelegate<void()>& OnCloseHandler);
	void UpdateSlateWidget(EOrionLegacySlateWidgetType SlateWidgetType);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"OrionLegacySlateWidget">();
	}
	static class UOrionLegacySlateWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UOrionLegacySlateWidget>();
	}
};
static_assert(alignof(UOrionLegacySlateWidget) == 0x000008, "Wrong alignment on UOrionLegacySlateWidget");
static_assert(sizeof(UOrionLegacySlateWidget) == 0x000120, "Wrong size on UOrionLegacySlateWidget");
static_assert(offsetof(UOrionLegacySlateWidget, ContainedWidgetType) == 0x000108, "Member 'UOrionLegacySlateWidget::ContainedWidgetType' has a wrong offset!");
static_assert(offsetof(UOrionLegacySlateWidget, OnClose) == 0x000110, "Member 'UOrionLegacySlateWidget::OnClose' has a wrong offset!");

// Class OrionUI.OrionSpectatorViewOptions
// 0x0088 (0x0340 - 0x02B8)
class UOrionSpectatorViewOptions final : public UOrionUserWidgetBase
{
public:
	class UVerticalBox*                           CameraTypeVBox;                                    // 0x02B8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UOrionUserWidgetBase*                   CameraType_Chase;                                  // 0x02C0(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UOrionUserWidgetBase*                   CameraType_Drone;                                  // 0x02C8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UOrionUserWidgetBase*                   CameraType_Moba;                                   // 0x02D0(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UVerticalBox*                           DroneOptionsVBox;                                  // 0x02D8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UOrionUserWidgetBase*                   DroneOption_Free;                                  // 0x02E0(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UVerticalBox*                           ChaseOptionsVBox;                                  // 0x02E8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UOrionUserWidgetBase*                   ChaseOption_Free;                                  // 0x02F0(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UOrionUserWidgetBase*                   ChaseOption_Auto;                                  // 0x02F8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UVerticalBox*                           MobaOptionsVBox;                                   // 0x0300(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UOrionUserWidgetBase*                   MobaOption_Free;                                   // 0x0308(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UOrionUserWidgetBase*                   MobaOption_Chase;                                  // 0x0310(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UVerticalBox*                           GeneralOptionsVBox;                                // 0x0318(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UOrionUserWidgetBase*                   GeneralOption_Foliage;                             // 0x0320(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	UMulticastDelegateProperty_                   OnSetButtonSelected;                               // 0x0328(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPrivate)
	uint8                                         Pad_338[0x8];                                      // 0x0338(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void OnButtonClicked(class UOrionUserWidgetBase* Button);
	void OnRefreshButtonStateFromSpectator();
	void OnSetButtonSelected__DelegateSignature(class UOrionUserWidgetBase* Button, bool bIsSelected);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"OrionSpectatorViewOptions">();
	}
	static class UOrionSpectatorViewOptions* GetDefaultObj()
	{
		return GetDefaultObjImpl<UOrionSpectatorViewOptions>();
	}
};
static_assert(alignof(UOrionSpectatorViewOptions) == 0x000008, "Wrong alignment on UOrionSpectatorViewOptions");
static_assert(sizeof(UOrionSpectatorViewOptions) == 0x000340, "Wrong size on UOrionSpectatorViewOptions");
static_assert(offsetof(UOrionSpectatorViewOptions, CameraTypeVBox) == 0x0002B8, "Member 'UOrionSpectatorViewOptions::CameraTypeVBox' has a wrong offset!");
static_assert(offsetof(UOrionSpectatorViewOptions, CameraType_Chase) == 0x0002C0, "Member 'UOrionSpectatorViewOptions::CameraType_Chase' has a wrong offset!");
static_assert(offsetof(UOrionSpectatorViewOptions, CameraType_Drone) == 0x0002C8, "Member 'UOrionSpectatorViewOptions::CameraType_Drone' has a wrong offset!");
static_assert(offsetof(UOrionSpectatorViewOptions, CameraType_Moba) == 0x0002D0, "Member 'UOrionSpectatorViewOptions::CameraType_Moba' has a wrong offset!");
static_assert(offsetof(UOrionSpectatorViewOptions, DroneOptionsVBox) == 0x0002D8, "Member 'UOrionSpectatorViewOptions::DroneOptionsVBox' has a wrong offset!");
static_assert(offsetof(UOrionSpectatorViewOptions, DroneOption_Free) == 0x0002E0, "Member 'UOrionSpectatorViewOptions::DroneOption_Free' has a wrong offset!");
static_assert(offsetof(UOrionSpectatorViewOptions, ChaseOptionsVBox) == 0x0002E8, "Member 'UOrionSpectatorViewOptions::ChaseOptionsVBox' has a wrong offset!");
static_assert(offsetof(UOrionSpectatorViewOptions, ChaseOption_Free) == 0x0002F0, "Member 'UOrionSpectatorViewOptions::ChaseOption_Free' has a wrong offset!");
static_assert(offsetof(UOrionSpectatorViewOptions, ChaseOption_Auto) == 0x0002F8, "Member 'UOrionSpectatorViewOptions::ChaseOption_Auto' has a wrong offset!");
static_assert(offsetof(UOrionSpectatorViewOptions, MobaOptionsVBox) == 0x000300, "Member 'UOrionSpectatorViewOptions::MobaOptionsVBox' has a wrong offset!");
static_assert(offsetof(UOrionSpectatorViewOptions, MobaOption_Free) == 0x000308, "Member 'UOrionSpectatorViewOptions::MobaOption_Free' has a wrong offset!");
static_assert(offsetof(UOrionSpectatorViewOptions, MobaOption_Chase) == 0x000310, "Member 'UOrionSpectatorViewOptions::MobaOption_Chase' has a wrong offset!");
static_assert(offsetof(UOrionSpectatorViewOptions, GeneralOptionsVBox) == 0x000318, "Member 'UOrionSpectatorViewOptions::GeneralOptionsVBox' has a wrong offset!");
static_assert(offsetof(UOrionSpectatorViewOptions, GeneralOption_Foliage) == 0x000320, "Member 'UOrionSpectatorViewOptions::GeneralOption_Foliage' has a wrong offset!");
static_assert(offsetof(UOrionSpectatorViewOptions, OnSetButtonSelected) == 0x000328, "Member 'UOrionSpectatorViewOptions::OnSetButtonSelected' has a wrong offset!");

// Class OrionUI.OrionLevelProgressDisplay
// 0x00F8 (0x03B0 - 0x02B8)
class UOrionLevelProgressDisplay final : public UOrionUserWidgetBase
{
public:
	uint8                                         Pad_2B8[0xC0];                                     // 0x02B8(0x00C0)(Fixing Size After Last Property [ Dumper-7 ])
	class UOrionTextBlock*                        Text_OwnerName;                                    // 0x0378(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionTextBlock*                        Text_CurrentLevel;                                 // 0x0380(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionRewardProgressBar*                RewardProgress_XP;                                 // 0x0388(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UHorizontalBox*                         HBox_RankTextContainer;                            // 0x0390(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionTextBlock*                        Text_CurrentRank;                                  // 0x0398(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UHorizontalBox*                         HBox_RankAndLevelTextContainer;                    // 0x03A0(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_3A8[0x8];                                      // 0x03A8(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void OnLevelUp(bool bImmediate);
	void OnSetProgressLocked(bool ProgressLocked);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"OrionLevelProgressDisplay">();
	}
	static class UOrionLevelProgressDisplay* GetDefaultObj()
	{
		return GetDefaultObjImpl<UOrionLevelProgressDisplay>();
	}
};
static_assert(alignof(UOrionLevelProgressDisplay) == 0x000008, "Wrong alignment on UOrionLevelProgressDisplay");
static_assert(sizeof(UOrionLevelProgressDisplay) == 0x0003B0, "Wrong size on UOrionLevelProgressDisplay");
static_assert(offsetof(UOrionLevelProgressDisplay, Text_OwnerName) == 0x000378, "Member 'UOrionLevelProgressDisplay::Text_OwnerName' has a wrong offset!");
static_assert(offsetof(UOrionLevelProgressDisplay, Text_CurrentLevel) == 0x000380, "Member 'UOrionLevelProgressDisplay::Text_CurrentLevel' has a wrong offset!");
static_assert(offsetof(UOrionLevelProgressDisplay, RewardProgress_XP) == 0x000388, "Member 'UOrionLevelProgressDisplay::RewardProgress_XP' has a wrong offset!");
static_assert(offsetof(UOrionLevelProgressDisplay, HBox_RankTextContainer) == 0x000390, "Member 'UOrionLevelProgressDisplay::HBox_RankTextContainer' has a wrong offset!");
static_assert(offsetof(UOrionLevelProgressDisplay, Text_CurrentRank) == 0x000398, "Member 'UOrionLevelProgressDisplay::Text_CurrentRank' has a wrong offset!");
static_assert(offsetof(UOrionLevelProgressDisplay, HBox_RankAndLevelTextContainer) == 0x0003A0, "Member 'UOrionLevelProgressDisplay::HBox_RankAndLevelTextContainer' has a wrong offset!");

// Class OrionUI.OrionLevelUpDisplay
// 0x0010 (0x0300 - 0x02F0)
class UOrionLevelUpDisplay final : public UOrionHUDWidgetBase
{
public:
	class UOrionTextBlock*                        Text_CurrentLevel;                                 // 0x02F0(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_2F8[0x8];                                      // 0x02F8(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void OnLeveledUp();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"OrionLevelUpDisplay">();
	}
	static class UOrionLevelUpDisplay* GetDefaultObj()
	{
		return GetDefaultObjImpl<UOrionLevelUpDisplay>();
	}
};
static_assert(alignof(UOrionLevelUpDisplay) == 0x000008, "Wrong alignment on UOrionLevelUpDisplay");
static_assert(sizeof(UOrionLevelUpDisplay) == 0x000300, "Wrong size on UOrionLevelUpDisplay");
static_assert(offsetof(UOrionLevelUpDisplay, Text_CurrentLevel) == 0x0002F0, "Member 'UOrionLevelUpDisplay::Text_CurrentLevel' has a wrong offset!");

// Class OrionUI.OrionReplayCurrentlySelected
// 0x0018 (0x02D0 - 0x02B8)
class UOrionReplayCurrentlySelected final : public UOrionUserWidgetBase
{
public:
	class UEditableTextBox*                       ReplayIDText;                                      // 0x02B8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UOrionDefaultButton*                    SkipDraftButton;                                   // 0x02C0(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_2C8[0x8];                                      // 0x02C8(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void OnCancelClicked();
	void OnPlayClicked();
	void OnSkipDraftClicked();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"OrionReplayCurrentlySelected">();
	}
	static class UOrionReplayCurrentlySelected* GetDefaultObj()
	{
		return GetDefaultObjImpl<UOrionReplayCurrentlySelected>();
	}
};
static_assert(alignof(UOrionReplayCurrentlySelected) == 0x000008, "Wrong alignment on UOrionReplayCurrentlySelected");
static_assert(sizeof(UOrionReplayCurrentlySelected) == 0x0002D0, "Wrong size on UOrionReplayCurrentlySelected");
static_assert(offsetof(UOrionReplayCurrentlySelected, ReplayIDText) == 0x0002B8, "Member 'UOrionReplayCurrentlySelected::ReplayIDText' has a wrong offset!");
static_assert(offsetof(UOrionReplayCurrentlySelected, SkipDraftButton) == 0x0002C0, "Member 'UOrionReplayCurrentlySelected::SkipDraftButton' has a wrong offset!");

// Class OrionUI.LoadGuardSlot
// 0x0028 (0x0060 - 0x0038)
class ULoadGuardSlot final : public UPanelSlot
{
public:
	struct FMargin                                Padding;                                           // 0x0038(0x0010)(Edit, NoDestructor, NativeAccessSpecifierPrivate)
	EHorizontalAlignment                          HorizontalAlignment;                               // 0x0048(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	EVerticalAlignment                            VerticalAlignment;                                 // 0x0049(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_4A[0x16];                                      // 0x004A(0x0016)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void SetHorizontalAlignment(EHorizontalAlignment InHorizontalAlignment);
	void SetPadding(const struct FMargin& InPadding);
	void SetVerticalAlignment(EVerticalAlignment InVerticalAlignment);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"LoadGuardSlot">();
	}
	static class ULoadGuardSlot* GetDefaultObj()
	{
		return GetDefaultObjImpl<ULoadGuardSlot>();
	}
};
static_assert(alignof(ULoadGuardSlot) == 0x000008, "Wrong alignment on ULoadGuardSlot");
static_assert(sizeof(ULoadGuardSlot) == 0x000060, "Wrong size on ULoadGuardSlot");
static_assert(offsetof(ULoadGuardSlot, Padding) == 0x000038, "Member 'ULoadGuardSlot::Padding' has a wrong offset!");
static_assert(offsetof(ULoadGuardSlot, HorizontalAlignment) == 0x000048, "Member 'ULoadGuardSlot::HorizontalAlignment' has a wrong offset!");
static_assert(offsetof(ULoadGuardSlot, VerticalAlignment) == 0x000049, "Member 'ULoadGuardSlot::VerticalAlignment' has a wrong offset!");

// Class OrionUI.OrionTableView
// 0x0738 (0x0830 - 0x00F8)
class UOrionTableView final : public UWidget
{
public:
	TSubclassOf<class UUserWidget>                ItemClass;                                         // 0x00F8(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FMargin                                SlotPadding;                                       // 0x0100(0x0010)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	TArray<class UObject*>                        Data;                                              // 0x0110(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	bool                                          ListMode;                                          // 0x0120(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_121[0x3];                                      // 0x0121(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              ItemDimensions;                                    // 0x0124(0x0008)(Edit, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_12C[0x4];                                      // 0x012C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FScrollBarStyle                        ScrollBarStyle;                                    // 0x0130(0x0440)(Edit, NativeAccessSpecifierPublic)
	struct FVector2D                              Thickness;                                         // 0x0570(0x0008)(Edit, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FSlateBrush                            Track;                                             // 0x0578(0x0078)(Edit, NativeAccessSpecifierPublic)
	EOrionTableViewSelectionMode                  SelectionMode;                                     // 0x05F0(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bHideNoData;                                       // 0x05F1(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_5F2[0x6];                                      // 0x05F2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	UMulticastDelegateProperty_                   ItemClicked;                                       // 0x05F8(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                   ItemHovered;                                       // 0x0608(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                   ItemSelected;                                      // 0x0618(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                         Pad_628[0x1D0];                                    // 0x0628(0x01D0)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         NumRows;                                           // 0x07F8(0x0004)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int32                                         NumCols;                                           // 0x07FC(0x0004)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int32                                         ScrollPosition;                                    // 0x0800(0x0004)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         LastScrollOffset;                                  // 0x0804(0x0004)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UUserWidget*                            HoveredItem;                                       // 0x0808(0x0008)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                          bOverGrid;                                         // 0x0810(0x0001)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                          bOverScrollBar;                                    // 0x0811(0x0001)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_812[0x6];                                      // 0x0812(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                SelectedData;                                      // 0x0818(0x0008)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_820[0x10];                                     // 0x0820(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void ClearSelection();
	void OnItemClicked(class UUserWidget* Widget);
	void OnItemHover(class UUserWidget* Widget, bool bUnused);
	void OnItemSelected(class UUserWidget* Widget, bool bSelected);
	void OnItemUnhover(class UUserWidget* Widget, bool bUnused);
	void OnTableViewItemEvent__DelegateSignature(class UUserWidget* Widget);
	void SetDataProvider(const TArray<class UObject*>& InDataProvider);
	void SetSelection(class UUserWidget* Widget);

	class UUserWidget* GetSelection() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"OrionTableView">();
	}
	static class UOrionTableView* GetDefaultObj()
	{
		return GetDefaultObjImpl<UOrionTableView>();
	}
};
static_assert(alignof(UOrionTableView) == 0x000008, "Wrong alignment on UOrionTableView");
static_assert(sizeof(UOrionTableView) == 0x000830, "Wrong size on UOrionTableView");
static_assert(offsetof(UOrionTableView, ItemClass) == 0x0000F8, "Member 'UOrionTableView::ItemClass' has a wrong offset!");
static_assert(offsetof(UOrionTableView, SlotPadding) == 0x000100, "Member 'UOrionTableView::SlotPadding' has a wrong offset!");
static_assert(offsetof(UOrionTableView, Data) == 0x000110, "Member 'UOrionTableView::Data' has a wrong offset!");
static_assert(offsetof(UOrionTableView, ListMode) == 0x000120, "Member 'UOrionTableView::ListMode' has a wrong offset!");
static_assert(offsetof(UOrionTableView, ItemDimensions) == 0x000124, "Member 'UOrionTableView::ItemDimensions' has a wrong offset!");
static_assert(offsetof(UOrionTableView, ScrollBarStyle) == 0x000130, "Member 'UOrionTableView::ScrollBarStyle' has a wrong offset!");
static_assert(offsetof(UOrionTableView, Thickness) == 0x000570, "Member 'UOrionTableView::Thickness' has a wrong offset!");
static_assert(offsetof(UOrionTableView, Track) == 0x000578, "Member 'UOrionTableView::Track' has a wrong offset!");
static_assert(offsetof(UOrionTableView, SelectionMode) == 0x0005F0, "Member 'UOrionTableView::SelectionMode' has a wrong offset!");
static_assert(offsetof(UOrionTableView, bHideNoData) == 0x0005F1, "Member 'UOrionTableView::bHideNoData' has a wrong offset!");
static_assert(offsetof(UOrionTableView, ItemClicked) == 0x0005F8, "Member 'UOrionTableView::ItemClicked' has a wrong offset!");
static_assert(offsetof(UOrionTableView, ItemHovered) == 0x000608, "Member 'UOrionTableView::ItemHovered' has a wrong offset!");
static_assert(offsetof(UOrionTableView, ItemSelected) == 0x000618, "Member 'UOrionTableView::ItemSelected' has a wrong offset!");
static_assert(offsetof(UOrionTableView, NumRows) == 0x0007F8, "Member 'UOrionTableView::NumRows' has a wrong offset!");
static_assert(offsetof(UOrionTableView, NumCols) == 0x0007FC, "Member 'UOrionTableView::NumCols' has a wrong offset!");
static_assert(offsetof(UOrionTableView, ScrollPosition) == 0x000800, "Member 'UOrionTableView::ScrollPosition' has a wrong offset!");
static_assert(offsetof(UOrionTableView, LastScrollOffset) == 0x000804, "Member 'UOrionTableView::LastScrollOffset' has a wrong offset!");
static_assert(offsetof(UOrionTableView, HoveredItem) == 0x000808, "Member 'UOrionTableView::HoveredItem' has a wrong offset!");
static_assert(offsetof(UOrionTableView, bOverGrid) == 0x000810, "Member 'UOrionTableView::bOverGrid' has a wrong offset!");
static_assert(offsetof(UOrionTableView, bOverScrollBar) == 0x000811, "Member 'UOrionTableView::bOverScrollBar' has a wrong offset!");
static_assert(offsetof(UOrionTableView, SelectedData) == 0x000818, "Member 'UOrionTableView::SelectedData' has a wrong offset!");

// Class OrionUI.OrionLoadGuard
// 0x00C8 (0x01D8 - 0x0110)
class UOrionLoadGuard final : public UContentWidget
{
public:
	UMulticastDelegateProperty_                   OnLoadingStateChanged;                             // 0x0110(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FSlateBrush                            LoadingBrush;                                      // 0x0120(0x0078)(Edit, NativeAccessSpecifierPrivate)
	EHorizontalAlignment                          ThrobberAlignment;                                 // 0x0198(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_199[0x7];                                      // 0x0199(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   LoadingText;                                       // 0x01A0(0x0018)(Edit, NativeAccessSpecifierPrivate)
	TSubclassOf<class UOrionTextStyle>            TextStyle;                                         // 0x01B8(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	EOrionWidgetStyleSize                         TextStyleSize;                                     // 0x01C0(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	EOrionTextColor                               TextColorType;                                     // 0x01C1(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_1C2[0x16];                                     // 0x01C2(0x0016)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void BP_GuardAndLoadAsset(const TSoftObjectPtr<class UObject>& InLazyAsset, const TDelegate<void(class UObject* Object)>& OnAssetLoaded);
	void OnAssetLoaded__DelegateSignature(class UObject* Object);
	void SetIsLoading(bool bInIsLoading);
	void SetLoadingText(const class FText& InLoadingText);

	bool IsLoading() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"OrionLoadGuard">();
	}
	static class UOrionLoadGuard* GetDefaultObj()
	{
		return GetDefaultObjImpl<UOrionLoadGuard>();
	}
};
static_assert(alignof(UOrionLoadGuard) == 0x000008, "Wrong alignment on UOrionLoadGuard");
static_assert(sizeof(UOrionLoadGuard) == 0x0001D8, "Wrong size on UOrionLoadGuard");
static_assert(offsetof(UOrionLoadGuard, OnLoadingStateChanged) == 0x000110, "Member 'UOrionLoadGuard::OnLoadingStateChanged' has a wrong offset!");
static_assert(offsetof(UOrionLoadGuard, LoadingBrush) == 0x000120, "Member 'UOrionLoadGuard::LoadingBrush' has a wrong offset!");
static_assert(offsetof(UOrionLoadGuard, ThrobberAlignment) == 0x000198, "Member 'UOrionLoadGuard::ThrobberAlignment' has a wrong offset!");
static_assert(offsetof(UOrionLoadGuard, LoadingText) == 0x0001A0, "Member 'UOrionLoadGuard::LoadingText' has a wrong offset!");
static_assert(offsetof(UOrionLoadGuard, TextStyle) == 0x0001B8, "Member 'UOrionLoadGuard::TextStyle' has a wrong offset!");
static_assert(offsetof(UOrionLoadGuard, TextStyleSize) == 0x0001C0, "Member 'UOrionLoadGuard::TextStyleSize' has a wrong offset!");
static_assert(offsetof(UOrionLoadGuard, TextColorType) == 0x0001C1, "Member 'UOrionLoadGuard::TextColorType' has a wrong offset!");

// Class OrionUI.OrionLoadingScreenProgress
// 0x0028 (0x02E0 - 0x02B8)
class UOrionLoadingScreenProgress : public UOrionUserWidgetBase
{
public:
	float                                         LoadingPercent;                                    // 0x02B8(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_2BC[0x4];                                      // 0x02BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UOrionGameTipsData*                     TipsData;                                          // 0x02C0(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionTextBlock*                        Text_LoadingPercent;                               // 0x02C8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionTextBlock*                        Text_LoadingTip;                                   // 0x02D0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_2D8[0x8];                                      // 0x02D8(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void DynamicHandleLoadingProgressUpdated(float InLoadingPercent);
	void HideTip();
	void OnProgressUpdate();
	void OnTipChanged();
	void ShowTip();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"OrionLoadingScreenProgress">();
	}
	static class UOrionLoadingScreenProgress* GetDefaultObj()
	{
		return GetDefaultObjImpl<UOrionLoadingScreenProgress>();
	}
};
static_assert(alignof(UOrionLoadingScreenProgress) == 0x000008, "Wrong alignment on UOrionLoadingScreenProgress");
static_assert(sizeof(UOrionLoadingScreenProgress) == 0x0002E0, "Wrong size on UOrionLoadingScreenProgress");
static_assert(offsetof(UOrionLoadingScreenProgress, LoadingPercent) == 0x0002B8, "Member 'UOrionLoadingScreenProgress::LoadingPercent' has a wrong offset!");
static_assert(offsetof(UOrionLoadingScreenProgress, TipsData) == 0x0002C0, "Member 'UOrionLoadingScreenProgress::TipsData' has a wrong offset!");
static_assert(offsetof(UOrionLoadingScreenProgress, Text_LoadingPercent) == 0x0002C8, "Member 'UOrionLoadingScreenProgress::Text_LoadingPercent' has a wrong offset!");
static_assert(offsetof(UOrionLoadingScreenProgress, Text_LoadingTip) == 0x0002D0, "Member 'UOrionLoadingScreenProgress::Text_LoadingTip' has a wrong offset!");

// Class OrionUI.OrionRespawnTimerWidget
// 0x0078 (0x0330 - 0x02B8)
class UOrionRespawnTimerWidget final : public UOrionUserWidgetBase
{
public:
	TArray<struct FOrionRespawnWidgetEntry>       RespawnEntries;                                    // 0x02B8(0x0010)(ZeroConstructor, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	class UCanvasPanel*                           CanvasPanel;                                       // 0x02C8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class UOrionRespawnTimerHeroIconWidget> HeroIconWidgetClass;                               // 0x02D0(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bIsFriendly;                                       // 0x02D8(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	EOrionTeam                                    MyTeam;                                            // 0x02D9(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_2DA[0x2];                                      // 0x02DA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         TargetMaxRespawnTime;                              // 0x02DC(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         MaxRespawnTime;                                    // 0x02E0(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                         ZOrder;                                            // 0x02E4(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector2D                              LeftPadding;                                       // 0x02E8(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector2D                              RightPadding;                                      // 0x02F0(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         UpdateFrequency;                                   // 0x02F8(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_2FC[0x4];                                      // 0x02FC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBorder*                                Border_AdvantageIndicator;                         // 0x0300(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UOrionTextBlock*                        Text_AdvantageSize;                                // 0x0308(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UOrionTextBlock*                        Text_AdvantageTimeRemaining;                       // 0x0310(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_318[0x18];                                     // 0x0318(0x0018)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void OnAdvantageBegun(int32 AdvantageSize, float AdvantageTimeRemaining);
	void OnAdvantageChanged(int32 NewAdvantageSize, float NewAdvantageTimeRemaining);
	void OnAdvantageEnded();
	void OnHeroDeath(const struct FOrionHUDTeamStatusInfo& UpdatedTeamInfo);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"OrionRespawnTimerWidget">();
	}
	static class UOrionRespawnTimerWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UOrionRespawnTimerWidget>();
	}
};
static_assert(alignof(UOrionRespawnTimerWidget) == 0x000008, "Wrong alignment on UOrionRespawnTimerWidget");
static_assert(sizeof(UOrionRespawnTimerWidget) == 0x000330, "Wrong size on UOrionRespawnTimerWidget");
static_assert(offsetof(UOrionRespawnTimerWidget, RespawnEntries) == 0x0002B8, "Member 'UOrionRespawnTimerWidget::RespawnEntries' has a wrong offset!");
static_assert(offsetof(UOrionRespawnTimerWidget, CanvasPanel) == 0x0002C8, "Member 'UOrionRespawnTimerWidget::CanvasPanel' has a wrong offset!");
static_assert(offsetof(UOrionRespawnTimerWidget, HeroIconWidgetClass) == 0x0002D0, "Member 'UOrionRespawnTimerWidget::HeroIconWidgetClass' has a wrong offset!");
static_assert(offsetof(UOrionRespawnTimerWidget, bIsFriendly) == 0x0002D8, "Member 'UOrionRespawnTimerWidget::bIsFriendly' has a wrong offset!");
static_assert(offsetof(UOrionRespawnTimerWidget, MyTeam) == 0x0002D9, "Member 'UOrionRespawnTimerWidget::MyTeam' has a wrong offset!");
static_assert(offsetof(UOrionRespawnTimerWidget, TargetMaxRespawnTime) == 0x0002DC, "Member 'UOrionRespawnTimerWidget::TargetMaxRespawnTime' has a wrong offset!");
static_assert(offsetof(UOrionRespawnTimerWidget, MaxRespawnTime) == 0x0002E0, "Member 'UOrionRespawnTimerWidget::MaxRespawnTime' has a wrong offset!");
static_assert(offsetof(UOrionRespawnTimerWidget, ZOrder) == 0x0002E4, "Member 'UOrionRespawnTimerWidget::ZOrder' has a wrong offset!");
static_assert(offsetof(UOrionRespawnTimerWidget, LeftPadding) == 0x0002E8, "Member 'UOrionRespawnTimerWidget::LeftPadding' has a wrong offset!");
static_assert(offsetof(UOrionRespawnTimerWidget, RightPadding) == 0x0002F0, "Member 'UOrionRespawnTimerWidget::RightPadding' has a wrong offset!");
static_assert(offsetof(UOrionRespawnTimerWidget, UpdateFrequency) == 0x0002F8, "Member 'UOrionRespawnTimerWidget::UpdateFrequency' has a wrong offset!");
static_assert(offsetof(UOrionRespawnTimerWidget, Border_AdvantageIndicator) == 0x000300, "Member 'UOrionRespawnTimerWidget::Border_AdvantageIndicator' has a wrong offset!");
static_assert(offsetof(UOrionRespawnTimerWidget, Text_AdvantageSize) == 0x000308, "Member 'UOrionRespawnTimerWidget::Text_AdvantageSize' has a wrong offset!");
static_assert(offsetof(UOrionRespawnTimerWidget, Text_AdvantageTimeRemaining) == 0x000310, "Member 'UOrionRespawnTimerWidget::Text_AdvantageTimeRemaining' has a wrong offset!");

// Class OrionUI.OrionLoadingScreenRoles
// 0x0008 (0x02C0 - 0x02B8)
class UOrionLoadingScreenRoles final : public UOrionUserWidgetBase
{
public:
	uint8                                         Pad_2B8[0x8];                                      // 0x02B8(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void DisplayRole(EOrionPosition Position, EOrionTeam Team);
	void ReadyToDisplay();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"OrionLoadingScreenRoles">();
	}
	static class UOrionLoadingScreenRoles* GetDefaultObj()
	{
		return GetDefaultObjImpl<UOrionLoadingScreenRoles>();
	}
};
static_assert(alignof(UOrionLoadingScreenRoles) == 0x000008, "Wrong alignment on UOrionLoadingScreenRoles");
static_assert(sizeof(UOrionLoadingScreenRoles) == 0x0002C0, "Wrong size on UOrionLoadingScreenRoles");

// Class OrionUI.OrionLootCrateOpeningScreen
// 0x0128 (0x0570 - 0x0448)
class UOrionLootCrateOpeningScreen final : public UOrionActivatableWidget
{
public:
	TSoftObjectPtr<class UTexture2D>              LazyDefaultTreasureImage;                          // 0x0448(0x0028)(Edit, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         PictureFlipRate;                                   // 0x0470(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_474[0x8];                                      // 0x0474(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         LegendaryCount;                                    // 0x047C(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                         EpicCount;                                         // 0x0480(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                         RareCount;                                         // 0x0484(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                         UncommonCount;                                     // 0x0488(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                         CommonCount;                                       // 0x048C(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_490[0x20];                                     // 0x0490(0x0020)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FOrionLootCrateResultEntryRow>  PotentialRewardStruct;                             // 0x04B0(0x0010)(ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	TArray<struct FOrionLootCrateResultEntryRow>  SpinnerItemArray;                                  // 0x04C0(0x0010)(ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	TArray<class UObject*>                        LoadedImages;                                      // 0x04D0(0x0010)(ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected)
	uint8                                         Pad_4E0[0x10];                                     // 0x04E0(0x0010)(Fixing Size After Last Property [ Dumper-7 ])
	class UScrollBox*                             ScrollBox_Rewards;                                 // 0x04F0(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionLazyImage*                        Image_RotatingReward;                              // 0x04F8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionMcpTypeRewardImage*               Reward_RotatingSubImage;                           // 0x0500(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionLazyImage*                        Image_FinalResult;                                 // 0x0508(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionGlowingRarityText*                GlowingText_RotatingReward;                        // 0x0510(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionTextBlock*                        Text_RewardName;                                   // 0x0518(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionTextBlock*                        Text_RewardType;                                   // 0x0520(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionGlowingRarityText*                GlowingText_FinalReward;                           // 0x0528(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionTextBlock*                        Text_FinalName;                                    // 0x0530(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionTextBlock*                        Text_FinalType;                                    // 0x0538(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionLootCrateRewardCategory*          Reward_Legendary;                                  // 0x0540(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionLootCrateRewardCategory*          Reward_Epic;                                       // 0x0548(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionLootCrateRewardCategory*          Reward_Rare;                                       // 0x0550(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionLootCrateRewardCategory*          Reward_Uncommon;                                   // 0x0558(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionLootCrateRewardCategory*          Reward_Common;                                     // 0x0560(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionMcpTypeRewardImage*               Reward_FinalSubImage;                              // 0x0568(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	void BeginOpen(bool bGolden);
	void BeginSpinnerSlowdown();
	void FinalSpinnerStop(EOrionItemRarity ItemRarity);
	void FireSpinner(const class UOrionMcpCardPackItem* PackToOpen, const TArray<struct FMcpLootEntry>& RewardArray);
	void NativeReset();
	void OnLootCratesUpdated();
	void OnNextItemShown(EOrionItemRarity ItemRarity, EOrionSpinState SpinState, bool bIsFinal);
	void OnPurchaseConfirmationClosed(bool bSuccess, const TArray<struct FStorePurchase>& PurchasedItems);
	void SetItemRarities(EOrionItemRarity ItemRarity);
	void SetScreenState(EOrionSpinState NewState);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"OrionLootCrateOpeningScreen">();
	}
	static class UOrionLootCrateOpeningScreen* GetDefaultObj()
	{
		return GetDefaultObjImpl<UOrionLootCrateOpeningScreen>();
	}
};
static_assert(alignof(UOrionLootCrateOpeningScreen) == 0x000008, "Wrong alignment on UOrionLootCrateOpeningScreen");
static_assert(sizeof(UOrionLootCrateOpeningScreen) == 0x000570, "Wrong size on UOrionLootCrateOpeningScreen");
static_assert(offsetof(UOrionLootCrateOpeningScreen, LazyDefaultTreasureImage) == 0x000448, "Member 'UOrionLootCrateOpeningScreen::LazyDefaultTreasureImage' has a wrong offset!");
static_assert(offsetof(UOrionLootCrateOpeningScreen, PictureFlipRate) == 0x000470, "Member 'UOrionLootCrateOpeningScreen::PictureFlipRate' has a wrong offset!");
static_assert(offsetof(UOrionLootCrateOpeningScreen, LegendaryCount) == 0x00047C, "Member 'UOrionLootCrateOpeningScreen::LegendaryCount' has a wrong offset!");
static_assert(offsetof(UOrionLootCrateOpeningScreen, EpicCount) == 0x000480, "Member 'UOrionLootCrateOpeningScreen::EpicCount' has a wrong offset!");
static_assert(offsetof(UOrionLootCrateOpeningScreen, RareCount) == 0x000484, "Member 'UOrionLootCrateOpeningScreen::RareCount' has a wrong offset!");
static_assert(offsetof(UOrionLootCrateOpeningScreen, UncommonCount) == 0x000488, "Member 'UOrionLootCrateOpeningScreen::UncommonCount' has a wrong offset!");
static_assert(offsetof(UOrionLootCrateOpeningScreen, CommonCount) == 0x00048C, "Member 'UOrionLootCrateOpeningScreen::CommonCount' has a wrong offset!");
static_assert(offsetof(UOrionLootCrateOpeningScreen, PotentialRewardStruct) == 0x0004B0, "Member 'UOrionLootCrateOpeningScreen::PotentialRewardStruct' has a wrong offset!");
static_assert(offsetof(UOrionLootCrateOpeningScreen, SpinnerItemArray) == 0x0004C0, "Member 'UOrionLootCrateOpeningScreen::SpinnerItemArray' has a wrong offset!");
static_assert(offsetof(UOrionLootCrateOpeningScreen, LoadedImages) == 0x0004D0, "Member 'UOrionLootCrateOpeningScreen::LoadedImages' has a wrong offset!");
static_assert(offsetof(UOrionLootCrateOpeningScreen, ScrollBox_Rewards) == 0x0004F0, "Member 'UOrionLootCrateOpeningScreen::ScrollBox_Rewards' has a wrong offset!");
static_assert(offsetof(UOrionLootCrateOpeningScreen, Image_RotatingReward) == 0x0004F8, "Member 'UOrionLootCrateOpeningScreen::Image_RotatingReward' has a wrong offset!");
static_assert(offsetof(UOrionLootCrateOpeningScreen, Reward_RotatingSubImage) == 0x000500, "Member 'UOrionLootCrateOpeningScreen::Reward_RotatingSubImage' has a wrong offset!");
static_assert(offsetof(UOrionLootCrateOpeningScreen, Image_FinalResult) == 0x000508, "Member 'UOrionLootCrateOpeningScreen::Image_FinalResult' has a wrong offset!");
static_assert(offsetof(UOrionLootCrateOpeningScreen, GlowingText_RotatingReward) == 0x000510, "Member 'UOrionLootCrateOpeningScreen::GlowingText_RotatingReward' has a wrong offset!");
static_assert(offsetof(UOrionLootCrateOpeningScreen, Text_RewardName) == 0x000518, "Member 'UOrionLootCrateOpeningScreen::Text_RewardName' has a wrong offset!");
static_assert(offsetof(UOrionLootCrateOpeningScreen, Text_RewardType) == 0x000520, "Member 'UOrionLootCrateOpeningScreen::Text_RewardType' has a wrong offset!");
static_assert(offsetof(UOrionLootCrateOpeningScreen, GlowingText_FinalReward) == 0x000528, "Member 'UOrionLootCrateOpeningScreen::GlowingText_FinalReward' has a wrong offset!");
static_assert(offsetof(UOrionLootCrateOpeningScreen, Text_FinalName) == 0x000530, "Member 'UOrionLootCrateOpeningScreen::Text_FinalName' has a wrong offset!");
static_assert(offsetof(UOrionLootCrateOpeningScreen, Text_FinalType) == 0x000538, "Member 'UOrionLootCrateOpeningScreen::Text_FinalType' has a wrong offset!");
static_assert(offsetof(UOrionLootCrateOpeningScreen, Reward_Legendary) == 0x000540, "Member 'UOrionLootCrateOpeningScreen::Reward_Legendary' has a wrong offset!");
static_assert(offsetof(UOrionLootCrateOpeningScreen, Reward_Epic) == 0x000548, "Member 'UOrionLootCrateOpeningScreen::Reward_Epic' has a wrong offset!");
static_assert(offsetof(UOrionLootCrateOpeningScreen, Reward_Rare) == 0x000550, "Member 'UOrionLootCrateOpeningScreen::Reward_Rare' has a wrong offset!");
static_assert(offsetof(UOrionLootCrateOpeningScreen, Reward_Uncommon) == 0x000558, "Member 'UOrionLootCrateOpeningScreen::Reward_Uncommon' has a wrong offset!");
static_assert(offsetof(UOrionLootCrateOpeningScreen, Reward_Common) == 0x000560, "Member 'UOrionLootCrateOpeningScreen::Reward_Common' has a wrong offset!");
static_assert(offsetof(UOrionLootCrateOpeningScreen, Reward_FinalSubImage) == 0x000568, "Member 'UOrionLootCrateOpeningScreen::Reward_FinalSubImage' has a wrong offset!");

// Class OrionUI.OrionStateWidget_InitialPreload
// 0x0000 (0x02E0 - 0x02E0)
class UOrionStateWidget_InitialPreload : public UOrionStateWidget_UpdateBase
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"OrionStateWidget_InitialPreload">();
	}
	static class UOrionStateWidget_InitialPreload* GetDefaultObj()
	{
		return GetDefaultObjImpl<UOrionStateWidget_InitialPreload>();
	}
};
static_assert(alignof(UOrionStateWidget_InitialPreload) == 0x000008, "Wrong alignment on UOrionStateWidget_InitialPreload");
static_assert(sizeof(UOrionStateWidget_InitialPreload) == 0x0002E0, "Wrong size on UOrionStateWidget_InitialPreload");

// Class OrionUI.OrionLootCrateRewardCategory
// 0x0028 (0x02E0 - 0x02B8)
class UOrionLootCrateRewardCategory final : public UOrionUserWidgetBase
{
public:
	TArray<class UOrionMcpItemDefinition*>        RewardDataProvider;                                // 0x02B8(0x0010)(ZeroConstructor, NativeAccessSpecifierPublic)
	class UOrionTileView*                         TileView_Items;                                    // 0x02C8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionGlowingRarityText*                GlowingRarity_Text;                                // 0x02D0(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_2D8[0x8];                                      // 0x02D8(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"OrionLootCrateRewardCategory">();
	}
	static class UOrionLootCrateRewardCategory* GetDefaultObj()
	{
		return GetDefaultObjImpl<UOrionLootCrateRewardCategory>();
	}
};
static_assert(alignof(UOrionLootCrateRewardCategory) == 0x000008, "Wrong alignment on UOrionLootCrateRewardCategory");
static_assert(sizeof(UOrionLootCrateRewardCategory) == 0x0002E0, "Wrong size on UOrionLootCrateRewardCategory");
static_assert(offsetof(UOrionLootCrateRewardCategory, RewardDataProvider) == 0x0002B8, "Member 'UOrionLootCrateRewardCategory::RewardDataProvider' has a wrong offset!");
static_assert(offsetof(UOrionLootCrateRewardCategory, TileView_Items) == 0x0002C8, "Member 'UOrionLootCrateRewardCategory::TileView_Items' has a wrong offset!");
static_assert(offsetof(UOrionLootCrateRewardCategory, GlowingRarity_Text) == 0x0002D0, "Member 'UOrionLootCrateRewardCategory::GlowingRarity_Text' has a wrong offset!");

// Class OrionUI.OrionLootCrateAllItems
// 0x0088 (0x04D0 - 0x0448)
class UOrionLootCrateAllItems final : public UOrionActivatableWidget
{
public:
	uint8                                         Pad_448[0x78];                                     // 0x0448(0x0078)(Fixing Size After Last Property [ Dumper-7 ])
	class UOrionTileView*                         TileView_AllItems;                                 // 0x04C0(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionDefaultButton*                    Button_Close;                                      // 0x04C8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	void HandleItemClicked(class UObject* Item);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"OrionLootCrateAllItems">();
	}
	static class UOrionLootCrateAllItems* GetDefaultObj()
	{
		return GetDefaultObjImpl<UOrionLootCrateAllItems>();
	}
};
static_assert(alignof(UOrionLootCrateAllItems) == 0x000008, "Wrong alignment on UOrionLootCrateAllItems");
static_assert(sizeof(UOrionLootCrateAllItems) == 0x0004D0, "Wrong size on UOrionLootCrateAllItems");
static_assert(offsetof(UOrionLootCrateAllItems, TileView_AllItems) == 0x0004C0, "Member 'UOrionLootCrateAllItems::TileView_AllItems' has a wrong offset!");
static_assert(offsetof(UOrionLootCrateAllItems, Button_Close) == 0x0004C8, "Member 'UOrionLootCrateAllItems::Button_Close' has a wrong offset!");

// Class OrionUI.OrionRewardImage
// 0x0040 (0x0A20 - 0x09E0)
class UOrionRewardImage final : public UOrionBaseButton
{
public:
	uint8                                         Pad_9E0[0x8];                                      // 0x09E0(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	TSubclassOf<class UOrionRewardTooltip>        RewardTooltipClass;                                // 0x09E8(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bGenerateTooltip;                                  // 0x09F0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_9F1[0x7];                                      // 0x09F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UOrionMcpItemDefinition*                ItemDef;                                           // 0x09F8(0x0008)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionLazyImage*                        LazyImage_HeroPortrait;                            // 0x0A00(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UBorder*                                Border_EyebrowText;                                // 0x0A08(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionMcpTypeRewardImage*               Reward_ImageSwitcher;                              // 0x0A10(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_A18[0x8];                                      // 0x0A18(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"OrionRewardImage">();
	}
	static class UOrionRewardImage* GetDefaultObj()
	{
		return GetDefaultObjImpl<UOrionRewardImage>();
	}
};
static_assert(alignof(UOrionRewardImage) == 0x000008, "Wrong alignment on UOrionRewardImage");
static_assert(sizeof(UOrionRewardImage) == 0x000A20, "Wrong size on UOrionRewardImage");
static_assert(offsetof(UOrionRewardImage, RewardTooltipClass) == 0x0009E8, "Member 'UOrionRewardImage::RewardTooltipClass' has a wrong offset!");
static_assert(offsetof(UOrionRewardImage, bGenerateTooltip) == 0x0009F0, "Member 'UOrionRewardImage::bGenerateTooltip' has a wrong offset!");
static_assert(offsetof(UOrionRewardImage, ItemDef) == 0x0009F8, "Member 'UOrionRewardImage::ItemDef' has a wrong offset!");
static_assert(offsetof(UOrionRewardImage, LazyImage_HeroPortrait) == 0x000A00, "Member 'UOrionRewardImage::LazyImage_HeroPortrait' has a wrong offset!");
static_assert(offsetof(UOrionRewardImage, Border_EyebrowText) == 0x000A08, "Member 'UOrionRewardImage::Border_EyebrowText' has a wrong offset!");
static_assert(offsetof(UOrionRewardImage, Reward_ImageSwitcher) == 0x000A10, "Member 'UOrionRewardImage::Reward_ImageSwitcher' has a wrong offset!");

// Class OrionUI.OrionLootCrateRewardItem
// 0x0020 (0x0A00 - 0x09E0)
class UOrionLootCrateRewardItem final : public UOrionBaseButton
{
public:
	uint8                                         Pad_9E0[0x10];                                     // 0x09E0(0x0010)(Fixing Size After Last Property [ Dumper-7 ])
	class UOrionRewardWidget*                     Reward_Widget;                                     // 0x09F0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_9F8[0x8];                                      // 0x09F8(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void OnSetActive(bool bActive);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"OrionLootCrateRewardItem">();
	}
	static class UOrionLootCrateRewardItem* GetDefaultObj()
	{
		return GetDefaultObjImpl<UOrionLootCrateRewardItem>();
	}
};
static_assert(alignof(UOrionLootCrateRewardItem) == 0x000008, "Wrong alignment on UOrionLootCrateRewardItem");
static_assert(sizeof(UOrionLootCrateRewardItem) == 0x000A00, "Wrong size on UOrionLootCrateRewardItem");
static_assert(offsetof(UOrionLootCrateRewardItem, Reward_Widget) == 0x0009F0, "Member 'UOrionLootCrateRewardItem::Reward_Widget' has a wrong offset!");

// Class OrionUI.OrionLootCrateSelectionScreen
// 0x00A8 (0x04F0 - 0x0448)
class UOrionLootCrateSelectionScreen final : public UOrionActivatableWidget
{
public:
	int32                                         MaxEntries;                                        // 0x0448(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_44C[0x4];                                      // 0x044C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   BannerPreviewActorId;                              // 0x0450(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_458[0x18];                                     // 0x0458(0x0018)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UOrionRewardWidgetListData*>     AllRewardItems;                                    // 0x0470(0x0010)(ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected)
	class UOrionTextBlock*                        Text_CrateQuantity;                                // 0x0480(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionRewardWidget*                     Reward_Key;                                        // 0x0488(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionTextBlock*                        Text_KeyQuantity;                                  // 0x0490(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionRewardWidget*                     Reward_GoldenKey;                                  // 0x0498(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionTextBlock*                        Text_GoldenKeyQuantity;                            // 0x04A0(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionDynamicEntryBox*                  EntryBox_Rewards;                                  // 0x04A8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionDefaultButton*                    Button_Open;                                       // 0x04B0(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionDefaultButton*                    Button_Prev;                                       // 0x04B8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionDefaultButton*                    Button_Next;                                       // 0x04C0(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionDefaultButton*                    Button_SeeAll;                                     // 0x04C8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionLootCrateAllItems*                Dialog_AllItems;                                   // 0x04D0(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionTextBlock*                        Text_RewardName;                                   // 0x04D8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionTextBlock*                        Text_RewardType;                                   // 0x04E0(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionTextBlock*                        Text_NoPreview;                                    // 0x04E8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"OrionLootCrateSelectionScreen">();
	}
	static class UOrionLootCrateSelectionScreen* GetDefaultObj()
	{
		return GetDefaultObjImpl<UOrionLootCrateSelectionScreen>();
	}
};
static_assert(alignof(UOrionLootCrateSelectionScreen) == 0x000008, "Wrong alignment on UOrionLootCrateSelectionScreen");
static_assert(sizeof(UOrionLootCrateSelectionScreen) == 0x0004F0, "Wrong size on UOrionLootCrateSelectionScreen");
static_assert(offsetof(UOrionLootCrateSelectionScreen, MaxEntries) == 0x000448, "Member 'UOrionLootCrateSelectionScreen::MaxEntries' has a wrong offset!");
static_assert(offsetof(UOrionLootCrateSelectionScreen, BannerPreviewActorId) == 0x000450, "Member 'UOrionLootCrateSelectionScreen::BannerPreviewActorId' has a wrong offset!");
static_assert(offsetof(UOrionLootCrateSelectionScreen, AllRewardItems) == 0x000470, "Member 'UOrionLootCrateSelectionScreen::AllRewardItems' has a wrong offset!");
static_assert(offsetof(UOrionLootCrateSelectionScreen, Text_CrateQuantity) == 0x000480, "Member 'UOrionLootCrateSelectionScreen::Text_CrateQuantity' has a wrong offset!");
static_assert(offsetof(UOrionLootCrateSelectionScreen, Reward_Key) == 0x000488, "Member 'UOrionLootCrateSelectionScreen::Reward_Key' has a wrong offset!");
static_assert(offsetof(UOrionLootCrateSelectionScreen, Text_KeyQuantity) == 0x000490, "Member 'UOrionLootCrateSelectionScreen::Text_KeyQuantity' has a wrong offset!");
static_assert(offsetof(UOrionLootCrateSelectionScreen, Reward_GoldenKey) == 0x000498, "Member 'UOrionLootCrateSelectionScreen::Reward_GoldenKey' has a wrong offset!");
static_assert(offsetof(UOrionLootCrateSelectionScreen, Text_GoldenKeyQuantity) == 0x0004A0, "Member 'UOrionLootCrateSelectionScreen::Text_GoldenKeyQuantity' has a wrong offset!");
static_assert(offsetof(UOrionLootCrateSelectionScreen, EntryBox_Rewards) == 0x0004A8, "Member 'UOrionLootCrateSelectionScreen::EntryBox_Rewards' has a wrong offset!");
static_assert(offsetof(UOrionLootCrateSelectionScreen, Button_Open) == 0x0004B0, "Member 'UOrionLootCrateSelectionScreen::Button_Open' has a wrong offset!");
static_assert(offsetof(UOrionLootCrateSelectionScreen, Button_Prev) == 0x0004B8, "Member 'UOrionLootCrateSelectionScreen::Button_Prev' has a wrong offset!");
static_assert(offsetof(UOrionLootCrateSelectionScreen, Button_Next) == 0x0004C0, "Member 'UOrionLootCrateSelectionScreen::Button_Next' has a wrong offset!");
static_assert(offsetof(UOrionLootCrateSelectionScreen, Button_SeeAll) == 0x0004C8, "Member 'UOrionLootCrateSelectionScreen::Button_SeeAll' has a wrong offset!");
static_assert(offsetof(UOrionLootCrateSelectionScreen, Dialog_AllItems) == 0x0004D0, "Member 'UOrionLootCrateSelectionScreen::Dialog_AllItems' has a wrong offset!");
static_assert(offsetof(UOrionLootCrateSelectionScreen, Text_RewardName) == 0x0004D8, "Member 'UOrionLootCrateSelectionScreen::Text_RewardName' has a wrong offset!");
static_assert(offsetof(UOrionLootCrateSelectionScreen, Text_RewardType) == 0x0004E0, "Member 'UOrionLootCrateSelectionScreen::Text_RewardType' has a wrong offset!");
static_assert(offsetof(UOrionLootCrateSelectionScreen, Text_NoPreview) == 0x0004E8, "Member 'UOrionLootCrateSelectionScreen::Text_NoPreview' has a wrong offset!");

// Class OrionUI.OrionTileDataBlock
// 0x00C8 (0x0380 - 0x02B8)
class UOrionTileDataBlock final : public UOrionUserWidgetBase
{
public:
	TSubclassOf<class UOrionTextStyle>            FeaturedTitleTextStyle;                            // 0x02B8(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_2C0[0x10];                                     // 0x02C0(0x0010)(Fixing Size After Last Property [ Dumper-7 ])
	class UOrionTextBlock*                        TitleTextBlock;                                    // 0x02D0(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionTextBlock*                        SubtitleTextBlock;                                 // 0x02D8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionRichText*                         RichText_Price;                                    // 0x02E0(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionRichText*                         RichText_Price2;                                   // 0x02E8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UPanelWidget*                           Panel_BasePriceInfo;                               // 0x02F0(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionRichText*                         RichText_BasePrice;                                // 0x02F8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UHorizontalBox*                         HBox_Prices;                                       // 0x0300(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionLazyImage*                        LazyImage_OfferIcon;                               // 0x0308(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UWidget*                                MediaContentContainer;                             // 0x0310(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class USizeBox*                               Box_Variations;                                    // 0x0318(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionTextBlock*                        Text_VariationCount;                               // 0x0320(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionMcpTypeRewardImage*               Image_McpType;                                     // 0x0328(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_330[0x8];                                      // 0x0330(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                TitleAreaContainer;                                // 0x0338(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UBorder*                                Border_UpperTitleArea;                             // 0x0340(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UBorder*                                Border_LowerTitleArea;                             // 0x0348(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UBorder*                                Border_RightTitleArea;                             // 0x0350(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UBorder*                                Border_LeftTitleArea;                              // 0x0358(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class USpacer*                                Spacer_UpperTitleArea;                             // 0x0360(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class USpacer*                                Spacer_LowerTitleArea;                             // 0x0368(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class USpacer*                                Spacer_RightTitleArea;                             // 0x0370(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class USpacer*                                Spacer_LeftTitleArea;                              // 0x0378(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	void ApplyTextPositionPreference();
	void DynamicHandleIconLoadingStateChanged(bool bIsLoading);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"OrionTileDataBlock">();
	}
	static class UOrionTileDataBlock* GetDefaultObj()
	{
		return GetDefaultObjImpl<UOrionTileDataBlock>();
	}
};
static_assert(alignof(UOrionTileDataBlock) == 0x000008, "Wrong alignment on UOrionTileDataBlock");
static_assert(sizeof(UOrionTileDataBlock) == 0x000380, "Wrong size on UOrionTileDataBlock");
static_assert(offsetof(UOrionTileDataBlock, FeaturedTitleTextStyle) == 0x0002B8, "Member 'UOrionTileDataBlock::FeaturedTitleTextStyle' has a wrong offset!");
static_assert(offsetof(UOrionTileDataBlock, TitleTextBlock) == 0x0002D0, "Member 'UOrionTileDataBlock::TitleTextBlock' has a wrong offset!");
static_assert(offsetof(UOrionTileDataBlock, SubtitleTextBlock) == 0x0002D8, "Member 'UOrionTileDataBlock::SubtitleTextBlock' has a wrong offset!");
static_assert(offsetof(UOrionTileDataBlock, RichText_Price) == 0x0002E0, "Member 'UOrionTileDataBlock::RichText_Price' has a wrong offset!");
static_assert(offsetof(UOrionTileDataBlock, RichText_Price2) == 0x0002E8, "Member 'UOrionTileDataBlock::RichText_Price2' has a wrong offset!");
static_assert(offsetof(UOrionTileDataBlock, Panel_BasePriceInfo) == 0x0002F0, "Member 'UOrionTileDataBlock::Panel_BasePriceInfo' has a wrong offset!");
static_assert(offsetof(UOrionTileDataBlock, RichText_BasePrice) == 0x0002F8, "Member 'UOrionTileDataBlock::RichText_BasePrice' has a wrong offset!");
static_assert(offsetof(UOrionTileDataBlock, HBox_Prices) == 0x000300, "Member 'UOrionTileDataBlock::HBox_Prices' has a wrong offset!");
static_assert(offsetof(UOrionTileDataBlock, LazyImage_OfferIcon) == 0x000308, "Member 'UOrionTileDataBlock::LazyImage_OfferIcon' has a wrong offset!");
static_assert(offsetof(UOrionTileDataBlock, MediaContentContainer) == 0x000310, "Member 'UOrionTileDataBlock::MediaContentContainer' has a wrong offset!");
static_assert(offsetof(UOrionTileDataBlock, Box_Variations) == 0x000318, "Member 'UOrionTileDataBlock::Box_Variations' has a wrong offset!");
static_assert(offsetof(UOrionTileDataBlock, Text_VariationCount) == 0x000320, "Member 'UOrionTileDataBlock::Text_VariationCount' has a wrong offset!");
static_assert(offsetof(UOrionTileDataBlock, Image_McpType) == 0x000328, "Member 'UOrionTileDataBlock::Image_McpType' has a wrong offset!");
static_assert(offsetof(UOrionTileDataBlock, TitleAreaContainer) == 0x000338, "Member 'UOrionTileDataBlock::TitleAreaContainer' has a wrong offset!");
static_assert(offsetof(UOrionTileDataBlock, Border_UpperTitleArea) == 0x000340, "Member 'UOrionTileDataBlock::Border_UpperTitleArea' has a wrong offset!");
static_assert(offsetof(UOrionTileDataBlock, Border_LowerTitleArea) == 0x000348, "Member 'UOrionTileDataBlock::Border_LowerTitleArea' has a wrong offset!");
static_assert(offsetof(UOrionTileDataBlock, Border_RightTitleArea) == 0x000350, "Member 'UOrionTileDataBlock::Border_RightTitleArea' has a wrong offset!");
static_assert(offsetof(UOrionTileDataBlock, Border_LeftTitleArea) == 0x000358, "Member 'UOrionTileDataBlock::Border_LeftTitleArea' has a wrong offset!");
static_assert(offsetof(UOrionTileDataBlock, Spacer_UpperTitleArea) == 0x000360, "Member 'UOrionTileDataBlock::Spacer_UpperTitleArea' has a wrong offset!");
static_assert(offsetof(UOrionTileDataBlock, Spacer_LowerTitleArea) == 0x000368, "Member 'UOrionTileDataBlock::Spacer_LowerTitleArea' has a wrong offset!");
static_assert(offsetof(UOrionTileDataBlock, Spacer_RightTitleArea) == 0x000370, "Member 'UOrionTileDataBlock::Spacer_RightTitleArea' has a wrong offset!");
static_assert(offsetof(UOrionTileDataBlock, Spacer_LeftTitleArea) == 0x000378, "Member 'UOrionTileDataBlock::Spacer_LeftTitleArea' has a wrong offset!");

// Class OrionUI.OrionMajorGameEventDisplay
// 0x0040 (0x0330 - 0x02F0)
class UOrionMajorGameEventDisplay final : public UOrionHUDWidgetBase
{
public:
	float                                         MaxMessageDisplayTime;                             // 0x02F0(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_2F4[0x24];                                     // 0x02F4(0x0024)(Fixing Size After Last Property [ Dumper-7 ])
	class UOrionLazyImage*                        LazyImage_Icon;                                    // 0x0318(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionTextBlock*                        Text_EventMessage;                                 // 0x0320(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionRichText*                         RichText_AdditionalMessage;                        // 0x0328(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	void NotifyDisplayComplete();
	void OnShowEventMessage(bool bIsGoodForTeam);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"OrionMajorGameEventDisplay">();
	}
	static class UOrionMajorGameEventDisplay* GetDefaultObj()
	{
		return GetDefaultObjImpl<UOrionMajorGameEventDisplay>();
	}
};
static_assert(alignof(UOrionMajorGameEventDisplay) == 0x000008, "Wrong alignment on UOrionMajorGameEventDisplay");
static_assert(sizeof(UOrionMajorGameEventDisplay) == 0x000330, "Wrong size on UOrionMajorGameEventDisplay");
static_assert(offsetof(UOrionMajorGameEventDisplay, MaxMessageDisplayTime) == 0x0002F0, "Member 'UOrionMajorGameEventDisplay::MaxMessageDisplayTime' has a wrong offset!");
static_assert(offsetof(UOrionMajorGameEventDisplay, LazyImage_Icon) == 0x000318, "Member 'UOrionMajorGameEventDisplay::LazyImage_Icon' has a wrong offset!");
static_assert(offsetof(UOrionMajorGameEventDisplay, Text_EventMessage) == 0x000320, "Member 'UOrionMajorGameEventDisplay::Text_EventMessage' has a wrong offset!");
static_assert(offsetof(UOrionMajorGameEventDisplay, RichText_AdditionalMessage) == 0x000328, "Member 'UOrionMajorGameEventDisplay::RichText_AdditionalMessage' has a wrong offset!");

// Class OrionUI.OrionMapMessageFeedEntry
// 0x0020 (0x03B0 - 0x0390)
class UOrionMapMessageFeedEntry final : public UOrionInfoFeedEntryBase
{
public:
	uint8                                         Pad_390[0x10];                                     // 0x0390(0x0010)(Fixing Size After Last Property [ Dumper-7 ])
	class UOrionLazyImage*                        LazyImage_Icon;                                    // 0x03A0(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionTextBlock*                        Text_Message;                                      // 0x03A8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	void OnCampSpawned();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"OrionMapMessageFeedEntry">();
	}
	static class UOrionMapMessageFeedEntry* GetDefaultObj()
	{
		return GetDefaultObjImpl<UOrionMapMessageFeedEntry>();
	}
};
static_assert(alignof(UOrionMapMessageFeedEntry) == 0x000008, "Wrong alignment on UOrionMapMessageFeedEntry");
static_assert(sizeof(UOrionMapMessageFeedEntry) == 0x0003B0, "Wrong size on UOrionMapMessageFeedEntry");
static_assert(offsetof(UOrionMapMessageFeedEntry, LazyImage_Icon) == 0x0003A0, "Member 'UOrionMapMessageFeedEntry::LazyImage_Icon' has a wrong offset!");
static_assert(offsetof(UOrionMapMessageFeedEntry, Text_Message) == 0x0003A8, "Member 'UOrionMapMessageFeedEntry::Text_Message' has a wrong offset!");

// Class OrionUI.OrionRewardTooltipItem
// 0x0040 (0x0240 - 0x0200)
class UOrionRewardTooltipItem : public UUserWidget
{
public:
	TSubclassOf<class UOrionPossibleRewardsArray> PossibleRewardsArrayClass;                         // 0x0200(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_208[0x10];                                     // 0x0208(0x0010)(Fixing Size After Last Property [ Dumper-7 ])
	class UOrionTextBlock*                        Text_RewardName;                                   // 0x0218(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionTextBlock*                        Text_RewardDesc;                                   // 0x0220(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionTextBlock*                        Text_RewardType;                                   // 0x0228(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionTextBlock*                        Text_RewardContext;                                // 0x0230(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOverlay*                               Overlay_PossibleRewards;                           // 0x0238(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	void LoadPossibleRewards();
	void OnDataSet(EOrionItemRarity ItemRarity);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"OrionRewardTooltipItem">();
	}
	static class UOrionRewardTooltipItem* GetDefaultObj()
	{
		return GetDefaultObjImpl<UOrionRewardTooltipItem>();
	}
};
static_assert(alignof(UOrionRewardTooltipItem) == 0x000008, "Wrong alignment on UOrionRewardTooltipItem");
static_assert(sizeof(UOrionRewardTooltipItem) == 0x000240, "Wrong size on UOrionRewardTooltipItem");
static_assert(offsetof(UOrionRewardTooltipItem, PossibleRewardsArrayClass) == 0x000200, "Member 'UOrionRewardTooltipItem::PossibleRewardsArrayClass' has a wrong offset!");
static_assert(offsetof(UOrionRewardTooltipItem, Text_RewardName) == 0x000218, "Member 'UOrionRewardTooltipItem::Text_RewardName' has a wrong offset!");
static_assert(offsetof(UOrionRewardTooltipItem, Text_RewardDesc) == 0x000220, "Member 'UOrionRewardTooltipItem::Text_RewardDesc' has a wrong offset!");
static_assert(offsetof(UOrionRewardTooltipItem, Text_RewardType) == 0x000228, "Member 'UOrionRewardTooltipItem::Text_RewardType' has a wrong offset!");
static_assert(offsetof(UOrionRewardTooltipItem, Text_RewardContext) == 0x000230, "Member 'UOrionRewardTooltipItem::Text_RewardContext' has a wrong offset!");
static_assert(offsetof(UOrionRewardTooltipItem, Overlay_PossibleRewards) == 0x000238, "Member 'UOrionRewardTooltipItem::Overlay_PossibleRewards' has a wrong offset!");

// Class OrionUI.OrionMapMessageFeed
// 0x0000 (0x0310 - 0x0310)
class UOrionMapMessageFeed final : public UOrionHUDInfoFeedBase
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"OrionMapMessageFeed">();
	}
	static class UOrionMapMessageFeed* GetDefaultObj()
	{
		return GetDefaultObjImpl<UOrionMapMessageFeed>();
	}
};
static_assert(alignof(UOrionMapMessageFeed) == 0x000008, "Wrong alignment on UOrionMapMessageFeed");
static_assert(sizeof(UOrionMapMessageFeed) == 0x000310, "Wrong size on UOrionMapMessageFeed");

// Class OrionUI.OrionMasteryLevelDisplay
// 0x0020 (0x0220 - 0x0200)
class UOrionMasteryLevelDisplay : public UUserWidget
{
public:
	class UOrionTextBlock*                        Text_MasteryDescription;                           // 0x0200(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionTextBlock*                        Text_Level;                                        // 0x0208(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionTextBlock*                        Text_XPRequired;                                   // 0x0210(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionProgressBar*                      Progress_Level;                                    // 0x0218(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	void OnLevelSet(bool bProgressLocked);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"OrionMasteryLevelDisplay">();
	}
	static class UOrionMasteryLevelDisplay* GetDefaultObj()
	{
		return GetDefaultObjImpl<UOrionMasteryLevelDisplay>();
	}
};
static_assert(alignof(UOrionMasteryLevelDisplay) == 0x000008, "Wrong alignment on UOrionMasteryLevelDisplay");
static_assert(sizeof(UOrionMasteryLevelDisplay) == 0x000220, "Wrong size on UOrionMasteryLevelDisplay");
static_assert(offsetof(UOrionMasteryLevelDisplay, Text_MasteryDescription) == 0x000200, "Member 'UOrionMasteryLevelDisplay::Text_MasteryDescription' has a wrong offset!");
static_assert(offsetof(UOrionMasteryLevelDisplay, Text_Level) == 0x000208, "Member 'UOrionMasteryLevelDisplay::Text_Level' has a wrong offset!");
static_assert(offsetof(UOrionMasteryLevelDisplay, Text_XPRequired) == 0x000210, "Member 'UOrionMasteryLevelDisplay::Text_XPRequired' has a wrong offset!");
static_assert(offsetof(UOrionMasteryLevelDisplay, Progress_Level) == 0x000218, "Member 'UOrionMasteryLevelDisplay::Progress_Level' has a wrong offset!");

// Class OrionUI.OrionStorefront
// 0x0108 (0x0550 - 0x0448)
class UOrionStorefront : public UOrionActivatableWidget
{
public:
	class FName                                   SceneCamera;                                       // 0x0448(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EOrionStoreFront                              StorefrontType;                                    // 0x0450(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_451[0x7];                                      // 0x0451(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSubclassOf<class UOrionBaseTile>             OfferWidgetClass;                                  // 0x0458(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int32                                         OfferWidth;                                        // 0x0460(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int32                                         OfferHeight;                                       // 0x0464(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FMargin                                OfferPadding;                                      // 0x0468(0x0010)(Edit, NoDestructor, NativeAccessSpecifierPrivate)
	EItemAlignment                                OfferItemAlignment;                                // 0x0478(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	ESortPriority                                 SortPriority;                                      // 0x0479(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_47A[0xC6];                                     // 0x047A(0x00C6)(Fixing Size After Last Property [ Dumper-7 ])
	class UOrionLoadGuard*                        LoadGuard;                                         // 0x0540(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class USizeBox*                               Box_OfferTileViewContainer;                        // 0x0548(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	void HandleOfferConfirmed(bool bSuccess);
	void MoveToItem();
	void OnCatalogFlushed();
	void OnOfferConfirmed(bool bSuccess);
	void OnRefreshStorefront();
	void RefreshStorefront();
	void SetStorefrontType(EOrionStoreFront InStorefrontType);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"OrionStorefront">();
	}
	static class UOrionStorefront* GetDefaultObj()
	{
		return GetDefaultObjImpl<UOrionStorefront>();
	}
};
static_assert(alignof(UOrionStorefront) == 0x000008, "Wrong alignment on UOrionStorefront");
static_assert(sizeof(UOrionStorefront) == 0x000550, "Wrong size on UOrionStorefront");
static_assert(offsetof(UOrionStorefront, SceneCamera) == 0x000448, "Member 'UOrionStorefront::SceneCamera' has a wrong offset!");
static_assert(offsetof(UOrionStorefront, StorefrontType) == 0x000450, "Member 'UOrionStorefront::StorefrontType' has a wrong offset!");
static_assert(offsetof(UOrionStorefront, OfferWidgetClass) == 0x000458, "Member 'UOrionStorefront::OfferWidgetClass' has a wrong offset!");
static_assert(offsetof(UOrionStorefront, OfferWidth) == 0x000460, "Member 'UOrionStorefront::OfferWidth' has a wrong offset!");
static_assert(offsetof(UOrionStorefront, OfferHeight) == 0x000464, "Member 'UOrionStorefront::OfferHeight' has a wrong offset!");
static_assert(offsetof(UOrionStorefront, OfferPadding) == 0x000468, "Member 'UOrionStorefront::OfferPadding' has a wrong offset!");
static_assert(offsetof(UOrionStorefront, OfferItemAlignment) == 0x000478, "Member 'UOrionStorefront::OfferItemAlignment' has a wrong offset!");
static_assert(offsetof(UOrionStorefront, SortPriority) == 0x000479, "Member 'UOrionStorefront::SortPriority' has a wrong offset!");
static_assert(offsetof(UOrionStorefront, LoadGuard) == 0x000540, "Member 'UOrionStorefront::LoadGuard' has a wrong offset!");
static_assert(offsetof(UOrionStorefront, Box_OfferTileViewContainer) == 0x000548, "Member 'UOrionStorefront::Box_OfferTileViewContainer' has a wrong offset!");

// Class OrionUI.OrionMasteryOnboardPopupRoot
// 0x0048 (0x0490 - 0x0448)
class UOrionMasteryOnboardPopupRoot final : public UOrionActivatableWidget
{
public:
	uint8                                         Pad_448[0x10];                                     // 0x0448(0x0010)(Fixing Size After Last Property [ Dumper-7 ])
	class UOrionMcpItemDefinition*                FreeHeroTokenDefintion;                            // 0x0458(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionMasteryOnboardPopupSelectRole*    Mastery_SelectRoleWidget;                          // 0x0460(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionMasteryOnboardPopupConfirmation*  Mastery_ConfirmationWidget;                        // 0x0468(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionMasteryOnboardPopupCongratulations* Mastery_CongratulationsWidget;                     // 0x0470(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionTextBlock*                        Text_FractionText;                                 // 0x0478(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionMasteryRankDisplay*               Mastery_RankProgress;                              // 0x0480(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_488[0x8];                                      // 0x0488(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void OnShowConfirmationPage();
	void OnShowCongratulationsPage();
	void OnShowSelectionPage();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"OrionMasteryOnboardPopupRoot">();
	}
	static class UOrionMasteryOnboardPopupRoot* GetDefaultObj()
	{
		return GetDefaultObjImpl<UOrionMasteryOnboardPopupRoot>();
	}
};
static_assert(alignof(UOrionMasteryOnboardPopupRoot) == 0x000008, "Wrong alignment on UOrionMasteryOnboardPopupRoot");
static_assert(sizeof(UOrionMasteryOnboardPopupRoot) == 0x000490, "Wrong size on UOrionMasteryOnboardPopupRoot");
static_assert(offsetof(UOrionMasteryOnboardPopupRoot, FreeHeroTokenDefintion) == 0x000458, "Member 'UOrionMasteryOnboardPopupRoot::FreeHeroTokenDefintion' has a wrong offset!");
static_assert(offsetof(UOrionMasteryOnboardPopupRoot, Mastery_SelectRoleWidget) == 0x000460, "Member 'UOrionMasteryOnboardPopupRoot::Mastery_SelectRoleWidget' has a wrong offset!");
static_assert(offsetof(UOrionMasteryOnboardPopupRoot, Mastery_ConfirmationWidget) == 0x000468, "Member 'UOrionMasteryOnboardPopupRoot::Mastery_ConfirmationWidget' has a wrong offset!");
static_assert(offsetof(UOrionMasteryOnboardPopupRoot, Mastery_CongratulationsWidget) == 0x000470, "Member 'UOrionMasteryOnboardPopupRoot::Mastery_CongratulationsWidget' has a wrong offset!");
static_assert(offsetof(UOrionMasteryOnboardPopupRoot, Text_FractionText) == 0x000478, "Member 'UOrionMasteryOnboardPopupRoot::Text_FractionText' has a wrong offset!");
static_assert(offsetof(UOrionMasteryOnboardPopupRoot, Mastery_RankProgress) == 0x000480, "Member 'UOrionMasteryOnboardPopupRoot::Mastery_RankProgress' has a wrong offset!");

// Class OrionUI.OrionMasteryOnboardPopupSelectRole
// 0x00A8 (0x04F0 - 0x0448)
class UOrionMasteryOnboardPopupSelectRole final : public UOrionActivatableWidget
{
public:
	uint8                                         Pad_448[0x80];                                     // 0x0448(0x0080)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FRoleHeroPair>                  RoleData;                                          // 0x04C8(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPrivate)
	uint8                                         Pad_4D8[0x18];                                     // 0x04D8(0x0018)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	int32 GetNumFreeMasteriesUsed();
	void SetRoleWidgetsArray(const TArray<class UOrionMasteryOnboardHeroRolePair*>& InHeroRolePairWidgets);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"OrionMasteryOnboardPopupSelectRole">();
	}
	static class UOrionMasteryOnboardPopupSelectRole* GetDefaultObj()
	{
		return GetDefaultObjImpl<UOrionMasteryOnboardPopupSelectRole>();
	}
};
static_assert(alignof(UOrionMasteryOnboardPopupSelectRole) == 0x000008, "Wrong alignment on UOrionMasteryOnboardPopupSelectRole");
static_assert(sizeof(UOrionMasteryOnboardPopupSelectRole) == 0x0004F0, "Wrong size on UOrionMasteryOnboardPopupSelectRole");
static_assert(offsetof(UOrionMasteryOnboardPopupSelectRole, RoleData) == 0x0004C8, "Member 'UOrionMasteryOnboardPopupSelectRole::RoleData' has a wrong offset!");

// Class OrionUI.OrionMasteryOnboardPopupConfirmation
// 0x0048 (0x0490 - 0x0448)
class UOrionMasteryOnboardPopupConfirmation final : public UOrionActivatableWidget
{
public:
	class UOrionHeroListItem*                     HeroListItem_SelectedHero;                         // 0x0448(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionDefaultButton*                    Button_Cancel;                                     // 0x0450(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionDefaultButton*                    Button_Accept;                                     // 0x0458(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionTextBlock*                        Text_Role;                                         // 0x0460(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionTextBlock*                        Text_Hero;                                         // 0x0468(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionRichText*                         TextRich_Description;                              // 0x0470(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionRichText*                         TextRich_RoleDescription;                          // 0x0478(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UImage*                                 Image_Role;                                        // 0x0480(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_488[0x8];                                      // 0x0488(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"OrionMasteryOnboardPopupConfirmation">();
	}
	static class UOrionMasteryOnboardPopupConfirmation* GetDefaultObj()
	{
		return GetDefaultObjImpl<UOrionMasteryOnboardPopupConfirmation>();
	}
};
static_assert(alignof(UOrionMasteryOnboardPopupConfirmation) == 0x000008, "Wrong alignment on UOrionMasteryOnboardPopupConfirmation");
static_assert(sizeof(UOrionMasteryOnboardPopupConfirmation) == 0x000490, "Wrong size on UOrionMasteryOnboardPopupConfirmation");
static_assert(offsetof(UOrionMasteryOnboardPopupConfirmation, HeroListItem_SelectedHero) == 0x000448, "Member 'UOrionMasteryOnboardPopupConfirmation::HeroListItem_SelectedHero' has a wrong offset!");
static_assert(offsetof(UOrionMasteryOnboardPopupConfirmation, Button_Cancel) == 0x000450, "Member 'UOrionMasteryOnboardPopupConfirmation::Button_Cancel' has a wrong offset!");
static_assert(offsetof(UOrionMasteryOnboardPopupConfirmation, Button_Accept) == 0x000458, "Member 'UOrionMasteryOnboardPopupConfirmation::Button_Accept' has a wrong offset!");
static_assert(offsetof(UOrionMasteryOnboardPopupConfirmation, Text_Role) == 0x000460, "Member 'UOrionMasteryOnboardPopupConfirmation::Text_Role' has a wrong offset!");
static_assert(offsetof(UOrionMasteryOnboardPopupConfirmation, Text_Hero) == 0x000468, "Member 'UOrionMasteryOnboardPopupConfirmation::Text_Hero' has a wrong offset!");
static_assert(offsetof(UOrionMasteryOnboardPopupConfirmation, TextRich_Description) == 0x000470, "Member 'UOrionMasteryOnboardPopupConfirmation::TextRich_Description' has a wrong offset!");
static_assert(offsetof(UOrionMasteryOnboardPopupConfirmation, TextRich_RoleDescription) == 0x000478, "Member 'UOrionMasteryOnboardPopupConfirmation::TextRich_RoleDescription' has a wrong offset!");
static_assert(offsetof(UOrionMasteryOnboardPopupConfirmation, Image_Role) == 0x000480, "Member 'UOrionMasteryOnboardPopupConfirmation::Image_Role' has a wrong offset!");

// Class OrionUI.OrionMasteryOnboardHeroRolePair
// 0x0058 (0x04A0 - 0x0448)
class UOrionMasteryOnboardHeroRolePair final : public UOrionActivatableWidget
{
public:
	uint8                                         Pad_448[0x30];                                     // 0x0448(0x0030)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture2D*                             RoleImage;                                         // 0x0478(0x0008)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionHeroListItem*                     HeroListItem_SelectedHero;                         // 0x0480(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionTextBlock*                        Text_RoleText;                                     // 0x0488(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UImage*                                 Image_Role;                                        // 0x0490(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_498[0x8];                                      // 0x0498(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	bool HeroMasteryOwned();
	void OnChangeInHeroSelectability(bool bIsSelectable);
	void OnRecommendChange(bool bIsRecommended);
	void SetHero(const class UOrionHeroData* InHeroPtr);
	void SetRoleText(const class FText& NewRoleText);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"OrionMasteryOnboardHeroRolePair">();
	}
	static class UOrionMasteryOnboardHeroRolePair* GetDefaultObj()
	{
		return GetDefaultObjImpl<UOrionMasteryOnboardHeroRolePair>();
	}
};
static_assert(alignof(UOrionMasteryOnboardHeroRolePair) == 0x000008, "Wrong alignment on UOrionMasteryOnboardHeroRolePair");
static_assert(sizeof(UOrionMasteryOnboardHeroRolePair) == 0x0004A0, "Wrong size on UOrionMasteryOnboardHeroRolePair");
static_assert(offsetof(UOrionMasteryOnboardHeroRolePair, RoleImage) == 0x000478, "Member 'UOrionMasteryOnboardHeroRolePair::RoleImage' has a wrong offset!");
static_assert(offsetof(UOrionMasteryOnboardHeroRolePair, HeroListItem_SelectedHero) == 0x000480, "Member 'UOrionMasteryOnboardHeroRolePair::HeroListItem_SelectedHero' has a wrong offset!");
static_assert(offsetof(UOrionMasteryOnboardHeroRolePair, Text_RoleText) == 0x000488, "Member 'UOrionMasteryOnboardHeroRolePair::Text_RoleText' has a wrong offset!");
static_assert(offsetof(UOrionMasteryOnboardHeroRolePair, Image_Role) == 0x000490, "Member 'UOrionMasteryOnboardHeroRolePair::Image_Role' has a wrong offset!");

// Class OrionUI.OrionMatchTimerWidget
// 0x0060 (0x0350 - 0x02F0)
class UOrionMatchTimerWidget final : public UOrionHUDWidgetBase
{
public:
	class UTextBlock*                             TimeText;                                          // 0x02F0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FText                                   LessThanAnHourFormat;                              // 0x02F8(0x0018)(Protected, NativeAccessSpecifierProtected)
	class FText                                   MoreThanAnHourFormat;                              // 0x0310(0x0018)(Protected, NativeAccessSpecifierProtected)
	uint8                                         Pad_328[0x28];                                     // 0x0328(0x0028)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"OrionMatchTimerWidget">();
	}
	static class UOrionMatchTimerWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UOrionMatchTimerWidget>();
	}
};
static_assert(alignof(UOrionMatchTimerWidget) == 0x000008, "Wrong alignment on UOrionMatchTimerWidget");
static_assert(sizeof(UOrionMatchTimerWidget) == 0x000350, "Wrong size on UOrionMatchTimerWidget");
static_assert(offsetof(UOrionMatchTimerWidget, TimeText) == 0x0002F0, "Member 'UOrionMatchTimerWidget::TimeText' has a wrong offset!");
static_assert(offsetof(UOrionMatchTimerWidget, LessThanAnHourFormat) == 0x0002F8, "Member 'UOrionMatchTimerWidget::LessThanAnHourFormat' has a wrong offset!");
static_assert(offsetof(UOrionMatchTimerWidget, MoreThanAnHourFormat) == 0x000310, "Member 'UOrionMatchTimerWidget::MoreThanAnHourFormat' has a wrong offset!");

// Class OrionUI.OrionMcpUIUtils
// 0x0000 (0x0028 - 0x0028)
class UOrionMcpUIUtils final : public UBlueprintFunctionLibrary
{
public:
	static bool ClearNewItem(class UUserWidget* Widget, const class UOrionMcpItem* InItem);
	static bool IsItemNew(class UUserWidget* Widget, const class UOrionMcpItem* InItem);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"OrionMcpUIUtils">();
	}
	static class UOrionMcpUIUtils* GetDefaultObj()
	{
		return GetDefaultObjImpl<UOrionMcpUIUtils>();
	}
};
static_assert(alignof(UOrionMcpUIUtils) == 0x000008, "Wrong alignment on UOrionMcpUIUtils");
static_assert(sizeof(UOrionMcpUIUtils) == 0x000028, "Wrong size on UOrionMcpUIUtils");

// Class OrionUI.OrionMilestoneCarouselPanel
// 0x0028 (0x02E0 - 0x02B8)
class UOrionMilestoneCarouselPanel final : public UOrionUserWidgetBase
{
public:
	uint8                                         Pad_2B8[0x8];                                      // 0x02B8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	class UOrionRewardWidget*                     Reward0;                                           // 0x02C0(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionRewardWidget*                     Reward1;                                           // 0x02C8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionRewardWidget*                     Reward2;                                           // 0x02D0(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_2D8[0x8];                                      // 0x02D8(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"OrionMilestoneCarouselPanel">();
	}
	static class UOrionMilestoneCarouselPanel* GetDefaultObj()
	{
		return GetDefaultObjImpl<UOrionMilestoneCarouselPanel>();
	}
};
static_assert(alignof(UOrionMilestoneCarouselPanel) == 0x000008, "Wrong alignment on UOrionMilestoneCarouselPanel");
static_assert(sizeof(UOrionMilestoneCarouselPanel) == 0x0002E0, "Wrong size on UOrionMilestoneCarouselPanel");
static_assert(offsetof(UOrionMilestoneCarouselPanel, Reward0) == 0x0002C0, "Member 'UOrionMilestoneCarouselPanel::Reward0' has a wrong offset!");
static_assert(offsetof(UOrionMilestoneCarouselPanel, Reward1) == 0x0002C8, "Member 'UOrionMilestoneCarouselPanel::Reward1' has a wrong offset!");
static_assert(offsetof(UOrionMilestoneCarouselPanel, Reward2) == 0x0002D0, "Member 'UOrionMilestoneCarouselPanel::Reward2' has a wrong offset!");

// Class OrionUI.OrionMilestoneRewardCarousel
// 0x0038 (0x02F0 - 0x02B8)
class UOrionMilestoneRewardCarousel final : public UOrionUserWidgetBase
{
public:
	TSubclassOf<class UOrionMilestoneCarouselPanel> MilestoneCarouselPanelClass;                       // 0x02B8(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                         RewardWidgetPadding;                               // 0x02C0(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                         AutoScrollSeconds;                                 // 0x02C4(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UOrionWidgetCarousel*                   Carousel;                                          // 0x02C8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionCarouselRadioButtons*             RadioButtons;                                      // 0x02D0(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionDefaultButton*                    Button_Left;                                       // 0x02D8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionDefaultButton*                    Button_Right;                                      // 0x02E0(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_2E8[0x8];                                      // 0x02E8(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void OnLeftClicked();
	void OnPipClicked(int32 PipIdx);
	void OnRightClicked();
	void OnScroll();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"OrionMilestoneRewardCarousel">();
	}
	static class UOrionMilestoneRewardCarousel* GetDefaultObj()
	{
		return GetDefaultObjImpl<UOrionMilestoneRewardCarousel>();
	}
};
static_assert(alignof(UOrionMilestoneRewardCarousel) == 0x000008, "Wrong alignment on UOrionMilestoneRewardCarousel");
static_assert(sizeof(UOrionMilestoneRewardCarousel) == 0x0002F0, "Wrong size on UOrionMilestoneRewardCarousel");
static_assert(offsetof(UOrionMilestoneRewardCarousel, MilestoneCarouselPanelClass) == 0x0002B8, "Member 'UOrionMilestoneRewardCarousel::MilestoneCarouselPanelClass' has a wrong offset!");
static_assert(offsetof(UOrionMilestoneRewardCarousel, RewardWidgetPadding) == 0x0002C0, "Member 'UOrionMilestoneRewardCarousel::RewardWidgetPadding' has a wrong offset!");
static_assert(offsetof(UOrionMilestoneRewardCarousel, AutoScrollSeconds) == 0x0002C4, "Member 'UOrionMilestoneRewardCarousel::AutoScrollSeconds' has a wrong offset!");
static_assert(offsetof(UOrionMilestoneRewardCarousel, Carousel) == 0x0002C8, "Member 'UOrionMilestoneRewardCarousel::Carousel' has a wrong offset!");
static_assert(offsetof(UOrionMilestoneRewardCarousel, RadioButtons) == 0x0002D0, "Member 'UOrionMilestoneRewardCarousel::RadioButtons' has a wrong offset!");
static_assert(offsetof(UOrionMilestoneRewardCarousel, Button_Left) == 0x0002D8, "Member 'UOrionMilestoneRewardCarousel::Button_Left' has a wrong offset!");
static_assert(offsetof(UOrionMilestoneRewardCarousel, Button_Right) == 0x0002E0, "Member 'UOrionMilestoneRewardCarousel::Button_Right' has a wrong offset!");

// Class OrionUI.OrionMilestoneRewardWidgetBase
// 0x0058 (0x04A0 - 0x0448)
class UOrionMilestoneRewardWidgetBase final : public UOrionActivatableWidget
{
public:
	uint8                                         Pad_448[0x14];                                     // 0x0448(0x0014)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         RewardWidgetScale;                                 // 0x045C(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UOrionDynamicEntryBox*                  Box_Rewards;                                       // 0x0460(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionMilestoneRewardProgress*          Reward_MilestoneProgress;                          // 0x0468(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionBlurWidget*                       Blur_NoChestWarning;                               // 0x0470(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionRichText*                         Text_Week;                                         // 0x0478(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionTextBlock*                        Text_Title;                                        // 0x0480(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionRewardWidget*                     Reward_ToClaim;                                    // 0x0488(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionDefaultButton*                    Button_VaultOpen;                                  // 0x0490(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_498[0x8];                                      // 0x0498(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void AnimateInClaimState();
	void AnimateOutClaimState();
	void DynamicHandlePostMatchShown();
	void OnBeginPips();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"OrionMilestoneRewardWidgetBase">();
	}
	static class UOrionMilestoneRewardWidgetBase* GetDefaultObj()
	{
		return GetDefaultObjImpl<UOrionMilestoneRewardWidgetBase>();
	}
};
static_assert(alignof(UOrionMilestoneRewardWidgetBase) == 0x000008, "Wrong alignment on UOrionMilestoneRewardWidgetBase");
static_assert(sizeof(UOrionMilestoneRewardWidgetBase) == 0x0004A0, "Wrong size on UOrionMilestoneRewardWidgetBase");
static_assert(offsetof(UOrionMilestoneRewardWidgetBase, RewardWidgetScale) == 0x00045C, "Member 'UOrionMilestoneRewardWidgetBase::RewardWidgetScale' has a wrong offset!");
static_assert(offsetof(UOrionMilestoneRewardWidgetBase, Box_Rewards) == 0x000460, "Member 'UOrionMilestoneRewardWidgetBase::Box_Rewards' has a wrong offset!");
static_assert(offsetof(UOrionMilestoneRewardWidgetBase, Reward_MilestoneProgress) == 0x000468, "Member 'UOrionMilestoneRewardWidgetBase::Reward_MilestoneProgress' has a wrong offset!");
static_assert(offsetof(UOrionMilestoneRewardWidgetBase, Blur_NoChestWarning) == 0x000470, "Member 'UOrionMilestoneRewardWidgetBase::Blur_NoChestWarning' has a wrong offset!");
static_assert(offsetof(UOrionMilestoneRewardWidgetBase, Text_Week) == 0x000478, "Member 'UOrionMilestoneRewardWidgetBase::Text_Week' has a wrong offset!");
static_assert(offsetof(UOrionMilestoneRewardWidgetBase, Text_Title) == 0x000480, "Member 'UOrionMilestoneRewardWidgetBase::Text_Title' has a wrong offset!");
static_assert(offsetof(UOrionMilestoneRewardWidgetBase, Reward_ToClaim) == 0x000488, "Member 'UOrionMilestoneRewardWidgetBase::Reward_ToClaim' has a wrong offset!");
static_assert(offsetof(UOrionMilestoneRewardWidgetBase, Button_VaultOpen) == 0x000490, "Member 'UOrionMilestoneRewardWidgetBase::Button_VaultOpen' has a wrong offset!");

// Class OrionUI.OrionMuteMenuRow
// 0x0098 (0x0350 - 0x02B8)
class UOrionMuteMenuRow final : public UOrionUserWidgetBase
{
public:
	EOrionUIAnalyticsTrackingLevel                MuteButtonClickedTrackingLevel;                    // 0x02B8(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_2B9[0x7];                                      // 0x02B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   MuteButtonText;                                    // 0x02C0(0x0018)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	class FText                                   UnMuteButtonText;                                  // 0x02D8(0x0018)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	class UOrionTextBlock*                        HeroNameText;                                      // 0x02F0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UOrionTextBlock*                        PlayerNameText;                                    // 0x02F8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                 HeroIcon;                                          // 0x0300(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UOrionDefaultButton*                    MuteButton;                                        // 0x0308(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FOrionMuteInfo                         PreviousMuteInfo;                                  // 0x0310(0x0040)(Protected, NativeAccessSpecifierProtected)

public:
	void OnMutePressed();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"OrionMuteMenuRow">();
	}
	static class UOrionMuteMenuRow* GetDefaultObj()
	{
		return GetDefaultObjImpl<UOrionMuteMenuRow>();
	}
};
static_assert(alignof(UOrionMuteMenuRow) == 0x000008, "Wrong alignment on UOrionMuteMenuRow");
static_assert(sizeof(UOrionMuteMenuRow) == 0x000350, "Wrong size on UOrionMuteMenuRow");
static_assert(offsetof(UOrionMuteMenuRow, MuteButtonClickedTrackingLevel) == 0x0002B8, "Member 'UOrionMuteMenuRow::MuteButtonClickedTrackingLevel' has a wrong offset!");
static_assert(offsetof(UOrionMuteMenuRow, MuteButtonText) == 0x0002C0, "Member 'UOrionMuteMenuRow::MuteButtonText' has a wrong offset!");
static_assert(offsetof(UOrionMuteMenuRow, UnMuteButtonText) == 0x0002D8, "Member 'UOrionMuteMenuRow::UnMuteButtonText' has a wrong offset!");
static_assert(offsetof(UOrionMuteMenuRow, HeroNameText) == 0x0002F0, "Member 'UOrionMuteMenuRow::HeroNameText' has a wrong offset!");
static_assert(offsetof(UOrionMuteMenuRow, PlayerNameText) == 0x0002F8, "Member 'UOrionMuteMenuRow::PlayerNameText' has a wrong offset!");
static_assert(offsetof(UOrionMuteMenuRow, HeroIcon) == 0x000300, "Member 'UOrionMuteMenuRow::HeroIcon' has a wrong offset!");
static_assert(offsetof(UOrionMuteMenuRow, MuteButton) == 0x000308, "Member 'UOrionMuteMenuRow::MuteButton' has a wrong offset!");
static_assert(offsetof(UOrionMuteMenuRow, PreviousMuteInfo) == 0x000310, "Member 'UOrionMuteMenuRow::PreviousMuteInfo' has a wrong offset!");

// Class OrionUI.OrionNewCardsUpdatePopup
// 0x00A8 (0x04F0 - 0x0448)
class UOrionNewCardsUpdatePopup final : public UOrionActivatableWidget
{
public:
	TArray<class UOrionMcpItemDefinition*>        CardPacks;                                         // 0x0448(0x0010)(Edit, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	TArray<class UOrionMcpItemDefinition*>        Components;                                        // 0x0458(0x0010)(Edit, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	class UOrionHeroData*                         PreviewHero;                                       // 0x0468(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                         ControlsIndex;                                     // 0x0470(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                         AccountLevelIndex;                                 // 0x0474(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UOrionDefaultButton*                    Button_Next;                                       // 0x0478(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionDefaultButton*                    Button_Previous;                                   // 0x0480(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionTextBlock*                        Text_CardCount;                                    // 0x0488(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionTextBlock*                        Text_CardPackCount;                                // 0x0490(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionTextBlock*                        Text_ComponentCount;                               // 0x0498(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionTextBlock*                        Text_VeteranChestCount;                            // 0x04A0(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionTextBlock*                        Text_FoundersBonus;                                // 0x04A8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionTextBlock*                        Text_AccountLevel;                                 // 0x04B0(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionTextBlock*                        Text_AccountLevelShadow;                           // 0x04B8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionTextBlock*                        Text_Next;                                         // 0x04C0(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UHorizontalBox*                         HBox_Previous;                                     // 0x04C8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionHeroListItem*                     Hero_PreviewHero;                                  // 0x04D0(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionTileView*                         TileView_UpdatedHeroes;                            // 0x04D8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UVerticalBox*                           VBox_UpdatedHeroes;                                // 0x04E0(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionWidgetSwitcher*                   Switcher_Tabs;                                     // 0x04E8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	int32 GetMasteryChestCount();
	void OnNext();
	void OnPrevious();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"OrionNewCardsUpdatePopup">();
	}
	static class UOrionNewCardsUpdatePopup* GetDefaultObj()
	{
		return GetDefaultObjImpl<UOrionNewCardsUpdatePopup>();
	}
};
static_assert(alignof(UOrionNewCardsUpdatePopup) == 0x000008, "Wrong alignment on UOrionNewCardsUpdatePopup");
static_assert(sizeof(UOrionNewCardsUpdatePopup) == 0x0004F0, "Wrong size on UOrionNewCardsUpdatePopup");
static_assert(offsetof(UOrionNewCardsUpdatePopup, CardPacks) == 0x000448, "Member 'UOrionNewCardsUpdatePopup::CardPacks' has a wrong offset!");
static_assert(offsetof(UOrionNewCardsUpdatePopup, Components) == 0x000458, "Member 'UOrionNewCardsUpdatePopup::Components' has a wrong offset!");
static_assert(offsetof(UOrionNewCardsUpdatePopup, PreviewHero) == 0x000468, "Member 'UOrionNewCardsUpdatePopup::PreviewHero' has a wrong offset!");
static_assert(offsetof(UOrionNewCardsUpdatePopup, ControlsIndex) == 0x000470, "Member 'UOrionNewCardsUpdatePopup::ControlsIndex' has a wrong offset!");
static_assert(offsetof(UOrionNewCardsUpdatePopup, AccountLevelIndex) == 0x000474, "Member 'UOrionNewCardsUpdatePopup::AccountLevelIndex' has a wrong offset!");
static_assert(offsetof(UOrionNewCardsUpdatePopup, Button_Next) == 0x000478, "Member 'UOrionNewCardsUpdatePopup::Button_Next' has a wrong offset!");
static_assert(offsetof(UOrionNewCardsUpdatePopup, Button_Previous) == 0x000480, "Member 'UOrionNewCardsUpdatePopup::Button_Previous' has a wrong offset!");
static_assert(offsetof(UOrionNewCardsUpdatePopup, Text_CardCount) == 0x000488, "Member 'UOrionNewCardsUpdatePopup::Text_CardCount' has a wrong offset!");
static_assert(offsetof(UOrionNewCardsUpdatePopup, Text_CardPackCount) == 0x000490, "Member 'UOrionNewCardsUpdatePopup::Text_CardPackCount' has a wrong offset!");
static_assert(offsetof(UOrionNewCardsUpdatePopup, Text_ComponentCount) == 0x000498, "Member 'UOrionNewCardsUpdatePopup::Text_ComponentCount' has a wrong offset!");
static_assert(offsetof(UOrionNewCardsUpdatePopup, Text_VeteranChestCount) == 0x0004A0, "Member 'UOrionNewCardsUpdatePopup::Text_VeteranChestCount' has a wrong offset!");
static_assert(offsetof(UOrionNewCardsUpdatePopup, Text_FoundersBonus) == 0x0004A8, "Member 'UOrionNewCardsUpdatePopup::Text_FoundersBonus' has a wrong offset!");
static_assert(offsetof(UOrionNewCardsUpdatePopup, Text_AccountLevel) == 0x0004B0, "Member 'UOrionNewCardsUpdatePopup::Text_AccountLevel' has a wrong offset!");
static_assert(offsetof(UOrionNewCardsUpdatePopup, Text_AccountLevelShadow) == 0x0004B8, "Member 'UOrionNewCardsUpdatePopup::Text_AccountLevelShadow' has a wrong offset!");
static_assert(offsetof(UOrionNewCardsUpdatePopup, Text_Next) == 0x0004C0, "Member 'UOrionNewCardsUpdatePopup::Text_Next' has a wrong offset!");
static_assert(offsetof(UOrionNewCardsUpdatePopup, HBox_Previous) == 0x0004C8, "Member 'UOrionNewCardsUpdatePopup::HBox_Previous' has a wrong offset!");
static_assert(offsetof(UOrionNewCardsUpdatePopup, Hero_PreviewHero) == 0x0004D0, "Member 'UOrionNewCardsUpdatePopup::Hero_PreviewHero' has a wrong offset!");
static_assert(offsetof(UOrionNewCardsUpdatePopup, TileView_UpdatedHeroes) == 0x0004D8, "Member 'UOrionNewCardsUpdatePopup::TileView_UpdatedHeroes' has a wrong offset!");
static_assert(offsetof(UOrionNewCardsUpdatePopup, VBox_UpdatedHeroes) == 0x0004E0, "Member 'UOrionNewCardsUpdatePopup::VBox_UpdatedHeroes' has a wrong offset!");
static_assert(offsetof(UOrionNewCardsUpdatePopup, Switcher_Tabs) == 0x0004E8, "Member 'UOrionNewCardsUpdatePopup::Switcher_Tabs' has a wrong offset!");

// Class OrionUI.OrionNumberPicker
// 0x00A8 (0x0360 - 0x02B8)
class UOrionNumberPicker final : public UOrionUserWidgetBase
{
public:
	int32                                         CurrentValue;                                      // 0x02B8(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_2BC[0x84];                                     // 0x02BC(0x0084)(Fixing Size After Last Property [ Dumper-7 ])
	class UOrionBaseButton*                       Button_Minus;                                      // 0x0340(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionBaseButton*                       Button_Plus;                                       // 0x0348(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionTextBlock*                        Text_Value;                                        // 0x0350(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_358[0x8];                                      // 0x0358(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void OnValueChanged_BP(int32 NewValue, bool bIncreased);

	int32 GetCurrentValue() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"OrionNumberPicker">();
	}
	static class UOrionNumberPicker* GetDefaultObj()
	{
		return GetDefaultObjImpl<UOrionNumberPicker>();
	}
};
static_assert(alignof(UOrionNumberPicker) == 0x000008, "Wrong alignment on UOrionNumberPicker");
static_assert(sizeof(UOrionNumberPicker) == 0x000360, "Wrong size on UOrionNumberPicker");
static_assert(offsetof(UOrionNumberPicker, CurrentValue) == 0x0002B8, "Member 'UOrionNumberPicker::CurrentValue' has a wrong offset!");
static_assert(offsetof(UOrionNumberPicker, Button_Minus) == 0x000340, "Member 'UOrionNumberPicker::Button_Minus' has a wrong offset!");
static_assert(offsetof(UOrionNumberPicker, Button_Plus) == 0x000348, "Member 'UOrionNumberPicker::Button_Plus' has a wrong offset!");
static_assert(offsetof(UOrionNumberPicker, Text_Value) == 0x000350, "Member 'UOrionNumberPicker::Text_Value' has a wrong offset!");

// Class OrionUI.OrionOfferTile
// 0x0008 (0x0BA0 - 0x0B98)
class UOrionOfferTile final : public UOrionBaseTile
{
public:
	class USaleBannerBase*                        SaleBanner;                                        // 0x0B98(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"OrionOfferTile">();
	}
	static class UOrionOfferTile* GetDefaultObj()
	{
		return GetDefaultObjImpl<UOrionOfferTile>();
	}
};
static_assert(alignof(UOrionOfferTile) == 0x000008, "Wrong alignment on UOrionOfferTile");
static_assert(sizeof(UOrionOfferTile) == 0x000BA0, "Wrong size on UOrionOfferTile");
static_assert(offsetof(UOrionOfferTile, SaleBanner) == 0x000B98, "Member 'UOrionOfferTile::SaleBanner' has a wrong offset!");

// Class OrionUI.OrionPackOpenScreen_Chests
// 0x0028 (0x04C0 - 0x0498)
class UOrionPackOpenScreen_Chests final : public UOrionItemPackOpeningScreen
{
public:
	int32                                         LargeRewardCountThreshold;                         // 0x0498(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_49C[0xC];                                      // 0x049C(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	class UOrionTextBlock*                        Text_NumChestsLeft;                                // 0x04A8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionDynamicEntryBox*                  EntryBox_Rewards;                                  // 0x04B0(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionDynamicEntryBox*                  EntryBox_ManyRewards;                              // 0x04B8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	void NotifyRewardAccepted();
	void NotifyRewardOutroComplete();
	void OnLargeRewardCount(bool bUseLargeRewardBox);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"OrionPackOpenScreen_Chests">();
	}
	static class UOrionPackOpenScreen_Chests* GetDefaultObj()
	{
		return GetDefaultObjImpl<UOrionPackOpenScreen_Chests>();
	}
};
static_assert(alignof(UOrionPackOpenScreen_Chests) == 0x000008, "Wrong alignment on UOrionPackOpenScreen_Chests");
static_assert(sizeof(UOrionPackOpenScreen_Chests) == 0x0004C0, "Wrong size on UOrionPackOpenScreen_Chests");
static_assert(offsetof(UOrionPackOpenScreen_Chests, LargeRewardCountThreshold) == 0x000498, "Member 'UOrionPackOpenScreen_Chests::LargeRewardCountThreshold' has a wrong offset!");
static_assert(offsetof(UOrionPackOpenScreen_Chests, Text_NumChestsLeft) == 0x0004A8, "Member 'UOrionPackOpenScreen_Chests::Text_NumChestsLeft' has a wrong offset!");
static_assert(offsetof(UOrionPackOpenScreen_Chests, EntryBox_Rewards) == 0x0004B0, "Member 'UOrionPackOpenScreen_Chests::EntryBox_Rewards' has a wrong offset!");
static_assert(offsetof(UOrionPackOpenScreen_Chests, EntryBox_ManyRewards) == 0x0004B8, "Member 'UOrionPackOpenScreen_Chests::EntryBox_ManyRewards' has a wrong offset!");

// Class OrionUI.OrionPlayerActionPrompt
// 0x0028 (0x02E0 - 0x02B8)
class UOrionPlayerActionPrompt final : public UOrionUserWidgetBase
{
public:
	float                                         SpendCoinMsgLengthInSeconds;                       // 0x02B8(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_2BC[0x24];                                     // 0x02BC(0x0024)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void DynamicHandlePlayerDeath(const struct FOrionHUDTeamStatusInfo& NewTeamInfo);
	void SetCallToAction(EPlayerActionPromptMessage ActionPrompt);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"OrionPlayerActionPrompt">();
	}
	static class UOrionPlayerActionPrompt* GetDefaultObj()
	{
		return GetDefaultObjImpl<UOrionPlayerActionPrompt>();
	}
};
static_assert(alignof(UOrionPlayerActionPrompt) == 0x000008, "Wrong alignment on UOrionPlayerActionPrompt");
static_assert(sizeof(UOrionPlayerActionPrompt) == 0x0002E0, "Wrong size on UOrionPlayerActionPrompt");
static_assert(offsetof(UOrionPlayerActionPrompt, SpendCoinMsgLengthInSeconds) == 0x0002B8, "Member 'UOrionPlayerActionPrompt::SpendCoinMsgLengthInSeconds' has a wrong offset!");

// Class OrionUI.OrionPlayerRateMenu
// 0x0028 (0x0470 - 0x0448)
class UOrionPlayerRateMenu : public UOrionActivatableWidget
{
public:
	TSubclassOf<class UOrionButtonStyle>          Style;                                             // 0x0448(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSubclassOf<class UOrionDefaultButton>        DefaultButtonClass;                                // 0x0450(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UHorizontalBox*                         PositiveRow;                                       // 0x0458(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UHorizontalBox*                         NegativeRow;                                       // 0x0460(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_468[0x8];                                      // 0x0468(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void SetMyParent(class UOrionSinglePlayerRating* _NewParent);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"OrionPlayerRateMenu">();
	}
	static class UOrionPlayerRateMenu* GetDefaultObj()
	{
		return GetDefaultObjImpl<UOrionPlayerRateMenu>();
	}
};
static_assert(alignof(UOrionPlayerRateMenu) == 0x000008, "Wrong alignment on UOrionPlayerRateMenu");
static_assert(sizeof(UOrionPlayerRateMenu) == 0x000470, "Wrong size on UOrionPlayerRateMenu");
static_assert(offsetof(UOrionPlayerRateMenu, Style) == 0x000448, "Member 'UOrionPlayerRateMenu::Style' has a wrong offset!");
static_assert(offsetof(UOrionPlayerRateMenu, DefaultButtonClass) == 0x000450, "Member 'UOrionPlayerRateMenu::DefaultButtonClass' has a wrong offset!");
static_assert(offsetof(UOrionPlayerRateMenu, PositiveRow) == 0x000458, "Member 'UOrionPlayerRateMenu::PositiveRow' has a wrong offset!");
static_assert(offsetof(UOrionPlayerRateMenu, NegativeRow) == 0x000460, "Member 'UOrionPlayerRateMenu::NegativeRow' has a wrong offset!");

// Class OrionUI.OrionPlayerRatingScreen
// 0x0028 (0x0470 - 0x0448)
class UOrionPlayerRatingScreen : public UOrionActivatableWidget
{
public:
	TArray<class UOrionSinglePlayerRating*>       Allies;                                            // 0x0448(0x0010)(BlueprintVisible, ExportObject, ZeroConstructor, Transient, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	TArray<class UOrionSinglePlayerRating*>       Enemies;                                           // 0x0458(0x0010)(BlueprintVisible, ExportObject, ZeroConstructor, Transient, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	uint8                                         Pad_468[0x8];                                      // 0x0468(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"OrionPlayerRatingScreen">();
	}
	static class UOrionPlayerRatingScreen* GetDefaultObj()
	{
		return GetDefaultObjImpl<UOrionPlayerRatingScreen>();
	}
};
static_assert(alignof(UOrionPlayerRatingScreen) == 0x000008, "Wrong alignment on UOrionPlayerRatingScreen");
static_assert(sizeof(UOrionPlayerRatingScreen) == 0x000470, "Wrong size on UOrionPlayerRatingScreen");
static_assert(offsetof(UOrionPlayerRatingScreen, Allies) == 0x000448, "Member 'UOrionPlayerRatingScreen::Allies' has a wrong offset!");
static_assert(offsetof(UOrionPlayerRatingScreen, Enemies) == 0x000458, "Member 'UOrionPlayerRatingScreen::Enemies' has a wrong offset!");

// Class OrionUI.OrionPlayRoot
// 0x0148 (0x0590 - 0x0448)
class UOrionPlayRoot final : public UOrionActivatableWidget
{
public:
	TArray<class UOrionGameTypeWidget*>           GameTypeWidgets;                                   // 0x0448(0x0010)(ExportObject, ZeroConstructor, Transient, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	class FText                                   BoostsDisplayFormat;                               // 0x0458(0x0018)(Edit, NativeAccessSpecifierPrivate)
	class UOrionBaseButton_Group*                 GameTypeButtonGroup;                               // 0x0470(0x0008)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionGameTypeWidget*                   GameWidget_PvP;                                    // 0x0478(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionGameTypeWidget*                   GameWidget_VSAI;                                   // 0x0480(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionGameTypeButton*                   Button_Tutorial_1v1;                               // 0x0488(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionGameTypeButton*                   Button_PvP_3v3;                                    // 0x0490(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionGameTypeButton*                   Button_PvP_Astrolabe_5v5;                          // 0x0498(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionGameTypeButton*                   Button_PvP_Astrolabe_3v3;                          // 0x04A0(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class USizeBox*                               SizeBox_Tutorial_1v1;                              // 0x04A8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class USizeBox*                               SizeBox_PvP_3v3;                                   // 0x04B0(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class USizeBox*                               SizeBox_PvP_Astrolabe_5v5;                         // 0x04B8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class USizeBox*                               SizeBox_PvP_Astrolabe_3v3;                         // 0x04C0(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionDefaultButton*                    Button_Ready;                                      // 0x04C8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UUserWidget*                            Button_MatchmakingSettings;                        // 0x04D0(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UUserWidget*                            Button_PlayTutorial;                               // 0x04D8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UBorder*                                Border_ActiveBan;                                  // 0x04E0(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionTextBlock*                        Text_BanReason;                                    // 0x04E8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionTextBlock*                        Text_BanTimeLeft;                                  // 0x04F0(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class USizeBox*                               SizeBox_Warning;                                   // 0x04F8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionTextBlock*                        Text_WarningTitle;                                 // 0x0500(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionTextBlock*                        Text_Warning;                                      // 0x0508(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UBorder*                                Border_Events;                                     // 0x0510(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionTextBlock*                        Text_EventTitle;                                   // 0x0518(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionTextBlock*                        Text_EventPeriod;                                  // 0x0520(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionTextBlock*                        Text_EventLine1;                                   // 0x0528(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionTextBlock*                        Text_EventLine2;                                   // 0x0530(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UWidgetSwitcher*                        Switcher_Rewards;                                  // 0x0538(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionTextBlock*                        Text_Boosts;                                       // 0x0540(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_548[0x48];                                     // 0x0548(0x0048)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void HandleAIDifficultySelected(EAIBotDifficulty SelectedDifficulty);
	void HandleGameTypeSelected(class UOrionBaseButton* SelectedButton, int32 ButtonIndex);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"OrionPlayRoot">();
	}
	static class UOrionPlayRoot* GetDefaultObj()
	{
		return GetDefaultObjImpl<UOrionPlayRoot>();
	}
};
static_assert(alignof(UOrionPlayRoot) == 0x000008, "Wrong alignment on UOrionPlayRoot");
static_assert(sizeof(UOrionPlayRoot) == 0x000590, "Wrong size on UOrionPlayRoot");
static_assert(offsetof(UOrionPlayRoot, GameTypeWidgets) == 0x000448, "Member 'UOrionPlayRoot::GameTypeWidgets' has a wrong offset!");
static_assert(offsetof(UOrionPlayRoot, BoostsDisplayFormat) == 0x000458, "Member 'UOrionPlayRoot::BoostsDisplayFormat' has a wrong offset!");
static_assert(offsetof(UOrionPlayRoot, GameTypeButtonGroup) == 0x000470, "Member 'UOrionPlayRoot::GameTypeButtonGroup' has a wrong offset!");
static_assert(offsetof(UOrionPlayRoot, GameWidget_PvP) == 0x000478, "Member 'UOrionPlayRoot::GameWidget_PvP' has a wrong offset!");
static_assert(offsetof(UOrionPlayRoot, GameWidget_VSAI) == 0x000480, "Member 'UOrionPlayRoot::GameWidget_VSAI' has a wrong offset!");
static_assert(offsetof(UOrionPlayRoot, Button_Tutorial_1v1) == 0x000488, "Member 'UOrionPlayRoot::Button_Tutorial_1v1' has a wrong offset!");
static_assert(offsetof(UOrionPlayRoot, Button_PvP_3v3) == 0x000490, "Member 'UOrionPlayRoot::Button_PvP_3v3' has a wrong offset!");
static_assert(offsetof(UOrionPlayRoot, Button_PvP_Astrolabe_5v5) == 0x000498, "Member 'UOrionPlayRoot::Button_PvP_Astrolabe_5v5' has a wrong offset!");
static_assert(offsetof(UOrionPlayRoot, Button_PvP_Astrolabe_3v3) == 0x0004A0, "Member 'UOrionPlayRoot::Button_PvP_Astrolabe_3v3' has a wrong offset!");
static_assert(offsetof(UOrionPlayRoot, SizeBox_Tutorial_1v1) == 0x0004A8, "Member 'UOrionPlayRoot::SizeBox_Tutorial_1v1' has a wrong offset!");
static_assert(offsetof(UOrionPlayRoot, SizeBox_PvP_3v3) == 0x0004B0, "Member 'UOrionPlayRoot::SizeBox_PvP_3v3' has a wrong offset!");
static_assert(offsetof(UOrionPlayRoot, SizeBox_PvP_Astrolabe_5v5) == 0x0004B8, "Member 'UOrionPlayRoot::SizeBox_PvP_Astrolabe_5v5' has a wrong offset!");
static_assert(offsetof(UOrionPlayRoot, SizeBox_PvP_Astrolabe_3v3) == 0x0004C0, "Member 'UOrionPlayRoot::SizeBox_PvP_Astrolabe_3v3' has a wrong offset!");
static_assert(offsetof(UOrionPlayRoot, Button_Ready) == 0x0004C8, "Member 'UOrionPlayRoot::Button_Ready' has a wrong offset!");
static_assert(offsetof(UOrionPlayRoot, Button_MatchmakingSettings) == 0x0004D0, "Member 'UOrionPlayRoot::Button_MatchmakingSettings' has a wrong offset!");
static_assert(offsetof(UOrionPlayRoot, Button_PlayTutorial) == 0x0004D8, "Member 'UOrionPlayRoot::Button_PlayTutorial' has a wrong offset!");
static_assert(offsetof(UOrionPlayRoot, Border_ActiveBan) == 0x0004E0, "Member 'UOrionPlayRoot::Border_ActiveBan' has a wrong offset!");
static_assert(offsetof(UOrionPlayRoot, Text_BanReason) == 0x0004E8, "Member 'UOrionPlayRoot::Text_BanReason' has a wrong offset!");
static_assert(offsetof(UOrionPlayRoot, Text_BanTimeLeft) == 0x0004F0, "Member 'UOrionPlayRoot::Text_BanTimeLeft' has a wrong offset!");
static_assert(offsetof(UOrionPlayRoot, SizeBox_Warning) == 0x0004F8, "Member 'UOrionPlayRoot::SizeBox_Warning' has a wrong offset!");
static_assert(offsetof(UOrionPlayRoot, Text_WarningTitle) == 0x000500, "Member 'UOrionPlayRoot::Text_WarningTitle' has a wrong offset!");
static_assert(offsetof(UOrionPlayRoot, Text_Warning) == 0x000508, "Member 'UOrionPlayRoot::Text_Warning' has a wrong offset!");
static_assert(offsetof(UOrionPlayRoot, Border_Events) == 0x000510, "Member 'UOrionPlayRoot::Border_Events' has a wrong offset!");
static_assert(offsetof(UOrionPlayRoot, Text_EventTitle) == 0x000518, "Member 'UOrionPlayRoot::Text_EventTitle' has a wrong offset!");
static_assert(offsetof(UOrionPlayRoot, Text_EventPeriod) == 0x000520, "Member 'UOrionPlayRoot::Text_EventPeriod' has a wrong offset!");
static_assert(offsetof(UOrionPlayRoot, Text_EventLine1) == 0x000528, "Member 'UOrionPlayRoot::Text_EventLine1' has a wrong offset!");
static_assert(offsetof(UOrionPlayRoot, Text_EventLine2) == 0x000530, "Member 'UOrionPlayRoot::Text_EventLine2' has a wrong offset!");
static_assert(offsetof(UOrionPlayRoot, Switcher_Rewards) == 0x000538, "Member 'UOrionPlayRoot::Switcher_Rewards' has a wrong offset!");
static_assert(offsetof(UOrionPlayRoot, Text_Boosts) == 0x000540, "Member 'UOrionPlayRoot::Text_Boosts' has a wrong offset!");

// Class OrionUI.OrionPostGameRoot
// 0x0058 (0x04A0 - 0x0448)
class UOrionPostGameRoot final : public UOrionActivatableWidget
{
public:
	TSubclassOf<class UOrionPlayerRatingScreen>   PlayerRatingScreenClass;                           // 0x0448(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionPlayerRatingScreen*               PlayerRatingScreen;                                // 0x0450(0x0008)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSubclassOf<class UOrionPostGameSurvey>       PostGameSurveyClass;                               // 0x0458(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<class UOrionPostGameTab*>              AllTabs;                                           // 0x0460(0x0010)(ExportObject, ZeroConstructor, Transient, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	uint8                                         Pad_470[0x10];                                     // 0x0470(0x0010)(Fixing Size After Last Property [ Dumper-7 ])
	class UOrionWidgetSwitcher*                   Switcher_TabContents;                              // 0x0480(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionBaseButton*                       Button_Continue;                                   // 0x0488(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionBaseButton*                       Button_RatePlayers;                                // 0x0490(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_498[0x8];                                      // 0x0498(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	class UOrionTabListWidget* GetTabList();
	void HandleRatePlayersClicked();
	void OnAutomaticFlowComplete(bool bShowPlayerRatingCallout);

	bool DidPlayerWin() const;
	class UOrionHeroData* GetHeroUsedInLastMatch() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"OrionPostGameRoot">();
	}
	static class UOrionPostGameRoot* GetDefaultObj()
	{
		return GetDefaultObjImpl<UOrionPostGameRoot>();
	}
};
static_assert(alignof(UOrionPostGameRoot) == 0x000008, "Wrong alignment on UOrionPostGameRoot");
static_assert(sizeof(UOrionPostGameRoot) == 0x0004A0, "Wrong size on UOrionPostGameRoot");
static_assert(offsetof(UOrionPostGameRoot, PlayerRatingScreenClass) == 0x000448, "Member 'UOrionPostGameRoot::PlayerRatingScreenClass' has a wrong offset!");
static_assert(offsetof(UOrionPostGameRoot, PlayerRatingScreen) == 0x000450, "Member 'UOrionPostGameRoot::PlayerRatingScreen' has a wrong offset!");
static_assert(offsetof(UOrionPostGameRoot, PostGameSurveyClass) == 0x000458, "Member 'UOrionPostGameRoot::PostGameSurveyClass' has a wrong offset!");
static_assert(offsetof(UOrionPostGameRoot, AllTabs) == 0x000460, "Member 'UOrionPostGameRoot::AllTabs' has a wrong offset!");
static_assert(offsetof(UOrionPostGameRoot, Switcher_TabContents) == 0x000480, "Member 'UOrionPostGameRoot::Switcher_TabContents' has a wrong offset!");
static_assert(offsetof(UOrionPostGameRoot, Button_Continue) == 0x000488, "Member 'UOrionPostGameRoot::Button_Continue' has a wrong offset!");
static_assert(offsetof(UOrionPostGameRoot, Button_RatePlayers) == 0x000490, "Member 'UOrionPostGameRoot::Button_RatePlayers' has a wrong offset!");

// Class OrionUI.OrionPostGameSurvey
// 0x0058 (0x04A0 - 0x0448)
class UOrionPostGameSurvey : public UOrionActivatableWidget
{
public:
	TSubclassOf<class UOrionSurveyQuestion>       QuestionEntryClass;                                // 0x0448(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_450[0x28];                                     // 0x0450(0x0028)(Fixing Size After Last Property [ Dumper-7 ])
	class UOrionTextBlock*                        Text_Header;                                       // 0x0478(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UVerticalBox*                           VBox_Questions;                                    // 0x0480(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionDefaultButton*                    Button_Submit;                                     // 0x0488(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionDefaultButton*                    Button_Cancel;                                     // 0x0490(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_498[0x8];                                      // 0x0498(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"OrionPostGameSurvey">();
	}
	static class UOrionPostGameSurvey* GetDefaultObj()
	{
		return GetDefaultObjImpl<UOrionPostGameSurvey>();
	}
};
static_assert(alignof(UOrionPostGameSurvey) == 0x000008, "Wrong alignment on UOrionPostGameSurvey");
static_assert(sizeof(UOrionPostGameSurvey) == 0x0004A0, "Wrong size on UOrionPostGameSurvey");
static_assert(offsetof(UOrionPostGameSurvey, QuestionEntryClass) == 0x000448, "Member 'UOrionPostGameSurvey::QuestionEntryClass' has a wrong offset!");
static_assert(offsetof(UOrionPostGameSurvey, Text_Header) == 0x000478, "Member 'UOrionPostGameSurvey::Text_Header' has a wrong offset!");
static_assert(offsetof(UOrionPostGameSurvey, VBox_Questions) == 0x000480, "Member 'UOrionPostGameSurvey::VBox_Questions' has a wrong offset!");
static_assert(offsetof(UOrionPostGameSurvey, Button_Submit) == 0x000488, "Member 'UOrionPostGameSurvey::Button_Submit' has a wrong offset!");
static_assert(offsetof(UOrionPostGameSurvey, Button_Cancel) == 0x000490, "Member 'UOrionPostGameSurvey::Button_Cancel' has a wrong offset!");

// Class OrionUI.OrionPostGameTab_DailyChest
// 0x0018 (0x0550 - 0x0538)
class UOrionPostGameTab_DailyChest final : public UOrionPostGameTab
{
public:
	uint8                                         Pad_538[0x10];                                     // 0x0538(0x0010)(Fixing Size After Last Property [ Dumper-7 ])
	class UOrionSpinner*                          Spinner_Points;                                    // 0x0548(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"OrionPostGameTab_DailyChest">();
	}
	static class UOrionPostGameTab_DailyChest* GetDefaultObj()
	{
		return GetDefaultObjImpl<UOrionPostGameTab_DailyChest>();
	}
};
static_assert(alignof(UOrionPostGameTab_DailyChest) == 0x000008, "Wrong alignment on UOrionPostGameTab_DailyChest");
static_assert(sizeof(UOrionPostGameTab_DailyChest) == 0x000550, "Wrong size on UOrionPostGameTab_DailyChest");
static_assert(offsetof(UOrionPostGameTab_DailyChest, Spinner_Points) == 0x000548, "Member 'UOrionPostGameTab_DailyChest::Spinner_Points' has a wrong offset!");

// Class OrionUI.OrionPostGameTab_Progress
// 0x0038 (0x0570 - 0x0538)
class UOrionPostGameTab_Progress final : public UOrionPostGameTab
{
public:
	float                                         XPFillTime;                                        // 0x0538(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         CurrencySourceFillTime;                            // 0x053C(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_540[0x8];                                      // 0x0540(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	class UOrionLevelProgressDisplay*             LevelProgress_Account;                             // 0x0548(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionItemizedCounter*                  Counter_XP;                                        // 0x0550(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionItemizedCounter*                  Counter_TimeCurrency;                              // 0x0558(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionItemizedCounter*                  Counter_Stars;                                     // 0x0560(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_568[0x8];                                      // 0x0568(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"OrionPostGameTab_Progress">();
	}
	static class UOrionPostGameTab_Progress* GetDefaultObj()
	{
		return GetDefaultObjImpl<UOrionPostGameTab_Progress>();
	}
};
static_assert(alignof(UOrionPostGameTab_Progress) == 0x000008, "Wrong alignment on UOrionPostGameTab_Progress");
static_assert(sizeof(UOrionPostGameTab_Progress) == 0x000570, "Wrong size on UOrionPostGameTab_Progress");
static_assert(offsetof(UOrionPostGameTab_Progress, XPFillTime) == 0x000538, "Member 'UOrionPostGameTab_Progress::XPFillTime' has a wrong offset!");
static_assert(offsetof(UOrionPostGameTab_Progress, CurrencySourceFillTime) == 0x00053C, "Member 'UOrionPostGameTab_Progress::CurrencySourceFillTime' has a wrong offset!");
static_assert(offsetof(UOrionPostGameTab_Progress, LevelProgress_Account) == 0x000548, "Member 'UOrionPostGameTab_Progress::LevelProgress_Account' has a wrong offset!");
static_assert(offsetof(UOrionPostGameTab_Progress, Counter_XP) == 0x000550, "Member 'UOrionPostGameTab_Progress::Counter_XP' has a wrong offset!");
static_assert(offsetof(UOrionPostGameTab_Progress, Counter_TimeCurrency) == 0x000558, "Member 'UOrionPostGameTab_Progress::Counter_TimeCurrency' has a wrong offset!");
static_assert(offsetof(UOrionPostGameTab_Progress, Counter_Stars) == 0x000560, "Member 'UOrionPostGameTab_Progress::Counter_Stars' has a wrong offset!");

// Class OrionUI.OrionPostGameTab_Scoreboard
// 0x0008 (0x0540 - 0x0538)
class UOrionPostGameTab_Scoreboard final : public UOrionPostGameTab
{
public:
	uint8                                         Pad_538[0x8];                                      // 0x0538(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"OrionPostGameTab_Scoreboard">();
	}
	static class UOrionPostGameTab_Scoreboard* GetDefaultObj()
	{
		return GetDefaultObjImpl<UOrionPostGameTab_Scoreboard>();
	}
};
static_assert(alignof(UOrionPostGameTab_Scoreboard) == 0x000008, "Wrong alignment on UOrionPostGameTab_Scoreboard");
static_assert(sizeof(UOrionPostGameTab_Scoreboard) == 0x000540, "Wrong size on UOrionPostGameTab_Scoreboard");

// Class OrionUI.OrionMatchSummaryReward
// 0x0018 (0x0218 - 0x0200)
class UOrionMatchSummaryReward final : public UUserWidget
{
public:
	uint8                                         Pad_200[0x8];                                      // 0x0200(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	bool                                          bIsBonusReward;                                    // 0x0208(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                          bMasteryLocked;                                    // 0x0209(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_20A[0x6];                                      // 0x020A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UOrionRewardWidget*                     Reward_Item;                                       // 0x0210(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	void OnReveal();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"OrionMatchSummaryReward">();
	}
	static class UOrionMatchSummaryReward* GetDefaultObj()
	{
		return GetDefaultObjImpl<UOrionMatchSummaryReward>();
	}
};
static_assert(alignof(UOrionMatchSummaryReward) == 0x000008, "Wrong alignment on UOrionMatchSummaryReward");
static_assert(sizeof(UOrionMatchSummaryReward) == 0x000218, "Wrong size on UOrionMatchSummaryReward");
static_assert(offsetof(UOrionMatchSummaryReward, bIsBonusReward) == 0x000208, "Member 'UOrionMatchSummaryReward::bIsBonusReward' has a wrong offset!");
static_assert(offsetof(UOrionMatchSummaryReward, bMasteryLocked) == 0x000209, "Member 'UOrionMatchSummaryReward::bMasteryLocked' has a wrong offset!");
static_assert(offsetof(UOrionMatchSummaryReward, Reward_Item) == 0x000210, "Member 'UOrionMatchSummaryReward::Reward_Item' has a wrong offset!");

// Class OrionUI.OrionProfileInventoryItem
// 0x0040 (0x0A20 - 0x09E0)
class UOrionProfileInventoryItem final : public UOrionBaseButton
{
public:
	class UOrionMcpCardPackItemDefinition*        PackToOpen;                                        // 0x09E0(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UOrionRewardTooltip>        RewardTooltipClass;                                // 0x09E8(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bEnabledWhenZero;                                  // 0x09F0(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_9F1[0x7];                                      // 0x09F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UOrionTextBlock*                        Text_DisplayName;                                  // 0x09F8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionTextBlock*                        Text_Quantity;                                     // 0x0A00(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionLazyImage*                        Image_Item;                                        // 0x0A08(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionInputVisualizer*                  InputVisualizer;                                   // 0x0A10(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_A18[0x8];                                      // 0x0A18(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void UpdateQuantity();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"OrionProfileInventoryItem">();
	}
	static class UOrionProfileInventoryItem* GetDefaultObj()
	{
		return GetDefaultObjImpl<UOrionProfileInventoryItem>();
	}
};
static_assert(alignof(UOrionProfileInventoryItem) == 0x000008, "Wrong alignment on UOrionProfileInventoryItem");
static_assert(sizeof(UOrionProfileInventoryItem) == 0x000A20, "Wrong size on UOrionProfileInventoryItem");
static_assert(offsetof(UOrionProfileInventoryItem, PackToOpen) == 0x0009E0, "Member 'UOrionProfileInventoryItem::PackToOpen' has a wrong offset!");
static_assert(offsetof(UOrionProfileInventoryItem, RewardTooltipClass) == 0x0009E8, "Member 'UOrionProfileInventoryItem::RewardTooltipClass' has a wrong offset!");
static_assert(offsetof(UOrionProfileInventoryItem, bEnabledWhenZero) == 0x0009F0, "Member 'UOrionProfileInventoryItem::bEnabledWhenZero' has a wrong offset!");
static_assert(offsetof(UOrionProfileInventoryItem, Text_DisplayName) == 0x0009F8, "Member 'UOrionProfileInventoryItem::Text_DisplayName' has a wrong offset!");
static_assert(offsetof(UOrionProfileInventoryItem, Text_Quantity) == 0x000A00, "Member 'UOrionProfileInventoryItem::Text_Quantity' has a wrong offset!");
static_assert(offsetof(UOrionProfileInventoryItem, Image_Item) == 0x000A08, "Member 'UOrionProfileInventoryItem::Image_Item' has a wrong offset!");
static_assert(offsetof(UOrionProfileInventoryItem, InputVisualizer) == 0x000A10, "Member 'UOrionProfileInventoryItem::InputVisualizer' has a wrong offset!");

// Class OrionUI.OrionProgressiveRewardProgress
// 0x0090 (0x0400 - 0x0370)
class UOrionProgressiveRewardProgress final : public UOrionTimedFillWidget
{
public:
	uint8                                         Pad_370[0x40];                                     // 0x0370(0x0040)(Fixing Size After Last Property [ Dumper-7 ])
	class UOrionRewardProgressBar*                ActiveProgressBar;                                 // 0x03B0(0x0008)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class UOrionRewardProgressBar>    CustomInitialRewardWidgetClass;                    // 0x03B8(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class UOrionRewardProgressBar>    CustomFinalRewardWidgetClass;                      // 0x03C0(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_3C8[0x8];                                      // 0x03C8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UOrionRewardProgressBar*>        ProgressBarEntries;                                // 0x03D0(0x0010)(BlueprintVisible, ExportObject, ZeroConstructor, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	TArray<class UOrionTextBlock*>                ProgressTargetTextBlocks;                          // 0x03E0(0x0010)(BlueprintVisible, ExportObject, ZeroConstructor, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	class UOrionDynamicEntryBox*                  Entries_ProgressRewards;                           // 0x03F0(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_3F8[0x8];                                      // 0x03F8(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void HandleRewardFanfareComplete();
	void OnNextRewardReached(const class UOrionRewardProgressBar* ActiveProgressBar_0);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"OrionProgressiveRewardProgress">();
	}
	static class UOrionProgressiveRewardProgress* GetDefaultObj()
	{
		return GetDefaultObjImpl<UOrionProgressiveRewardProgress>();
	}
};
static_assert(alignof(UOrionProgressiveRewardProgress) == 0x000008, "Wrong alignment on UOrionProgressiveRewardProgress");
static_assert(sizeof(UOrionProgressiveRewardProgress) == 0x000400, "Wrong size on UOrionProgressiveRewardProgress");
static_assert(offsetof(UOrionProgressiveRewardProgress, ActiveProgressBar) == 0x0003B0, "Member 'UOrionProgressiveRewardProgress::ActiveProgressBar' has a wrong offset!");
static_assert(offsetof(UOrionProgressiveRewardProgress, CustomInitialRewardWidgetClass) == 0x0003B8, "Member 'UOrionProgressiveRewardProgress::CustomInitialRewardWidgetClass' has a wrong offset!");
static_assert(offsetof(UOrionProgressiveRewardProgress, CustomFinalRewardWidgetClass) == 0x0003C0, "Member 'UOrionProgressiveRewardProgress::CustomFinalRewardWidgetClass' has a wrong offset!");
static_assert(offsetof(UOrionProgressiveRewardProgress, ProgressBarEntries) == 0x0003D0, "Member 'UOrionProgressiveRewardProgress::ProgressBarEntries' has a wrong offset!");
static_assert(offsetof(UOrionProgressiveRewardProgress, ProgressTargetTextBlocks) == 0x0003E0, "Member 'UOrionProgressiveRewardProgress::ProgressTargetTextBlocks' has a wrong offset!");
static_assert(offsetof(UOrionProgressiveRewardProgress, Entries_ProgressRewards) == 0x0003F0, "Member 'UOrionProgressiveRewardProgress::Entries_ProgressRewards' has a wrong offset!");

// Class OrionUI.OrionPurchaseConfirmationWidget
// 0x02B8 (0x0700 - 0x0448)
class UOrionPurchaseConfirmationWidget final : public UOrionActivatableWidget
{
public:
	bool                                          bMTXReplenish;                                     // 0x0448(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_449[0x7];                                      // 0x0449(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	UMulticastDelegateProperty_                   OnPurchaseConfirmationMTXReplenish;                // 0x0450(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                         Pad_460[0x80];                                     // 0x0460(0x0080)(Fixing Size After Last Property [ Dumper-7 ])
	EOrionUIAnalyticsTrackingLevel                PurchasedTrackingLevel;                            // 0x04E0(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	EOrionUIAnalyticsTrackingLevel                CanceledTrackingLevel;                             // 0x04E1(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_4E2[0x6];                                      // 0x04E2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FStoreOfferBP                          StoreOffer;                                        // 0x04E8(0x0130)(Transient, NativeAccessSpecifierPrivate)
	uint8                                         Pad_618[0x8];                                      // 0x0618(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         MinPurchaseDelay;                                  // 0x0620(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_624[0x4];                                      // 0x0624(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USoundBase*                             PurchaseSuccessSound;                              // 0x0628(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class USoundBase*                             PurchaseFailedSound;                               // 0x0630(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_638[0x10];                                     // 0x0638(0x0010)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FStorePurchase>                 PurchasedItems;                                    // 0x0648(0x0010)(ZeroConstructor, Transient, NativeAccessSpecifierPrivate)
	uint8                                         Pad_658[0x28];                                     // 0x0658(0x0028)(Fixing Size After Last Property [ Dumper-7 ])
	class UOrionLazyImage*                        LazyImage_ItemImage;                               // 0x0680(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionMcpTypeRewardImage*               Image_McpType;                                     // 0x0688(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class USizeBox*                               Box_AdditionalInfo;                                // 0x0690(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UHorizontalBox*                         HBox_OwnedCurrency;                                // 0x0698(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class USizeBox*                               SizeBox_LongDesc;                                  // 0x06A0(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionTextBlock*                        Text_RealMoneyLongDesc;                            // 0x06A8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionRichText*                         RichText_OwnedCurrency;                            // 0x06B0(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionRichText*                         RichText_OwnedCurrency2;                           // 0x06B8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionTextBlock*                        Text_Name;                                         // 0x06C0(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionTextBlock*                        Text_Description;                                  // 0x06C8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionDefaultButton*                    Button_Buy;                                        // 0x06D0(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UVerticalBox*                           VBox_SecondBuyBtn;                                 // 0x06D8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionDefaultButton*                    Button_Buy2;                                       // 0x06E0(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionDefaultButton*                    Button_Cancel;                                     // 0x06E8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionDefaultButton*                    Button_Close;                                      // 0x06F0(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_6F8[0x8];                                      // 0x06F8(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void DynamicHandleCurrencyChanged();
	void DynamicHandleIconLoadingStateChanged(bool bIsLoading);
	void OnBeginPurchase();
	void OnPurchaseComplete(bool bSuccessful);
	void OnShow();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"OrionPurchaseConfirmationWidget">();
	}
	static class UOrionPurchaseConfirmationWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UOrionPurchaseConfirmationWidget>();
	}
};
static_assert(alignof(UOrionPurchaseConfirmationWidget) == 0x000008, "Wrong alignment on UOrionPurchaseConfirmationWidget");
static_assert(sizeof(UOrionPurchaseConfirmationWidget) == 0x000700, "Wrong size on UOrionPurchaseConfirmationWidget");
static_assert(offsetof(UOrionPurchaseConfirmationWidget, bMTXReplenish) == 0x000448, "Member 'UOrionPurchaseConfirmationWidget::bMTXReplenish' has a wrong offset!");
static_assert(offsetof(UOrionPurchaseConfirmationWidget, OnPurchaseConfirmationMTXReplenish) == 0x000450, "Member 'UOrionPurchaseConfirmationWidget::OnPurchaseConfirmationMTXReplenish' has a wrong offset!");
static_assert(offsetof(UOrionPurchaseConfirmationWidget, PurchasedTrackingLevel) == 0x0004E0, "Member 'UOrionPurchaseConfirmationWidget::PurchasedTrackingLevel' has a wrong offset!");
static_assert(offsetof(UOrionPurchaseConfirmationWidget, CanceledTrackingLevel) == 0x0004E1, "Member 'UOrionPurchaseConfirmationWidget::CanceledTrackingLevel' has a wrong offset!");
static_assert(offsetof(UOrionPurchaseConfirmationWidget, StoreOffer) == 0x0004E8, "Member 'UOrionPurchaseConfirmationWidget::StoreOffer' has a wrong offset!");
static_assert(offsetof(UOrionPurchaseConfirmationWidget, MinPurchaseDelay) == 0x000620, "Member 'UOrionPurchaseConfirmationWidget::MinPurchaseDelay' has a wrong offset!");
static_assert(offsetof(UOrionPurchaseConfirmationWidget, PurchaseSuccessSound) == 0x000628, "Member 'UOrionPurchaseConfirmationWidget::PurchaseSuccessSound' has a wrong offset!");
static_assert(offsetof(UOrionPurchaseConfirmationWidget, PurchaseFailedSound) == 0x000630, "Member 'UOrionPurchaseConfirmationWidget::PurchaseFailedSound' has a wrong offset!");
static_assert(offsetof(UOrionPurchaseConfirmationWidget, PurchasedItems) == 0x000648, "Member 'UOrionPurchaseConfirmationWidget::PurchasedItems' has a wrong offset!");
static_assert(offsetof(UOrionPurchaseConfirmationWidget, LazyImage_ItemImage) == 0x000680, "Member 'UOrionPurchaseConfirmationWidget::LazyImage_ItemImage' has a wrong offset!");
static_assert(offsetof(UOrionPurchaseConfirmationWidget, Image_McpType) == 0x000688, "Member 'UOrionPurchaseConfirmationWidget::Image_McpType' has a wrong offset!");
static_assert(offsetof(UOrionPurchaseConfirmationWidget, Box_AdditionalInfo) == 0x000690, "Member 'UOrionPurchaseConfirmationWidget::Box_AdditionalInfo' has a wrong offset!");
static_assert(offsetof(UOrionPurchaseConfirmationWidget, HBox_OwnedCurrency) == 0x000698, "Member 'UOrionPurchaseConfirmationWidget::HBox_OwnedCurrency' has a wrong offset!");
static_assert(offsetof(UOrionPurchaseConfirmationWidget, SizeBox_LongDesc) == 0x0006A0, "Member 'UOrionPurchaseConfirmationWidget::SizeBox_LongDesc' has a wrong offset!");
static_assert(offsetof(UOrionPurchaseConfirmationWidget, Text_RealMoneyLongDesc) == 0x0006A8, "Member 'UOrionPurchaseConfirmationWidget::Text_RealMoneyLongDesc' has a wrong offset!");
static_assert(offsetof(UOrionPurchaseConfirmationWidget, RichText_OwnedCurrency) == 0x0006B0, "Member 'UOrionPurchaseConfirmationWidget::RichText_OwnedCurrency' has a wrong offset!");
static_assert(offsetof(UOrionPurchaseConfirmationWidget, RichText_OwnedCurrency2) == 0x0006B8, "Member 'UOrionPurchaseConfirmationWidget::RichText_OwnedCurrency2' has a wrong offset!");
static_assert(offsetof(UOrionPurchaseConfirmationWidget, Text_Name) == 0x0006C0, "Member 'UOrionPurchaseConfirmationWidget::Text_Name' has a wrong offset!");
static_assert(offsetof(UOrionPurchaseConfirmationWidget, Text_Description) == 0x0006C8, "Member 'UOrionPurchaseConfirmationWidget::Text_Description' has a wrong offset!");
static_assert(offsetof(UOrionPurchaseConfirmationWidget, Button_Buy) == 0x0006D0, "Member 'UOrionPurchaseConfirmationWidget::Button_Buy' has a wrong offset!");
static_assert(offsetof(UOrionPurchaseConfirmationWidget, VBox_SecondBuyBtn) == 0x0006D8, "Member 'UOrionPurchaseConfirmationWidget::VBox_SecondBuyBtn' has a wrong offset!");
static_assert(offsetof(UOrionPurchaseConfirmationWidget, Button_Buy2) == 0x0006E0, "Member 'UOrionPurchaseConfirmationWidget::Button_Buy2' has a wrong offset!");
static_assert(offsetof(UOrionPurchaseConfirmationWidget, Button_Cancel) == 0x0006E8, "Member 'UOrionPurchaseConfirmationWidget::Button_Cancel' has a wrong offset!");
static_assert(offsetof(UOrionPurchaseConfirmationWidget, Button_Close) == 0x0006F0, "Member 'UOrionPurchaseConfirmationWidget::Button_Close' has a wrong offset!");

// Class OrionUI.OrionQuestAlertContainer
// 0x0020 (0x0310 - 0x02F0)
class UOrionQuestAlertContainer final : public UOrionHUDWidgetBase
{
public:
	class UOrionQuestAlert*                       QuestAlert;                                        // 0x02F0(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<struct FOrionQuestAlertInfo>           Alerts;                                            // 0x02F8(0x0010)(ZeroConstructor, NativeAccessSpecifierPrivate)
	uint8                                         Pad_308[0x8];                                      // 0x0308(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"OrionQuestAlertContainer">();
	}
	static class UOrionQuestAlertContainer* GetDefaultObj()
	{
		return GetDefaultObjImpl<UOrionQuestAlertContainer>();
	}
};
static_assert(alignof(UOrionQuestAlertContainer) == 0x000008, "Wrong alignment on UOrionQuestAlertContainer");
static_assert(sizeof(UOrionQuestAlertContainer) == 0x000310, "Wrong size on UOrionQuestAlertContainer");
static_assert(offsetof(UOrionQuestAlertContainer, QuestAlert) == 0x0002F0, "Member 'UOrionQuestAlertContainer::QuestAlert' has a wrong offset!");
static_assert(offsetof(UOrionQuestAlertContainer, Alerts) == 0x0002F8, "Member 'UOrionQuestAlertContainer::Alerts' has a wrong offset!");

// Class OrionUI.OrionQuestLog
// 0x0020 (0x0310 - 0x02F0)
class UOrionQuestLog final : public UOrionHUDWidgetBase
{
public:
	TSubclassOf<class UOrionQuestWidget>          QuestWidgetClass;                                  // 0x02F0(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UVerticalBox*                           QuestBox;                                          // 0x02F8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<class UOrionQuestWidget*>              QuestWidgets;                                      // 0x0300(0x0010)(ExportObject, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPrivate)

public:
	void AddRandomQuest();
	void CompleteRandomTest();
	void OnLocalHeroDeath(const struct FOrionHUDTeamStatusInfo& UpdatedTeamInfo);
	void OnLocalHeroSpawn(const struct FOrionHUDTeamStatusInfo& UpdatedTeamInfo);
	void UpdateRandomQuest();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"OrionQuestLog">();
	}
	static class UOrionQuestLog* GetDefaultObj()
	{
		return GetDefaultObjImpl<UOrionQuestLog>();
	}
};
static_assert(alignof(UOrionQuestLog) == 0x000008, "Wrong alignment on UOrionQuestLog");
static_assert(sizeof(UOrionQuestLog) == 0x000310, "Wrong size on UOrionQuestLog");
static_assert(offsetof(UOrionQuestLog, QuestWidgetClass) == 0x0002F0, "Member 'UOrionQuestLog::QuestWidgetClass' has a wrong offset!");
static_assert(offsetof(UOrionQuestLog, QuestBox) == 0x0002F8, "Member 'UOrionQuestLog::QuestBox' has a wrong offset!");
static_assert(offsetof(UOrionQuestLog, QuestWidgets) == 0x000300, "Member 'UOrionQuestLog::QuestWidgets' has a wrong offset!");

// Class OrionUI.OrionReachRewardWidgetBase
// 0x0038 (0x0480 - 0x0448)
class UOrionReachRewardWidgetBase final : public UOrionActivatableWidget
{
public:
	uint8                                         Pad_448[0x18];                                     // 0x0448(0x0018)(Fixing Size After Last Property [ Dumper-7 ])
	class UOrionRewardWidget*                     Reward_CurrentChest;                               // 0x0460(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionRewardProgressWidget*             Progress_NextChest;                                // 0x0468(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionRichText*                         Text_CollectTime;                                  // 0x0470(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionDefaultButton*                    Button_Claim;                                      // 0x0478(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	void BeginFill();
	void DynamicHandleGiftBoxOpened(const struct FOrionLootNotification& LootNotification, bool bShowFanfare);
	void DynamicHandlePostMatchShown();
	void FanfareOutComplete();
	void OnChestClaimBegun();
	void OnChestClaimComplete();
	void OnChestDataSet(bool bComplete, bool bCanClaim, bool bInitial, bool bShouldShowStars);
	void OnChestTimeExpireBegun();
	void OnChestTimeExpireComplete();
	void OnShowBonusStart();
	void RefreshData();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"OrionReachRewardWidgetBase">();
	}
	static class UOrionReachRewardWidgetBase* GetDefaultObj()
	{
		return GetDefaultObjImpl<UOrionReachRewardWidgetBase>();
	}
};
static_assert(alignof(UOrionReachRewardWidgetBase) == 0x000008, "Wrong alignment on UOrionReachRewardWidgetBase");
static_assert(sizeof(UOrionReachRewardWidgetBase) == 0x000480, "Wrong size on UOrionReachRewardWidgetBase");
static_assert(offsetof(UOrionReachRewardWidgetBase, Reward_CurrentChest) == 0x000460, "Member 'UOrionReachRewardWidgetBase::Reward_CurrentChest' has a wrong offset!");
static_assert(offsetof(UOrionReachRewardWidgetBase, Progress_NextChest) == 0x000468, "Member 'UOrionReachRewardWidgetBase::Progress_NextChest' has a wrong offset!");
static_assert(offsetof(UOrionReachRewardWidgetBase, Text_CollectTime) == 0x000470, "Member 'UOrionReachRewardWidgetBase::Text_CollectTime' has a wrong offset!");
static_assert(offsetof(UOrionReachRewardWidgetBase, Button_Claim) == 0x000478, "Member 'UOrionReachRewardWidgetBase::Button_Claim' has a wrong offset!");

// Class OrionUI.OrionRefineGemScreen
// 0x0018 (0x0460 - 0x0448)
class UOrionRefineGemScreen final : public UOrionActivatableWidget
{
public:
	class UOrionCardInspectScreen*                CardInspectScreen;                                 // 0x0448(0x0008)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_450[0x10];                                     // 0x0450(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void SetGemToRefine(const class UOrionMcpGemItem* GemToRefine, class UOrionCardInspectScreen* InCardInspectScreen);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"OrionRefineGemScreen">();
	}
	static class UOrionRefineGemScreen* GetDefaultObj()
	{
		return GetDefaultObjImpl<UOrionRefineGemScreen>();
	}
};
static_assert(alignof(UOrionRefineGemScreen) == 0x000008, "Wrong alignment on UOrionRefineGemScreen");
static_assert(sizeof(UOrionRefineGemScreen) == 0x000460, "Wrong size on UOrionRefineGemScreen");
static_assert(offsetof(UOrionRefineGemScreen, CardInspectScreen) == 0x000448, "Member 'UOrionRefineGemScreen::CardInspectScreen' has a wrong offset!");

// Class OrionUI.OrionRegionListScreen
// 0x0028 (0x0228 - 0x0200)
class UOrionRegionListScreen final : public UUserWidget
{
public:
	uint8                                         Pad_200[0x18];                                     // 0x0200(0x0018)(Fixing Size After Last Property [ Dumper-7 ])
	class UOrionListView*                         ListView_RegionList;                               // 0x0218(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionDefaultButton*                    Button_Refresh;                                    // 0x0220(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	void DynamicHandleItemSelected(class UObject* Item, bool bIsSelected);
	void DynamicRefreshRegionPingComplete();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"OrionRegionListScreen">();
	}
	static class UOrionRegionListScreen* GetDefaultObj()
	{
		return GetDefaultObjImpl<UOrionRegionListScreen>();
	}
};
static_assert(alignof(UOrionRegionListScreen) == 0x000008, "Wrong alignment on UOrionRegionListScreen");
static_assert(sizeof(UOrionRegionListScreen) == 0x000228, "Wrong size on UOrionRegionListScreen");
static_assert(offsetof(UOrionRegionListScreen, ListView_RegionList) == 0x000218, "Member 'UOrionRegionListScreen::ListView_RegionList' has a wrong offset!");
static_assert(offsetof(UOrionRegionListScreen, Button_Refresh) == 0x000220, "Member 'UOrionRegionListScreen::Button_Refresh' has a wrong offset!");

// Class OrionUI.OrionReplayBrowserRoot
// 0x0248 (0x0690 - 0x0448)
class UOrionReplayBrowserRoot final : public UOrionActivatableWidget
{
public:
	class UOrionWidgetSwitcher*                   ListSwitcher;                                      // 0x0448(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionReplayCurrentlySelected*          CurrentlySelected;                                 // 0x0450(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                          bShowSpoilers;                                     // 0x0458(0x0001)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	EOrionNetworkReplayFilter                     ActiveFilter;                                      // 0x0459(0x0001)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_45A[0x216];                                    // 0x045A(0x0216)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UOrionHeroData*>                 PendingAsyncLoadHeroData;                          // 0x0670(0x0010)(ZeroConstructor, NativeAccessSpecifierPrivate)
	uint8                                         Pad_680[0x8];                                      // 0x0680(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	class UOrionMatchDataLoader*                  MatchDataLoader;                                   // 0x0688(0x0008)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"OrionReplayBrowserRoot">();
	}
	static class UOrionReplayBrowserRoot* GetDefaultObj()
	{
		return GetDefaultObjImpl<UOrionReplayBrowserRoot>();
	}
};
static_assert(alignof(UOrionReplayBrowserRoot) == 0x000008, "Wrong alignment on UOrionReplayBrowserRoot");
static_assert(sizeof(UOrionReplayBrowserRoot) == 0x000690, "Wrong size on UOrionReplayBrowserRoot");
static_assert(offsetof(UOrionReplayBrowserRoot, ListSwitcher) == 0x000448, "Member 'UOrionReplayBrowserRoot::ListSwitcher' has a wrong offset!");
static_assert(offsetof(UOrionReplayBrowserRoot, CurrentlySelected) == 0x000450, "Member 'UOrionReplayBrowserRoot::CurrentlySelected' has a wrong offset!");
static_assert(offsetof(UOrionReplayBrowserRoot, bShowSpoilers) == 0x000458, "Member 'UOrionReplayBrowserRoot::bShowSpoilers' has a wrong offset!");
static_assert(offsetof(UOrionReplayBrowserRoot, ActiveFilter) == 0x000459, "Member 'UOrionReplayBrowserRoot::ActiveFilter' has a wrong offset!");
static_assert(offsetof(UOrionReplayBrowserRoot, PendingAsyncLoadHeroData) == 0x000670, "Member 'UOrionReplayBrowserRoot::PendingAsyncLoadHeroData' has a wrong offset!");
static_assert(offsetof(UOrionReplayBrowserRoot, MatchDataLoader) == 0x000688, "Member 'UOrionReplayBrowserRoot::MatchDataLoader' has a wrong offset!");

// Class OrionUI.OrionReplayStreamInfo
// 0x0068 (0x0090 - 0x0028)
class UOrionReplayStreamInfo final : public UObject
{
public:
	uint8                                         Pad_28[0x48];                                      // 0x0028(0x0048)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         BackgroundIndex;                                   // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_74[0x1C];                                      // 0x0074(0x001C)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"OrionReplayStreamInfo">();
	}
	static class UOrionReplayStreamInfo* GetDefaultObj()
	{
		return GetDefaultObjImpl<UOrionReplayStreamInfo>();
	}
};
static_assert(alignof(UOrionReplayStreamInfo) == 0x000008, "Wrong alignment on UOrionReplayStreamInfo");
static_assert(sizeof(UOrionReplayStreamInfo) == 0x000090, "Wrong size on UOrionReplayStreamInfo");
static_assert(offsetof(UOrionReplayStreamInfo, BackgroundIndex) == 0x000070, "Member 'UOrionReplayStreamInfo::BackgroundIndex' has a wrong offset!");

// Class OrionUI.OrionRespawnTimerHeroIconWidget
// 0x0028 (0x02E0 - 0x02B8)
class UOrionRespawnTimerHeroIconWidget final : public UOrionUserWidgetBase
{
public:
	class UTextBlock*                             CountdownText;                                     // 0x02B8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_2C0[0x20];                                     // 0x02C0(0x0020)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void SetCountdownText(float SecondsRemaining);
	void SetHeroIcon(class UTexture2D* HeroIconTexture);
	void SetIsFriendly(bool bIsFriendly);
	void StartRemoving();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"OrionRespawnTimerHeroIconWidget">();
	}
	static class UOrionRespawnTimerHeroIconWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UOrionRespawnTimerHeroIconWidget>();
	}
};
static_assert(alignof(UOrionRespawnTimerHeroIconWidget) == 0x000008, "Wrong alignment on UOrionRespawnTimerHeroIconWidget");
static_assert(sizeof(UOrionRespawnTimerHeroIconWidget) == 0x0002E0, "Wrong size on UOrionRespawnTimerHeroIconWidget");
static_assert(offsetof(UOrionRespawnTimerHeroIconWidget, CountdownText) == 0x0002B8, "Member 'UOrionRespawnTimerHeroIconWidget::CountdownText' has a wrong offset!");

// Class OrionUI.OrionReticleContainer
// 0x0050 (0x0340 - 0x02F0)
class UOrionReticleContainer final : public UOrionHUDWidgetBase
{
public:
	class UOverlay*                               DefaultReticleOverlay;                             // 0x02F0(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOverlay*                               ReticleOverlay;                                    // 0x02F8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_300[0x40];                                     // 0x0300(0x0040)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void OnAddedNewReticle(class UOrionUserWidget_Reticle* NewReticleWidget);
	void SetupDefaultReticle(TSubclassOf<class UOrionUserWidget_Reticle> ReticleClass);
	void UpdateVisuals();

	void DumpReticleInfo() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"OrionReticleContainer">();
	}
	static class UOrionReticleContainer* GetDefaultObj()
	{
		return GetDefaultObjImpl<UOrionReticleContainer>();
	}
};
static_assert(alignof(UOrionReticleContainer) == 0x000008, "Wrong alignment on UOrionReticleContainer");
static_assert(sizeof(UOrionReticleContainer) == 0x000340, "Wrong size on UOrionReticleContainer");
static_assert(offsetof(UOrionReticleContainer, DefaultReticleOverlay) == 0x0002F0, "Member 'UOrionReticleContainer::DefaultReticleOverlay' has a wrong offset!");
static_assert(offsetof(UOrionReticleContainer, ReticleOverlay) == 0x0002F8, "Member 'UOrionReticleContainer::ReticleOverlay' has a wrong offset!");

// Class OrionUI.OrionRewardCarousel
// 0x01D8 (0x0490 - 0x02B8)
class UOrionRewardCarousel final : public UOrionUserWidgetBase
{
public:
	UMulticastDelegateProperty_                   OnCarouselFilled;                                  // 0x02B8(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TSubclassOf<class UOrionRewardCarouselItem>   CarouselItemClass;                                 // 0x02C8(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int32                                         MaxDisplayedRewards;                               // 0x02D0(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                          bEmphasizeFirstItem;                               // 0x02D4(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_2D5[0x17B];                                    // 0x02D5(0x017B)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FOrionLevelUpRewardInfo>        LevelUpRewards;                                    // 0x0450(0x0010)(ZeroConstructor, Transient, NativeAccessSpecifierPrivate)
	TWeakObjectPtr<class UOrionMcpHeroItem>       WeakHeroItem;                                      // 0x0460(0x0008)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_468[0x10];                                     // 0x0468(0x0010)(Fixing Size After Last Property [ Dumper-7 ])
	class UHorizontalBox*                         HBox_Carousel;                                     // 0x0478(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UVerticalBox*                           VBox_FirstItemInfo;                                // 0x0480(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionTextBlock*                        Text_NextRewardName;                               // 0x0488(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"OrionRewardCarousel">();
	}
	static class UOrionRewardCarousel* GetDefaultObj()
	{
		return GetDefaultObjImpl<UOrionRewardCarousel>();
	}
};
static_assert(alignof(UOrionRewardCarousel) == 0x000008, "Wrong alignment on UOrionRewardCarousel");
static_assert(sizeof(UOrionRewardCarousel) == 0x000490, "Wrong size on UOrionRewardCarousel");
static_assert(offsetof(UOrionRewardCarousel, OnCarouselFilled) == 0x0002B8, "Member 'UOrionRewardCarousel::OnCarouselFilled' has a wrong offset!");
static_assert(offsetof(UOrionRewardCarousel, CarouselItemClass) == 0x0002C8, "Member 'UOrionRewardCarousel::CarouselItemClass' has a wrong offset!");
static_assert(offsetof(UOrionRewardCarousel, MaxDisplayedRewards) == 0x0002D0, "Member 'UOrionRewardCarousel::MaxDisplayedRewards' has a wrong offset!");
static_assert(offsetof(UOrionRewardCarousel, bEmphasizeFirstItem) == 0x0002D4, "Member 'UOrionRewardCarousel::bEmphasizeFirstItem' has a wrong offset!");
static_assert(offsetof(UOrionRewardCarousel, LevelUpRewards) == 0x000450, "Member 'UOrionRewardCarousel::LevelUpRewards' has a wrong offset!");
static_assert(offsetof(UOrionRewardCarousel, WeakHeroItem) == 0x000460, "Member 'UOrionRewardCarousel::WeakHeroItem' has a wrong offset!");
static_assert(offsetof(UOrionRewardCarousel, HBox_Carousel) == 0x000478, "Member 'UOrionRewardCarousel::HBox_Carousel' has a wrong offset!");
static_assert(offsetof(UOrionRewardCarousel, VBox_FirstItemInfo) == 0x000480, "Member 'UOrionRewardCarousel::VBox_FirstItemInfo' has a wrong offset!");
static_assert(offsetof(UOrionRewardCarousel, Text_NextRewardName) == 0x000488, "Member 'UOrionRewardCarousel::Text_NextRewardName' has a wrong offset!");

// Class OrionUI.OrionProgressCompletionReward
// 0x0008 (0x0208 - 0x0200)
class UOrionProgressCompletionReward final : public UUserWidget
{
public:
	class UOrionRewardWidget*                     Reward_Item;                                       // 0x0200(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	void OnFadeInReward();
	void OnHovered();
	void OnRewardEarned(bool bImmediate);
	void OnUnhovered();
	void SetCompletedState(bool bIsCompleted);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"OrionProgressCompletionReward">();
	}
	static class UOrionProgressCompletionReward* GetDefaultObj()
	{
		return GetDefaultObjImpl<UOrionProgressCompletionReward>();
	}
};
static_assert(alignof(UOrionProgressCompletionReward) == 0x000008, "Wrong alignment on UOrionProgressCompletionReward");
static_assert(sizeof(UOrionProgressCompletionReward) == 0x000208, "Wrong size on UOrionProgressCompletionReward");
static_assert(offsetof(UOrionProgressCompletionReward, Reward_Item) == 0x000200, "Member 'UOrionProgressCompletionReward::Reward_Item' has a wrong offset!");

// Class OrionUI.OrionRewardProgressWidget
// 0x0060 (0x03D0 - 0x0370)
class UOrionRewardProgressWidget final : public UOrionTimedFillWidget
{
public:
	uint8                                         Pad_370[0x48];                                     // 0x0370(0x0048)(Fixing Size After Last Property [ Dumper-7 ])
	class UOrionTextBlock*                        Text_CurrentProgress;                              // 0x03B8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionRewardProgressBar*                Progress_Chest;                                    // 0x03C0(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_3C8[0x8];                                      // 0x03C8(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void ChestFanfareComplete();
	void OnNextChestReached(const class UOrionRewardProgressBar* ActiveProgressBar);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"OrionRewardProgressWidget">();
	}
	static class UOrionRewardProgressWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UOrionRewardProgressWidget>();
	}
};
static_assert(alignof(UOrionRewardProgressWidget) == 0x000008, "Wrong alignment on UOrionRewardProgressWidget");
static_assert(sizeof(UOrionRewardProgressWidget) == 0x0003D0, "Wrong size on UOrionRewardProgressWidget");
static_assert(offsetof(UOrionRewardProgressWidget, Text_CurrentProgress) == 0x0003B8, "Member 'UOrionRewardProgressWidget::Text_CurrentProgress' has a wrong offset!");
static_assert(offsetof(UOrionRewardProgressWidget, Progress_Chest) == 0x0003C0, "Member 'UOrionRewardProgressWidget::Progress_Chest' has a wrong offset!");

// Class OrionUI.OrionRollingTextWidget
// 0x0040 (0x0240 - 0x0200)
class UOrionRollingTextWidget final : public UUserWidget
{
public:
	uint8                                         Pad_200[0x38];                                     // 0x0200(0x0038)(Fixing Size After Last Property [ Dumper-7 ])
	class UOrionTextBlock*                        TextBlock_Displayed;                               // 0x0238(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	void ChangeState(ERollingTextWidgetState NewState);
	void OnTextChangeRequested();
	void PerformTextSwap();
	void RequestTextChange(const class FText& NewText, bool bImmediate);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"OrionRollingTextWidget">();
	}
	static class UOrionRollingTextWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UOrionRollingTextWidget>();
	}
};
static_assert(alignof(UOrionRollingTextWidget) == 0x000008, "Wrong alignment on UOrionRollingTextWidget");
static_assert(sizeof(UOrionRollingTextWidget) == 0x000240, "Wrong size on UOrionRollingTextWidget");
static_assert(offsetof(UOrionRollingTextWidget, TextBlock_Displayed) == 0x000238, "Member 'UOrionRollingTextWidget::TextBlock_Displayed' has a wrong offset!");

// Class OrionUI.OrionScoreboardCardEntry
// 0x0028 (0x02E0 - 0x02B8)
class UOrionScoreboardCardEntry final : public UOrionUserWidgetBase
{
public:
	TSubclassOf<class UOrionCardTooltip>          CardTooltipClass;                                  // 0x02B8(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_2C0[0x10];                                     // 0x02C0(0x0010)(Fixing Size After Last Property [ Dumper-7 ])
	class UOrionCardWidget*                       Card_Widget;                                       // 0x02D0(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_2D8[0x8];                                      // 0x02D8(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"OrionScoreboardCardEntry">();
	}
	static class UOrionScoreboardCardEntry* GetDefaultObj()
	{
		return GetDefaultObjImpl<UOrionScoreboardCardEntry>();
	}
};
static_assert(alignof(UOrionScoreboardCardEntry) == 0x000008, "Wrong alignment on UOrionScoreboardCardEntry");
static_assert(sizeof(UOrionScoreboardCardEntry) == 0x0002E0, "Wrong size on UOrionScoreboardCardEntry");
static_assert(offsetof(UOrionScoreboardCardEntry, CardTooltipClass) == 0x0002B8, "Member 'UOrionScoreboardCardEntry::CardTooltipClass' has a wrong offset!");
static_assert(offsetof(UOrionScoreboardCardEntry, Card_Widget) == 0x0002D0, "Member 'UOrionScoreboardCardEntry::Card_Widget' has a wrong offset!");

// Class OrionUI.OrionScoreboardHeaderIconWidget
// 0x0028 (0x02E0 - 0x02B8)
class UOrionScoreboardHeaderIconWidget final : public UOrionUserWidgetBase
{
public:
	class FText                                   HeaderToolTipText;                                 // 0x02B8(0x0018)(Edit, BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)
	class UTexture2D*                             IconTexure;                                        // 0x02D0(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                 IconImage;                                         // 0x02D8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"OrionScoreboardHeaderIconWidget">();
	}
	static class UOrionScoreboardHeaderIconWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UOrionScoreboardHeaderIconWidget>();
	}
};
static_assert(alignof(UOrionScoreboardHeaderIconWidget) == 0x000008, "Wrong alignment on UOrionScoreboardHeaderIconWidget");
static_assert(sizeof(UOrionScoreboardHeaderIconWidget) == 0x0002E0, "Wrong size on UOrionScoreboardHeaderIconWidget");
static_assert(offsetof(UOrionScoreboardHeaderIconWidget, HeaderToolTipText) == 0x0002B8, "Member 'UOrionScoreboardHeaderIconWidget::HeaderToolTipText' has a wrong offset!");
static_assert(offsetof(UOrionScoreboardHeaderIconWidget, IconTexure) == 0x0002D0, "Member 'UOrionScoreboardHeaderIconWidget::IconTexure' has a wrong offset!");
static_assert(offsetof(UOrionScoreboardHeaderIconWidget, IconImage) == 0x0002D8, "Member 'UOrionScoreboardHeaderIconWidget::IconImage' has a wrong offset!");

// Class OrionUI.OrionScoreboardTotalsWidget
// 0x0088 (0x0340 - 0x02B8)
class UOrionScoreboardTotalsWidget final : public UOrionUserWidgetBase
{
public:
	bool                                          bIsFriendly;                                       // 0x02B8(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_2B9[0x7];                                      // 0x02B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTextBlock*                             KillsText;                                         // 0x02C0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextBlock*                             DeathsText;                                        // 0x02C8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextBlock*                             AssistsText;                                       // 0x02D0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextBlock*                             MinionsText;                                       // 0x02D8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextBlock*                             TowerTakedownsText;                                // 0x02E0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_2E8[0x58];                                     // 0x02E8(0x0058)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"OrionScoreboardTotalsWidget">();
	}
	static class UOrionScoreboardTotalsWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UOrionScoreboardTotalsWidget>();
	}
};
static_assert(alignof(UOrionScoreboardTotalsWidget) == 0x000008, "Wrong alignment on UOrionScoreboardTotalsWidget");
static_assert(sizeof(UOrionScoreboardTotalsWidget) == 0x000340, "Wrong size on UOrionScoreboardTotalsWidget");
static_assert(offsetof(UOrionScoreboardTotalsWidget, bIsFriendly) == 0x0002B8, "Member 'UOrionScoreboardTotalsWidget::bIsFriendly' has a wrong offset!");
static_assert(offsetof(UOrionScoreboardTotalsWidget, KillsText) == 0x0002C0, "Member 'UOrionScoreboardTotalsWidget::KillsText' has a wrong offset!");
static_assert(offsetof(UOrionScoreboardTotalsWidget, DeathsText) == 0x0002C8, "Member 'UOrionScoreboardTotalsWidget::DeathsText' has a wrong offset!");
static_assert(offsetof(UOrionScoreboardTotalsWidget, AssistsText) == 0x0002D0, "Member 'UOrionScoreboardTotalsWidget::AssistsText' has a wrong offset!");
static_assert(offsetof(UOrionScoreboardTotalsWidget, MinionsText) == 0x0002D8, "Member 'UOrionScoreboardTotalsWidget::MinionsText' has a wrong offset!");
static_assert(offsetof(UOrionScoreboardTotalsWidget, TowerTakedownsText) == 0x0002E0, "Member 'UOrionScoreboardTotalsWidget::TowerTakedownsText' has a wrong offset!");

// Class OrionUI.OrionScoreDisplayWidget
// 0x0010 (0x0300 - 0x02F0)
class UOrionScoreDisplayWidget final : public UOrionHUDWidgetBase
{
public:
	class UTextBlock*                             ScoreDisplayFriendlyText;                          // 0x02F0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextBlock*                             ScoreDisplayEnemyText;                             // 0x02F8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	void OnScoreDisplayEnemyTextSet(const class FText& NewText);
	void OnScoreDisplayFriendlyTextSet(const class FText& NewText);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"OrionScoreDisplayWidget">();
	}
	static class UOrionScoreDisplayWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UOrionScoreDisplayWidget>();
	}
};
static_assert(alignof(UOrionScoreDisplayWidget) == 0x000008, "Wrong alignment on UOrionScoreDisplayWidget");
static_assert(sizeof(UOrionScoreDisplayWidget) == 0x000300, "Wrong size on UOrionScoreDisplayWidget");
static_assert(offsetof(UOrionScoreDisplayWidget, ScoreDisplayFriendlyText) == 0x0002F0, "Member 'UOrionScoreDisplayWidget::ScoreDisplayFriendlyText' has a wrong offset!");
static_assert(offsetof(UOrionScoreDisplayWidget, ScoreDisplayEnemyText) == 0x0002F8, "Member 'UOrionScoreDisplayWidget::ScoreDisplayEnemyText' has a wrong offset!");

// Class OrionUI.OrionSkinListItem
// 0x0200 (0x0BE0 - 0x09E0)
class UOrionSkinListItem final : public UOrionBaseButton
{
public:
	uint8                                         Pad_9E0[0x1D8];                                    // 0x09E0(0x01D8)(Fixing Size After Last Property [ Dumper-7 ])
	class UOrionLazyImage*                        LazyImage_SkinIcon;                                // 0x0BB8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionTextBlock*                        Text_SkinName;                                     // 0x0BC0(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionDefaultButton*                    Button_BuySkin;                                    // 0x0BC8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class USizeBox*                               Box_VariationCount;                                // 0x0BD0(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionTextBlock*                        Text_VariationCount;                               // 0x0BD8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	void BP_OnSkinPurchased();
	void OnSkinDefinitionSet(class UOrionSkinItemDefinition* Skin);

	bool IsForSale() const;
	bool IsOwned() const;
	bool IsPlayable() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"OrionSkinListItem">();
	}
	static class UOrionSkinListItem* GetDefaultObj()
	{
		return GetDefaultObjImpl<UOrionSkinListItem>();
	}
};
static_assert(alignof(UOrionSkinListItem) == 0x000008, "Wrong alignment on UOrionSkinListItem");
static_assert(sizeof(UOrionSkinListItem) == 0x000BE0, "Wrong size on UOrionSkinListItem");
static_assert(offsetof(UOrionSkinListItem, LazyImage_SkinIcon) == 0x000BB8, "Member 'UOrionSkinListItem::LazyImage_SkinIcon' has a wrong offset!");
static_assert(offsetof(UOrionSkinListItem, Text_SkinName) == 0x000BC0, "Member 'UOrionSkinListItem::Text_SkinName' has a wrong offset!");
static_assert(offsetof(UOrionSkinListItem, Button_BuySkin) == 0x000BC8, "Member 'UOrionSkinListItem::Button_BuySkin' has a wrong offset!");
static_assert(offsetof(UOrionSkinListItem, Box_VariationCount) == 0x000BD0, "Member 'UOrionSkinListItem::Box_VariationCount' has a wrong offset!");
static_assert(offsetof(UOrionSkinListItem, Text_VariationCount) == 0x000BD8, "Member 'UOrionSkinListItem::Text_VariationCount' has a wrong offset!");

// Class OrionUI.OrionSpectatorHUDWidget
// 0x0000 (0x02C0 - 0x02C0)
class UOrionSpectatorHUDWidget final : public UOrionBaseHUDWidget
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"OrionSpectatorHUDWidget">();
	}
	static class UOrionSpectatorHUDWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UOrionSpectatorHUDWidget>();
	}
};
static_assert(alignof(UOrionSpectatorHUDWidget) == 0x000008, "Wrong alignment on UOrionSpectatorHUDWidget");
static_assert(sizeof(UOrionSpectatorHUDWidget) == 0x0002C0, "Wrong size on UOrionSpectatorHUDWidget");

// Class OrionUI.OrionSpinner
// 0x00C0 (0x01B8 - 0x00F8)
class UOrionSpinner final : public UWidget
{
public:
	int32                                         NumItemsPerWing;                                   // 0x00F8(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                          bEnableUserScrolling;                              // 0x00FC(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_FD[0x3];                                       // 0x00FD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TSubclassOf<class UOrionSpinnerEntry>         SpinnerEntryClass;                                 // 0x0100(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_108[0xB0];                                     // 0x0108(0x00B0)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"OrionSpinner">();
	}
	static class UOrionSpinner* GetDefaultObj()
	{
		return GetDefaultObjImpl<UOrionSpinner>();
	}
};
static_assert(alignof(UOrionSpinner) == 0x000008, "Wrong alignment on UOrionSpinner");
static_assert(sizeof(UOrionSpinner) == 0x0001B8, "Wrong size on UOrionSpinner");
static_assert(offsetof(UOrionSpinner, NumItemsPerWing) == 0x0000F8, "Member 'UOrionSpinner::NumItemsPerWing' has a wrong offset!");
static_assert(offsetof(UOrionSpinner, bEnableUserScrolling) == 0x0000FC, "Member 'UOrionSpinner::bEnableUserScrolling' has a wrong offset!");
static_assert(offsetof(UOrionSpinner, SpinnerEntryClass) == 0x000100, "Member 'UOrionSpinner::SpinnerEntryClass' has a wrong offset!");

// Class OrionUI.OrionStatDisplay
// 0x00E8 (0x03A0 - 0x02B8)
class UOrionStatDisplay final : public UOrionUserWidgetBase
{
public:
	struct FGameplayAttribute                     Attribute;                                         // 0x02B8(0x0020)(Edit, BlueprintVisible, BlueprintReadOnly, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTexture2D*                             DisplayIconOverride;                               // 0x02D8(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FGameplayAttribute>             AttributeMultipliers;                              // 0x02E0(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<float>                                 ConstantMultipliers;                               // 0x02F0(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FGameplayAttribute>             AttributeAddends;                                  // 0x0300(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<float>                                 ConstantAddends;                                   // 0x0310(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	struct FGameplayTagRequirements               SearchTags;                                        // 0x0320(0x0040)(Edit, NativeAccessSpecifierPublic)
	struct FGameplayTagContainer                  TargetTags;                                        // 0x0360(0x0020)(Edit, NativeAccessSpecifierPublic)
	class UOrionAbilitySystemComponent*           BaseASC;                                           // 0x0380(0x0008)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_388[0x8];                                      // 0x0388(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	class UImage*                                 Image_StatIcon;                                    // 0x0390(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionTextBlock*                        Text_StatValue;                                    // 0x0398(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	void OnStatValueChanged();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"OrionStatDisplay">();
	}
	static class UOrionStatDisplay* GetDefaultObj()
	{
		return GetDefaultObjImpl<UOrionStatDisplay>();
	}
};
static_assert(alignof(UOrionStatDisplay) == 0x000008, "Wrong alignment on UOrionStatDisplay");
static_assert(sizeof(UOrionStatDisplay) == 0x0003A0, "Wrong size on UOrionStatDisplay");
static_assert(offsetof(UOrionStatDisplay, Attribute) == 0x0002B8, "Member 'UOrionStatDisplay::Attribute' has a wrong offset!");
static_assert(offsetof(UOrionStatDisplay, DisplayIconOverride) == 0x0002D8, "Member 'UOrionStatDisplay::DisplayIconOverride' has a wrong offset!");
static_assert(offsetof(UOrionStatDisplay, AttributeMultipliers) == 0x0002E0, "Member 'UOrionStatDisplay::AttributeMultipliers' has a wrong offset!");
static_assert(offsetof(UOrionStatDisplay, ConstantMultipliers) == 0x0002F0, "Member 'UOrionStatDisplay::ConstantMultipliers' has a wrong offset!");
static_assert(offsetof(UOrionStatDisplay, AttributeAddends) == 0x000300, "Member 'UOrionStatDisplay::AttributeAddends' has a wrong offset!");
static_assert(offsetof(UOrionStatDisplay, ConstantAddends) == 0x000310, "Member 'UOrionStatDisplay::ConstantAddends' has a wrong offset!");
static_assert(offsetof(UOrionStatDisplay, SearchTags) == 0x000320, "Member 'UOrionStatDisplay::SearchTags' has a wrong offset!");
static_assert(offsetof(UOrionStatDisplay, TargetTags) == 0x000360, "Member 'UOrionStatDisplay::TargetTags' has a wrong offset!");
static_assert(offsetof(UOrionStatDisplay, BaseASC) == 0x000380, "Member 'UOrionStatDisplay::BaseASC' has a wrong offset!");
static_assert(offsetof(UOrionStatDisplay, Image_StatIcon) == 0x000390, "Member 'UOrionStatDisplay::Image_StatIcon' has a wrong offset!");
static_assert(offsetof(UOrionStatDisplay, Text_StatValue) == 0x000398, "Member 'UOrionStatDisplay::Text_StatValue' has a wrong offset!");

// Class OrionUI.OrionStateWidget_FrontEnd
// 0x01A8 (0x0460 - 0x02B8)
class UOrionStateWidget_FrontEnd final : public UOrionUIStateWidget
{
public:
	EOrionUIAnalyticsTrackingLevel                VideoTrackingLevel;                                // 0x02B8(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_2B9[0x1F];                                     // 0x02B9(0x001F)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FOrionMenuEntry>                FrontEndMenus;                                     // 0x02D8(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPrivate)
	class UOrionTutorial*                         PendingTutorial;                                   // 0x02E8(0x0008)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_2F0[0x10];                                     // 0x02F0(0x0010)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<EOrionFrontEndContentFlow>             ContentFlowOrder;                                  // 0x0300(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPrivate)
	TSubclassOf<class UOrionActivatableWidget>    WelcomeScreenClass;                                // 0x0310(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSubclassOf<class UOrionActivatableWidget>    CardOnboardPopupClass;                             // 0x0318(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSubclassOf<class UOrionActivatableWidget>    DailyLoginScreenClass;                             // 0x0320(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSubclassOf<class UOrionActivatableWidget>    MasteryOnboardClass;                               // 0x0328(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSubclassOf<class UOrionActivatableWidget>    SovereignUpdateScreenClass;                        // 0x0330(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSubclassOf<class UOrionActivatableWidget>    NewCardsUpdateScreenClass;                         // 0x0338(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSubclassOf<class UOrionActivatableWidget>    CMSPopupScreenClass;                               // 0x0340(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSubclassOf<class UOrionActivatableWidget>    DeckBuilderDialogClass;                            // 0x0348(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSubclassOf<class UOrionTutorial>             DeckBuilderTutorialClass;                          // 0x0350(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSubclassOf<class UOrionTutorial>             CardCollectionTutorialClass;                       // 0x0358(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOverlay*                               Overlay_FrontEndContent;                           // 0x0360(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionStorefrontPopup*                  Storefront_Popup;                                  // 0x0368(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionPurchaseConfirmationWidget*       PurchaseConfirmation_Popup;                        // 0x0370(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionUnlockRankWidget*                 UnlockRankWidget;                                  // 0x0378(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionLightBox*                         LightBox_FlowState;                                // 0x0380(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionCardInspectScreen*                CardInspectScreen;                                 // 0x0388(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionStorefrontPopup*                  MTX_Popup;                                         // 0x0390(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionHeroDetailsMasteryRewardPopup*    MasteryRankRewards;                                // 0x0398(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionFlairPopup*                       Flair_Popup;                                       // 0x03A0(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionHomeScreen*                       Home;                                              // 0x03A8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionPlayRoot*                         Play;                                              // 0x03B0(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionStoreScreen*                      Store;                                             // 0x03B8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionCollectionTab*                    Collection;                                        // 0x03C0(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionReplayBrowserRoot*                Replay;                                            // 0x03C8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionCommunityScreen*                  Community;                                         // 0x03D0(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionVideoPlayerWidget*                VideoPlayerWidget;                                 // 0x03D8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionTabListWidget*                    TabList_Menus;                                     // 0x03E0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_3E8[0x78];                                     // 0x03E8(0x0078)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void CheckGiftBoxes();
	void DynamicHandleGameLostFocus();
	void DynamicHandleGameReceivedFocus();
	void DynamicHandleGiftBoxOpened(const struct FOrionLootNotification& LootNotification, bool bShowFanfare);
	void DynamicHandlePurchaseConfirmationActivated();
	void DynamicHandlePurchaseConfirmationDeactivated();
	void DynamicHandlePurchaseConfirmationMTXReplenish();
	void DynamicHandleVideoOnEndReached();
	void DynamicHandleVideoOnOpenFailed(const class FString& OpenedUrl);
	void OnGameLostFocus();
	void OnGameReceivedFocus();
	void OnMatchmakingStateChanged(EOrionPartyMatchmakingState NewState);
	bool ShowContentFlowState(EOrionFrontEndContentFlow FlowState);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"OrionStateWidget_FrontEnd">();
	}
	static class UOrionStateWidget_FrontEnd* GetDefaultObj()
	{
		return GetDefaultObjImpl<UOrionStateWidget_FrontEnd>();
	}
};
static_assert(alignof(UOrionStateWidget_FrontEnd) == 0x000008, "Wrong alignment on UOrionStateWidget_FrontEnd");
static_assert(sizeof(UOrionStateWidget_FrontEnd) == 0x000460, "Wrong size on UOrionStateWidget_FrontEnd");
static_assert(offsetof(UOrionStateWidget_FrontEnd, VideoTrackingLevel) == 0x0002B8, "Member 'UOrionStateWidget_FrontEnd::VideoTrackingLevel' has a wrong offset!");
static_assert(offsetof(UOrionStateWidget_FrontEnd, FrontEndMenus) == 0x0002D8, "Member 'UOrionStateWidget_FrontEnd::FrontEndMenus' has a wrong offset!");
static_assert(offsetof(UOrionStateWidget_FrontEnd, PendingTutorial) == 0x0002E8, "Member 'UOrionStateWidget_FrontEnd::PendingTutorial' has a wrong offset!");
static_assert(offsetof(UOrionStateWidget_FrontEnd, ContentFlowOrder) == 0x000300, "Member 'UOrionStateWidget_FrontEnd::ContentFlowOrder' has a wrong offset!");
static_assert(offsetof(UOrionStateWidget_FrontEnd, WelcomeScreenClass) == 0x000310, "Member 'UOrionStateWidget_FrontEnd::WelcomeScreenClass' has a wrong offset!");
static_assert(offsetof(UOrionStateWidget_FrontEnd, CardOnboardPopupClass) == 0x000318, "Member 'UOrionStateWidget_FrontEnd::CardOnboardPopupClass' has a wrong offset!");
static_assert(offsetof(UOrionStateWidget_FrontEnd, DailyLoginScreenClass) == 0x000320, "Member 'UOrionStateWidget_FrontEnd::DailyLoginScreenClass' has a wrong offset!");
static_assert(offsetof(UOrionStateWidget_FrontEnd, MasteryOnboardClass) == 0x000328, "Member 'UOrionStateWidget_FrontEnd::MasteryOnboardClass' has a wrong offset!");
static_assert(offsetof(UOrionStateWidget_FrontEnd, SovereignUpdateScreenClass) == 0x000330, "Member 'UOrionStateWidget_FrontEnd::SovereignUpdateScreenClass' has a wrong offset!");
static_assert(offsetof(UOrionStateWidget_FrontEnd, NewCardsUpdateScreenClass) == 0x000338, "Member 'UOrionStateWidget_FrontEnd::NewCardsUpdateScreenClass' has a wrong offset!");
static_assert(offsetof(UOrionStateWidget_FrontEnd, CMSPopupScreenClass) == 0x000340, "Member 'UOrionStateWidget_FrontEnd::CMSPopupScreenClass' has a wrong offset!");
static_assert(offsetof(UOrionStateWidget_FrontEnd, DeckBuilderDialogClass) == 0x000348, "Member 'UOrionStateWidget_FrontEnd::DeckBuilderDialogClass' has a wrong offset!");
static_assert(offsetof(UOrionStateWidget_FrontEnd, DeckBuilderTutorialClass) == 0x000350, "Member 'UOrionStateWidget_FrontEnd::DeckBuilderTutorialClass' has a wrong offset!");
static_assert(offsetof(UOrionStateWidget_FrontEnd, CardCollectionTutorialClass) == 0x000358, "Member 'UOrionStateWidget_FrontEnd::CardCollectionTutorialClass' has a wrong offset!");
static_assert(offsetof(UOrionStateWidget_FrontEnd, Overlay_FrontEndContent) == 0x000360, "Member 'UOrionStateWidget_FrontEnd::Overlay_FrontEndContent' has a wrong offset!");
static_assert(offsetof(UOrionStateWidget_FrontEnd, Storefront_Popup) == 0x000368, "Member 'UOrionStateWidget_FrontEnd::Storefront_Popup' has a wrong offset!");
static_assert(offsetof(UOrionStateWidget_FrontEnd, PurchaseConfirmation_Popup) == 0x000370, "Member 'UOrionStateWidget_FrontEnd::PurchaseConfirmation_Popup' has a wrong offset!");
static_assert(offsetof(UOrionStateWidget_FrontEnd, UnlockRankWidget) == 0x000378, "Member 'UOrionStateWidget_FrontEnd::UnlockRankWidget' has a wrong offset!");
static_assert(offsetof(UOrionStateWidget_FrontEnd, LightBox_FlowState) == 0x000380, "Member 'UOrionStateWidget_FrontEnd::LightBox_FlowState' has a wrong offset!");
static_assert(offsetof(UOrionStateWidget_FrontEnd, CardInspectScreen) == 0x000388, "Member 'UOrionStateWidget_FrontEnd::CardInspectScreen' has a wrong offset!");
static_assert(offsetof(UOrionStateWidget_FrontEnd, MTX_Popup) == 0x000390, "Member 'UOrionStateWidget_FrontEnd::MTX_Popup' has a wrong offset!");
static_assert(offsetof(UOrionStateWidget_FrontEnd, MasteryRankRewards) == 0x000398, "Member 'UOrionStateWidget_FrontEnd::MasteryRankRewards' has a wrong offset!");
static_assert(offsetof(UOrionStateWidget_FrontEnd, Flair_Popup) == 0x0003A0, "Member 'UOrionStateWidget_FrontEnd::Flair_Popup' has a wrong offset!");
static_assert(offsetof(UOrionStateWidget_FrontEnd, Home) == 0x0003A8, "Member 'UOrionStateWidget_FrontEnd::Home' has a wrong offset!");
static_assert(offsetof(UOrionStateWidget_FrontEnd, Play) == 0x0003B0, "Member 'UOrionStateWidget_FrontEnd::Play' has a wrong offset!");
static_assert(offsetof(UOrionStateWidget_FrontEnd, Store) == 0x0003B8, "Member 'UOrionStateWidget_FrontEnd::Store' has a wrong offset!");
static_assert(offsetof(UOrionStateWidget_FrontEnd, Collection) == 0x0003C0, "Member 'UOrionStateWidget_FrontEnd::Collection' has a wrong offset!");
static_assert(offsetof(UOrionStateWidget_FrontEnd, Replay) == 0x0003C8, "Member 'UOrionStateWidget_FrontEnd::Replay' has a wrong offset!");
static_assert(offsetof(UOrionStateWidget_FrontEnd, Community) == 0x0003D0, "Member 'UOrionStateWidget_FrontEnd::Community' has a wrong offset!");
static_assert(offsetof(UOrionStateWidget_FrontEnd, VideoPlayerWidget) == 0x0003D8, "Member 'UOrionStateWidget_FrontEnd::VideoPlayerWidget' has a wrong offset!");
static_assert(offsetof(UOrionStateWidget_FrontEnd, TabList_Menus) == 0x0003E0, "Member 'UOrionStateWidget_FrontEnd::TabList_Menus' has a wrong offset!");

// Class OrionUI.OrionStateWidget_HotfixAndLoad
// 0x0000 (0x02E0 - 0x02E0)
class UOrionStateWidget_HotfixAndLoad final : public UOrionStateWidget_UpdateBase
{
public:
	void HotfixFinished();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"OrionStateWidget_HotfixAndLoad">();
	}
	static class UOrionStateWidget_HotfixAndLoad* GetDefaultObj()
	{
		return GetDefaultObjImpl<UOrionStateWidget_HotfixAndLoad>();
	}
};
static_assert(alignof(UOrionStateWidget_HotfixAndLoad) == 0x000008, "Wrong alignment on UOrionStateWidget_HotfixAndLoad");
static_assert(sizeof(UOrionStateWidget_HotfixAndLoad) == 0x0002E0, "Wrong size on UOrionStateWidget_HotfixAndLoad");

// Class OrionUI.OrionStateWidget_Login
// 0x0008 (0x02C0 - 0x02B8)
class UOrionStateWidget_Login : public UOrionUIStateWidget
{
public:
	uint8                                         Pad_2B8[0x8];                                      // 0x02B8(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"OrionStateWidget_Login">();
	}
	static class UOrionStateWidget_Login* GetDefaultObj()
	{
		return GetDefaultObjImpl<UOrionStateWidget_Login>();
	}
};
static_assert(alignof(UOrionStateWidget_Login) == 0x000008, "Wrong alignment on UOrionStateWidget_Login");
static_assert(sizeof(UOrionStateWidget_Login) == 0x0002C0, "Wrong size on UOrionStateWidget_Login");

// Class OrionUI.OrionStateWidget_RejoinMatch
// 0x0008 (0x02C0 - 0x02B8)
class UOrionStateWidget_RejoinMatch final : public UOrionUIStateWidget
{
public:
	uint8                                         Pad_2B8[0x8];                                      // 0x02B8(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"OrionStateWidget_RejoinMatch">();
	}
	static class UOrionStateWidget_RejoinMatch* GetDefaultObj()
	{
		return GetDefaultObjImpl<UOrionStateWidget_RejoinMatch>();
	}
};
static_assert(alignof(UOrionStateWidget_RejoinMatch) == 0x000008, "Wrong alignment on UOrionStateWidget_RejoinMatch");
static_assert(sizeof(UOrionStateWidget_RejoinMatch) == 0x0002C0, "Wrong size on UOrionStateWidget_RejoinMatch");

// Class OrionUI.OrionStateWidget_Title
// 0x0008 (0x02C0 - 0x02B8)
class UOrionStateWidget_Title final : public UOrionUIStateWidget
{
public:
	uint8                                         Pad_2B8[0x8];                                      // 0x02B8(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"OrionStateWidget_Title">();
	}
	static class UOrionStateWidget_Title* GetDefaultObj()
	{
		return GetDefaultObjImpl<UOrionStateWidget_Title>();
	}
};
static_assert(alignof(UOrionStateWidget_Title) == 0x000008, "Wrong alignment on UOrionStateWidget_Title");
static_assert(sizeof(UOrionStateWidget_Title) == 0x0002C0, "Wrong size on UOrionStateWidget_Title");

// Class OrionUI.OrionStatusEffectFeed
// 0x0050 (0x0360 - 0x0310)
class UOrionStatusEffectFeed final : public UOrionHUDInfoFeedBase
{
public:
	uint8                                         Pad_310[0x50];                                     // 0x0310(0x0050)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"OrionStatusEffectFeed">();
	}
	static class UOrionStatusEffectFeed* GetDefaultObj()
	{
		return GetDefaultObjImpl<UOrionStatusEffectFeed>();
	}
};
static_assert(alignof(UOrionStatusEffectFeed) == 0x000008, "Wrong alignment on UOrionStatusEffectFeed");
static_assert(sizeof(UOrionStatusEffectFeed) == 0x000360, "Wrong size on UOrionStatusEffectFeed");

// Class OrionUI.OrionStorefrontPopup
// 0x00A0 (0x05F0 - 0x0550)
class UOrionStorefrontPopup final : public UOrionStorefront
{
public:
	uint8                                         Pad_550[0x78];                                     // 0x0550(0x0078)(Fixing Size After Last Property [ Dumper-7 ])
	class UImage*                                 Image_StorefrontIcon;                              // 0x05C8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionTextBlock*                        Text_StoreTitle;                                   // 0x05D0(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionTextBlock*                        Text_StoreDesc;                                    // 0x05D8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionDefaultButton*                    DefaultButton_Close;                               // 0x05E0(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_5E8[0x8];                                      // 0x05E8(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"OrionStorefrontPopup">();
	}
	static class UOrionStorefrontPopup* GetDefaultObj()
	{
		return GetDefaultObjImpl<UOrionStorefrontPopup>();
	}
};
static_assert(alignof(UOrionStorefrontPopup) == 0x000008, "Wrong alignment on UOrionStorefrontPopup");
static_assert(sizeof(UOrionStorefrontPopup) == 0x0005F0, "Wrong size on UOrionStorefrontPopup");
static_assert(offsetof(UOrionStorefrontPopup, Image_StorefrontIcon) == 0x0005C8, "Member 'UOrionStorefrontPopup::Image_StorefrontIcon' has a wrong offset!");
static_assert(offsetof(UOrionStorefrontPopup, Text_StoreTitle) == 0x0005D0, "Member 'UOrionStorefrontPopup::Text_StoreTitle' has a wrong offset!");
static_assert(offsetof(UOrionStorefrontPopup, Text_StoreDesc) == 0x0005D8, "Member 'UOrionStorefrontPopup::Text_StoreDesc' has a wrong offset!");
static_assert(offsetof(UOrionStorefrontPopup, DefaultButton_Close) == 0x0005E0, "Member 'UOrionStorefrontPopup::DefaultButton_Close' has a wrong offset!");

// Class OrionUI.OrionSurrenderWidget
// 0x0048 (0x0300 - 0x02B8)
class UOrionSurrenderWidget final : public UOrionUserWidgetBase
{
public:
	TArray<class UImage*>                         VoteStatusTickWidgets;                             // 0x02B8(0x0010)(BlueprintVisible, ExportObject, ZeroConstructor, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	TArray<class UImage*>                         VoteStatusCrossWidgets;                            // 0x02C8(0x0010)(BlueprintVisible, ExportObject, ZeroConstructor, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	class UTextBlock*                             VoteStatusTextWidget;                              // 0x02D8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextBlock*                             MyVoteTextWidget;                                  // 0x02E0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         PostVoteDismissTime;                               // 0x02E8(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         SurrenderTextUpdateFrequency;                      // 0x02EC(0x0004)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_2F0[0x10];                                     // 0x02F0(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void HideWidget();
	void OnPlayerSurrenderStatusChange(const class AOrionPlayerState_Game* PlayerState, ESurrenderVote Vote);
	void OnTeamSurrenderStatusChange(const class AOrionTeamInfo* SurrenderTeam, ETeamSurrenderStatus TeamVoteStatus);
	void ShowWidget();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"OrionSurrenderWidget">();
	}
	static class UOrionSurrenderWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UOrionSurrenderWidget>();
	}
};
static_assert(alignof(UOrionSurrenderWidget) == 0x000008, "Wrong alignment on UOrionSurrenderWidget");
static_assert(sizeof(UOrionSurrenderWidget) == 0x000300, "Wrong size on UOrionSurrenderWidget");
static_assert(offsetof(UOrionSurrenderWidget, VoteStatusTickWidgets) == 0x0002B8, "Member 'UOrionSurrenderWidget::VoteStatusTickWidgets' has a wrong offset!");
static_assert(offsetof(UOrionSurrenderWidget, VoteStatusCrossWidgets) == 0x0002C8, "Member 'UOrionSurrenderWidget::VoteStatusCrossWidgets' has a wrong offset!");
static_assert(offsetof(UOrionSurrenderWidget, VoteStatusTextWidget) == 0x0002D8, "Member 'UOrionSurrenderWidget::VoteStatusTextWidget' has a wrong offset!");
static_assert(offsetof(UOrionSurrenderWidget, MyVoteTextWidget) == 0x0002E0, "Member 'UOrionSurrenderWidget::MyVoteTextWidget' has a wrong offset!");
static_assert(offsetof(UOrionSurrenderWidget, PostVoteDismissTime) == 0x0002E8, "Member 'UOrionSurrenderWidget::PostVoteDismissTime' has a wrong offset!");
static_assert(offsetof(UOrionSurrenderWidget, SurrenderTextUpdateFrequency) == 0x0002EC, "Member 'UOrionSurrenderWidget::SurrenderTextUpdateFrequency' has a wrong offset!");

// Class OrionUI.OrionTabListWidget
// 0x00A8 (0x0360 - 0x02B8)
class UOrionTabListWidget final : public UOrionUserWidgetBase
{
public:
	UMulticastDelegateProperty_                   OnTabSelected;                                     // 0x02B8(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	class FName                                   LinkedSwitcherName;                                // 0x02C8(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	EOrionTabListType                             ListType;                                          // 0x02D0(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	EOrionWidgetStyleSize                         StyleSize;                                         // 0x02D1(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                          bAutoListenForInput;                               // 0x02D2(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                          bSelectionRequired;                                // 0x02D3(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_2D4[0x4];                                      // 0x02D4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UOrionWidgetSwitcher*                   LinkedSwitcher;                                    // 0x02D8(0x0008)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TMap<class FName, struct FTabListEntry>       TabEntriesByID;                                    // 0x02E0(0x0050)(ZeroConstructor, Transient, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	class UOrionBaseButton_Group*                 TabButtonGroup;                                    // 0x0330(0x0008)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_338[0x10];                                     // 0x0338(0x0010)(Fixing Size After Last Property [ Dumper-7 ])
	class UOrionDynamicEntryBox*                  EntryBox_Tabs;                                     // 0x0348(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionInputVisualizer*                  Input_PreviousTab;                                 // 0x0350(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionInputVisualizer*                  Input_NextTab;                                     // 0x0358(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	void DisableTabWithReason(class FName TabNameID, const class FText& Reason);
	class UOrionTabButton* GetTabButtonByID(class FName TabNameID);
	void HandleTabButtonSelected(class UOrionBaseButton* SelectedTabButton, int32 ButtonIndex);
	void HandleTabLeft();
	void HandleTabRight();
	void RegisterAssetID(class FName TabId, const class FText& TabName, TSoftClassPtr<class UClass> WidgetAssetID, class FName SceneName, class FName TutorialID, TSubclassOf<class UOrionTabButton> ButtonClass, bool bLoadNow);
	void RegisterInstance(class FName TabId, const class FText& TabName, class UWidget* Widget, class FName SceneName, class FName TutorialID, TSubclassOf<class UOrionTabButton> ButtonClass);
	void RegisterInstanceByIndex(class FName TabId, const class FText& TabName, int32 LinkedSwitcherIndex, class FName SceneName, TSubclassOf<class UOrionTabButton> ButtonClass);
	bool SelectTabByContent(class UWidget* TabContent);
	bool SelectTabByID(class FName TabNameID);
	void SetLinkedSwitcher(class UOrionWidgetSwitcher* OrionSwitcher);
	void SetListeningForInput(bool bShouldListen);
	void SetSelectionRequired(bool bRequireSelection, bool bClearCurrentSelection);
	void SetTabEnabled(class FName TabNameID, bool bEnable);
	void SetTabSelectionBehavior(const EButtonSelectionBehavior SelectionBehavior);
	void UpdateTabInputSettings(EOrionTabListType InListType, int32 InInputPriority);

	void BroadcastSceneChange() const;
	class FName GetActiveTab() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"OrionTabListWidget">();
	}
	static class UOrionTabListWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UOrionTabListWidget>();
	}
};
static_assert(alignof(UOrionTabListWidget) == 0x000008, "Wrong alignment on UOrionTabListWidget");
static_assert(sizeof(UOrionTabListWidget) == 0x000360, "Wrong size on UOrionTabListWidget");
static_assert(offsetof(UOrionTabListWidget, OnTabSelected) == 0x0002B8, "Member 'UOrionTabListWidget::OnTabSelected' has a wrong offset!");
static_assert(offsetof(UOrionTabListWidget, LinkedSwitcherName) == 0x0002C8, "Member 'UOrionTabListWidget::LinkedSwitcherName' has a wrong offset!");
static_assert(offsetof(UOrionTabListWidget, ListType) == 0x0002D0, "Member 'UOrionTabListWidget::ListType' has a wrong offset!");
static_assert(offsetof(UOrionTabListWidget, StyleSize) == 0x0002D1, "Member 'UOrionTabListWidget::StyleSize' has a wrong offset!");
static_assert(offsetof(UOrionTabListWidget, bAutoListenForInput) == 0x0002D2, "Member 'UOrionTabListWidget::bAutoListenForInput' has a wrong offset!");
static_assert(offsetof(UOrionTabListWidget, bSelectionRequired) == 0x0002D3, "Member 'UOrionTabListWidget::bSelectionRequired' has a wrong offset!");
static_assert(offsetof(UOrionTabListWidget, LinkedSwitcher) == 0x0002D8, "Member 'UOrionTabListWidget::LinkedSwitcher' has a wrong offset!");
static_assert(offsetof(UOrionTabListWidget, TabEntriesByID) == 0x0002E0, "Member 'UOrionTabListWidget::TabEntriesByID' has a wrong offset!");
static_assert(offsetof(UOrionTabListWidget, TabButtonGroup) == 0x000330, "Member 'UOrionTabListWidget::TabButtonGroup' has a wrong offset!");
static_assert(offsetof(UOrionTabListWidget, EntryBox_Tabs) == 0x000348, "Member 'UOrionTabListWidget::EntryBox_Tabs' has a wrong offset!");
static_assert(offsetof(UOrionTabListWidget, Input_PreviousTab) == 0x000350, "Member 'UOrionTabListWidget::Input_PreviousTab' has a wrong offset!");
static_assert(offsetof(UOrionTabListWidget, Input_NextTab) == 0x000358, "Member 'UOrionTabListWidget::Input_NextTab' has a wrong offset!");

// Class OrionUI.OrionTeamCommGameEventMessage
// 0x0038 (0x0328 - 0x02F0)
class UOrionTeamCommGameEventMessage final : public UOrionUserWidget_GameEventMessage
{
public:
	class UOrionGestureData*                      GestureData;                                       // 0x02F0(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextBlock*                             MessageText;                                       // 0x02F8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionLazyImage*                        LazyImage_PlayerPortrait;                          // 0x0300(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionTeamCommGameEventButtonIcon*      Icon_1;                                            // 0x0308(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionTeamCommGameEventButtonIcon*      Icon_2;                                            // 0x0310(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionTeamCommGameEventButtonIcon*      Icon_3;                                            // 0x0318(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionTeamCommGameEventButtonIcon*      Icon_4;                                            // 0x0320(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"OrionTeamCommGameEventMessage">();
	}
	static class UOrionTeamCommGameEventMessage* GetDefaultObj()
	{
		return GetDefaultObjImpl<UOrionTeamCommGameEventMessage>();
	}
};
static_assert(alignof(UOrionTeamCommGameEventMessage) == 0x000008, "Wrong alignment on UOrionTeamCommGameEventMessage");
static_assert(sizeof(UOrionTeamCommGameEventMessage) == 0x000328, "Wrong size on UOrionTeamCommGameEventMessage");
static_assert(offsetof(UOrionTeamCommGameEventMessage, GestureData) == 0x0002F0, "Member 'UOrionTeamCommGameEventMessage::GestureData' has a wrong offset!");
static_assert(offsetof(UOrionTeamCommGameEventMessage, MessageText) == 0x0002F8, "Member 'UOrionTeamCommGameEventMessage::MessageText' has a wrong offset!");
static_assert(offsetof(UOrionTeamCommGameEventMessage, LazyImage_PlayerPortrait) == 0x000300, "Member 'UOrionTeamCommGameEventMessage::LazyImage_PlayerPortrait' has a wrong offset!");
static_assert(offsetof(UOrionTeamCommGameEventMessage, Icon_1) == 0x000308, "Member 'UOrionTeamCommGameEventMessage::Icon_1' has a wrong offset!");
static_assert(offsetof(UOrionTeamCommGameEventMessage, Icon_2) == 0x000310, "Member 'UOrionTeamCommGameEventMessage::Icon_2' has a wrong offset!");
static_assert(offsetof(UOrionTeamCommGameEventMessage, Icon_3) == 0x000318, "Member 'UOrionTeamCommGameEventMessage::Icon_3' has a wrong offset!");
static_assert(offsetof(UOrionTeamCommGameEventMessage, Icon_4) == 0x000320, "Member 'UOrionTeamCommGameEventMessage::Icon_4' has a wrong offset!");

// Class OrionUI.OrionTeamCommMessageFeed
// 0x0050 (0x0360 - 0x0310)
class UOrionTeamCommMessageFeed final : public UOrionHUDInfoFeedBase
{
public:
	uint8                                         Pad_310[0x50];                                     // 0x0310(0x0050)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"OrionTeamCommMessageFeed">();
	}
	static class UOrionTeamCommMessageFeed* GetDefaultObj()
	{
		return GetDefaultObjImpl<UOrionTeamCommMessageFeed>();
	}
};
static_assert(alignof(UOrionTeamCommMessageFeed) == 0x000008, "Wrong alignment on UOrionTeamCommMessageFeed");
static_assert(sizeof(UOrionTeamCommMessageFeed) == 0x000360, "Wrong size on UOrionTeamCommMessageFeed");

// Class OrionUI.OrionTeamFramePlayer
// 0x0038 (0x02F0 - 0x02B8)
class UOrionTeamFramePlayer final : public UOrionUserWidgetBase
{
public:
	uint8                                         Pad_2B8[0x18];                                     // 0x02B8(0x0018)(Fixing Size After Last Property [ Dumper-7 ])
	class UOrionTextBlock*                        Text_RespawnTimer;                                 // 0x02D0(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionTextBlock*                        Text_Level;                                        // 0x02D8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionLazyImage*                        LazyImage_Portrait;                                // 0x02E0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_2E8[0x8];                                      // 0x02E8(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void OnPlayerConnectionChange(bool bIsPlayerDisconnected);
	void OnPlayerCriticalChange(bool bIsPlayerCritical);
	void OnPlayerLifeChange(bool bIsNowDead);
	void OnSetEnergy(float EnergyPercent);
	void OnSetHealth(float HealthPercent);
	void OnSetPlayerState(bool bIsFriendly, bool bIsLocalPlayer);
	void OnUltReadyChanged(bool bIsNowReady);
	void OnVisibilityChanged(bool bIsNowFrozen);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"OrionTeamFramePlayer">();
	}
	static class UOrionTeamFramePlayer* GetDefaultObj()
	{
		return GetDefaultObjImpl<UOrionTeamFramePlayer>();
	}
};
static_assert(alignof(UOrionTeamFramePlayer) == 0x000008, "Wrong alignment on UOrionTeamFramePlayer");
static_assert(sizeof(UOrionTeamFramePlayer) == 0x0002F0, "Wrong size on UOrionTeamFramePlayer");
static_assert(offsetof(UOrionTeamFramePlayer, Text_RespawnTimer) == 0x0002D0, "Member 'UOrionTeamFramePlayer::Text_RespawnTimer' has a wrong offset!");
static_assert(offsetof(UOrionTeamFramePlayer, Text_Level) == 0x0002D8, "Member 'UOrionTeamFramePlayer::Text_Level' has a wrong offset!");
static_assert(offsetof(UOrionTeamFramePlayer, LazyImage_Portrait) == 0x0002E0, "Member 'UOrionTeamFramePlayer::LazyImage_Portrait' has a wrong offset!");

// Class OrionUI.OrionTowerHealthBar
// 0x0040 (0x0330 - 0x02F0)
class UOrionTowerHealthBar final : public UOrionHUDWidgetBase
{
public:
	int32                                         MinionCountForWarning;                             // 0x02F0(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_2F4[0x19];                                     // 0x02F4(0x0019)(Fixing Size After Last Property [ Dumper-7 ])
	bool                                          bIsTowerFriendly;                                  // 0x030D(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_30E[0x2];                                      // 0x030E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UOrionGameProgressBar*                  Tower_Meter;                                       // 0x0310(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionTextBlock*                        Text_Name;                                         // 0x0318(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionTextBlock*                        Text_MinionCount;                                  // 0x0320(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_328[0x8];                                      // 0x0328(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void HandleSetMinionCount(class AActor* Actor, int32 MinionCount);
	void HandleSetPlayerTargetingTowerState(class AActor* Actor, bool bIsTargeted);
	void HandleSetTowerHealth(class AActor* Actor);
	void HandleShowTowerMeter(class AActor* Actor);
	void OnChangeTargetedStatus(bool bIsTargetingPlayer);
	void OnHideMeter();
	void OnLocalHeroDeath(const struct FOrionHUDTeamStatusInfo& UpdatedTeamInfo);
	void OnLowMinionWarning(bool bInWarningRange);
	void OnShowMeter(bool bIsTowerFriendly_0, bool bIsTargetingPlayer);
	void OnTargetTower(bool bIsPlayerTargetingTower);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"OrionTowerHealthBar">();
	}
	static class UOrionTowerHealthBar* GetDefaultObj()
	{
		return GetDefaultObjImpl<UOrionTowerHealthBar>();
	}
};
static_assert(alignof(UOrionTowerHealthBar) == 0x000008, "Wrong alignment on UOrionTowerHealthBar");
static_assert(sizeof(UOrionTowerHealthBar) == 0x000330, "Wrong size on UOrionTowerHealthBar");
static_assert(offsetof(UOrionTowerHealthBar, MinionCountForWarning) == 0x0002F0, "Member 'UOrionTowerHealthBar::MinionCountForWarning' has a wrong offset!");
static_assert(offsetof(UOrionTowerHealthBar, bIsTowerFriendly) == 0x00030D, "Member 'UOrionTowerHealthBar::bIsTowerFriendly' has a wrong offset!");
static_assert(offsetof(UOrionTowerHealthBar, Tower_Meter) == 0x000310, "Member 'UOrionTowerHealthBar::Tower_Meter' has a wrong offset!");
static_assert(offsetof(UOrionTowerHealthBar, Text_Name) == 0x000318, "Member 'UOrionTowerHealthBar::Text_Name' has a wrong offset!");
static_assert(offsetof(UOrionTowerHealthBar, Text_MinionCount) == 0x000320, "Member 'UOrionTowerHealthBar::Text_MinionCount' has a wrong offset!");

// Class OrionUI.OrionUIColorManager
// 0x0078 (0x00A0 - 0x0028)
class UOrionUIColorManager final : public UObject
{
public:
	TArray<struct FOrionUISwatchOverride>         SwatchOverrides;                                   // 0x0028(0x0010)(ZeroConstructor, Config, NativeAccessSpecifierPrivate)
	TMap<class FString, struct FOrionUISwatch>    SwatchesById;                                      // 0x0038(0x0050)(ZeroConstructor, NativeAccessSpecifierPrivate)
	TArray<class UOrionUIPaletteDefinition*>      PaletteDefinitions;                                // 0x0088(0x0010)(ZeroConstructor, NativeAccessSpecifierPrivate)
	class UOrionUIPaletteDefinition*              SwatchPaletteDef;                                  // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"OrionUIColorManager">();
	}
	static class UOrionUIColorManager* GetDefaultObj()
	{
		return GetDefaultObjImpl<UOrionUIColorManager>();
	}
};
static_assert(alignof(UOrionUIColorManager) == 0x000008, "Wrong alignment on UOrionUIColorManager");
static_assert(sizeof(UOrionUIColorManager) == 0x0000A0, "Wrong size on UOrionUIColorManager");
static_assert(offsetof(UOrionUIColorManager, SwatchOverrides) == 0x000028, "Member 'UOrionUIColorManager::SwatchOverrides' has a wrong offset!");
static_assert(offsetof(UOrionUIColorManager, SwatchesById) == 0x000038, "Member 'UOrionUIColorManager::SwatchesById' has a wrong offset!");
static_assert(offsetof(UOrionUIColorManager, PaletteDefinitions) == 0x000088, "Member 'UOrionUIColorManager::PaletteDefinitions' has a wrong offset!");
static_assert(offsetof(UOrionUIColorManager, SwatchPaletteDef) == 0x000098, "Member 'UOrionUIColorManager::SwatchPaletteDef' has a wrong offset!");

// Class OrionUI.OrionUIPalette
// 0x0068 (0x0090 - 0x0028)
class UOrionUIPalette final : public UObject
{
public:
	class UOrionUIPaletteDefinition*              Definition;                                        // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<class UOrionUIPalette*>                SubPalettes;                                       // 0x0030(0x0010)(ZeroConstructor, NativeAccessSpecifierPrivate)
	TMap<class FString, class FString>            SwatchIdsByEntryId;                                // 0x0040(0x0050)(ZeroConstructor, NativeAccessSpecifierPrivate)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"OrionUIPalette">();
	}
	static class UOrionUIPalette* GetDefaultObj()
	{
		return GetDefaultObjImpl<UOrionUIPalette>();
	}
};
static_assert(alignof(UOrionUIPalette) == 0x000008, "Wrong alignment on UOrionUIPalette");
static_assert(sizeof(UOrionUIPalette) == 0x000090, "Wrong size on UOrionUIPalette");
static_assert(offsetof(UOrionUIPalette, Definition) == 0x000028, "Member 'UOrionUIPalette::Definition' has a wrong offset!");
static_assert(offsetof(UOrionUIPalette, SubPalettes) == 0x000030, "Member 'UOrionUIPalette::SubPalettes' has a wrong offset!");
static_assert(offsetof(UOrionUIPalette, SwatchIdsByEntryId) == 0x000040, "Member 'UOrionUIPalette::SwatchIdsByEntryId' has a wrong offset!");

// Class OrionUI.OrionUnlockRankWidget
// 0x0128 (0x0570 - 0x0448)
class UOrionUnlockRankWidget final : public UOrionActivatableWidget
{
public:
	uint8                                         Pad_448[0x1];                                      // 0x0448(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	bool                                          bApplyLastGameXP;                                  // 0x0449(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_44A[0x96];                                     // 0x044A(0x0096)(Fixing Size After Last Property [ Dumper-7 ])
	class UOrionMcpRankUpRecipeItemDefinition*    DeckSlotRecipe;                                    // 0x04E0(0x0008)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_4E8[0x10];                                     // 0x04E8(0x0010)(Fixing Size After Last Property [ Dumper-7 ])
	class UOrionRewardWidget*                     Reward_RankBonusGift;                              // 0x04F8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionDefaultButton*                    Button_Close;                                      // 0x0500(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionDefaultButton*                    Button_TimeCurrencyUnlock;                         // 0x0508(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionDefaultButton*                    Button_MTXUnlock;                                  // 0x0510(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionDefaultButton*                    Button_FreeButton;                                 // 0x0518(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionTextBlock*                        Text_TimePrimaryCost;                              // 0x0520(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionTextBlock*                        Text_MTXPrimaryCost;                               // 0x0528(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionLazyImage*                        Image_TimePrimaryCost;                             // 0x0530(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionRichText*                         RichText_TimeCurrency;                             // 0x0538(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionRichText*                         RichText_MtxCurrency;                              // 0x0540(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionRichTextWithBasicTooltip*         TTRichText_FreeTokens;                             // 0x0548(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionTextBlock*                        Text_UnlockTitle;                                  // 0x0550(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionTextBlock*                        Text_BonusTitle;                                   // 0x0558(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UVerticalBox*                           VBox_CollapseableRewardBox;                        // 0x0560(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_568[0x8];                                      // 0x0568(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void OnCanAffordTimeCurrency(bool bCanAfford);
	void OnUnlockTypeSet(EUnlockType SelectedRankType);
	void UpdatePurchaseButtons(bool bShowCoins, bool bShowFreeButton);

	EUnlockType GetUnlockType() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"OrionUnlockRankWidget">();
	}
	static class UOrionUnlockRankWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UOrionUnlockRankWidget>();
	}
};
static_assert(alignof(UOrionUnlockRankWidget) == 0x000008, "Wrong alignment on UOrionUnlockRankWidget");
static_assert(sizeof(UOrionUnlockRankWidget) == 0x000570, "Wrong size on UOrionUnlockRankWidget");
static_assert(offsetof(UOrionUnlockRankWidget, bApplyLastGameXP) == 0x000449, "Member 'UOrionUnlockRankWidget::bApplyLastGameXP' has a wrong offset!");
static_assert(offsetof(UOrionUnlockRankWidget, DeckSlotRecipe) == 0x0004E0, "Member 'UOrionUnlockRankWidget::DeckSlotRecipe' has a wrong offset!");
static_assert(offsetof(UOrionUnlockRankWidget, Reward_RankBonusGift) == 0x0004F8, "Member 'UOrionUnlockRankWidget::Reward_RankBonusGift' has a wrong offset!");
static_assert(offsetof(UOrionUnlockRankWidget, Button_Close) == 0x000500, "Member 'UOrionUnlockRankWidget::Button_Close' has a wrong offset!");
static_assert(offsetof(UOrionUnlockRankWidget, Button_TimeCurrencyUnlock) == 0x000508, "Member 'UOrionUnlockRankWidget::Button_TimeCurrencyUnlock' has a wrong offset!");
static_assert(offsetof(UOrionUnlockRankWidget, Button_MTXUnlock) == 0x000510, "Member 'UOrionUnlockRankWidget::Button_MTXUnlock' has a wrong offset!");
static_assert(offsetof(UOrionUnlockRankWidget, Button_FreeButton) == 0x000518, "Member 'UOrionUnlockRankWidget::Button_FreeButton' has a wrong offset!");
static_assert(offsetof(UOrionUnlockRankWidget, Text_TimePrimaryCost) == 0x000520, "Member 'UOrionUnlockRankWidget::Text_TimePrimaryCost' has a wrong offset!");
static_assert(offsetof(UOrionUnlockRankWidget, Text_MTXPrimaryCost) == 0x000528, "Member 'UOrionUnlockRankWidget::Text_MTXPrimaryCost' has a wrong offset!");
static_assert(offsetof(UOrionUnlockRankWidget, Image_TimePrimaryCost) == 0x000530, "Member 'UOrionUnlockRankWidget::Image_TimePrimaryCost' has a wrong offset!");
static_assert(offsetof(UOrionUnlockRankWidget, RichText_TimeCurrency) == 0x000538, "Member 'UOrionUnlockRankWidget::RichText_TimeCurrency' has a wrong offset!");
static_assert(offsetof(UOrionUnlockRankWidget, RichText_MtxCurrency) == 0x000540, "Member 'UOrionUnlockRankWidget::RichText_MtxCurrency' has a wrong offset!");
static_assert(offsetof(UOrionUnlockRankWidget, TTRichText_FreeTokens) == 0x000548, "Member 'UOrionUnlockRankWidget::TTRichText_FreeTokens' has a wrong offset!");
static_assert(offsetof(UOrionUnlockRankWidget, Text_UnlockTitle) == 0x000550, "Member 'UOrionUnlockRankWidget::Text_UnlockTitle' has a wrong offset!");
static_assert(offsetof(UOrionUnlockRankWidget, Text_BonusTitle) == 0x000558, "Member 'UOrionUnlockRankWidget::Text_BonusTitle' has a wrong offset!");
static_assert(offsetof(UOrionUnlockRankWidget, VBox_CollapseableRewardBox) == 0x000560, "Member 'UOrionUnlockRankWidget::VBox_CollapseableRewardBox' has a wrong offset!");

// Class OrionUI.OrionUserWidgetHost
// 0x0028 (0x0120 - 0x00F8)
class UOrionUserWidgetHost final : public UWidget
{
public:
	TSubclassOf<class UUserWidget>                HostedWidgetClass;                                 // 0x00F8(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UUserWidget>                CachedHostedWidgetClass;                           // 0x0100(0x0008)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_108[0x10];                                     // 0x0108(0x0010)(Fixing Size After Last Property [ Dumper-7 ])
	class UUserWidget*                            HostedWidget;                                      // 0x0118(0x0008)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	class UUserWidget* GetRawContent();
	void SetContent(class UUserWidget* NewContent);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"OrionUserWidgetHost">();
	}
	static class UOrionUserWidgetHost* GetDefaultObj()
	{
		return GetDefaultObjImpl<UOrionUserWidgetHost>();
	}
};
static_assert(alignof(UOrionUserWidgetHost) == 0x000008, "Wrong alignment on UOrionUserWidgetHost");
static_assert(sizeof(UOrionUserWidgetHost) == 0x000120, "Wrong size on UOrionUserWidgetHost");
static_assert(offsetof(UOrionUserWidgetHost, HostedWidgetClass) == 0x0000F8, "Member 'UOrionUserWidgetHost::HostedWidgetClass' has a wrong offset!");
static_assert(offsetof(UOrionUserWidgetHost, CachedHostedWidgetClass) == 0x000100, "Member 'UOrionUserWidgetHost::CachedHostedWidgetClass' has a wrong offset!");
static_assert(offsetof(UOrionUserWidgetHost, HostedWidget) == 0x000118, "Member 'UOrionUserWidgetHost::HostedWidget' has a wrong offset!");

// Class OrionUI.OrionVaultTokenPurchaseWidget
// 0x0018 (0x0460 - 0x0448)
class UOrionVaultTokenPurchaseWidget final : public UOrionActivatableWidget
{
public:
	class UOrionDefaultButton*                    Button_Purchase;                                   // 0x0448(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionDefaultButton*                    Button_OpenVault;                                  // 0x0450(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_458[0x8];                                      // 0x0458(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void OnShowOpen();
	void OnShowPurchase();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"OrionVaultTokenPurchaseWidget">();
	}
	static class UOrionVaultTokenPurchaseWidget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UOrionVaultTokenPurchaseWidget>();
	}
};
static_assert(alignof(UOrionVaultTokenPurchaseWidget) == 0x000008, "Wrong alignment on UOrionVaultTokenPurchaseWidget");
static_assert(sizeof(UOrionVaultTokenPurchaseWidget) == 0x000460, "Wrong size on UOrionVaultTokenPurchaseWidget");
static_assert(offsetof(UOrionVaultTokenPurchaseWidget, Button_Purchase) == 0x000448, "Member 'UOrionVaultTokenPurchaseWidget::Button_Purchase' has a wrong offset!");
static_assert(offsetof(UOrionVaultTokenPurchaseWidget, Button_OpenVault) == 0x000450, "Member 'UOrionVaultTokenPurchaseWidget::Button_OpenVault' has a wrong offset!");

// Class OrionUI.OrionVideoTitles
// 0x0028 (0x02E0 - 0x02B8)
class UOrionVideoTitles final : public UOrionUserWidgetBase
{
public:
	TArray<struct FOrionVideoTitleEvent>          TitleEvents;                                       // 0x02B8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	uint8                                         Pad_2C8[0x18];                                     // 0x02C8(0x0018)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void AddTitleEvent(const struct FTimespan& Time, class UWidgetAnimation* Animation);
	void OnTitleEvent(const struct FOrionVideoTitleEvent& TitleEvent);
	void SetPlayer(const class UMediaPlayer* InMediaPlayer);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"OrionVideoTitles">();
	}
	static class UOrionVideoTitles* GetDefaultObj()
	{
		return GetDefaultObjImpl<UOrionVideoTitles>();
	}
};
static_assert(alignof(UOrionVideoTitles) == 0x000008, "Wrong alignment on UOrionVideoTitles");
static_assert(sizeof(UOrionVideoTitles) == 0x0002E0, "Wrong size on UOrionVideoTitles");
static_assert(offsetof(UOrionVideoTitles, TitleEvents) == 0x0002B8, "Member 'UOrionVideoTitles::TitleEvents' has a wrong offset!");

// Class OrionUI.OrionWidgetSwitcher
// 0x0048 (0x0170 - 0x0128)
class UOrionWidgetSwitcher final : public UWidgetSwitcher
{
public:
	UMulticastDelegateProperty_                   OnActiveWidgetDeactivated;                         // 0x0128(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                   OnActiveWidgetChanged;                             // 0x0138(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	EOrionSwitcherTransition                      TransitionType;                                    // 0x0148(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	ETransitionCurve                              TransitionCurveType;                               // 0x0149(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_14A[0x2];                                      // 0x014A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         TransitionDuration;                                // 0x014C(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_150[0x20];                                     // 0x0150(0x0020)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void HandleActiveWidgetDeactivated();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"OrionWidgetSwitcher">();
	}
	static class UOrionWidgetSwitcher* GetDefaultObj()
	{
		return GetDefaultObjImpl<UOrionWidgetSwitcher>();
	}
};
static_assert(alignof(UOrionWidgetSwitcher) == 0x000008, "Wrong alignment on UOrionWidgetSwitcher");
static_assert(sizeof(UOrionWidgetSwitcher) == 0x000170, "Wrong size on UOrionWidgetSwitcher");
static_assert(offsetof(UOrionWidgetSwitcher, OnActiveWidgetDeactivated) == 0x000128, "Member 'UOrionWidgetSwitcher::OnActiveWidgetDeactivated' has a wrong offset!");
static_assert(offsetof(UOrionWidgetSwitcher, OnActiveWidgetChanged) == 0x000138, "Member 'UOrionWidgetSwitcher::OnActiveWidgetChanged' has a wrong offset!");
static_assert(offsetof(UOrionWidgetSwitcher, TransitionType) == 0x000148, "Member 'UOrionWidgetSwitcher::TransitionType' has a wrong offset!");
static_assert(offsetof(UOrionWidgetSwitcher, TransitionCurveType) == 0x000149, "Member 'UOrionWidgetSwitcher::TransitionCurveType' has a wrong offset!");
static_assert(offsetof(UOrionWidgetSwitcher, TransitionDuration) == 0x00014C, "Member 'UOrionWidgetSwitcher::TransitionDuration' has a wrong offset!");

// Class OrionUI.OrionXpAssembly
// 0x0050 (0x0340 - 0x02F0)
class UOrionXpAssembly final : public UOrionHUDWidgetBase
{
public:
	EXPType                                       XpType;                                            // 0x02F0(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_2F1[0x7];                                      // 0x02F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UOrionXPWidget*                         MeterWidget;                                       // 0x02F8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextBlock*                             LevelTextWidget;                                   // 0x0300(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                 LevelUpShockwave;                                  // 0x0308(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         LevelUp_AnimLength;                                // 0x0310(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FLinearColor                           LevelUpAnim_Color;                                 // 0x0314(0x0010)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         LevelUpAnim_TimeStarted;                           // 0x0324(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_328[0x8];                                      // 0x0328(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	class UOrionGameProgressBar*                  XP_Meter;                                          // 0x0330(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_338[0x8];                                      // 0x0338(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void InitInHUD(class UOrionBaseHUDWidget* InHUDWidget);
	void OnCardPointsUpdate(int32 NewCardPointsSpent, int32 NewCardPointsMax);
	void OnCardXPUpdate(float XP, float MaxXP);
	void OnPlayerLevelUp(int32 NewLevel);
	void OnPlayerXPUpdate(int32 XP, int32 MaxXP);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"OrionXpAssembly">();
	}
	static class UOrionXpAssembly* GetDefaultObj()
	{
		return GetDefaultObjImpl<UOrionXpAssembly>();
	}
};
static_assert(alignof(UOrionXpAssembly) == 0x000008, "Wrong alignment on UOrionXpAssembly");
static_assert(sizeof(UOrionXpAssembly) == 0x000340, "Wrong size on UOrionXpAssembly");
static_assert(offsetof(UOrionXpAssembly, XpType) == 0x0002F0, "Member 'UOrionXpAssembly::XpType' has a wrong offset!");
static_assert(offsetof(UOrionXpAssembly, MeterWidget) == 0x0002F8, "Member 'UOrionXpAssembly::MeterWidget' has a wrong offset!");
static_assert(offsetof(UOrionXpAssembly, LevelTextWidget) == 0x000300, "Member 'UOrionXpAssembly::LevelTextWidget' has a wrong offset!");
static_assert(offsetof(UOrionXpAssembly, LevelUpShockwave) == 0x000308, "Member 'UOrionXpAssembly::LevelUpShockwave' has a wrong offset!");
static_assert(offsetof(UOrionXpAssembly, LevelUp_AnimLength) == 0x000310, "Member 'UOrionXpAssembly::LevelUp_AnimLength' has a wrong offset!");
static_assert(offsetof(UOrionXpAssembly, LevelUpAnim_Color) == 0x000314, "Member 'UOrionXpAssembly::LevelUpAnim_Color' has a wrong offset!");
static_assert(offsetof(UOrionXpAssembly, LevelUpAnim_TimeStarted) == 0x000324, "Member 'UOrionXpAssembly::LevelUpAnim_TimeStarted' has a wrong offset!");
static_assert(offsetof(UOrionXpAssembly, XP_Meter) == 0x000330, "Member 'UOrionXpAssembly::XP_Meter' has a wrong offset!");

// Class OrionUI.OutlinePanel
// 0x0020 (0x0130 - 0x0110)
class UOutlinePanel final : public UPanelWidget
{
public:
	struct FMargin                                OutlineSize;                                       // 0x0110(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_120[0x10];                                     // 0x0120(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	class UPanelSlot* AddChildToOutline(class UWidget* Content);
	void SetOutlineSize(const struct FMargin& InOutlineSize);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"OutlinePanel">();
	}
	static class UOutlinePanel* GetDefaultObj()
	{
		return GetDefaultObjImpl<UOutlinePanel>();
	}
};
static_assert(alignof(UOutlinePanel) == 0x000008, "Wrong alignment on UOutlinePanel");
static_assert(sizeof(UOutlinePanel) == 0x000130, "Wrong size on UOutlinePanel");
static_assert(offsetof(UOutlinePanel, OutlineSize) == 0x000110, "Member 'UOutlinePanel::OutlineSize' has a wrong offset!");

// Class OrionUI.PageView
// 0x0298 (0x0390 - 0x00F8)
class UPageView final : public UWidget
{
public:
	TSubclassOf<class UUserWidget>                ItemClass;                                         // 0x00F8(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EHorizontalAlignment                          ItemHAlign;                                        // 0x0100(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EVerticalAlignment                            ItemVAlign;                                        // 0x0101(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_102[0x2];                                      // 0x0102(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMargin                                SlotPadding;                                       // 0x0104(0x0010)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FVector2D                              MinDesiredSize;                                    // 0x0114(0x0008)(Edit, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11C[0x4];                                      // 0x011C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TSubclassOf<class UOrionBaseButton>           PageLeftClass;                                     // 0x0120(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UOrionBaseButton>           PageRightClass;                                    // 0x0128(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UObject*>                        Data;                                              // 0x0130(0x0010)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                   OnItemClicked;                                     // 0x0140(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                   OnItemSelected;                                    // 0x0150(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	UMulticastDelegateProperty_                   OnItemHovered;                                     // 0x0160(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TSubclassOf<class UOrionTextStyle>            Style;                                             // 0x0170(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EOrionWidgetStyleSize                         StyleSize;                                         // 0x0178(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EOrionTextColor                               ColorType;                                         // 0x0179(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bUseDropShadow;                                    // 0x017A(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_17B[0x1];                                      // 0x017B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CurrentPage;                                       // 0x017C(0x0004)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int32                                         MaxPages;                                          // 0x0180(0x0004)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_184[0x4];                                      // 0x0184(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UOrionBaseButton_Group*                 ButtonGroup;                                       // 0x0188(0x0008)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionBaseButton*                       PageLeft;                                          // 0x0190(0x0008)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOrionBaseButton*                       PageRight;                                         // 0x0198(0x0008)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UUserWidget*                            HoveredItem;                                       // 0x01A0(0x0008)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int32                                         Rows;                                              // 0x01A8(0x0004)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int32                                         Columns;                                           // 0x01AC(0x0004)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_1B0[0x1E0];                                    // 0x01B0(0x01E0)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void DynamicOnItemClicked(class UUserWidget* Widget);
	void DynamicOnItemHover(class UUserWidget* Widget, bool bUnused);
	void DynamicOnItemSelected(class UUserWidget* Widget, bool bSelected);
	void DynamicOnItemUnhover(class UUserWidget* Widget, bool bUnused);
	void DynamicOnPageLeft(class UOrionBaseButton* Button);
	void DynamicOnPagePicked(class UOrionBaseButton* SelectedButton, int32 ButtonIndex);
	void DynamicOnPageRight(class UOrionBaseButton* Button);
	void PageViewOnItemClicked__DelegateSignature(class UUserWidget* Widget);
	void PageViewOnItemHovered__DelegateSignature(class UUserWidget* Widget);
	void PageViewOnItemSelected__DelegateSignature(class UUserWidget* Widget, bool bSelected);
	void RequestRefresh();
	void SetPage(int32 Page);

	int32 GetPage() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PageView">();
	}
	static class UPageView* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPageView>();
	}
};
static_assert(alignof(UPageView) == 0x000008, "Wrong alignment on UPageView");
static_assert(sizeof(UPageView) == 0x000390, "Wrong size on UPageView");
static_assert(offsetof(UPageView, ItemClass) == 0x0000F8, "Member 'UPageView::ItemClass' has a wrong offset!");
static_assert(offsetof(UPageView, ItemHAlign) == 0x000100, "Member 'UPageView::ItemHAlign' has a wrong offset!");
static_assert(offsetof(UPageView, ItemVAlign) == 0x000101, "Member 'UPageView::ItemVAlign' has a wrong offset!");
static_assert(offsetof(UPageView, SlotPadding) == 0x000104, "Member 'UPageView::SlotPadding' has a wrong offset!");
static_assert(offsetof(UPageView, MinDesiredSize) == 0x000114, "Member 'UPageView::MinDesiredSize' has a wrong offset!");
static_assert(offsetof(UPageView, PageLeftClass) == 0x000120, "Member 'UPageView::PageLeftClass' has a wrong offset!");
static_assert(offsetof(UPageView, PageRightClass) == 0x000128, "Member 'UPageView::PageRightClass' has a wrong offset!");
static_assert(offsetof(UPageView, Data) == 0x000130, "Member 'UPageView::Data' has a wrong offset!");
static_assert(offsetof(UPageView, OnItemClicked) == 0x000140, "Member 'UPageView::OnItemClicked' has a wrong offset!");
static_assert(offsetof(UPageView, OnItemSelected) == 0x000150, "Member 'UPageView::OnItemSelected' has a wrong offset!");
static_assert(offsetof(UPageView, OnItemHovered) == 0x000160, "Member 'UPageView::OnItemHovered' has a wrong offset!");
static_assert(offsetof(UPageView, Style) == 0x000170, "Member 'UPageView::Style' has a wrong offset!");
static_assert(offsetof(UPageView, StyleSize) == 0x000178, "Member 'UPageView::StyleSize' has a wrong offset!");
static_assert(offsetof(UPageView, ColorType) == 0x000179, "Member 'UPageView::ColorType' has a wrong offset!");
static_assert(offsetof(UPageView, bUseDropShadow) == 0x00017A, "Member 'UPageView::bUseDropShadow' has a wrong offset!");
static_assert(offsetof(UPageView, CurrentPage) == 0x00017C, "Member 'UPageView::CurrentPage' has a wrong offset!");
static_assert(offsetof(UPageView, MaxPages) == 0x000180, "Member 'UPageView::MaxPages' has a wrong offset!");
static_assert(offsetof(UPageView, ButtonGroup) == 0x000188, "Member 'UPageView::ButtonGroup' has a wrong offset!");
static_assert(offsetof(UPageView, PageLeft) == 0x000190, "Member 'UPageView::PageLeft' has a wrong offset!");
static_assert(offsetof(UPageView, PageRight) == 0x000198, "Member 'UPageView::PageRight' has a wrong offset!");
static_assert(offsetof(UPageView, HoveredItem) == 0x0001A0, "Member 'UPageView::HoveredItem' has a wrong offset!");
static_assert(offsetof(UPageView, Rows) == 0x0001A8, "Member 'UPageView::Rows' has a wrong offset!");
static_assert(offsetof(UPageView, Columns) == 0x0001AC, "Member 'UPageView::Columns' has a wrong offset!");

// Class OrionUI.PlatformSpecificWidgetSlot
// 0x0028 (0x0060 - 0x0038)
class UPlatformSpecificWidgetSlot final : public UPanelSlot
{
public:
	struct FPlatformBitset                        Platforms;                                         // 0x0038(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnTemplate, NoDestructor, NativeAccessSpecifierPublic)
	struct FMargin                                Padding;                                           // 0x003C(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnTemplate, NoDestructor, NativeAccessSpecifierPublic)
	EHorizontalAlignment                          HorizontalAlignment;                               // 0x004C(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EVerticalAlignment                            VerticalAlignment;                                 // 0x004D(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4E[0x12];                                      // 0x004E(0x0012)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PlatformSpecificWidgetSlot">();
	}
	static class UPlatformSpecificWidgetSlot* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPlatformSpecificWidgetSlot>();
	}
};
static_assert(alignof(UPlatformSpecificWidgetSlot) == 0x000008, "Wrong alignment on UPlatformSpecificWidgetSlot");
static_assert(sizeof(UPlatformSpecificWidgetSlot) == 0x000060, "Wrong size on UPlatformSpecificWidgetSlot");
static_assert(offsetof(UPlatformSpecificWidgetSlot, Platforms) == 0x000038, "Member 'UPlatformSpecificWidgetSlot::Platforms' has a wrong offset!");
static_assert(offsetof(UPlatformSpecificWidgetSlot, Padding) == 0x00003C, "Member 'UPlatformSpecificWidgetSlot::Padding' has a wrong offset!");
static_assert(offsetof(UPlatformSpecificWidgetSlot, HorizontalAlignment) == 0x00004C, "Member 'UPlatformSpecificWidgetSlot::HorizontalAlignment' has a wrong offset!");
static_assert(offsetof(UPlatformSpecificWidgetSlot, VerticalAlignment) == 0x00004D, "Member 'UPlatformSpecificWidgetSlot::VerticalAlignment' has a wrong offset!");

// Class OrionUI.PopupAnchor
// 0x0028 (0x0138 - 0x0110)
class UPopupAnchor final : public UContentWidget
{
public:
	TDelegate<void(bool bOpen)>                   OnOpenChanged;                                     // 0x0110(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, InstancedReference, NoDestructor, NativeAccessSpecifierPublic)
	bool                                          bDrawWhenClosed;                                   // 0x0120(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_121[0x17];                                     // 0x0121(0x0017)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void Close();
	void OnPopupOpenChanged__DelegateSignature(bool bOpen);
	void Open(bool bFocus);

	bool IsOpen() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PopupAnchor">();
	}
	static class UPopupAnchor* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPopupAnchor>();
	}
};
static_assert(alignof(UPopupAnchor) == 0x000008, "Wrong alignment on UPopupAnchor");
static_assert(sizeof(UPopupAnchor) == 0x000138, "Wrong size on UPopupAnchor");
static_assert(offsetof(UPopupAnchor, OnOpenChanged) == 0x000110, "Member 'UPopupAnchor::OnOpenChanged' has a wrong offset!");
static_assert(offsetof(UPopupAnchor, bDrawWhenClosed) == 0x000120, "Member 'UPopupAnchor::bDrawWhenClosed' has a wrong offset!");

// Class OrionUI.SaleBannerBase
// 0x0008 (0x02C0 - 0x02B8)
class USaleBannerBase final : public UOrionUserWidgetBase
{
public:
	class UOrionRichText*                         RichText_Discount;                                 // 0x02B8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"SaleBannerBase">();
	}
	static class USaleBannerBase* GetDefaultObj()
	{
		return GetDefaultObjImpl<USaleBannerBase>();
	}
};
static_assert(alignof(USaleBannerBase) == 0x000008, "Wrong alignment on USaleBannerBase");
static_assert(sizeof(USaleBannerBase) == 0x0002C0, "Wrong size on USaleBannerBase");
static_assert(offsetof(USaleBannerBase, RichText_Discount) == 0x0002B8, "Member 'USaleBannerBase::RichText_Discount' has a wrong offset!");

}

