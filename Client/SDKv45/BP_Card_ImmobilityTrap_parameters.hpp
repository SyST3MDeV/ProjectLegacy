#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Card_ImmobilityTrap

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "OrionGame_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function BP_Card_ImmobilityTrap.BP_Card_ImmobilityTrap_C.ExecuteUbergraph_BP_Card_ImmobilityTrap
// 0x0070 (0x0070 - 0x0000)
struct BP_Card_ImmobilityTrap_C_ExecuteUbergraph_BP_Card_ImmobilityTrap final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_ComponentBoundEvent_Target;                 // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetTeamColorFromMPC_ReturnValue;          // 0x0010(0x0010)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetValueAtLevel_ReturnValue;              // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EOrionTeam                                    K2Node_Event_NewTeamIdx;                           // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           CallFunc_GetTeamColorFromMPCWithTeamNum_ReturnValue; // 0x002C(0x0010)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CompareTeams_ReturnValue;                 // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3D[0x3];                                       // 0x003D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue; // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue2; // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EEvaluateCurveTableResult                     CallFunc_EvaluateCurveTableRow_OutResult;          // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_51[0x3];                                       // 0x0051(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_EvaluateCurveTableRow_OutXY;              // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_59[0x7];                                       // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         CallFunc_GetOverlappingActors_OverlappingActors;   // 0x0060(0x0010)(ZeroConstructor, ReferenceParm)
};
static_assert(alignof(BP_Card_ImmobilityTrap_C_ExecuteUbergraph_BP_Card_ImmobilityTrap) == 0x000008, "Wrong alignment on BP_Card_ImmobilityTrap_C_ExecuteUbergraph_BP_Card_ImmobilityTrap");
static_assert(sizeof(BP_Card_ImmobilityTrap_C_ExecuteUbergraph_BP_Card_ImmobilityTrap) == 0x000070, "Wrong size on BP_Card_ImmobilityTrap_C_ExecuteUbergraph_BP_Card_ImmobilityTrap");
static_assert(offsetof(BP_Card_ImmobilityTrap_C_ExecuteUbergraph_BP_Card_ImmobilityTrap, EntryPoint) == 0x000000, "Member 'BP_Card_ImmobilityTrap_C_ExecuteUbergraph_BP_Card_ImmobilityTrap::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_Card_ImmobilityTrap_C_ExecuteUbergraph_BP_Card_ImmobilityTrap, K2Node_ComponentBoundEvent_Target) == 0x000008, "Member 'BP_Card_ImmobilityTrap_C_ExecuteUbergraph_BP_Card_ImmobilityTrap::K2Node_ComponentBoundEvent_Target' has a wrong offset!");
static_assert(offsetof(BP_Card_ImmobilityTrap_C_ExecuteUbergraph_BP_Card_ImmobilityTrap, CallFunc_GetTeamColorFromMPC_ReturnValue) == 0x000010, "Member 'BP_Card_ImmobilityTrap_C_ExecuteUbergraph_BP_Card_ImmobilityTrap::CallFunc_GetTeamColorFromMPC_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Card_ImmobilityTrap_C_ExecuteUbergraph_BP_Card_ImmobilityTrap, CallFunc_Conv_IntToFloat_ReturnValue) == 0x000020, "Member 'BP_Card_ImmobilityTrap_C_ExecuteUbergraph_BP_Card_ImmobilityTrap::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Card_ImmobilityTrap_C_ExecuteUbergraph_BP_Card_ImmobilityTrap, CallFunc_GetValueAtLevel_ReturnValue) == 0x000024, "Member 'BP_Card_ImmobilityTrap_C_ExecuteUbergraph_BP_Card_ImmobilityTrap::CallFunc_GetValueAtLevel_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Card_ImmobilityTrap_C_ExecuteUbergraph_BP_Card_ImmobilityTrap, K2Node_Event_NewTeamIdx) == 0x000028, "Member 'BP_Card_ImmobilityTrap_C_ExecuteUbergraph_BP_Card_ImmobilityTrap::K2Node_Event_NewTeamIdx' has a wrong offset!");
static_assert(offsetof(BP_Card_ImmobilityTrap_C_ExecuteUbergraph_BP_Card_ImmobilityTrap, CallFunc_GetTeamColorFromMPCWithTeamNum_ReturnValue) == 0x00002C, "Member 'BP_Card_ImmobilityTrap_C_ExecuteUbergraph_BP_Card_ImmobilityTrap::CallFunc_GetTeamColorFromMPCWithTeamNum_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Card_ImmobilityTrap_C_ExecuteUbergraph_BP_Card_ImmobilityTrap, CallFunc_CompareTeams_ReturnValue) == 0x00003C, "Member 'BP_Card_ImmobilityTrap_C_ExecuteUbergraph_BP_Card_ImmobilityTrap::CallFunc_CompareTeams_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Card_ImmobilityTrap_C_ExecuteUbergraph_BP_Card_ImmobilityTrap, CallFunc_CreateDynamicMaterialInstance_ReturnValue) == 0x000040, "Member 'BP_Card_ImmobilityTrap_C_ExecuteUbergraph_BP_Card_ImmobilityTrap::CallFunc_CreateDynamicMaterialInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Card_ImmobilityTrap_C_ExecuteUbergraph_BP_Card_ImmobilityTrap, CallFunc_CreateDynamicMaterialInstance_ReturnValue2) == 0x000048, "Member 'BP_Card_ImmobilityTrap_C_ExecuteUbergraph_BP_Card_ImmobilityTrap::CallFunc_CreateDynamicMaterialInstance_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_Card_ImmobilityTrap_C_ExecuteUbergraph_BP_Card_ImmobilityTrap, CallFunc_EvaluateCurveTableRow_OutResult) == 0x000050, "Member 'BP_Card_ImmobilityTrap_C_ExecuteUbergraph_BP_Card_ImmobilityTrap::CallFunc_EvaluateCurveTableRow_OutResult' has a wrong offset!");
static_assert(offsetof(BP_Card_ImmobilityTrap_C_ExecuteUbergraph_BP_Card_ImmobilityTrap, CallFunc_EvaluateCurveTableRow_OutXY) == 0x000054, "Member 'BP_Card_ImmobilityTrap_C_ExecuteUbergraph_BP_Card_ImmobilityTrap::CallFunc_EvaluateCurveTableRow_OutXY' has a wrong offset!");
static_assert(offsetof(BP_Card_ImmobilityTrap_C_ExecuteUbergraph_BP_Card_ImmobilityTrap, K2Node_SwitchEnum_CmpSuccess) == 0x000058, "Member 'BP_Card_ImmobilityTrap_C_ExecuteUbergraph_BP_Card_ImmobilityTrap::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_Card_ImmobilityTrap_C_ExecuteUbergraph_BP_Card_ImmobilityTrap, CallFunc_GetOverlappingActors_OverlappingActors) == 0x000060, "Member 'BP_Card_ImmobilityTrap_C_ExecuteUbergraph_BP_Card_ImmobilityTrap::CallFunc_GetOverlappingActors_OverlappingActors' has a wrong offset!");

// Function BP_Card_ImmobilityTrap.BP_Card_ImmobilityTrap_C.OnTeamChanged
// 0x0001 (0x0001 - 0x0000)
struct BP_Card_ImmobilityTrap_C_OnTeamChanged final
{
public:
	EOrionTeam                                    NewTeamIdx;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Card_ImmobilityTrap_C_OnTeamChanged) == 0x000001, "Wrong alignment on BP_Card_ImmobilityTrap_C_OnTeamChanged");
static_assert(sizeof(BP_Card_ImmobilityTrap_C_OnTeamChanged) == 0x000001, "Wrong size on BP_Card_ImmobilityTrap_C_OnTeamChanged");
static_assert(offsetof(BP_Card_ImmobilityTrap_C_OnTeamChanged, NewTeamIdx) == 0x000000, "Member 'BP_Card_ImmobilityTrap_C_OnTeamChanged::NewTeamIdx' has a wrong offset!");

// Function BP_Card_ImmobilityTrap.BP_Card_ImmobilityTrap_C.BndEvt__OrionGameplayVolume_K2Node_ComponentBoundEvent_0_ContainerEffectApplied__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct BP_Card_ImmobilityTrap_C_BndEvt__OrionGameplayVolume_K2Node_ComponentBoundEvent_0_ContainerEffectApplied__DelegateSignature final
{
public:
	class AActor*                                 Target;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Card_ImmobilityTrap_C_BndEvt__OrionGameplayVolume_K2Node_ComponentBoundEvent_0_ContainerEffectApplied__DelegateSignature) == 0x000008, "Wrong alignment on BP_Card_ImmobilityTrap_C_BndEvt__OrionGameplayVolume_K2Node_ComponentBoundEvent_0_ContainerEffectApplied__DelegateSignature");
static_assert(sizeof(BP_Card_ImmobilityTrap_C_BndEvt__OrionGameplayVolume_K2Node_ComponentBoundEvent_0_ContainerEffectApplied__DelegateSignature) == 0x000008, "Wrong size on BP_Card_ImmobilityTrap_C_BndEvt__OrionGameplayVolume_K2Node_ComponentBoundEvent_0_ContainerEffectApplied__DelegateSignature");
static_assert(offsetof(BP_Card_ImmobilityTrap_C_BndEvt__OrionGameplayVolume_K2Node_ComponentBoundEvent_0_ContainerEffectApplied__DelegateSignature, Target) == 0x000000, "Member 'BP_Card_ImmobilityTrap_C_BndEvt__OrionGameplayVolume_K2Node_ComponentBoundEvent_0_ContainerEffectApplied__DelegateSignature::Target' has a wrong offset!");

// Function BP_Card_ImmobilityTrap.BP_Card_ImmobilityTrap_C.GetTargetingLocation
// 0x0018 (0x0018 - 0x0000)
struct BP_Card_ImmobilityTrap_C_GetTargetingLocation final
{
public:
	struct FVector                                OutPosition;                                       // 0x0000(0x000C)(Parm, OutParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x000C(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Card_ImmobilityTrap_C_GetTargetingLocation) == 0x000004, "Wrong alignment on BP_Card_ImmobilityTrap_C_GetTargetingLocation");
static_assert(sizeof(BP_Card_ImmobilityTrap_C_GetTargetingLocation) == 0x000018, "Wrong size on BP_Card_ImmobilityTrap_C_GetTargetingLocation");
static_assert(offsetof(BP_Card_ImmobilityTrap_C_GetTargetingLocation, OutPosition) == 0x000000, "Member 'BP_Card_ImmobilityTrap_C_GetTargetingLocation::OutPosition' has a wrong offset!");
static_assert(offsetof(BP_Card_ImmobilityTrap_C_GetTargetingLocation, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x00000C, "Member 'BP_Card_ImmobilityTrap_C_GetTargetingLocation::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");

// Function BP_Card_ImmobilityTrap.BP_Card_ImmobilityTrap_C.GetAimTargetSensingLocation
// 0x0018 (0x0018 - 0x0000)
struct BP_Card_ImmobilityTrap_C_GetAimTargetSensingLocation final
{
public:
	struct FVector                                AimPosition;                                       // 0x0000(0x000C)(Parm, OutParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x000C(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Card_ImmobilityTrap_C_GetAimTargetSensingLocation) == 0x000004, "Wrong alignment on BP_Card_ImmobilityTrap_C_GetAimTargetSensingLocation");
static_assert(sizeof(BP_Card_ImmobilityTrap_C_GetAimTargetSensingLocation) == 0x000018, "Wrong size on BP_Card_ImmobilityTrap_C_GetAimTargetSensingLocation");
static_assert(offsetof(BP_Card_ImmobilityTrap_C_GetAimTargetSensingLocation, AimPosition) == 0x000000, "Member 'BP_Card_ImmobilityTrap_C_GetAimTargetSensingLocation::AimPosition' has a wrong offset!");
static_assert(offsetof(BP_Card_ImmobilityTrap_C_GetAimTargetSensingLocation, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x00000C, "Member 'BP_Card_ImmobilityTrap_C_GetAimTargetSensingLocation::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");

// Function BP_Card_ImmobilityTrap.BP_Card_ImmobilityTrap_C.IsTargetable
// 0x0001 (0x0001 - 0x0000)
struct BP_Card_ImmobilityTrap_C_IsTargetable final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Card_ImmobilityTrap_C_IsTargetable) == 0x000001, "Wrong alignment on BP_Card_ImmobilityTrap_C_IsTargetable");
static_assert(sizeof(BP_Card_ImmobilityTrap_C_IsTargetable) == 0x000001, "Wrong size on BP_Card_ImmobilityTrap_C_IsTargetable");
static_assert(offsetof(BP_Card_ImmobilityTrap_C_IsTargetable, ReturnValue) == 0x000000, "Member 'BP_Card_ImmobilityTrap_C_IsTargetable::ReturnValue' has a wrong offset!");

// Function BP_Card_ImmobilityTrap.BP_Card_ImmobilityTrap_C.DeleteActorOnOverlap
// 0x0040 (0x0040 - 0x0000)
struct BP_Card_ImmobilityTrap_C_DeleteActorOnOverlap final
{
public:
	TArray<class AActor*>                         TargetArray;                                       // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue2;             // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_Array_Get_Item;                           // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_Card_ImmobilityTrap_C*              K2Node_DynamicCast_AsBP_Card_Immobility_Trap;      // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_OnSameTeam_ReturnValue;                   // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Card_ImmobilityTrap_C_DeleteActorOnOverlap) == 0x000008, "Wrong alignment on BP_Card_ImmobilityTrap_C_DeleteActorOnOverlap");
static_assert(sizeof(BP_Card_ImmobilityTrap_C_DeleteActorOnOverlap) == 0x000040, "Wrong size on BP_Card_ImmobilityTrap_C_DeleteActorOnOverlap");
static_assert(offsetof(BP_Card_ImmobilityTrap_C_DeleteActorOnOverlap, TargetArray) == 0x000000, "Member 'BP_Card_ImmobilityTrap_C_DeleteActorOnOverlap::TargetArray' has a wrong offset!");
static_assert(offsetof(BP_Card_ImmobilityTrap_C_DeleteActorOnOverlap, CallFunc_Array_Length_ReturnValue) == 0x000010, "Member 'BP_Card_ImmobilityTrap_C_DeleteActorOnOverlap::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Card_ImmobilityTrap_C_DeleteActorOnOverlap, CallFunc_Greater_IntInt_ReturnValue) == 0x000014, "Member 'BP_Card_ImmobilityTrap_C_DeleteActorOnOverlap::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Card_ImmobilityTrap_C_DeleteActorOnOverlap, CallFunc_Subtract_IntInt_ReturnValue) == 0x000018, "Member 'BP_Card_ImmobilityTrap_C_DeleteActorOnOverlap::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Card_ImmobilityTrap_C_DeleteActorOnOverlap, CallFunc_Subtract_IntInt_ReturnValue2) == 0x00001C, "Member 'BP_Card_ImmobilityTrap_C_DeleteActorOnOverlap::CallFunc_Subtract_IntInt_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_Card_ImmobilityTrap_C_DeleteActorOnOverlap, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000020, "Member 'BP_Card_ImmobilityTrap_C_DeleteActorOnOverlap::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Card_ImmobilityTrap_C_DeleteActorOnOverlap, CallFunc_Array_Get_Item) == 0x000028, "Member 'BP_Card_ImmobilityTrap_C_DeleteActorOnOverlap::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_Card_ImmobilityTrap_C_DeleteActorOnOverlap, K2Node_DynamicCast_AsBP_Card_Immobility_Trap) == 0x000030, "Member 'BP_Card_ImmobilityTrap_C_DeleteActorOnOverlap::K2Node_DynamicCast_AsBP_Card_Immobility_Trap' has a wrong offset!");
static_assert(offsetof(BP_Card_ImmobilityTrap_C_DeleteActorOnOverlap, K2Node_DynamicCast_bSuccess) == 0x000038, "Member 'BP_Card_ImmobilityTrap_C_DeleteActorOnOverlap::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_Card_ImmobilityTrap_C_DeleteActorOnOverlap, CallFunc_OnSameTeam_ReturnValue) == 0x000039, "Member 'BP_Card_ImmobilityTrap_C_DeleteActorOnOverlap::CallFunc_OnSameTeam_ReturnValue' has a wrong offset!");

}

