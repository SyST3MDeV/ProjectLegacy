#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Prime_SA01_Decal_N

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_Prime_SA01_Decal_N.BP_Prime_SA01_Decal_N_C
// 0x0018 (0x0338 - 0x0320)
class ABP_Prime_SA01_Decal_N_C final : public ADecalActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0320(0x0008)(Transient, DuplicateTransient)
	class UDecalComponent*                        Emissive_Decal;                                    // 0x0328(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               Decal_Material;                                    // 0x0330(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_Prime_SA01_Decal_N(int32 EntryPoint);
	void ReceiveBeginPlay();
	void UserConstructionScript();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_Prime_SA01_Decal_N_C">();
	}
	static class ABP_Prime_SA01_Decal_N_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_Prime_SA01_Decal_N_C>();
	}
};
static_assert(alignof(ABP_Prime_SA01_Decal_N_C) == 0x000008, "Wrong alignment on ABP_Prime_SA01_Decal_N_C");
static_assert(sizeof(ABP_Prime_SA01_Decal_N_C) == 0x000338, "Wrong size on ABP_Prime_SA01_Decal_N_C");
static_assert(offsetof(ABP_Prime_SA01_Decal_N_C, UberGraphFrame) == 0x000320, "Member 'ABP_Prime_SA01_Decal_N_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_Prime_SA01_Decal_N_C, Emissive_Decal) == 0x000328, "Member 'ABP_Prime_SA01_Decal_N_C::Emissive_Decal' has a wrong offset!");
static_assert(offsetof(ABP_Prime_SA01_Decal_N_C, Decal_Material) == 0x000330, "Member 'ABP_Prime_SA01_Decal_N_C::Decal_Material' has a wrong offset!");

}

