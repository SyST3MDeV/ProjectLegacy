#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_HeroPedestal

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "OrionGame_structs.hpp"
#include "OrionGame_classes.hpp"
#include "Enum_HeroHomeWorld_structs.hpp"
#include "Struct_HeroPedestalAttachments_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_HeroPedestal.BP_HeroPedestal_C
// 0x0270 (0x06A0 - 0x0430)
#pragma pack(push, 0x1)
class alignas(0x10) ABP_HeroPedestal_C : public AOrionPedestalHero
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0430(0x0008)(Transient, DuplicateTransient)
	class UArrowComponent*                        DawnDraftSpawn;                                    // 0x0438(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UArrowComponent*                        DuskDraftSpawn;                                    // 0x0440(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UCameraComponent*                       FeaturedCamera;                                    // 0x0448(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UChildActorComponent*                   ChildActor;                                        // 0x0450(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        FeaturedChild;                                     // 0x0458(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UCineCameraComponent*                   FarCamera;                                         // 0x0460(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UCineCameraComponent*                   CineCamera;                                        // 0x0468(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UDecalComponent*                        Decal;                                             // 0x0470(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   GlyphMesh;                                         // 0x0478(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         Timeline_0_NewTrack_0_770C795D44FE6FA479E11CB832083040; // 0x0480(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            Timeline_0__Direction_770C795D44FE6FA479E11CB832083040; // 0x0484(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_485[0x3];                                      // 0x0485(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     Timeline_0;                                        // 0x0488(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CursorPos;                                         // 0x0490(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsRotatingHero;                                    // 0x0498(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_499[0x7];                                      // 0x0499(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               SkinSwapDecalMaterial;                             // 0x04A0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CustomMeshScale;                                   // 0x04A8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          UseCustomMeshScale;                                // 0x04AC(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          AttachPiece;                                       // 0x04AD(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4AE[0x2];                                      // 0x04AE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   AttachSocket;                                      // 0x04B0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4B8[0x8];                                      // 0x04B8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             AttachmentTransform;                               // 0x04C0(0x0030)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	class UStaticMesh*                            StaticMeshAttachment;                              // 0x04F0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FStruct_HeroPedestalAttachments> AttachmentStructList;                              // 0x04F8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance)
	class ACameraActor*                           HeroCamera;                                        // 0x0508(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                HeroCameraOrigin;                                  // 0x0510(0x000C)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         BlendValue;                                        // 0x051C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         BlendSpeed;                                        // 0x0520(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               HeroRotationOrigin;                                // 0x0524(0x000C)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	struct FTransform                             HeroFaceCameraOffset;                              // 0x0530(0x0030)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	struct FTransform                             HeroCamOriginalTransform;                          // 0x0560(0x0030)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	struct FTransform                             HeroFaceViewTransform;                             // 0x0590(0x0030)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	struct FTransform                             HeroCameraTargetTransform;                         // 0x05C0(0x0030)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	struct FTransform                             FarCameraTransform;                                // 0x05F0(0x0030)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	float                                         RStickAxis;                                        // 0x0620(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	Enum_HeroHomeWorld                            HeroHomeWorld;                                     // 0x0624(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_625[0x3];                                      // 0x0625(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	UMulticastDelegateProperty_                   SkinChanged;                                       // 0x0628(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	class AActor*                                 ParentHeroCamera;                                  // 0x0638(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsDraftMode;                                       // 0x0640(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_641[0xF];                                      // 0x0641(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             DraftModeOffset;                                   // 0x0650(0x0030)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor)
	bool                                          UseCustomDuskSpawn;                                // 0x0680(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          UseCustomDawnSpawn;                                // 0x0681(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          DraftDebug;                                        // 0x0682(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          IsDuskDraft;                                       // 0x0683(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_684[0x4];                                      // 0x0684(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USceneComponent*                        NewVar_0;                                          // 0x0688(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPedestalActorType                            PedestalActorType;                                 // 0x0690(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_691[0x3];                                      // 0x0691(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         DraftAperture;                                     // 0x0694(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void SkinChanged__DelegateSignature(Enum_HeroHomeWorld NewParam);
	void ExecuteUbergraph_BP_HeroPedestal(int32 EntryPoint);
	void UpdateDarftPostition();
	void SetDOF();
	void OnPedestalActorTypeSet(EPedestalActorType PedestalActorType_0);
	void InpAxisKeyEvt_MouseWheelAxis_K2Node_InputAxisKeyEvent_10(float AxisValue);
	void ReceiveDestroyed();
	void ReceiveEndPlay(EEndPlayReason EndPlayReason);
	void InpAxisKeyEvt_Gamepad_RightY_K2Node_InputAxisKeyEvent_13(float AxisValue);
	void InpAxisKeyEvt_Gamepad_RightX_K2Node_InputAxisKeyEvent_0(float AxisValue);
	void ReceiveBeginPlay();
	void OnSkinChanged();
	void ReceiveTick(float DeltaSeconds);
	void InpActEvt_LeftMouseButton_K2Node_InputKeyEvent_0(const struct FKey& Key);
	void InpActEvt_LeftMouseButton_K2Node_InputKeyEvent_1(const struct FKey& Key);
	void Timeline_0__UpdateFunc();
	void Timeline_0__FinishedFunc();
	void UserConstructionScript();
	void GetHeroRotationDelta(float* DeltaX);
	void StartRotatingHero();
	void FinishRotatingHero();
	void Set_HeroCamera(const class FString& Hero_Camera_Target_Name);
	void AlignDOFtoEyes();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_HeroPedestal_C">();
	}
	static class ABP_HeroPedestal_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_HeroPedestal_C>();
	}
};
#pragma pack(pop)
static_assert(alignof(ABP_HeroPedestal_C) == 0x000010, "Wrong alignment on ABP_HeroPedestal_C");
static_assert(sizeof(ABP_HeroPedestal_C) == 0x0006A0, "Wrong size on ABP_HeroPedestal_C");
static_assert(offsetof(ABP_HeroPedestal_C, UberGraphFrame) == 0x000430, "Member 'ABP_HeroPedestal_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_HeroPedestal_C, DawnDraftSpawn) == 0x000438, "Member 'ABP_HeroPedestal_C::DawnDraftSpawn' has a wrong offset!");
static_assert(offsetof(ABP_HeroPedestal_C, DuskDraftSpawn) == 0x000440, "Member 'ABP_HeroPedestal_C::DuskDraftSpawn' has a wrong offset!");
static_assert(offsetof(ABP_HeroPedestal_C, FeaturedCamera) == 0x000448, "Member 'ABP_HeroPedestal_C::FeaturedCamera' has a wrong offset!");
static_assert(offsetof(ABP_HeroPedestal_C, ChildActor) == 0x000450, "Member 'ABP_HeroPedestal_C::ChildActor' has a wrong offset!");
static_assert(offsetof(ABP_HeroPedestal_C, FeaturedChild) == 0x000458, "Member 'ABP_HeroPedestal_C::FeaturedChild' has a wrong offset!");
static_assert(offsetof(ABP_HeroPedestal_C, FarCamera) == 0x000460, "Member 'ABP_HeroPedestal_C::FarCamera' has a wrong offset!");
static_assert(offsetof(ABP_HeroPedestal_C, CineCamera) == 0x000468, "Member 'ABP_HeroPedestal_C::CineCamera' has a wrong offset!");
static_assert(offsetof(ABP_HeroPedestal_C, Decal) == 0x000470, "Member 'ABP_HeroPedestal_C::Decal' has a wrong offset!");
static_assert(offsetof(ABP_HeroPedestal_C, GlyphMesh) == 0x000478, "Member 'ABP_HeroPedestal_C::GlyphMesh' has a wrong offset!");
static_assert(offsetof(ABP_HeroPedestal_C, Timeline_0_NewTrack_0_770C795D44FE6FA479E11CB832083040) == 0x000480, "Member 'ABP_HeroPedestal_C::Timeline_0_NewTrack_0_770C795D44FE6FA479E11CB832083040' has a wrong offset!");
static_assert(offsetof(ABP_HeroPedestal_C, Timeline_0__Direction_770C795D44FE6FA479E11CB832083040) == 0x000484, "Member 'ABP_HeroPedestal_C::Timeline_0__Direction_770C795D44FE6FA479E11CB832083040' has a wrong offset!");
static_assert(offsetof(ABP_HeroPedestal_C, Timeline_0) == 0x000488, "Member 'ABP_HeroPedestal_C::Timeline_0' has a wrong offset!");
static_assert(offsetof(ABP_HeroPedestal_C, CursorPos) == 0x000490, "Member 'ABP_HeroPedestal_C::CursorPos' has a wrong offset!");
static_assert(offsetof(ABP_HeroPedestal_C, IsRotatingHero) == 0x000498, "Member 'ABP_HeroPedestal_C::IsRotatingHero' has a wrong offset!");
static_assert(offsetof(ABP_HeroPedestal_C, SkinSwapDecalMaterial) == 0x0004A0, "Member 'ABP_HeroPedestal_C::SkinSwapDecalMaterial' has a wrong offset!");
static_assert(offsetof(ABP_HeroPedestal_C, CustomMeshScale) == 0x0004A8, "Member 'ABP_HeroPedestal_C::CustomMeshScale' has a wrong offset!");
static_assert(offsetof(ABP_HeroPedestal_C, UseCustomMeshScale) == 0x0004AC, "Member 'ABP_HeroPedestal_C::UseCustomMeshScale' has a wrong offset!");
static_assert(offsetof(ABP_HeroPedestal_C, AttachPiece) == 0x0004AD, "Member 'ABP_HeroPedestal_C::AttachPiece' has a wrong offset!");
static_assert(offsetof(ABP_HeroPedestal_C, AttachSocket) == 0x0004B0, "Member 'ABP_HeroPedestal_C::AttachSocket' has a wrong offset!");
static_assert(offsetof(ABP_HeroPedestal_C, AttachmentTransform) == 0x0004C0, "Member 'ABP_HeroPedestal_C::AttachmentTransform' has a wrong offset!");
static_assert(offsetof(ABP_HeroPedestal_C, StaticMeshAttachment) == 0x0004F0, "Member 'ABP_HeroPedestal_C::StaticMeshAttachment' has a wrong offset!");
static_assert(offsetof(ABP_HeroPedestal_C, AttachmentStructList) == 0x0004F8, "Member 'ABP_HeroPedestal_C::AttachmentStructList' has a wrong offset!");
static_assert(offsetof(ABP_HeroPedestal_C, HeroCamera) == 0x000508, "Member 'ABP_HeroPedestal_C::HeroCamera' has a wrong offset!");
static_assert(offsetof(ABP_HeroPedestal_C, HeroCameraOrigin) == 0x000510, "Member 'ABP_HeroPedestal_C::HeroCameraOrigin' has a wrong offset!");
static_assert(offsetof(ABP_HeroPedestal_C, BlendValue) == 0x00051C, "Member 'ABP_HeroPedestal_C::BlendValue' has a wrong offset!");
static_assert(offsetof(ABP_HeroPedestal_C, BlendSpeed) == 0x000520, "Member 'ABP_HeroPedestal_C::BlendSpeed' has a wrong offset!");
static_assert(offsetof(ABP_HeroPedestal_C, HeroRotationOrigin) == 0x000524, "Member 'ABP_HeroPedestal_C::HeroRotationOrigin' has a wrong offset!");
static_assert(offsetof(ABP_HeroPedestal_C, HeroFaceCameraOffset) == 0x000530, "Member 'ABP_HeroPedestal_C::HeroFaceCameraOffset' has a wrong offset!");
static_assert(offsetof(ABP_HeroPedestal_C, HeroCamOriginalTransform) == 0x000560, "Member 'ABP_HeroPedestal_C::HeroCamOriginalTransform' has a wrong offset!");
static_assert(offsetof(ABP_HeroPedestal_C, HeroFaceViewTransform) == 0x000590, "Member 'ABP_HeroPedestal_C::HeroFaceViewTransform' has a wrong offset!");
static_assert(offsetof(ABP_HeroPedestal_C, HeroCameraTargetTransform) == 0x0005C0, "Member 'ABP_HeroPedestal_C::HeroCameraTargetTransform' has a wrong offset!");
static_assert(offsetof(ABP_HeroPedestal_C, FarCameraTransform) == 0x0005F0, "Member 'ABP_HeroPedestal_C::FarCameraTransform' has a wrong offset!");
static_assert(offsetof(ABP_HeroPedestal_C, RStickAxis) == 0x000620, "Member 'ABP_HeroPedestal_C::RStickAxis' has a wrong offset!");
static_assert(offsetof(ABP_HeroPedestal_C, HeroHomeWorld) == 0x000624, "Member 'ABP_HeroPedestal_C::HeroHomeWorld' has a wrong offset!");
static_assert(offsetof(ABP_HeroPedestal_C, SkinChanged) == 0x000628, "Member 'ABP_HeroPedestal_C::SkinChanged' has a wrong offset!");
static_assert(offsetof(ABP_HeroPedestal_C, ParentHeroCamera) == 0x000638, "Member 'ABP_HeroPedestal_C::ParentHeroCamera' has a wrong offset!");
static_assert(offsetof(ABP_HeroPedestal_C, IsDraftMode) == 0x000640, "Member 'ABP_HeroPedestal_C::IsDraftMode' has a wrong offset!");
static_assert(offsetof(ABP_HeroPedestal_C, DraftModeOffset) == 0x000650, "Member 'ABP_HeroPedestal_C::DraftModeOffset' has a wrong offset!");
static_assert(offsetof(ABP_HeroPedestal_C, UseCustomDuskSpawn) == 0x000680, "Member 'ABP_HeroPedestal_C::UseCustomDuskSpawn' has a wrong offset!");
static_assert(offsetof(ABP_HeroPedestal_C, UseCustomDawnSpawn) == 0x000681, "Member 'ABP_HeroPedestal_C::UseCustomDawnSpawn' has a wrong offset!");
static_assert(offsetof(ABP_HeroPedestal_C, DraftDebug) == 0x000682, "Member 'ABP_HeroPedestal_C::DraftDebug' has a wrong offset!");
static_assert(offsetof(ABP_HeroPedestal_C, IsDuskDraft) == 0x000683, "Member 'ABP_HeroPedestal_C::IsDuskDraft' has a wrong offset!");
static_assert(offsetof(ABP_HeroPedestal_C, NewVar_0) == 0x000688, "Member 'ABP_HeroPedestal_C::NewVar_0' has a wrong offset!");
static_assert(offsetof(ABP_HeroPedestal_C, PedestalActorType) == 0x000690, "Member 'ABP_HeroPedestal_C::PedestalActorType' has a wrong offset!");
static_assert(offsetof(ABP_HeroPedestal_C, DraftAperture) == 0x000694, "Member 'ABP_HeroPedestal_C::DraftAperture' has a wrong offset!");

}

