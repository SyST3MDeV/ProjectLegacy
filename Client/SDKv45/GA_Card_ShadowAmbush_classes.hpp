#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GA_Card_ShadowAmbush

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "GameplayAbilities_structs.hpp"
#include "GameplayTags_structs.hpp"
#include "OrionGame_structs.hpp"
#include "OrionGame_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass GA_Card_ShadowAmbush.GA_Card_ShadowAmbush_C
// 0x00D0 (0x0C40 - 0x0B70)
class UGA_Card_ShadowAmbush_C final : public UOrionAbility
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0B70(0x0008)(Transient, DuplicateTransient)
	struct FGameplayTag                           GameplayCue_Looping_;                              // 0x0B78(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 ShadowPlaneButVisible;                             // 0x0B80(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 Shadowplane;                                       // 0x0B88(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 BonusDamage;                                       // 0x0B90(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 ShadowplaneFadeTime;                               // 0x0B98(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FActiveGameplayEffectHandle            ShadowplaneButVisibleGE;                           // 0x0BA0(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FActiveGameplayEffectHandle            ShadowplaneGE;                                     // 0x0BA8(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FActiveGameplayEffectHandle            ShadowplaneFadeTimeGE;                             // 0x0BB0(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FActiveGameplayEffectHandle            BonusDamageTag;                                    // 0x0BB8(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 BonusDamageTagGE;                                  // 0x0BC0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FDamageQualifierKeywordsWithContext    Qualifiers;                                        // 0x0BC8(0x0078)(Edit, BlueprintVisible, DisableEditOnInstance)

public:
	void ExecuteUbergraph_GA_Card_ShadowAmbush(int32 EntryPoint);
	void InvalidHandle_3F171787454CFA16EDF19F97991A957E(const struct FGameplayEffectRemovalInfo& GameplayEffectRemovalInfo);
	void InvalidHandle_9B91BC51455B4E5F9BBB09A7A1E5E405(const struct FGameplayEffectRemovalInfo& GameplayEffectRemovalInfo);
	void K2_ActivateAbility();
	void OnActivate_B8AC73DB489A14A69C1D12B262225E69(class UGameplayAbility* ActivatedAbility);
	void OnCommit_938EB7EA4A9E0183D4A5709B35F2A9B8(class UGameplayAbility* ActivatedAbility);
	void OnDamage_54F841C14DCC756D3AB1218E45006FCD(class UAbilitySystemComponent* AuxillaryASC, const struct FQualifierContextDamage& DamageInfo, const struct FGameplayEffectSpecHandle& SpecHandle);
	void OnFinish_093CF2BB49A02398D4A4C9B375CC9A3A();
	void OnRemoved_3F171787454CFA16EDF19F97991A957E(const struct FGameplayEffectRemovalInfo& GameplayEffectRemovalInfo);
	void OnRemoved_9B91BC51455B4E5F9BBB09A7A1E5E405(const struct FGameplayEffectRemovalInfo& GameplayEffectRemovalInfo);
	void OnStateEnded_E4C4927C4713E935979C1DA642DB05DC();
	void OnStateInterrupted_E4C4927C4713E935979C1DA642DB05DC();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"GA_Card_ShadowAmbush_C">();
	}
	static class UGA_Card_ShadowAmbush_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGA_Card_ShadowAmbush_C>();
	}
};
static_assert(alignof(UGA_Card_ShadowAmbush_C) == 0x000010, "Wrong alignment on UGA_Card_ShadowAmbush_C");
static_assert(sizeof(UGA_Card_ShadowAmbush_C) == 0x000C40, "Wrong size on UGA_Card_ShadowAmbush_C");
static_assert(offsetof(UGA_Card_ShadowAmbush_C, UberGraphFrame) == 0x000B70, "Member 'UGA_Card_ShadowAmbush_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UGA_Card_ShadowAmbush_C, GameplayCue_Looping_) == 0x000B78, "Member 'UGA_Card_ShadowAmbush_C::GameplayCue_Looping_' has a wrong offset!");
static_assert(offsetof(UGA_Card_ShadowAmbush_C, ShadowPlaneButVisible) == 0x000B80, "Member 'UGA_Card_ShadowAmbush_C::ShadowPlaneButVisible' has a wrong offset!");
static_assert(offsetof(UGA_Card_ShadowAmbush_C, Shadowplane) == 0x000B88, "Member 'UGA_Card_ShadowAmbush_C::Shadowplane' has a wrong offset!");
static_assert(offsetof(UGA_Card_ShadowAmbush_C, BonusDamage) == 0x000B90, "Member 'UGA_Card_ShadowAmbush_C::BonusDamage' has a wrong offset!");
static_assert(offsetof(UGA_Card_ShadowAmbush_C, ShadowplaneFadeTime) == 0x000B98, "Member 'UGA_Card_ShadowAmbush_C::ShadowplaneFadeTime' has a wrong offset!");
static_assert(offsetof(UGA_Card_ShadowAmbush_C, ShadowplaneButVisibleGE) == 0x000BA0, "Member 'UGA_Card_ShadowAmbush_C::ShadowplaneButVisibleGE' has a wrong offset!");
static_assert(offsetof(UGA_Card_ShadowAmbush_C, ShadowplaneGE) == 0x000BA8, "Member 'UGA_Card_ShadowAmbush_C::ShadowplaneGE' has a wrong offset!");
static_assert(offsetof(UGA_Card_ShadowAmbush_C, ShadowplaneFadeTimeGE) == 0x000BB0, "Member 'UGA_Card_ShadowAmbush_C::ShadowplaneFadeTimeGE' has a wrong offset!");
static_assert(offsetof(UGA_Card_ShadowAmbush_C, BonusDamageTag) == 0x000BB8, "Member 'UGA_Card_ShadowAmbush_C::BonusDamageTag' has a wrong offset!");
static_assert(offsetof(UGA_Card_ShadowAmbush_C, BonusDamageTagGE) == 0x000BC0, "Member 'UGA_Card_ShadowAmbush_C::BonusDamageTagGE' has a wrong offset!");
static_assert(offsetof(UGA_Card_ShadowAmbush_C, Qualifiers) == 0x000BC8, "Member 'UGA_Card_ShadowAmbush_C::Qualifiers' has a wrong offset!");

}

