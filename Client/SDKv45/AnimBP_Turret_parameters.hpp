#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: AnimBP_Turret

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function AnimBP_Turret.AnimBP_Turret_C.ExecuteUbergraph_AnimBP_Turret
// 0x0024 (0x0024 - 0x0000)
struct AnimBP_Turret_C_ExecuteUbergraph_AnimBP_Turret final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue2;                 // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue3;                 // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue4;                 // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue5;                 // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue6;                 // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue7;                 // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B[0x1];                                        // 0x000B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_RandomInteger_ReturnValue;                // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_CustomEvent_TargetLocation;                 // 0x0010(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_bIsAiming;                      // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_CustomEvent_bOpen;                          // 0x001D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1E[0x2];                                       // 0x001E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_CustomEvent_Damage;                         // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AnimBP_Turret_C_ExecuteUbergraph_AnimBP_Turret) == 0x000004, "Wrong alignment on AnimBP_Turret_C_ExecuteUbergraph_AnimBP_Turret");
static_assert(sizeof(AnimBP_Turret_C_ExecuteUbergraph_AnimBP_Turret) == 0x000024, "Wrong size on AnimBP_Turret_C_ExecuteUbergraph_AnimBP_Turret");
static_assert(offsetof(AnimBP_Turret_C_ExecuteUbergraph_AnimBP_Turret, EntryPoint) == 0x000000, "Member 'AnimBP_Turret_C_ExecuteUbergraph_AnimBP_Turret::EntryPoint' has a wrong offset!");
static_assert(offsetof(AnimBP_Turret_C_ExecuteUbergraph_AnimBP_Turret, CallFunc_Not_PreBool_ReturnValue) == 0x000004, "Member 'AnimBP_Turret_C_ExecuteUbergraph_AnimBP_Turret::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(AnimBP_Turret_C_ExecuteUbergraph_AnimBP_Turret, CallFunc_Not_PreBool_ReturnValue2) == 0x000005, "Member 'AnimBP_Turret_C_ExecuteUbergraph_AnimBP_Turret::CallFunc_Not_PreBool_ReturnValue2' has a wrong offset!");
static_assert(offsetof(AnimBP_Turret_C_ExecuteUbergraph_AnimBP_Turret, CallFunc_Not_PreBool_ReturnValue3) == 0x000006, "Member 'AnimBP_Turret_C_ExecuteUbergraph_AnimBP_Turret::CallFunc_Not_PreBool_ReturnValue3' has a wrong offset!");
static_assert(offsetof(AnimBP_Turret_C_ExecuteUbergraph_AnimBP_Turret, CallFunc_Not_PreBool_ReturnValue4) == 0x000007, "Member 'AnimBP_Turret_C_ExecuteUbergraph_AnimBP_Turret::CallFunc_Not_PreBool_ReturnValue4' has a wrong offset!");
static_assert(offsetof(AnimBP_Turret_C_ExecuteUbergraph_AnimBP_Turret, CallFunc_Not_PreBool_ReturnValue5) == 0x000008, "Member 'AnimBP_Turret_C_ExecuteUbergraph_AnimBP_Turret::CallFunc_Not_PreBool_ReturnValue5' has a wrong offset!");
static_assert(offsetof(AnimBP_Turret_C_ExecuteUbergraph_AnimBP_Turret, CallFunc_Not_PreBool_ReturnValue6) == 0x000009, "Member 'AnimBP_Turret_C_ExecuteUbergraph_AnimBP_Turret::CallFunc_Not_PreBool_ReturnValue6' has a wrong offset!");
static_assert(offsetof(AnimBP_Turret_C_ExecuteUbergraph_AnimBP_Turret, CallFunc_Not_PreBool_ReturnValue7) == 0x00000A, "Member 'AnimBP_Turret_C_ExecuteUbergraph_AnimBP_Turret::CallFunc_Not_PreBool_ReturnValue7' has a wrong offset!");
static_assert(offsetof(AnimBP_Turret_C_ExecuteUbergraph_AnimBP_Turret, CallFunc_RandomInteger_ReturnValue) == 0x00000C, "Member 'AnimBP_Turret_C_ExecuteUbergraph_AnimBP_Turret::CallFunc_RandomInteger_ReturnValue' has a wrong offset!");
static_assert(offsetof(AnimBP_Turret_C_ExecuteUbergraph_AnimBP_Turret, K2Node_CustomEvent_TargetLocation) == 0x000010, "Member 'AnimBP_Turret_C_ExecuteUbergraph_AnimBP_Turret::K2Node_CustomEvent_TargetLocation' has a wrong offset!");
static_assert(offsetof(AnimBP_Turret_C_ExecuteUbergraph_AnimBP_Turret, K2Node_CustomEvent_bIsAiming) == 0x00001C, "Member 'AnimBP_Turret_C_ExecuteUbergraph_AnimBP_Turret::K2Node_CustomEvent_bIsAiming' has a wrong offset!");
static_assert(offsetof(AnimBP_Turret_C_ExecuteUbergraph_AnimBP_Turret, K2Node_CustomEvent_bOpen) == 0x00001D, "Member 'AnimBP_Turret_C_ExecuteUbergraph_AnimBP_Turret::K2Node_CustomEvent_bOpen' has a wrong offset!");
static_assert(offsetof(AnimBP_Turret_C_ExecuteUbergraph_AnimBP_Turret, K2Node_CustomEvent_Damage) == 0x000020, "Member 'AnimBP_Turret_C_ExecuteUbergraph_AnimBP_Turret::K2Node_CustomEvent_Damage' has a wrong offset!");

// Function AnimBP_Turret.AnimBP_Turret_C.SetDamage
// 0x0004 (0x0004 - 0x0000)
struct AnimBP_Turret_C_SetDamage final
{
public:
	float                                         Damage;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AnimBP_Turret_C_SetDamage) == 0x000004, "Wrong alignment on AnimBP_Turret_C_SetDamage");
static_assert(sizeof(AnimBP_Turret_C_SetDamage) == 0x000004, "Wrong size on AnimBP_Turret_C_SetDamage");
static_assert(offsetof(AnimBP_Turret_C_SetDamage, Damage) == 0x000000, "Member 'AnimBP_Turret_C_SetDamage::Damage' has a wrong offset!");

// Function AnimBP_Turret.AnimBP_Turret_C.SetShieldAndPanel
// 0x0001 (0x0001 - 0x0000)
struct AnimBP_Turret_C_SetShieldAndPanel final
{
public:
	bool                                          bOpen;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(AnimBP_Turret_C_SetShieldAndPanel) == 0x000001, "Wrong alignment on AnimBP_Turret_C_SetShieldAndPanel");
static_assert(sizeof(AnimBP_Turret_C_SetShieldAndPanel) == 0x000001, "Wrong size on AnimBP_Turret_C_SetShieldAndPanel");
static_assert(offsetof(AnimBP_Turret_C_SetShieldAndPanel, bOpen) == 0x000000, "Member 'AnimBP_Turret_C_SetShieldAndPanel::bOpen' has a wrong offset!");

// Function AnimBP_Turret.AnimBP_Turret_C.OnSetAiming
// 0x0001 (0x0001 - 0x0000)
struct AnimBP_Turret_C_OnSetAiming final
{
public:
	bool                                          bIsAiming;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(AnimBP_Turret_C_OnSetAiming) == 0x000001, "Wrong alignment on AnimBP_Turret_C_OnSetAiming");
static_assert(sizeof(AnimBP_Turret_C_OnSetAiming) == 0x000001, "Wrong size on AnimBP_Turret_C_OnSetAiming");
static_assert(offsetof(AnimBP_Turret_C_OnSetAiming, bIsAiming) == 0x000000, "Member 'AnimBP_Turret_C_OnSetAiming::bIsAiming' has a wrong offset!");

// Function AnimBP_Turret.AnimBP_Turret_C.OnSetTargetLocation
// 0x000C (0x000C - 0x0000)
struct AnimBP_Turret_C_OnSetTargetLocation final
{
public:
	struct FVector                                TargetLocation;                                    // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AnimBP_Turret_C_OnSetTargetLocation) == 0x000004, "Wrong alignment on AnimBP_Turret_C_OnSetTargetLocation");
static_assert(sizeof(AnimBP_Turret_C_OnSetTargetLocation) == 0x00000C, "Wrong size on AnimBP_Turret_C_OnSetTargetLocation");
static_assert(offsetof(AnimBP_Turret_C_OnSetTargetLocation, TargetLocation) == 0x000000, "Member 'AnimBP_Turret_C_OnSetTargetLocation::TargetLocation' has a wrong offset!");

}

