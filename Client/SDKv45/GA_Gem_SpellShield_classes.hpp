#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GA_Gem_SpellShield

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "GameplayAbilities_structs.hpp"
#include "GameplayTags_structs.hpp"
#include "OrionGame_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass GA_Gem_SpellShield.GA_Gem_SpellShield_C
// 0x0140 (0x0CB0 - 0x0B70)
class UGA_Gem_SpellShield_C final : public UOrionAbility
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0B70(0x0008)(Transient, DuplicateTransient)
	struct FGameplayTagRequirements               AbilityTag;                                        // 0x0B78(0x0040)(Edit, BlueprintVisible, DisableEditOnInstance)
	class UClass*                                 BlockAbilityGA;                                    // 0x0BB8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 BlockAbilityGE_CD;                                 // 0x0BC0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTagRequirements               SourceTagRequirement;                              // 0x0BC8(0x0040)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FGameplayTagRequirements               TargetTagRequirement;                              // 0x0C08(0x0040)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FGameplayTagContainer                  ImmunityTags;                                      // 0x0C48(0x0020)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FGameplayTagRequirements               ItemAbilityTag;                                    // 0x0C68(0x0040)(Edit, BlueprintVisible, DisableEditOnInstance)

public:
	void ExecuteUbergraph_GA_Gem_SpellShield(int32 EntryPoint);
	void Blocked_B999244746F20D754401B18C401DB5B8(const struct FGameplayEffectSpecHandle& BlockedSpec, const struct FActiveGameplayEffectHandle& ImmunityGameplayEffectHandle);
	void Blocked_BA5C2C2645671BAE8F9B05916B9DDC31(const struct FGameplayEffectSpecHandle& BlockedSpec, const struct FActiveGameplayEffectHandle& ImmunityGameplayEffectHandle);
	void K2_ActivateAbility();
	void OnFinish_52678D9B4E864AA62FAF699D23146686();
	void OnStateEnded_A955EC2547784F3D2F24138397E0FC77();
	void OnStateInterrupted_A955EC2547784F3D2F24138397E0FC77();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"GA_Gem_SpellShield_C">();
	}
	static class UGA_Gem_SpellShield_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGA_Gem_SpellShield_C>();
	}
};
static_assert(alignof(UGA_Gem_SpellShield_C) == 0x000010, "Wrong alignment on UGA_Gem_SpellShield_C");
static_assert(sizeof(UGA_Gem_SpellShield_C) == 0x000CB0, "Wrong size on UGA_Gem_SpellShield_C");
static_assert(offsetof(UGA_Gem_SpellShield_C, UberGraphFrame) == 0x000B70, "Member 'UGA_Gem_SpellShield_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UGA_Gem_SpellShield_C, AbilityTag) == 0x000B78, "Member 'UGA_Gem_SpellShield_C::AbilityTag' has a wrong offset!");
static_assert(offsetof(UGA_Gem_SpellShield_C, BlockAbilityGA) == 0x000BB8, "Member 'UGA_Gem_SpellShield_C::BlockAbilityGA' has a wrong offset!");
static_assert(offsetof(UGA_Gem_SpellShield_C, BlockAbilityGE_CD) == 0x000BC0, "Member 'UGA_Gem_SpellShield_C::BlockAbilityGE_CD' has a wrong offset!");
static_assert(offsetof(UGA_Gem_SpellShield_C, SourceTagRequirement) == 0x000BC8, "Member 'UGA_Gem_SpellShield_C::SourceTagRequirement' has a wrong offset!");
static_assert(offsetof(UGA_Gem_SpellShield_C, TargetTagRequirement) == 0x000C08, "Member 'UGA_Gem_SpellShield_C::TargetTagRequirement' has a wrong offset!");
static_assert(offsetof(UGA_Gem_SpellShield_C, ImmunityTags) == 0x000C48, "Member 'UGA_Gem_SpellShield_C::ImmunityTags' has a wrong offset!");
static_assert(offsetof(UGA_Gem_SpellShield_C, ItemAbilityTag) == 0x000C68, "Member 'UGA_Gem_SpellShield_C::ItemAbilityTag' has a wrong offset!");

}

