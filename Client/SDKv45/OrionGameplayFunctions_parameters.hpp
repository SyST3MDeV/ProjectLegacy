#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: OrionGameplayFunctions

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "GameplayAbilities_structs.hpp"


namespace SDK::Params
{

// Function OrionGameplayFunctions.OrionGameplayFunctions_C.LaunchOnDeath
// 0x01D0 (0x01D0 - 0x0000)
struct OrionGameplayFunctions_C_LaunchOnDeath final
{
public:
	struct FGameplayCueParameters                 GameplayCueParameters;                             // 0x0000(0x00B8)(BlueprintVisible, BlueprintReadOnly, Parm, ContainsInstancedReference)
	class AOrionChar*                             OrionChar;                                         // 0x00B8(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         LaunchMagnitudeMin;                                // 0x00C0(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         LaunchMagnitudeMax;                                // 0x00C4(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         RawDamageRangeMin;                                 // 0x00C8(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         RawDamageRangeMax;                                 // 0x00CC(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          LaunchOnDeath_0;                                   // 0x00D0(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D1[0x7];                                       // 0x00D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x00D8(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         LocalZClamp;                                       // 0x00E0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         LocalExplosionFactor;                              // 0x00E4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         LocalExplosionRadius;                              // 0x00E8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          LocalDebug;                                        // 0x00EC(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_ED[0x3];                                       // 0x00ED(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                LocalAdjustedVelocity;                             // 0x00F0(0x000C)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                LocalVelocity;                                     // 0x00FC(0x000C)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         LocalLaunchMagnitude;                              // 0x0108(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_10C[0x4];                                      // 0x010C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_FloatToString_ReturnValue;           // 0x0110(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0120(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_121[0x3];                                      // 0x0121(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0124(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue2;         // 0x0130(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetActorForwardVector_ReturnValue;        // 0x013C(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetGameplayCueDirection_Direction;        // 0x0148(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetGameplayCueDirection_ReturnValue;      // 0x0154(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_155[0x3];                                      // 0x0155(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GreaterGreater_VectorRotator_ReturnValue; // 0x0158(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_164[0x4];                                      // 0x0164(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_FloatToString_ReturnValue2;          // 0x0168(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	float                                         CallFunc_MapRangeUnclamped_ReturnValue;            // 0x0178(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue;                       // 0x017C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0180(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RandomFloatInRange_ReturnValue;           // 0x0184(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RandomFloatInRange_ReturnValue2;          // 0x0188(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RandomFloatInRange_ReturnValue3;          // 0x018C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x0190(0x000C)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x019C(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GreaterGreater_VectorRotator_ReturnValue2; // 0x01A8(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x01B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x01B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x01BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue2;                      // 0x01C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x01C4(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(OrionGameplayFunctions_C_LaunchOnDeath) == 0x000008, "Wrong alignment on OrionGameplayFunctions_C_LaunchOnDeath");
static_assert(sizeof(OrionGameplayFunctions_C_LaunchOnDeath) == 0x0001D0, "Wrong size on OrionGameplayFunctions_C_LaunchOnDeath");
static_assert(offsetof(OrionGameplayFunctions_C_LaunchOnDeath, GameplayCueParameters) == 0x000000, "Member 'OrionGameplayFunctions_C_LaunchOnDeath::GameplayCueParameters' has a wrong offset!");
static_assert(offsetof(OrionGameplayFunctions_C_LaunchOnDeath, OrionChar) == 0x0000B8, "Member 'OrionGameplayFunctions_C_LaunchOnDeath::OrionChar' has a wrong offset!");
static_assert(offsetof(OrionGameplayFunctions_C_LaunchOnDeath, LaunchMagnitudeMin) == 0x0000C0, "Member 'OrionGameplayFunctions_C_LaunchOnDeath::LaunchMagnitudeMin' has a wrong offset!");
static_assert(offsetof(OrionGameplayFunctions_C_LaunchOnDeath, LaunchMagnitudeMax) == 0x0000C4, "Member 'OrionGameplayFunctions_C_LaunchOnDeath::LaunchMagnitudeMax' has a wrong offset!");
static_assert(offsetof(OrionGameplayFunctions_C_LaunchOnDeath, RawDamageRangeMin) == 0x0000C8, "Member 'OrionGameplayFunctions_C_LaunchOnDeath::RawDamageRangeMin' has a wrong offset!");
static_assert(offsetof(OrionGameplayFunctions_C_LaunchOnDeath, RawDamageRangeMax) == 0x0000CC, "Member 'OrionGameplayFunctions_C_LaunchOnDeath::RawDamageRangeMax' has a wrong offset!");
static_assert(offsetof(OrionGameplayFunctions_C_LaunchOnDeath, LaunchOnDeath_0) == 0x0000D0, "Member 'OrionGameplayFunctions_C_LaunchOnDeath::LaunchOnDeath_0' has a wrong offset!");
static_assert(offsetof(OrionGameplayFunctions_C_LaunchOnDeath, __WorldContext) == 0x0000D8, "Member 'OrionGameplayFunctions_C_LaunchOnDeath::__WorldContext' has a wrong offset!");
static_assert(offsetof(OrionGameplayFunctions_C_LaunchOnDeath, LocalZClamp) == 0x0000E0, "Member 'OrionGameplayFunctions_C_LaunchOnDeath::LocalZClamp' has a wrong offset!");
static_assert(offsetof(OrionGameplayFunctions_C_LaunchOnDeath, LocalExplosionFactor) == 0x0000E4, "Member 'OrionGameplayFunctions_C_LaunchOnDeath::LocalExplosionFactor' has a wrong offset!");
static_assert(offsetof(OrionGameplayFunctions_C_LaunchOnDeath, LocalExplosionRadius) == 0x0000E8, "Member 'OrionGameplayFunctions_C_LaunchOnDeath::LocalExplosionRadius' has a wrong offset!");
static_assert(offsetof(OrionGameplayFunctions_C_LaunchOnDeath, LocalDebug) == 0x0000EC, "Member 'OrionGameplayFunctions_C_LaunchOnDeath::LocalDebug' has a wrong offset!");
static_assert(offsetof(OrionGameplayFunctions_C_LaunchOnDeath, LocalAdjustedVelocity) == 0x0000F0, "Member 'OrionGameplayFunctions_C_LaunchOnDeath::LocalAdjustedVelocity' has a wrong offset!");
static_assert(offsetof(OrionGameplayFunctions_C_LaunchOnDeath, LocalVelocity) == 0x0000FC, "Member 'OrionGameplayFunctions_C_LaunchOnDeath::LocalVelocity' has a wrong offset!");
static_assert(offsetof(OrionGameplayFunctions_C_LaunchOnDeath, LocalLaunchMagnitude) == 0x000108, "Member 'OrionGameplayFunctions_C_LaunchOnDeath::LocalLaunchMagnitude' has a wrong offset!");
static_assert(offsetof(OrionGameplayFunctions_C_LaunchOnDeath, CallFunc_Conv_FloatToString_ReturnValue) == 0x000110, "Member 'OrionGameplayFunctions_C_LaunchOnDeath::CallFunc_Conv_FloatToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(OrionGameplayFunctions_C_LaunchOnDeath, CallFunc_IsValid_ReturnValue) == 0x000120, "Member 'OrionGameplayFunctions_C_LaunchOnDeath::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(OrionGameplayFunctions_C_LaunchOnDeath, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000124, "Member 'OrionGameplayFunctions_C_LaunchOnDeath::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(OrionGameplayFunctions_C_LaunchOnDeath, CallFunc_K2_GetActorLocation_ReturnValue2) == 0x000130, "Member 'OrionGameplayFunctions_C_LaunchOnDeath::CallFunc_K2_GetActorLocation_ReturnValue2' has a wrong offset!");
static_assert(offsetof(OrionGameplayFunctions_C_LaunchOnDeath, CallFunc_GetActorForwardVector_ReturnValue) == 0x00013C, "Member 'OrionGameplayFunctions_C_LaunchOnDeath::CallFunc_GetActorForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(OrionGameplayFunctions_C_LaunchOnDeath, CallFunc_GetGameplayCueDirection_Direction) == 0x000148, "Member 'OrionGameplayFunctions_C_LaunchOnDeath::CallFunc_GetGameplayCueDirection_Direction' has a wrong offset!");
static_assert(offsetof(OrionGameplayFunctions_C_LaunchOnDeath, CallFunc_GetGameplayCueDirection_ReturnValue) == 0x000154, "Member 'OrionGameplayFunctions_C_LaunchOnDeath::CallFunc_GetGameplayCueDirection_ReturnValue' has a wrong offset!");
static_assert(offsetof(OrionGameplayFunctions_C_LaunchOnDeath, CallFunc_GreaterGreater_VectorRotator_ReturnValue) == 0x000158, "Member 'OrionGameplayFunctions_C_LaunchOnDeath::CallFunc_GreaterGreater_VectorRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(OrionGameplayFunctions_C_LaunchOnDeath, CallFunc_Conv_FloatToString_ReturnValue2) == 0x000168, "Member 'OrionGameplayFunctions_C_LaunchOnDeath::CallFunc_Conv_FloatToString_ReturnValue2' has a wrong offset!");
static_assert(offsetof(OrionGameplayFunctions_C_LaunchOnDeath, CallFunc_MapRangeUnclamped_ReturnValue) == 0x000178, "Member 'OrionGameplayFunctions_C_LaunchOnDeath::CallFunc_MapRangeUnclamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(OrionGameplayFunctions_C_LaunchOnDeath, CallFunc_FClamp_ReturnValue) == 0x00017C, "Member 'OrionGameplayFunctions_C_LaunchOnDeath::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(OrionGameplayFunctions_C_LaunchOnDeath, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000180, "Member 'OrionGameplayFunctions_C_LaunchOnDeath::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(OrionGameplayFunctions_C_LaunchOnDeath, CallFunc_RandomFloatInRange_ReturnValue) == 0x000184, "Member 'OrionGameplayFunctions_C_LaunchOnDeath::CallFunc_RandomFloatInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(OrionGameplayFunctions_C_LaunchOnDeath, CallFunc_RandomFloatInRange_ReturnValue2) == 0x000188, "Member 'OrionGameplayFunctions_C_LaunchOnDeath::CallFunc_RandomFloatInRange_ReturnValue2' has a wrong offset!");
static_assert(offsetof(OrionGameplayFunctions_C_LaunchOnDeath, CallFunc_RandomFloatInRange_ReturnValue3) == 0x00018C, "Member 'OrionGameplayFunctions_C_LaunchOnDeath::CallFunc_RandomFloatInRange_ReturnValue3' has a wrong offset!");
static_assert(offsetof(OrionGameplayFunctions_C_LaunchOnDeath, CallFunc_MakeRotator_ReturnValue) == 0x000190, "Member 'OrionGameplayFunctions_C_LaunchOnDeath::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(OrionGameplayFunctions_C_LaunchOnDeath, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x00019C, "Member 'OrionGameplayFunctions_C_LaunchOnDeath::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(OrionGameplayFunctions_C_LaunchOnDeath, CallFunc_GreaterGreater_VectorRotator_ReturnValue2) == 0x0001A8, "Member 'OrionGameplayFunctions_C_LaunchOnDeath::CallFunc_GreaterGreater_VectorRotator_ReturnValue2' has a wrong offset!");
static_assert(offsetof(OrionGameplayFunctions_C_LaunchOnDeath, CallFunc_BreakVector_X) == 0x0001B4, "Member 'OrionGameplayFunctions_C_LaunchOnDeath::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(OrionGameplayFunctions_C_LaunchOnDeath, CallFunc_BreakVector_Y) == 0x0001B8, "Member 'OrionGameplayFunctions_C_LaunchOnDeath::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(OrionGameplayFunctions_C_LaunchOnDeath, CallFunc_BreakVector_Z) == 0x0001BC, "Member 'OrionGameplayFunctions_C_LaunchOnDeath::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(OrionGameplayFunctions_C_LaunchOnDeath, CallFunc_FClamp_ReturnValue2) == 0x0001C0, "Member 'OrionGameplayFunctions_C_LaunchOnDeath::CallFunc_FClamp_ReturnValue2' has a wrong offset!");
static_assert(offsetof(OrionGameplayFunctions_C_LaunchOnDeath, CallFunc_MakeVector_ReturnValue) == 0x0001C4, "Member 'OrionGameplayFunctions_C_LaunchOnDeath::CallFunc_MakeVector_ReturnValue' has a wrong offset!");

// Function OrionGameplayFunctions.OrionGameplayFunctions_C.ExplodeOnDeath
// 0x0168 (0x0168 - 0x0000)
struct OrionGameplayFunctions_C_ExplodeOnDeath final
{
public:
	struct FGameplayCueParameters                 GameplayCueParameters;                             // 0x0000(0x00B8)(BlueprintVisible, BlueprintReadOnly, Parm, ContainsInstancedReference)
	class AOrionChar*                             OrionChar;                                         // 0x00B8(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ExplodeMagnitudeMin;                               // 0x00C0(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ExplodeMagnitudeMax;                               // 0x00C4(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         RawDamageRangeMin;                                 // 0x00C8(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         RawDamageRangeMax;                                 // 0x00CC(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ExplodeOnDeath_0;                                  // 0x00D0(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D1[0x7];                                       // 0x00D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x00D8(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          LocalDebug;                                        // 0x00E0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E1[0x3];                                       // 0x00E1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         LocalExplosionRadius;                              // 0x00E4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                LocalExplosionOrigin;                              // 0x00E8(0x000C)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                LocalVelocityZAdd;                                 // 0x00F4(0x000C)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                LocalAdjustedVelocity;                             // 0x0100(0x000C)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                LocalVelocity;                                     // 0x010C(0x000C)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         LocalExplodeMagnitude;                             // 0x0118(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x011C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11D[0x3];                                      // 0x011D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetGameplayCueEndLocationAndNormal_Location; // 0x0120(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetGameplayCueEndLocationAndNormal_Normal; // 0x012C(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetGameplayCueEndLocationAndNormal_ReturnValue; // 0x0138(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_139[0x3];                                      // 0x0139(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetActorRadius_ReturnValue;               // 0x013C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0140(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_FloatFloat_ReturnValue;        // 0x014C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_14D[0x3];                                      // 0x014D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_MapRangeUnclamped_ReturnValue;            // 0x0150(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue;                       // 0x0154(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_FloatToString_ReturnValue;           // 0x0158(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(OrionGameplayFunctions_C_ExplodeOnDeath) == 0x000008, "Wrong alignment on OrionGameplayFunctions_C_ExplodeOnDeath");
static_assert(sizeof(OrionGameplayFunctions_C_ExplodeOnDeath) == 0x000168, "Wrong size on OrionGameplayFunctions_C_ExplodeOnDeath");
static_assert(offsetof(OrionGameplayFunctions_C_ExplodeOnDeath, GameplayCueParameters) == 0x000000, "Member 'OrionGameplayFunctions_C_ExplodeOnDeath::GameplayCueParameters' has a wrong offset!");
static_assert(offsetof(OrionGameplayFunctions_C_ExplodeOnDeath, OrionChar) == 0x0000B8, "Member 'OrionGameplayFunctions_C_ExplodeOnDeath::OrionChar' has a wrong offset!");
static_assert(offsetof(OrionGameplayFunctions_C_ExplodeOnDeath, ExplodeMagnitudeMin) == 0x0000C0, "Member 'OrionGameplayFunctions_C_ExplodeOnDeath::ExplodeMagnitudeMin' has a wrong offset!");
static_assert(offsetof(OrionGameplayFunctions_C_ExplodeOnDeath, ExplodeMagnitudeMax) == 0x0000C4, "Member 'OrionGameplayFunctions_C_ExplodeOnDeath::ExplodeMagnitudeMax' has a wrong offset!");
static_assert(offsetof(OrionGameplayFunctions_C_ExplodeOnDeath, RawDamageRangeMin) == 0x0000C8, "Member 'OrionGameplayFunctions_C_ExplodeOnDeath::RawDamageRangeMin' has a wrong offset!");
static_assert(offsetof(OrionGameplayFunctions_C_ExplodeOnDeath, RawDamageRangeMax) == 0x0000CC, "Member 'OrionGameplayFunctions_C_ExplodeOnDeath::RawDamageRangeMax' has a wrong offset!");
static_assert(offsetof(OrionGameplayFunctions_C_ExplodeOnDeath, ExplodeOnDeath_0) == 0x0000D0, "Member 'OrionGameplayFunctions_C_ExplodeOnDeath::ExplodeOnDeath_0' has a wrong offset!");
static_assert(offsetof(OrionGameplayFunctions_C_ExplodeOnDeath, __WorldContext) == 0x0000D8, "Member 'OrionGameplayFunctions_C_ExplodeOnDeath::__WorldContext' has a wrong offset!");
static_assert(offsetof(OrionGameplayFunctions_C_ExplodeOnDeath, LocalDebug) == 0x0000E0, "Member 'OrionGameplayFunctions_C_ExplodeOnDeath::LocalDebug' has a wrong offset!");
static_assert(offsetof(OrionGameplayFunctions_C_ExplodeOnDeath, LocalExplosionRadius) == 0x0000E4, "Member 'OrionGameplayFunctions_C_ExplodeOnDeath::LocalExplosionRadius' has a wrong offset!");
static_assert(offsetof(OrionGameplayFunctions_C_ExplodeOnDeath, LocalExplosionOrigin) == 0x0000E8, "Member 'OrionGameplayFunctions_C_ExplodeOnDeath::LocalExplosionOrigin' has a wrong offset!");
static_assert(offsetof(OrionGameplayFunctions_C_ExplodeOnDeath, LocalVelocityZAdd) == 0x0000F4, "Member 'OrionGameplayFunctions_C_ExplodeOnDeath::LocalVelocityZAdd' has a wrong offset!");
static_assert(offsetof(OrionGameplayFunctions_C_ExplodeOnDeath, LocalAdjustedVelocity) == 0x000100, "Member 'OrionGameplayFunctions_C_ExplodeOnDeath::LocalAdjustedVelocity' has a wrong offset!");
static_assert(offsetof(OrionGameplayFunctions_C_ExplodeOnDeath, LocalVelocity) == 0x00010C, "Member 'OrionGameplayFunctions_C_ExplodeOnDeath::LocalVelocity' has a wrong offset!");
static_assert(offsetof(OrionGameplayFunctions_C_ExplodeOnDeath, LocalExplodeMagnitude) == 0x000118, "Member 'OrionGameplayFunctions_C_ExplodeOnDeath::LocalExplodeMagnitude' has a wrong offset!");
static_assert(offsetof(OrionGameplayFunctions_C_ExplodeOnDeath, CallFunc_IsValid_ReturnValue) == 0x00011C, "Member 'OrionGameplayFunctions_C_ExplodeOnDeath::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(OrionGameplayFunctions_C_ExplodeOnDeath, CallFunc_GetGameplayCueEndLocationAndNormal_Location) == 0x000120, "Member 'OrionGameplayFunctions_C_ExplodeOnDeath::CallFunc_GetGameplayCueEndLocationAndNormal_Location' has a wrong offset!");
static_assert(offsetof(OrionGameplayFunctions_C_ExplodeOnDeath, CallFunc_GetGameplayCueEndLocationAndNormal_Normal) == 0x00012C, "Member 'OrionGameplayFunctions_C_ExplodeOnDeath::CallFunc_GetGameplayCueEndLocationAndNormal_Normal' has a wrong offset!");
static_assert(offsetof(OrionGameplayFunctions_C_ExplodeOnDeath, CallFunc_GetGameplayCueEndLocationAndNormal_ReturnValue) == 0x000138, "Member 'OrionGameplayFunctions_C_ExplodeOnDeath::CallFunc_GetGameplayCueEndLocationAndNormal_ReturnValue' has a wrong offset!");
static_assert(offsetof(OrionGameplayFunctions_C_ExplodeOnDeath, CallFunc_GetActorRadius_ReturnValue) == 0x00013C, "Member 'OrionGameplayFunctions_C_ExplodeOnDeath::CallFunc_GetActorRadius_ReturnValue' has a wrong offset!");
static_assert(offsetof(OrionGameplayFunctions_C_ExplodeOnDeath, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000140, "Member 'OrionGameplayFunctions_C_ExplodeOnDeath::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(OrionGameplayFunctions_C_ExplodeOnDeath, CallFunc_EqualEqual_FloatFloat_ReturnValue) == 0x00014C, "Member 'OrionGameplayFunctions_C_ExplodeOnDeath::CallFunc_EqualEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(OrionGameplayFunctions_C_ExplodeOnDeath, CallFunc_MapRangeUnclamped_ReturnValue) == 0x000150, "Member 'OrionGameplayFunctions_C_ExplodeOnDeath::CallFunc_MapRangeUnclamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(OrionGameplayFunctions_C_ExplodeOnDeath, CallFunc_FClamp_ReturnValue) == 0x000154, "Member 'OrionGameplayFunctions_C_ExplodeOnDeath::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(OrionGameplayFunctions_C_ExplodeOnDeath, CallFunc_Conv_FloatToString_ReturnValue) == 0x000158, "Member 'OrionGameplayFunctions_C_ExplodeOnDeath::CallFunc_Conv_FloatToString_ReturnValue' has a wrong offset!");

// Function OrionGameplayFunctions.OrionGameplayFunctions_C.SelectMontageFromPlayRate
// 0x00D8 (0x00D8 - 0x0000)
struct OrionGameplayFunctions_C_SelectMontageFromPlayRate final
{
public:
	class UOrionAbility*                          Target;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           FastAnim;                                          // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         FastTotalAnimTime;                                 // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimMontage*                           MedAnim;                                           // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         MedTotalAnimTime;                                  // 0x0020(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimMontage*                           SlowAnim;                                          // 0x0028(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         SlowTotalAnimTime;                                 // 0x0030(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0038(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           Anim;                                              // 0x0040(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         PlayRate;                                          // 0x0048(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C[0x4];                                       // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimMontage*                           LocalAnim;                                         // 0x0050(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           AnimMontageToUse;                                  // 0x0058(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_64[0x4];                                       // 0x0064(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetDisplayName_ReturnValue;               // 0x0068(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7C[0x4];                                       // 0x007C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_BuildString_Name_ReturnValue;             // 0x0080(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_K2_GetRateForAttackSpeedMontage_ReturnValue; // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue2;         // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue2;         // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue2;              // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_K2_GetTotalAttackTime_ReturnValue;        // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A9[0x7];                                       // 0x00A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_BuildString_Float_ReturnValue;            // 0x00B0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_BuildString_Float_ReturnValue2;           // 0x00C0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue2;        // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(OrionGameplayFunctions_C_SelectMontageFromPlayRate) == 0x000008, "Wrong alignment on OrionGameplayFunctions_C_SelectMontageFromPlayRate");
static_assert(sizeof(OrionGameplayFunctions_C_SelectMontageFromPlayRate) == 0x0000D8, "Wrong size on OrionGameplayFunctions_C_SelectMontageFromPlayRate");
static_assert(offsetof(OrionGameplayFunctions_C_SelectMontageFromPlayRate, Target) == 0x000000, "Member 'OrionGameplayFunctions_C_SelectMontageFromPlayRate::Target' has a wrong offset!");
static_assert(offsetof(OrionGameplayFunctions_C_SelectMontageFromPlayRate, FastAnim) == 0x000008, "Member 'OrionGameplayFunctions_C_SelectMontageFromPlayRate::FastAnim' has a wrong offset!");
static_assert(offsetof(OrionGameplayFunctions_C_SelectMontageFromPlayRate, FastTotalAnimTime) == 0x000010, "Member 'OrionGameplayFunctions_C_SelectMontageFromPlayRate::FastTotalAnimTime' has a wrong offset!");
static_assert(offsetof(OrionGameplayFunctions_C_SelectMontageFromPlayRate, MedAnim) == 0x000018, "Member 'OrionGameplayFunctions_C_SelectMontageFromPlayRate::MedAnim' has a wrong offset!");
static_assert(offsetof(OrionGameplayFunctions_C_SelectMontageFromPlayRate, MedTotalAnimTime) == 0x000020, "Member 'OrionGameplayFunctions_C_SelectMontageFromPlayRate::MedTotalAnimTime' has a wrong offset!");
static_assert(offsetof(OrionGameplayFunctions_C_SelectMontageFromPlayRate, SlowAnim) == 0x000028, "Member 'OrionGameplayFunctions_C_SelectMontageFromPlayRate::SlowAnim' has a wrong offset!");
static_assert(offsetof(OrionGameplayFunctions_C_SelectMontageFromPlayRate, SlowTotalAnimTime) == 0x000030, "Member 'OrionGameplayFunctions_C_SelectMontageFromPlayRate::SlowTotalAnimTime' has a wrong offset!");
static_assert(offsetof(OrionGameplayFunctions_C_SelectMontageFromPlayRate, __WorldContext) == 0x000038, "Member 'OrionGameplayFunctions_C_SelectMontageFromPlayRate::__WorldContext' has a wrong offset!");
static_assert(offsetof(OrionGameplayFunctions_C_SelectMontageFromPlayRate, Anim) == 0x000040, "Member 'OrionGameplayFunctions_C_SelectMontageFromPlayRate::Anim' has a wrong offset!");
static_assert(offsetof(OrionGameplayFunctions_C_SelectMontageFromPlayRate, PlayRate) == 0x000048, "Member 'OrionGameplayFunctions_C_SelectMontageFromPlayRate::PlayRate' has a wrong offset!");
static_assert(offsetof(OrionGameplayFunctions_C_SelectMontageFromPlayRate, LocalAnim) == 0x000050, "Member 'OrionGameplayFunctions_C_SelectMontageFromPlayRate::LocalAnim' has a wrong offset!");
static_assert(offsetof(OrionGameplayFunctions_C_SelectMontageFromPlayRate, AnimMontageToUse) == 0x000058, "Member 'OrionGameplayFunctions_C_SelectMontageFromPlayRate::AnimMontageToUse' has a wrong offset!");
static_assert(offsetof(OrionGameplayFunctions_C_SelectMontageFromPlayRate, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000060, "Member 'OrionGameplayFunctions_C_SelectMontageFromPlayRate::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(OrionGameplayFunctions_C_SelectMontageFromPlayRate, CallFunc_GetDisplayName_ReturnValue) == 0x000068, "Member 'OrionGameplayFunctions_C_SelectMontageFromPlayRate::CallFunc_GetDisplayName_ReturnValue' has a wrong offset!");
static_assert(offsetof(OrionGameplayFunctions_C_SelectMontageFromPlayRate, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000078, "Member 'OrionGameplayFunctions_C_SelectMontageFromPlayRate::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(OrionGameplayFunctions_C_SelectMontageFromPlayRate, CallFunc_BuildString_Name_ReturnValue) == 0x000080, "Member 'OrionGameplayFunctions_C_SelectMontageFromPlayRate::CallFunc_BuildString_Name_ReturnValue' has a wrong offset!");
static_assert(offsetof(OrionGameplayFunctions_C_SelectMontageFromPlayRate, CallFunc_Add_FloatFloat_ReturnValue) == 0x000090, "Member 'OrionGameplayFunctions_C_SelectMontageFromPlayRate::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(OrionGameplayFunctions_C_SelectMontageFromPlayRate, CallFunc_K2_GetRateForAttackSpeedMontage_ReturnValue) == 0x000094, "Member 'OrionGameplayFunctions_C_SelectMontageFromPlayRate::CallFunc_K2_GetRateForAttackSpeedMontage_ReturnValue' has a wrong offset!");
static_assert(offsetof(OrionGameplayFunctions_C_SelectMontageFromPlayRate, CallFunc_Subtract_FloatFloat_ReturnValue2) == 0x000098, "Member 'OrionGameplayFunctions_C_SelectMontageFromPlayRate::CallFunc_Subtract_FloatFloat_ReturnValue2' has a wrong offset!");
static_assert(offsetof(OrionGameplayFunctions_C_SelectMontageFromPlayRate, CallFunc_Multiply_FloatFloat_ReturnValue2) == 0x00009C, "Member 'OrionGameplayFunctions_C_SelectMontageFromPlayRate::CallFunc_Multiply_FloatFloat_ReturnValue2' has a wrong offset!");
static_assert(offsetof(OrionGameplayFunctions_C_SelectMontageFromPlayRate, CallFunc_Add_FloatFloat_ReturnValue2) == 0x0000A0, "Member 'OrionGameplayFunctions_C_SelectMontageFromPlayRate::CallFunc_Add_FloatFloat_ReturnValue2' has a wrong offset!");
static_assert(offsetof(OrionGameplayFunctions_C_SelectMontageFromPlayRate, CallFunc_K2_GetTotalAttackTime_ReturnValue) == 0x0000A4, "Member 'OrionGameplayFunctions_C_SelectMontageFromPlayRate::CallFunc_K2_GetTotalAttackTime_ReturnValue' has a wrong offset!");
static_assert(offsetof(OrionGameplayFunctions_C_SelectMontageFromPlayRate, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x0000A8, "Member 'OrionGameplayFunctions_C_SelectMontageFromPlayRate::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(OrionGameplayFunctions_C_SelectMontageFromPlayRate, CallFunc_BuildString_Float_ReturnValue) == 0x0000B0, "Member 'OrionGameplayFunctions_C_SelectMontageFromPlayRate::CallFunc_BuildString_Float_ReturnValue' has a wrong offset!");
static_assert(offsetof(OrionGameplayFunctions_C_SelectMontageFromPlayRate, CallFunc_BuildString_Float_ReturnValue2) == 0x0000C0, "Member 'OrionGameplayFunctions_C_SelectMontageFromPlayRate::CallFunc_BuildString_Float_ReturnValue2' has a wrong offset!");
static_assert(offsetof(OrionGameplayFunctions_C_SelectMontageFromPlayRate, CallFunc_LessEqual_FloatFloat_ReturnValue2) == 0x0000D0, "Member 'OrionGameplayFunctions_C_SelectMontageFromPlayRate::CallFunc_LessEqual_FloatFloat_ReturnValue2' has a wrong offset!");

// Function OrionGameplayFunctions.OrionGameplayFunctions_C.GetCleaveDamageTargets
// 0x0068 (0x0068 - 0x0000)
struct OrionGameplayFunctions_C_GetCleaveDamageTargets final
{
public:
	struct FGameplayAbilityTargetDataHandle       Targets;                                           // 0x0000(0x0020)(BlueprintVisible, BlueprintReadOnly, Parm)
	class AActor*                                 ExcludeTarget;                                     // 0x0020(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0028(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         CleaveActors;                                      // 0x0030(0x0010)(Parm, OutParm, ZeroConstructor)
	TArray<class AActor*>                         AOEActors;                                         // 0x0040(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate)
	TArray<class AActor*>                         CallFunc_GetActorsFromTargetData_ReturnValue;      // 0x0050(0x0010)(ZeroConstructor, ReferenceParm)
	bool                                          CallFunc_Array_RemoveItem_ReturnValue;             // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(OrionGameplayFunctions_C_GetCleaveDamageTargets) == 0x000008, "Wrong alignment on OrionGameplayFunctions_C_GetCleaveDamageTargets");
static_assert(sizeof(OrionGameplayFunctions_C_GetCleaveDamageTargets) == 0x000068, "Wrong size on OrionGameplayFunctions_C_GetCleaveDamageTargets");
static_assert(offsetof(OrionGameplayFunctions_C_GetCleaveDamageTargets, Targets) == 0x000000, "Member 'OrionGameplayFunctions_C_GetCleaveDamageTargets::Targets' has a wrong offset!");
static_assert(offsetof(OrionGameplayFunctions_C_GetCleaveDamageTargets, ExcludeTarget) == 0x000020, "Member 'OrionGameplayFunctions_C_GetCleaveDamageTargets::ExcludeTarget' has a wrong offset!");
static_assert(offsetof(OrionGameplayFunctions_C_GetCleaveDamageTargets, __WorldContext) == 0x000028, "Member 'OrionGameplayFunctions_C_GetCleaveDamageTargets::__WorldContext' has a wrong offset!");
static_assert(offsetof(OrionGameplayFunctions_C_GetCleaveDamageTargets, CleaveActors) == 0x000030, "Member 'OrionGameplayFunctions_C_GetCleaveDamageTargets::CleaveActors' has a wrong offset!");
static_assert(offsetof(OrionGameplayFunctions_C_GetCleaveDamageTargets, AOEActors) == 0x000040, "Member 'OrionGameplayFunctions_C_GetCleaveDamageTargets::AOEActors' has a wrong offset!");
static_assert(offsetof(OrionGameplayFunctions_C_GetCleaveDamageTargets, CallFunc_GetActorsFromTargetData_ReturnValue) == 0x000050, "Member 'OrionGameplayFunctions_C_GetCleaveDamageTargets::CallFunc_GetActorsFromTargetData_ReturnValue' has a wrong offset!");
static_assert(offsetof(OrionGameplayFunctions_C_GetCleaveDamageTargets, CallFunc_Array_RemoveItem_ReturnValue) == 0x000060, "Member 'OrionGameplayFunctions_C_GetCleaveDamageTargets::CallFunc_Array_RemoveItem_ReturnValue' has a wrong offset!");

// Function OrionGameplayFunctions.OrionGameplayFunctions_C.GetRecallCastTime
// 0x0068 (0x0068 - 0x0000)
struct OrionGameplayFunctions_C_GetRecallCastTime final
{
public:
	class AOrionCharHero*                         HeroActor;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          WithPrimeHelixCheck;                               // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CastTime;                                          // 0x0018(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         RecallTimeFailSafe;                                // 0x001C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         RecallTime;                                        // 0x0020(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IGameplayTagAssetInterface> CallFunc_HasMatchingGameplayTag_self_CastInput;    // 0x0028(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasMatchingGameplayTag_ReturnValue;       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AOrionGameState_MOBA*                   K2Node_DynamicCast_AsOrion_Game_State_MOBA;        // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5A[0x2];                                       // 0x005A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetGameModeRecallTime_ReturnValue;        // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default;                             // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(OrionGameplayFunctions_C_GetRecallCastTime) == 0x000008, "Wrong alignment on OrionGameplayFunctions_C_GetRecallCastTime");
static_assert(sizeof(OrionGameplayFunctions_C_GetRecallCastTime) == 0x000068, "Wrong size on OrionGameplayFunctions_C_GetRecallCastTime");
static_assert(offsetof(OrionGameplayFunctions_C_GetRecallCastTime, HeroActor) == 0x000000, "Member 'OrionGameplayFunctions_C_GetRecallCastTime::HeroActor' has a wrong offset!");
static_assert(offsetof(OrionGameplayFunctions_C_GetRecallCastTime, WithPrimeHelixCheck) == 0x000008, "Member 'OrionGameplayFunctions_C_GetRecallCastTime::WithPrimeHelixCheck' has a wrong offset!");
static_assert(offsetof(OrionGameplayFunctions_C_GetRecallCastTime, __WorldContext) == 0x000010, "Member 'OrionGameplayFunctions_C_GetRecallCastTime::__WorldContext' has a wrong offset!");
static_assert(offsetof(OrionGameplayFunctions_C_GetRecallCastTime, CastTime) == 0x000018, "Member 'OrionGameplayFunctions_C_GetRecallCastTime::CastTime' has a wrong offset!");
static_assert(offsetof(OrionGameplayFunctions_C_GetRecallCastTime, RecallTimeFailSafe) == 0x00001C, "Member 'OrionGameplayFunctions_C_GetRecallCastTime::RecallTimeFailSafe' has a wrong offset!");
static_assert(offsetof(OrionGameplayFunctions_C_GetRecallCastTime, RecallTime) == 0x000020, "Member 'OrionGameplayFunctions_C_GetRecallCastTime::RecallTime' has a wrong offset!");
static_assert(offsetof(OrionGameplayFunctions_C_GetRecallCastTime, CallFunc_HasMatchingGameplayTag_self_CastInput) == 0x000028, "Member 'OrionGameplayFunctions_C_GetRecallCastTime::CallFunc_HasMatchingGameplayTag_self_CastInput' has a wrong offset!");
static_assert(offsetof(OrionGameplayFunctions_C_GetRecallCastTime, CallFunc_HasMatchingGameplayTag_ReturnValue) == 0x000038, "Member 'OrionGameplayFunctions_C_GetRecallCastTime::CallFunc_HasMatchingGameplayTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(OrionGameplayFunctions_C_GetRecallCastTime, CallFunc_GetGameState_ReturnValue) == 0x000040, "Member 'OrionGameplayFunctions_C_GetRecallCastTime::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(OrionGameplayFunctions_C_GetRecallCastTime, CallFunc_BooleanAND_ReturnValue) == 0x000048, "Member 'OrionGameplayFunctions_C_GetRecallCastTime::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(OrionGameplayFunctions_C_GetRecallCastTime, K2Node_DynamicCast_AsOrion_Game_State_MOBA) == 0x000050, "Member 'OrionGameplayFunctions_C_GetRecallCastTime::K2Node_DynamicCast_AsOrion_Game_State_MOBA' has a wrong offset!");
static_assert(offsetof(OrionGameplayFunctions_C_GetRecallCastTime, K2Node_DynamicCast_bSuccess) == 0x000058, "Member 'OrionGameplayFunctions_C_GetRecallCastTime::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(OrionGameplayFunctions_C_GetRecallCastTime, Temp_bool_Variable) == 0x000059, "Member 'OrionGameplayFunctions_C_GetRecallCastTime::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(OrionGameplayFunctions_C_GetRecallCastTime, CallFunc_GetGameModeRecallTime_ReturnValue) == 0x00005C, "Member 'OrionGameplayFunctions_C_GetRecallCastTime::CallFunc_GetGameModeRecallTime_ReturnValue' has a wrong offset!");
static_assert(offsetof(OrionGameplayFunctions_C_GetRecallCastTime, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000060, "Member 'OrionGameplayFunctions_C_GetRecallCastTime::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(OrionGameplayFunctions_C_GetRecallCastTime, K2Node_Select_Default) == 0x000064, "Member 'OrionGameplayFunctions_C_GetRecallCastTime::K2Node_Select_Default' has a wrong offset!");

}

