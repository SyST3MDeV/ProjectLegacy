#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_SentryTurret

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "GameplayAbilities_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "BP_OrionDamageableObjectiveTurret_classes.hpp"
#include "GameplayTags_structs.hpp"
#include "OrionGame_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_SentryTurret.BP_SentryTurret_C
// 0x0300 (0x0CD0 - 0x09D0)
class ABP_SentryTurret_C final : public ABP_OrionDamageableObjectiveTurret_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x09D0(0x0008)(Transient, DuplicateTransient)
	class UDecalComponent*                        FortifyDecal;                                      // 0x09D8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               P_SentryTurret_Exposed;                            // 0x09E0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_Turret_Base_Stump;                              // 0x09E8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UAudioComponent*                        SentryTurret_Firing_AudioComp;                     // 0x09F0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UAudioComponent*                        SentryTurret_Ambient_Cue;                          // 0x09F8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               P_SentryTurret_TargetingBeam_Idle;                 // 0x0A00(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 Attachment_Inhib;                                  // 0x0A08(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 Attachment;                                        // 0x0A10(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UArrowComponent*                        SensingLocationArrow;                              // 0x0A18(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 SkeletalMesh;                                      // 0x0A20(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UCapsuleComponent*                      CapsuleCollision;                                  // 0x0A28(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         DamageFlash_Flash_14C45D74404156847DEDF6B4E820EA04; // 0x0A30(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            DamageFlash__Direction_14C45D74404156847DEDF6B4E820EA04; // 0x0A34(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A35[0x3];                                      // 0x0A35(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     DamageFlash;                                       // 0x0A38(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Timeline_0_EmissiveRamp_FAF8C02C4932DC0D4997F195949AF4FF; // 0x0A40(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            Timeline_0__Direction_FAF8C02C4932DC0D4997F195949AF4FF; // 0x0A44(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A45[0x3];                                      // 0x0A45(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     Timeline_0;                                        // 0x0A48(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Rune_Fade_Out_Timeline_EmissiveRamp_8E571AE84DDFE9BB51FD749718208E45; // 0x0A50(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            Rune_Fade_Out_Timeline__Direction_8E571AE84DDFE9BB51FD749718208E45; // 0x0A54(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A55[0x3];                                      // 0x0A55(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     Rune_Fade_Out_Timeline;                            // 0x0A58(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   DamageNumberPopsName;                              // 0x0A60(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   TeamColorName;                                     // 0x0A68(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                DownLocation;                                      // 0x0A70(0x000C)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                UpLocation;                                        // 0x0A7C(0x000C)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                DownOffset;                                        // 0x0A88(0x000C)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A94[0x4];                                      // 0x0A94(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	UMulticastDelegateProperty_                   SentryDestroyed;                                   // 0x0A98(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	TArray<class ABP_JumpPad_RootMotion_Master_C*> Linked_Jump_Pads;                                  // 0x0AA8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate)
	float                                         DeathVODelay;                                      // 0x0AB8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_ABC[0x4];                                      // 0x0ABC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 GE_SentryTurret_TakeDamageMinion;                  // 0x0AC0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         TakeDamageVODelay;                                 // 0x0AC8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_ACC[0x4];                                      // 0x0ACC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 GE_SentryTurret_TakeDamageHero;                    // 0x0AD0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 GE_SentryTurret_TakeDamageVO;                      // 0x0AD8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USkeletalMesh*                          TurretModel;                                       // 0x0AE0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USkeletalMesh*                          TurretAttachmentModel;                             // 0x0AE8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USkeletalMesh*                          TurretAttachmentInhibModel;                        // 0x0AF0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USkeletalMesh*                          TurretDeadModel;                                   // 0x0AF8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AStaticMeshActor*                       WarningRingMesh;                                   // 0x0B00(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class ABP_MinionSpawner_Lane_C*>       SuperMinionSpawners;                               // 0x0B08(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate)
	class UMaterialInstanceDynamic*               DamageFireMID;                                     // 0x0B18(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 GE_SentryTurret_TakeDamage_Ping;                   // 0x0B20(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 GE_SentryTurret_Dmg_01;                            // 0x0B28(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 GE_Sentry_Turret_Dmg_02;                           // 0x0B30(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FActiveGameplayEffectHandle            Stage_01_GE;                                       // 0x0B38(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FActiveGameplayEffectHandle            Stage_02_GE;                                       // 0x0B40(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	TArray<class AStaticMeshActor*>               GroundMeshes;                                      // 0x0B48(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate)
	TArray<class UMaterialInstanceDynamic*>       GroundMeshes_MIDs;                                 // 0x0B58(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance)
	bool                                          Dead;                                              // 0x0B68(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, RepNotify, NoDestructor)
	uint8                                         Pad_B69[0x7];                                      // 0x0B69(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AStaticMeshActor*>               BaseMeshes;                                        // 0x0B70(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate)
	TArray<class UMaterialInstanceDynamic*>       BaseMeshes_MIDs;                                   // 0x0B80(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance)
	class USoundBase*                             RunesWarmupSound;                                  // 0x0B90(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         WarmUpRunesDelay;                                  // 0x0B98(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          HasActivated;                                      // 0x0B9C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B9D[0x3];                                      // 0x0B9D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UMaterialInstanceDynamic*>       SentryTurret_MIDs;                                 // 0x0BA0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance)
	bool                                          BackDoorProtectionOn;                              // 0x0BB0(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          TargetingBeamOn;                                   // 0x0BB1(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, RepNotify, NoDestructor)
	bool                                          DEBUG_TEAM_COLOR;                                  // 0x0BB2(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_BB3[0x1];                                      // 0x0BB3(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         GroundMesh_EmissiveIntensity;                      // 0x0BB4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             TurretScanningSound;                               // 0x0BB8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAudioComponent*                        TurretScanningAudio;                               // 0x0BC0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DEBUG_Damage;                                      // 0x0BC8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_BCC[0x4];                                      // 0x0BCC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   SentryTurretDamageName;                            // 0x0BD0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   DamageName;                                        // 0x0BD8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UAnimMontage*>                   HitReact_Var;                                      // 0x0BE0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance)
	TArray<class UAnimMontage*>                   DeathMontage_Var;                                  // 0x0BF0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance)
	class UParticleSystemComponent*               TurretFragments;                                   // 0x0C00(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               InhibFragments;                                    // 0x0C08(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Inhibitor;                                         // 0x0C10(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C11[0x3];                                      // 0x0C11(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Stage01Percent;                                    // 0x0C14(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Stage02Percent;                                    // 0x0C18(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C1C[0x4];                                      // 0x0C1C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           Inhib_Tag;                                         // 0x0C20(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	float                                         DeathAnimSecondDelayTime;                          // 0x0C28(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C2C[0x4];                                      // 0x0C2C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UObject>                 Inhib_Dusk_Icon;                                   // 0x0C30(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	TSoftObjectPtr<class UObject>                 Inhib_Dawn_Icon;                                   // 0x0C58(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	TSoftObjectPtr<class UObject>                 Turret_Dawn_Icon;                                  // 0x0C80(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	TSoftObjectPtr<class UObject>                 Turret_Dusk_Icon;                                  // 0x0CA8(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)

public:
	void SentryDestroyed__DelegateSignature(class ABP_SentryTurret_C* Objective);
	void ExecuteUbergraph_BP_SentryTurret(int32 EntryPoint);
	void HandlePerfSettings();
	void OnHealthReceived(float HealthReceived, class AActor* HealthReceivedInstigator);
	void SentryDestroyed_Bind(class ABP_SentryTurret_C* Objective);
	void MinionsSpawning_Dispatch_Bind();
	void SpawnFragments(bool SpawnInhibFragments);
	void GameplayCue_Damage(EGameplayCueEvent EventType, const struct FGameplayCueParameters& Parameters);
	void ChunkHit(class FName EventName, float EmitterTime, int32 ParticleTime, const struct FVector& Location, const struct FVector& Velocity, const struct FVector& Direction, const struct FVector& Normal, class FName BoneName, class UPhysicalMaterial* PhysMat);
	void GameplayCue_Item_Custom_Fortify(EGameplayCueEvent EventType, const struct FGameplayCueParameters& Parameters);
	void PlayDamageFlash(class AOrionChar* Attacker);
	void OnActorBeginOverlap_TargetingVolume_Bind(class AActor* OverlappedActor, class AActor* OtherActor);
	void OnBackdoorProtectionChanged(bool bOn);
	void ObjectiveStartUp();
	void WarmUpRunes(float Delay);
	void GameplayCue_SentryTurret_Death(EGameplayCueEvent EventType, const struct FGameplayCueParameters& Parameters);
	void OnDamageTaken(float Damage, class AActor* DamageInstigator);
	void ReceiveBeginPlay();
	void OnTeamChanged(EOrionTeam NewTeamIdx);
	void OnDeath();
	void LostCurrentTarget();
	void TargetAcquired(class AActor* NewTarget);
	void OnCompleted_20C68E1B427940DD9C5AD0A905BCE5C5(class FName NotifyName);
	void OnBlendOut_20C68E1B427940DD9C5AD0A905BCE5C5(class FName NotifyName);
	void OnInterrupted_20C68E1B427940DD9C5AD0A905BCE5C5(class FName NotifyName);
	void OnNotifyBegin_20C68E1B427940DD9C5AD0A905BCE5C5(class FName NotifyName);
	void OnNotifyEnd_20C68E1B427940DD9C5AD0A905BCE5C5(class FName NotifyName);
	void OnCompleted_7DFD49DB4697F09CF4B0EFB757075A85(class FName NotifyName);
	void OnBlendOut_7DFD49DB4697F09CF4B0EFB757075A85(class FName NotifyName);
	void OnInterrupted_7DFD49DB4697F09CF4B0EFB757075A85(class FName NotifyName);
	void OnNotifyBegin_7DFD49DB4697F09CF4B0EFB757075A85(class FName NotifyName);
	void OnNotifyEnd_7DFD49DB4697F09CF4B0EFB757075A85(class FName NotifyName);
	void OnCompleted_2131F02041A904639441D0A4CB928994(class FName NotifyName);
	void OnBlendOut_2131F02041A904639441D0A4CB928994(class FName NotifyName);
	void OnInterrupted_2131F02041A904639441D0A4CB928994(class FName NotifyName);
	void OnNotifyBegin_2131F02041A904639441D0A4CB928994(class FName NotifyName);
	void OnNotifyEnd_2131F02041A904639441D0A4CB928994(class FName NotifyName);
	void OnCompleted_2131F02041A904639441D0A43B5AC5C0(class FName NotifyName);
	void OnBlendOut_2131F02041A904639441D0A43B5AC5C0(class FName NotifyName);
	void OnInterrupted_2131F02041A904639441D0A43B5AC5C0(class FName NotifyName);
	void OnNotifyBegin_2131F02041A904639441D0A43B5AC5C0(class FName NotifyName);
	void OnNotifyEnd_2131F02041A904639441D0A43B5AC5C0(class FName NotifyName);
	void OnCompleted_2131F02041A904639441D0A4E4596717(class FName NotifyName);
	void OnBlendOut_2131F02041A904639441D0A4E4596717(class FName NotifyName);
	void OnInterrupted_2131F02041A904639441D0A4E4596717(class FName NotifyName);
	void OnNotifyBegin_2131F02041A904639441D0A4E4596717(class FName NotifyName);
	void OnNotifyEnd_2131F02041A904639441D0A4E4596717(class FName NotifyName);
	void DamageFlash__UpdateFunc();
	void DamageFlash__FinishedFunc();
	void Timeline_0__UpdateFunc();
	void Timeline_0__FinishedFunc();
	void Rune_Fade_Out_Timeline__UpdateFunc();
	void Rune_Fade_Out_Timeline__FinishedFunc();
	void UserConstructionScript();
	class UMeshComponent* GetBaseAttackingMesh();
	void GetAimTargetSensingLocation(struct FVector* AimPosition);
	void GetTargetingLocation(struct FVector* OutPosition);
	struct FVector GetNumberPopLocation(const struct FVector& HitLocation);
	TArray<class UMeshComponent*> GetHighlightableMeshes();
	void SetupDeathStuff();
	void HandleTeamColors(EOrionTeam Team_Num);
	void OnRep_Dead();
	void OnRep_TargetingBeamOn();
	void HandleTeamColors_ConstructionScript(EOrionTeam Team_Num);
	void IsInhib(bool* IsInhibitor);

	class UCapsuleComponent* GetCollisionCapsuleComponent() const;
	TSoftObjectPtr<class UObject> GetIcon() const;
	class FText GetDisplayName() const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_SentryTurret_C">();
	}
	static class ABP_SentryTurret_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_SentryTurret_C>();
	}
};
static_assert(alignof(ABP_SentryTurret_C) == 0x000008, "Wrong alignment on ABP_SentryTurret_C");
static_assert(sizeof(ABP_SentryTurret_C) == 0x000CD0, "Wrong size on ABP_SentryTurret_C");
static_assert(offsetof(ABP_SentryTurret_C, UberGraphFrame) == 0x0009D0, "Member 'ABP_SentryTurret_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_SentryTurret_C, FortifyDecal) == 0x0009D8, "Member 'ABP_SentryTurret_C::FortifyDecal' has a wrong offset!");
static_assert(offsetof(ABP_SentryTurret_C, P_SentryTurret_Exposed) == 0x0009E0, "Member 'ABP_SentryTurret_C::P_SentryTurret_Exposed' has a wrong offset!");
static_assert(offsetof(ABP_SentryTurret_C, SM_Turret_Base_Stump) == 0x0009E8, "Member 'ABP_SentryTurret_C::SM_Turret_Base_Stump' has a wrong offset!");
static_assert(offsetof(ABP_SentryTurret_C, SentryTurret_Firing_AudioComp) == 0x0009F0, "Member 'ABP_SentryTurret_C::SentryTurret_Firing_AudioComp' has a wrong offset!");
static_assert(offsetof(ABP_SentryTurret_C, SentryTurret_Ambient_Cue) == 0x0009F8, "Member 'ABP_SentryTurret_C::SentryTurret_Ambient_Cue' has a wrong offset!");
static_assert(offsetof(ABP_SentryTurret_C, P_SentryTurret_TargetingBeam_Idle) == 0x000A00, "Member 'ABP_SentryTurret_C::P_SentryTurret_TargetingBeam_Idle' has a wrong offset!");
static_assert(offsetof(ABP_SentryTurret_C, Attachment_Inhib) == 0x000A08, "Member 'ABP_SentryTurret_C::Attachment_Inhib' has a wrong offset!");
static_assert(offsetof(ABP_SentryTurret_C, Attachment) == 0x000A10, "Member 'ABP_SentryTurret_C::Attachment' has a wrong offset!");
static_assert(offsetof(ABP_SentryTurret_C, SensingLocationArrow) == 0x000A18, "Member 'ABP_SentryTurret_C::SensingLocationArrow' has a wrong offset!");
static_assert(offsetof(ABP_SentryTurret_C, SkeletalMesh) == 0x000A20, "Member 'ABP_SentryTurret_C::SkeletalMesh' has a wrong offset!");
static_assert(offsetof(ABP_SentryTurret_C, CapsuleCollision) == 0x000A28, "Member 'ABP_SentryTurret_C::CapsuleCollision' has a wrong offset!");
static_assert(offsetof(ABP_SentryTurret_C, DamageFlash_Flash_14C45D74404156847DEDF6B4E820EA04) == 0x000A30, "Member 'ABP_SentryTurret_C::DamageFlash_Flash_14C45D74404156847DEDF6B4E820EA04' has a wrong offset!");
static_assert(offsetof(ABP_SentryTurret_C, DamageFlash__Direction_14C45D74404156847DEDF6B4E820EA04) == 0x000A34, "Member 'ABP_SentryTurret_C::DamageFlash__Direction_14C45D74404156847DEDF6B4E820EA04' has a wrong offset!");
static_assert(offsetof(ABP_SentryTurret_C, DamageFlash) == 0x000A38, "Member 'ABP_SentryTurret_C::DamageFlash' has a wrong offset!");
static_assert(offsetof(ABP_SentryTurret_C, Timeline_0_EmissiveRamp_FAF8C02C4932DC0D4997F195949AF4FF) == 0x000A40, "Member 'ABP_SentryTurret_C::Timeline_0_EmissiveRamp_FAF8C02C4932DC0D4997F195949AF4FF' has a wrong offset!");
static_assert(offsetof(ABP_SentryTurret_C, Timeline_0__Direction_FAF8C02C4932DC0D4997F195949AF4FF) == 0x000A44, "Member 'ABP_SentryTurret_C::Timeline_0__Direction_FAF8C02C4932DC0D4997F195949AF4FF' has a wrong offset!");
static_assert(offsetof(ABP_SentryTurret_C, Timeline_0) == 0x000A48, "Member 'ABP_SentryTurret_C::Timeline_0' has a wrong offset!");
static_assert(offsetof(ABP_SentryTurret_C, Rune_Fade_Out_Timeline_EmissiveRamp_8E571AE84DDFE9BB51FD749718208E45) == 0x000A50, "Member 'ABP_SentryTurret_C::Rune_Fade_Out_Timeline_EmissiveRamp_8E571AE84DDFE9BB51FD749718208E45' has a wrong offset!");
static_assert(offsetof(ABP_SentryTurret_C, Rune_Fade_Out_Timeline__Direction_8E571AE84DDFE9BB51FD749718208E45) == 0x000A54, "Member 'ABP_SentryTurret_C::Rune_Fade_Out_Timeline__Direction_8E571AE84DDFE9BB51FD749718208E45' has a wrong offset!");
static_assert(offsetof(ABP_SentryTurret_C, Rune_Fade_Out_Timeline) == 0x000A58, "Member 'ABP_SentryTurret_C::Rune_Fade_Out_Timeline' has a wrong offset!");
static_assert(offsetof(ABP_SentryTurret_C, DamageNumberPopsName) == 0x000A60, "Member 'ABP_SentryTurret_C::DamageNumberPopsName' has a wrong offset!");
static_assert(offsetof(ABP_SentryTurret_C, TeamColorName) == 0x000A68, "Member 'ABP_SentryTurret_C::TeamColorName' has a wrong offset!");
static_assert(offsetof(ABP_SentryTurret_C, DownLocation) == 0x000A70, "Member 'ABP_SentryTurret_C::DownLocation' has a wrong offset!");
static_assert(offsetof(ABP_SentryTurret_C, UpLocation) == 0x000A7C, "Member 'ABP_SentryTurret_C::UpLocation' has a wrong offset!");
static_assert(offsetof(ABP_SentryTurret_C, DownOffset) == 0x000A88, "Member 'ABP_SentryTurret_C::DownOffset' has a wrong offset!");
static_assert(offsetof(ABP_SentryTurret_C, SentryDestroyed) == 0x000A98, "Member 'ABP_SentryTurret_C::SentryDestroyed' has a wrong offset!");
static_assert(offsetof(ABP_SentryTurret_C, Linked_Jump_Pads) == 0x000AA8, "Member 'ABP_SentryTurret_C::Linked_Jump_Pads' has a wrong offset!");
static_assert(offsetof(ABP_SentryTurret_C, DeathVODelay) == 0x000AB8, "Member 'ABP_SentryTurret_C::DeathVODelay' has a wrong offset!");
static_assert(offsetof(ABP_SentryTurret_C, GE_SentryTurret_TakeDamageMinion) == 0x000AC0, "Member 'ABP_SentryTurret_C::GE_SentryTurret_TakeDamageMinion' has a wrong offset!");
static_assert(offsetof(ABP_SentryTurret_C, TakeDamageVODelay) == 0x000AC8, "Member 'ABP_SentryTurret_C::TakeDamageVODelay' has a wrong offset!");
static_assert(offsetof(ABP_SentryTurret_C, GE_SentryTurret_TakeDamageHero) == 0x000AD0, "Member 'ABP_SentryTurret_C::GE_SentryTurret_TakeDamageHero' has a wrong offset!");
static_assert(offsetof(ABP_SentryTurret_C, GE_SentryTurret_TakeDamageVO) == 0x000AD8, "Member 'ABP_SentryTurret_C::GE_SentryTurret_TakeDamageVO' has a wrong offset!");
static_assert(offsetof(ABP_SentryTurret_C, TurretModel) == 0x000AE0, "Member 'ABP_SentryTurret_C::TurretModel' has a wrong offset!");
static_assert(offsetof(ABP_SentryTurret_C, TurretAttachmentModel) == 0x000AE8, "Member 'ABP_SentryTurret_C::TurretAttachmentModel' has a wrong offset!");
static_assert(offsetof(ABP_SentryTurret_C, TurretAttachmentInhibModel) == 0x000AF0, "Member 'ABP_SentryTurret_C::TurretAttachmentInhibModel' has a wrong offset!");
static_assert(offsetof(ABP_SentryTurret_C, TurretDeadModel) == 0x000AF8, "Member 'ABP_SentryTurret_C::TurretDeadModel' has a wrong offset!");
static_assert(offsetof(ABP_SentryTurret_C, WarningRingMesh) == 0x000B00, "Member 'ABP_SentryTurret_C::WarningRingMesh' has a wrong offset!");
static_assert(offsetof(ABP_SentryTurret_C, SuperMinionSpawners) == 0x000B08, "Member 'ABP_SentryTurret_C::SuperMinionSpawners' has a wrong offset!");
static_assert(offsetof(ABP_SentryTurret_C, DamageFireMID) == 0x000B18, "Member 'ABP_SentryTurret_C::DamageFireMID' has a wrong offset!");
static_assert(offsetof(ABP_SentryTurret_C, GE_SentryTurret_TakeDamage_Ping) == 0x000B20, "Member 'ABP_SentryTurret_C::GE_SentryTurret_TakeDamage_Ping' has a wrong offset!");
static_assert(offsetof(ABP_SentryTurret_C, GE_SentryTurret_Dmg_01) == 0x000B28, "Member 'ABP_SentryTurret_C::GE_SentryTurret_Dmg_01' has a wrong offset!");
static_assert(offsetof(ABP_SentryTurret_C, GE_Sentry_Turret_Dmg_02) == 0x000B30, "Member 'ABP_SentryTurret_C::GE_Sentry_Turret_Dmg_02' has a wrong offset!");
static_assert(offsetof(ABP_SentryTurret_C, Stage_01_GE) == 0x000B38, "Member 'ABP_SentryTurret_C::Stage_01_GE' has a wrong offset!");
static_assert(offsetof(ABP_SentryTurret_C, Stage_02_GE) == 0x000B40, "Member 'ABP_SentryTurret_C::Stage_02_GE' has a wrong offset!");
static_assert(offsetof(ABP_SentryTurret_C, GroundMeshes) == 0x000B48, "Member 'ABP_SentryTurret_C::GroundMeshes' has a wrong offset!");
static_assert(offsetof(ABP_SentryTurret_C, GroundMeshes_MIDs) == 0x000B58, "Member 'ABP_SentryTurret_C::GroundMeshes_MIDs' has a wrong offset!");
static_assert(offsetof(ABP_SentryTurret_C, Dead) == 0x000B68, "Member 'ABP_SentryTurret_C::Dead' has a wrong offset!");
static_assert(offsetof(ABP_SentryTurret_C, BaseMeshes) == 0x000B70, "Member 'ABP_SentryTurret_C::BaseMeshes' has a wrong offset!");
static_assert(offsetof(ABP_SentryTurret_C, BaseMeshes_MIDs) == 0x000B80, "Member 'ABP_SentryTurret_C::BaseMeshes_MIDs' has a wrong offset!");
static_assert(offsetof(ABP_SentryTurret_C, RunesWarmupSound) == 0x000B90, "Member 'ABP_SentryTurret_C::RunesWarmupSound' has a wrong offset!");
static_assert(offsetof(ABP_SentryTurret_C, WarmUpRunesDelay) == 0x000B98, "Member 'ABP_SentryTurret_C::WarmUpRunesDelay' has a wrong offset!");
static_assert(offsetof(ABP_SentryTurret_C, HasActivated) == 0x000B9C, "Member 'ABP_SentryTurret_C::HasActivated' has a wrong offset!");
static_assert(offsetof(ABP_SentryTurret_C, SentryTurret_MIDs) == 0x000BA0, "Member 'ABP_SentryTurret_C::SentryTurret_MIDs' has a wrong offset!");
static_assert(offsetof(ABP_SentryTurret_C, BackDoorProtectionOn) == 0x000BB0, "Member 'ABP_SentryTurret_C::BackDoorProtectionOn' has a wrong offset!");
static_assert(offsetof(ABP_SentryTurret_C, TargetingBeamOn) == 0x000BB1, "Member 'ABP_SentryTurret_C::TargetingBeamOn' has a wrong offset!");
static_assert(offsetof(ABP_SentryTurret_C, DEBUG_TEAM_COLOR) == 0x000BB2, "Member 'ABP_SentryTurret_C::DEBUG_TEAM_COLOR' has a wrong offset!");
static_assert(offsetof(ABP_SentryTurret_C, GroundMesh_EmissiveIntensity) == 0x000BB4, "Member 'ABP_SentryTurret_C::GroundMesh_EmissiveIntensity' has a wrong offset!");
static_assert(offsetof(ABP_SentryTurret_C, TurretScanningSound) == 0x000BB8, "Member 'ABP_SentryTurret_C::TurretScanningSound' has a wrong offset!");
static_assert(offsetof(ABP_SentryTurret_C, TurretScanningAudio) == 0x000BC0, "Member 'ABP_SentryTurret_C::TurretScanningAudio' has a wrong offset!");
static_assert(offsetof(ABP_SentryTurret_C, DEBUG_Damage) == 0x000BC8, "Member 'ABP_SentryTurret_C::DEBUG_Damage' has a wrong offset!");
static_assert(offsetof(ABP_SentryTurret_C, SentryTurretDamageName) == 0x000BD0, "Member 'ABP_SentryTurret_C::SentryTurretDamageName' has a wrong offset!");
static_assert(offsetof(ABP_SentryTurret_C, DamageName) == 0x000BD8, "Member 'ABP_SentryTurret_C::DamageName' has a wrong offset!");
static_assert(offsetof(ABP_SentryTurret_C, HitReact_Var) == 0x000BE0, "Member 'ABP_SentryTurret_C::HitReact_Var' has a wrong offset!");
static_assert(offsetof(ABP_SentryTurret_C, DeathMontage_Var) == 0x000BF0, "Member 'ABP_SentryTurret_C::DeathMontage_Var' has a wrong offset!");
static_assert(offsetof(ABP_SentryTurret_C, TurretFragments) == 0x000C00, "Member 'ABP_SentryTurret_C::TurretFragments' has a wrong offset!");
static_assert(offsetof(ABP_SentryTurret_C, InhibFragments) == 0x000C08, "Member 'ABP_SentryTurret_C::InhibFragments' has a wrong offset!");
static_assert(offsetof(ABP_SentryTurret_C, Inhibitor) == 0x000C10, "Member 'ABP_SentryTurret_C::Inhibitor' has a wrong offset!");
static_assert(offsetof(ABP_SentryTurret_C, Stage01Percent) == 0x000C14, "Member 'ABP_SentryTurret_C::Stage01Percent' has a wrong offset!");
static_assert(offsetof(ABP_SentryTurret_C, Stage02Percent) == 0x000C18, "Member 'ABP_SentryTurret_C::Stage02Percent' has a wrong offset!");
static_assert(offsetof(ABP_SentryTurret_C, Inhib_Tag) == 0x000C20, "Member 'ABP_SentryTurret_C::Inhib_Tag' has a wrong offset!");
static_assert(offsetof(ABP_SentryTurret_C, DeathAnimSecondDelayTime) == 0x000C28, "Member 'ABP_SentryTurret_C::DeathAnimSecondDelayTime' has a wrong offset!");
static_assert(offsetof(ABP_SentryTurret_C, Inhib_Dusk_Icon) == 0x000C30, "Member 'ABP_SentryTurret_C::Inhib_Dusk_Icon' has a wrong offset!");
static_assert(offsetof(ABP_SentryTurret_C, Inhib_Dawn_Icon) == 0x000C58, "Member 'ABP_SentryTurret_C::Inhib_Dawn_Icon' has a wrong offset!");
static_assert(offsetof(ABP_SentryTurret_C, Turret_Dawn_Icon) == 0x000C80, "Member 'ABP_SentryTurret_C::Turret_Dawn_Icon' has a wrong offset!");
static_assert(offsetof(ABP_SentryTurret_C, Turret_Dusk_Icon) == 0x000CA8, "Member 'ABP_SentryTurret_C::Turret_Dusk_Icon' has a wrong offset!");

}

