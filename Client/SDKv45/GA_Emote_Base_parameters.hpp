#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GA_Emote_Base

#include "Basic.hpp"

#include "GameplayAbilities_structs.hpp"
#include "OrionGame_structs.hpp"


namespace SDK::Params
{

// Function GA_Emote_Base.GA_Emote_Base_C.ExecuteUbergraph_GA_Emote_Base
// 0x0208 (0x0208 - 0x0000)
struct GA_Emote_Base_C_ExecuteUbergraph_GA_Emote_Base final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameplayAbility*                       Temp_object_Variable;                              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0010(0x0010)(ZeroConstructor, NoDestructor)
	class UAbilityTask_WaitAbilityActivate*       CallFunc_WaitForAbilityActivate_ReturnValue;       // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EOrionTeam                                    Temp_byte_Variable;                                // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2A[0x6];                                       // 0x002A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate2;             // 0x0030(0x0010)(ZeroConstructor, NoDestructor)
	class FName                                   K2Node_CustomEvent_NotifyName6;                    // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName5;                    // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate3;             // 0x0050(0x0010)(ZeroConstructor, NoDestructor)
	class FName                                   K2Node_CustomEvent_NotifyName4;                    // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate4;             // 0x0068(0x0010)(ZeroConstructor, NoDestructor)
	class FName                                   K2Node_CustomEvent_NotifyName3;                    // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate5;             // 0x0080(0x0010)(ZeroConstructor, NoDestructor)
	class FName                                   K2Node_CustomEvent_NotifyName2;                    // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate6;             // 0x0098(0x0010)(ZeroConstructor, NoDestructor)
	class FName                                   K2Node_CustomEvent_NotifyName;                     // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate7;             // 0x00B0(0x0010)(ZeroConstructor, NoDestructor)
	class FName                                   Temp_name_Variable;                                // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class AActor* Source, const struct FGameplayEffectSpecHandle& SpecHandle, const struct FActiveGameplayEffectHandle& ActiveHandle)> K2Node_CreateDelegate_OutputDelegate8;             // 0x00C8(0x0010)(ZeroConstructor, NoDestructor)
	class AActor*                                 K2Node_CustomEvent_Source;                         // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayEffectSpecHandle              K2Node_CustomEvent_SpecHandle;                     // 0x00E0(0x0018)()
	struct FActiveGameplayEffectHandle            K2Node_CustomEvent_ActiveHandle;                   // 0x00F8(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FActiveGameplayEffectHandle            Temp_struct_Variable;                              // 0x0100(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FGameplayEffectSpecHandle              Temp_struct_Variable2;                             // 0x0108(0x0018)()
	class AActor*                                 Temp_object_Variable2;                             // 0x0120(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate9;             // 0x0128(0x0010)(ZeroConstructor, NoDestructor)
	class UAbilityTask_WaitAttributeChange*       CallFunc_WaitForAttributeChange_ReturnValue;       // 0x0138(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate10;            // 0x0140(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue2;                     // 0x0150(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_151[0x7];                                      // 0x0151(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UOrionAbilityTask_WaitForMovementInput* CallFunc_WaitForMovementInput_ReturnValue;         // 0x0158(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetAvatarActorFromActorInfo_ReturnValue;  // 0x0160(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IOrionTeamActorInterface> K2Node_DynamicCast_AsOrion_Team_Actor_Interface;   // 0x0168(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0178(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EOrionTeam                                    CallFunc_GetTeamNum_ReturnValue;                   // 0x0179(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue3;                     // 0x017A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_17B[0x5];                                      // 0x017B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameplayAbility*                       K2Node_CustomEvent_ActivatedAbility;               // 0x0180(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAbilityTask_WaitCancel*                CallFunc_WaitCancel_ReturnValue;                   // 0x0188(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue4;                     // 0x0190(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_191[0x7];                                      // 0x0191(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UOrionAbilityTask_PlayMontageAndWaitNotifyName* CallFunc_CreatePlayMontageAndWaitProxy_ReturnValue; // 0x0198(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue5;                     // 0x01A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1A1[0x7];                                      // 0x01A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FOrionAbilityTargetDataFilter          K2Node_MakeStruct_OrionAbilityTargetDataFilter;    // 0x01A8(0x0030)()
	struct FGameplayTargetDataFilterHandle        CallFunc_MakeOrionFilterHandle_ReturnValue;        // 0x01D8(0x0010)()
	class UAbilityTask_WaitGameplayEffectApplied_Self* CallFunc_WaitGameplayEffectAppliedToSelf_ReturnValue; // 0x01E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UGameplayAbility* ActivatedAbility)> K2Node_CreateDelegate_OutputDelegate11;            // 0x01F0(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue6;                     // 0x0200(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(GA_Emote_Base_C_ExecuteUbergraph_GA_Emote_Base) == 0x000008, "Wrong alignment on GA_Emote_Base_C_ExecuteUbergraph_GA_Emote_Base");
static_assert(sizeof(GA_Emote_Base_C_ExecuteUbergraph_GA_Emote_Base) == 0x000208, "Wrong size on GA_Emote_Base_C_ExecuteUbergraph_GA_Emote_Base");
static_assert(offsetof(GA_Emote_Base_C_ExecuteUbergraph_GA_Emote_Base, EntryPoint) == 0x000000, "Member 'GA_Emote_Base_C_ExecuteUbergraph_GA_Emote_Base::EntryPoint' has a wrong offset!");
static_assert(offsetof(GA_Emote_Base_C_ExecuteUbergraph_GA_Emote_Base, Temp_object_Variable) == 0x000008, "Member 'GA_Emote_Base_C_ExecuteUbergraph_GA_Emote_Base::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(GA_Emote_Base_C_ExecuteUbergraph_GA_Emote_Base, K2Node_CreateDelegate_OutputDelegate) == 0x000010, "Member 'GA_Emote_Base_C_ExecuteUbergraph_GA_Emote_Base::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(GA_Emote_Base_C_ExecuteUbergraph_GA_Emote_Base, CallFunc_WaitForAbilityActivate_ReturnValue) == 0x000020, "Member 'GA_Emote_Base_C_ExecuteUbergraph_GA_Emote_Base::CallFunc_WaitForAbilityActivate_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Emote_Base_C_ExecuteUbergraph_GA_Emote_Base, Temp_byte_Variable) == 0x000028, "Member 'GA_Emote_Base_C_ExecuteUbergraph_GA_Emote_Base::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(GA_Emote_Base_C_ExecuteUbergraph_GA_Emote_Base, CallFunc_IsValid_ReturnValue) == 0x000029, "Member 'GA_Emote_Base_C_ExecuteUbergraph_GA_Emote_Base::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Emote_Base_C_ExecuteUbergraph_GA_Emote_Base, K2Node_CreateDelegate_OutputDelegate2) == 0x000030, "Member 'GA_Emote_Base_C_ExecuteUbergraph_GA_Emote_Base::K2Node_CreateDelegate_OutputDelegate2' has a wrong offset!");
static_assert(offsetof(GA_Emote_Base_C_ExecuteUbergraph_GA_Emote_Base, K2Node_CustomEvent_NotifyName6) == 0x000040, "Member 'GA_Emote_Base_C_ExecuteUbergraph_GA_Emote_Base::K2Node_CustomEvent_NotifyName6' has a wrong offset!");
static_assert(offsetof(GA_Emote_Base_C_ExecuteUbergraph_GA_Emote_Base, K2Node_CustomEvent_NotifyName5) == 0x000048, "Member 'GA_Emote_Base_C_ExecuteUbergraph_GA_Emote_Base::K2Node_CustomEvent_NotifyName5' has a wrong offset!");
static_assert(offsetof(GA_Emote_Base_C_ExecuteUbergraph_GA_Emote_Base, K2Node_CreateDelegate_OutputDelegate3) == 0x000050, "Member 'GA_Emote_Base_C_ExecuteUbergraph_GA_Emote_Base::K2Node_CreateDelegate_OutputDelegate3' has a wrong offset!");
static_assert(offsetof(GA_Emote_Base_C_ExecuteUbergraph_GA_Emote_Base, K2Node_CustomEvent_NotifyName4) == 0x000060, "Member 'GA_Emote_Base_C_ExecuteUbergraph_GA_Emote_Base::K2Node_CustomEvent_NotifyName4' has a wrong offset!");
static_assert(offsetof(GA_Emote_Base_C_ExecuteUbergraph_GA_Emote_Base, K2Node_CreateDelegate_OutputDelegate4) == 0x000068, "Member 'GA_Emote_Base_C_ExecuteUbergraph_GA_Emote_Base::K2Node_CreateDelegate_OutputDelegate4' has a wrong offset!");
static_assert(offsetof(GA_Emote_Base_C_ExecuteUbergraph_GA_Emote_Base, K2Node_CustomEvent_NotifyName3) == 0x000078, "Member 'GA_Emote_Base_C_ExecuteUbergraph_GA_Emote_Base::K2Node_CustomEvent_NotifyName3' has a wrong offset!");
static_assert(offsetof(GA_Emote_Base_C_ExecuteUbergraph_GA_Emote_Base, K2Node_CreateDelegate_OutputDelegate5) == 0x000080, "Member 'GA_Emote_Base_C_ExecuteUbergraph_GA_Emote_Base::K2Node_CreateDelegate_OutputDelegate5' has a wrong offset!");
static_assert(offsetof(GA_Emote_Base_C_ExecuteUbergraph_GA_Emote_Base, K2Node_CustomEvent_NotifyName2) == 0x000090, "Member 'GA_Emote_Base_C_ExecuteUbergraph_GA_Emote_Base::K2Node_CustomEvent_NotifyName2' has a wrong offset!");
static_assert(offsetof(GA_Emote_Base_C_ExecuteUbergraph_GA_Emote_Base, K2Node_CreateDelegate_OutputDelegate6) == 0x000098, "Member 'GA_Emote_Base_C_ExecuteUbergraph_GA_Emote_Base::K2Node_CreateDelegate_OutputDelegate6' has a wrong offset!");
static_assert(offsetof(GA_Emote_Base_C_ExecuteUbergraph_GA_Emote_Base, K2Node_CustomEvent_NotifyName) == 0x0000A8, "Member 'GA_Emote_Base_C_ExecuteUbergraph_GA_Emote_Base::K2Node_CustomEvent_NotifyName' has a wrong offset!");
static_assert(offsetof(GA_Emote_Base_C_ExecuteUbergraph_GA_Emote_Base, K2Node_CreateDelegate_OutputDelegate7) == 0x0000B0, "Member 'GA_Emote_Base_C_ExecuteUbergraph_GA_Emote_Base::K2Node_CreateDelegate_OutputDelegate7' has a wrong offset!");
static_assert(offsetof(GA_Emote_Base_C_ExecuteUbergraph_GA_Emote_Base, Temp_name_Variable) == 0x0000C0, "Member 'GA_Emote_Base_C_ExecuteUbergraph_GA_Emote_Base::Temp_name_Variable' has a wrong offset!");
static_assert(offsetof(GA_Emote_Base_C_ExecuteUbergraph_GA_Emote_Base, K2Node_CreateDelegate_OutputDelegate8) == 0x0000C8, "Member 'GA_Emote_Base_C_ExecuteUbergraph_GA_Emote_Base::K2Node_CreateDelegate_OutputDelegate8' has a wrong offset!");
static_assert(offsetof(GA_Emote_Base_C_ExecuteUbergraph_GA_Emote_Base, K2Node_CustomEvent_Source) == 0x0000D8, "Member 'GA_Emote_Base_C_ExecuteUbergraph_GA_Emote_Base::K2Node_CustomEvent_Source' has a wrong offset!");
static_assert(offsetof(GA_Emote_Base_C_ExecuteUbergraph_GA_Emote_Base, K2Node_CustomEvent_SpecHandle) == 0x0000E0, "Member 'GA_Emote_Base_C_ExecuteUbergraph_GA_Emote_Base::K2Node_CustomEvent_SpecHandle' has a wrong offset!");
static_assert(offsetof(GA_Emote_Base_C_ExecuteUbergraph_GA_Emote_Base, K2Node_CustomEvent_ActiveHandle) == 0x0000F8, "Member 'GA_Emote_Base_C_ExecuteUbergraph_GA_Emote_Base::K2Node_CustomEvent_ActiveHandle' has a wrong offset!");
static_assert(offsetof(GA_Emote_Base_C_ExecuteUbergraph_GA_Emote_Base, Temp_struct_Variable) == 0x000100, "Member 'GA_Emote_Base_C_ExecuteUbergraph_GA_Emote_Base::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(GA_Emote_Base_C_ExecuteUbergraph_GA_Emote_Base, Temp_struct_Variable2) == 0x000108, "Member 'GA_Emote_Base_C_ExecuteUbergraph_GA_Emote_Base::Temp_struct_Variable2' has a wrong offset!");
static_assert(offsetof(GA_Emote_Base_C_ExecuteUbergraph_GA_Emote_Base, Temp_object_Variable2) == 0x000120, "Member 'GA_Emote_Base_C_ExecuteUbergraph_GA_Emote_Base::Temp_object_Variable2' has a wrong offset!");
static_assert(offsetof(GA_Emote_Base_C_ExecuteUbergraph_GA_Emote_Base, K2Node_CreateDelegate_OutputDelegate9) == 0x000128, "Member 'GA_Emote_Base_C_ExecuteUbergraph_GA_Emote_Base::K2Node_CreateDelegate_OutputDelegate9' has a wrong offset!");
static_assert(offsetof(GA_Emote_Base_C_ExecuteUbergraph_GA_Emote_Base, CallFunc_WaitForAttributeChange_ReturnValue) == 0x000138, "Member 'GA_Emote_Base_C_ExecuteUbergraph_GA_Emote_Base::CallFunc_WaitForAttributeChange_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Emote_Base_C_ExecuteUbergraph_GA_Emote_Base, K2Node_CreateDelegate_OutputDelegate10) == 0x000140, "Member 'GA_Emote_Base_C_ExecuteUbergraph_GA_Emote_Base::K2Node_CreateDelegate_OutputDelegate10' has a wrong offset!");
static_assert(offsetof(GA_Emote_Base_C_ExecuteUbergraph_GA_Emote_Base, CallFunc_IsValid_ReturnValue2) == 0x000150, "Member 'GA_Emote_Base_C_ExecuteUbergraph_GA_Emote_Base::CallFunc_IsValid_ReturnValue2' has a wrong offset!");
static_assert(offsetof(GA_Emote_Base_C_ExecuteUbergraph_GA_Emote_Base, CallFunc_WaitForMovementInput_ReturnValue) == 0x000158, "Member 'GA_Emote_Base_C_ExecuteUbergraph_GA_Emote_Base::CallFunc_WaitForMovementInput_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Emote_Base_C_ExecuteUbergraph_GA_Emote_Base, CallFunc_GetAvatarActorFromActorInfo_ReturnValue) == 0x000160, "Member 'GA_Emote_Base_C_ExecuteUbergraph_GA_Emote_Base::CallFunc_GetAvatarActorFromActorInfo_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Emote_Base_C_ExecuteUbergraph_GA_Emote_Base, K2Node_DynamicCast_AsOrion_Team_Actor_Interface) == 0x000168, "Member 'GA_Emote_Base_C_ExecuteUbergraph_GA_Emote_Base::K2Node_DynamicCast_AsOrion_Team_Actor_Interface' has a wrong offset!");
static_assert(offsetof(GA_Emote_Base_C_ExecuteUbergraph_GA_Emote_Base, K2Node_DynamicCast_bSuccess) == 0x000178, "Member 'GA_Emote_Base_C_ExecuteUbergraph_GA_Emote_Base::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(GA_Emote_Base_C_ExecuteUbergraph_GA_Emote_Base, CallFunc_GetTeamNum_ReturnValue) == 0x000179, "Member 'GA_Emote_Base_C_ExecuteUbergraph_GA_Emote_Base::CallFunc_GetTeamNum_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Emote_Base_C_ExecuteUbergraph_GA_Emote_Base, CallFunc_IsValid_ReturnValue3) == 0x00017A, "Member 'GA_Emote_Base_C_ExecuteUbergraph_GA_Emote_Base::CallFunc_IsValid_ReturnValue3' has a wrong offset!");
static_assert(offsetof(GA_Emote_Base_C_ExecuteUbergraph_GA_Emote_Base, K2Node_CustomEvent_ActivatedAbility) == 0x000180, "Member 'GA_Emote_Base_C_ExecuteUbergraph_GA_Emote_Base::K2Node_CustomEvent_ActivatedAbility' has a wrong offset!");
static_assert(offsetof(GA_Emote_Base_C_ExecuteUbergraph_GA_Emote_Base, CallFunc_WaitCancel_ReturnValue) == 0x000188, "Member 'GA_Emote_Base_C_ExecuteUbergraph_GA_Emote_Base::CallFunc_WaitCancel_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Emote_Base_C_ExecuteUbergraph_GA_Emote_Base, CallFunc_IsValid_ReturnValue4) == 0x000190, "Member 'GA_Emote_Base_C_ExecuteUbergraph_GA_Emote_Base::CallFunc_IsValid_ReturnValue4' has a wrong offset!");
static_assert(offsetof(GA_Emote_Base_C_ExecuteUbergraph_GA_Emote_Base, CallFunc_CreatePlayMontageAndWaitProxy_ReturnValue) == 0x000198, "Member 'GA_Emote_Base_C_ExecuteUbergraph_GA_Emote_Base::CallFunc_CreatePlayMontageAndWaitProxy_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Emote_Base_C_ExecuteUbergraph_GA_Emote_Base, CallFunc_IsValid_ReturnValue5) == 0x0001A0, "Member 'GA_Emote_Base_C_ExecuteUbergraph_GA_Emote_Base::CallFunc_IsValid_ReturnValue5' has a wrong offset!");
static_assert(offsetof(GA_Emote_Base_C_ExecuteUbergraph_GA_Emote_Base, K2Node_MakeStruct_OrionAbilityTargetDataFilter) == 0x0001A8, "Member 'GA_Emote_Base_C_ExecuteUbergraph_GA_Emote_Base::K2Node_MakeStruct_OrionAbilityTargetDataFilter' has a wrong offset!");
static_assert(offsetof(GA_Emote_Base_C_ExecuteUbergraph_GA_Emote_Base, CallFunc_MakeOrionFilterHandle_ReturnValue) == 0x0001D8, "Member 'GA_Emote_Base_C_ExecuteUbergraph_GA_Emote_Base::CallFunc_MakeOrionFilterHandle_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Emote_Base_C_ExecuteUbergraph_GA_Emote_Base, CallFunc_WaitGameplayEffectAppliedToSelf_ReturnValue) == 0x0001E8, "Member 'GA_Emote_Base_C_ExecuteUbergraph_GA_Emote_Base::CallFunc_WaitGameplayEffectAppliedToSelf_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Emote_Base_C_ExecuteUbergraph_GA_Emote_Base, K2Node_CreateDelegate_OutputDelegate11) == 0x0001F0, "Member 'GA_Emote_Base_C_ExecuteUbergraph_GA_Emote_Base::K2Node_CreateDelegate_OutputDelegate11' has a wrong offset!");
static_assert(offsetof(GA_Emote_Base_C_ExecuteUbergraph_GA_Emote_Base, CallFunc_IsValid_ReturnValue6) == 0x000200, "Member 'GA_Emote_Base_C_ExecuteUbergraph_GA_Emote_Base::CallFunc_IsValid_ReturnValue6' has a wrong offset!");

// Function GA_Emote_Base.GA_Emote_Base_C.OnActivate_2CE5DB8941866BBCC3CC6F97907D63F1
// 0x0008 (0x0008 - 0x0000)
struct GA_Emote_Base_C_OnActivate_2CE5DB8941866BBCC3CC6F97907D63F1 final
{
public:
	class UGameplayAbility*                       ActivatedAbility;                                  // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_Emote_Base_C_OnActivate_2CE5DB8941866BBCC3CC6F97907D63F1) == 0x000008, "Wrong alignment on GA_Emote_Base_C_OnActivate_2CE5DB8941866BBCC3CC6F97907D63F1");
static_assert(sizeof(GA_Emote_Base_C_OnActivate_2CE5DB8941866BBCC3CC6F97907D63F1) == 0x000008, "Wrong size on GA_Emote_Base_C_OnActivate_2CE5DB8941866BBCC3CC6F97907D63F1");
static_assert(offsetof(GA_Emote_Base_C_OnActivate_2CE5DB8941866BBCC3CC6F97907D63F1, ActivatedAbility) == 0x000000, "Member 'GA_Emote_Base_C_OnActivate_2CE5DB8941866BBCC3CC6F97907D63F1::ActivatedAbility' has a wrong offset!");

// Function GA_Emote_Base.GA_Emote_Base_C.OnApplied_469E76E14A18DA440CC1ABB3348B6E48
// 0x0028 (0x0028 - 0x0000)
struct GA_Emote_Base_C_OnApplied_469E76E14A18DA440CC1ABB3348B6E48 final
{
public:
	class AActor*                                 Source;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayEffectSpecHandle              SpecHandle;                                        // 0x0008(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
	struct FActiveGameplayEffectHandle            ActiveHandle;                                      // 0x0020(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_Emote_Base_C_OnApplied_469E76E14A18DA440CC1ABB3348B6E48) == 0x000008, "Wrong alignment on GA_Emote_Base_C_OnApplied_469E76E14A18DA440CC1ABB3348B6E48");
static_assert(sizeof(GA_Emote_Base_C_OnApplied_469E76E14A18DA440CC1ABB3348B6E48) == 0x000028, "Wrong size on GA_Emote_Base_C_OnApplied_469E76E14A18DA440CC1ABB3348B6E48");
static_assert(offsetof(GA_Emote_Base_C_OnApplied_469E76E14A18DA440CC1ABB3348B6E48, Source) == 0x000000, "Member 'GA_Emote_Base_C_OnApplied_469E76E14A18DA440CC1ABB3348B6E48::Source' has a wrong offset!");
static_assert(offsetof(GA_Emote_Base_C_OnApplied_469E76E14A18DA440CC1ABB3348B6E48, SpecHandle) == 0x000008, "Member 'GA_Emote_Base_C_OnApplied_469E76E14A18DA440CC1ABB3348B6E48::SpecHandle' has a wrong offset!");
static_assert(offsetof(GA_Emote_Base_C_OnApplied_469E76E14A18DA440CC1ABB3348B6E48, ActiveHandle) == 0x000020, "Member 'GA_Emote_Base_C_OnApplied_469E76E14A18DA440CC1ABB3348B6E48::ActiveHandle' has a wrong offset!");

// Function GA_Emote_Base.GA_Emote_Base_C.OnBlendOut_25F51C8A425E753C13138E92FB4B3BC1
// 0x0008 (0x0008 - 0x0000)
struct alignas(0x08) GA_Emote_Base_C_OnBlendOut_25F51C8A425E753C13138E92FB4B3BC1 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_Emote_Base_C_OnBlendOut_25F51C8A425E753C13138E92FB4B3BC1) == 0x000008, "Wrong alignment on GA_Emote_Base_C_OnBlendOut_25F51C8A425E753C13138E92FB4B3BC1");
static_assert(sizeof(GA_Emote_Base_C_OnBlendOut_25F51C8A425E753C13138E92FB4B3BC1) == 0x000008, "Wrong size on GA_Emote_Base_C_OnBlendOut_25F51C8A425E753C13138E92FB4B3BC1");
static_assert(offsetof(GA_Emote_Base_C_OnBlendOut_25F51C8A425E753C13138E92FB4B3BC1, NotifyName) == 0x000000, "Member 'GA_Emote_Base_C_OnBlendOut_25F51C8A425E753C13138E92FB4B3BC1::NotifyName' has a wrong offset!");

// Function GA_Emote_Base.GA_Emote_Base_C.OnCancelled_25F51C8A425E753C13138E92FB4B3BC1
// 0x0008 (0x0008 - 0x0000)
struct alignas(0x08) GA_Emote_Base_C_OnCancelled_25F51C8A425E753C13138E92FB4B3BC1 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_Emote_Base_C_OnCancelled_25F51C8A425E753C13138E92FB4B3BC1) == 0x000008, "Wrong alignment on GA_Emote_Base_C_OnCancelled_25F51C8A425E753C13138E92FB4B3BC1");
static_assert(sizeof(GA_Emote_Base_C_OnCancelled_25F51C8A425E753C13138E92FB4B3BC1) == 0x000008, "Wrong size on GA_Emote_Base_C_OnCancelled_25F51C8A425E753C13138E92FB4B3BC1");
static_assert(offsetof(GA_Emote_Base_C_OnCancelled_25F51C8A425E753C13138E92FB4B3BC1, NotifyName) == 0x000000, "Member 'GA_Emote_Base_C_OnCancelled_25F51C8A425E753C13138E92FB4B3BC1::NotifyName' has a wrong offset!");

// Function GA_Emote_Base.GA_Emote_Base_C.OnCompleted_25F51C8A425E753C13138E92FB4B3BC1
// 0x0008 (0x0008 - 0x0000)
struct alignas(0x08) GA_Emote_Base_C_OnCompleted_25F51C8A425E753C13138E92FB4B3BC1 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_Emote_Base_C_OnCompleted_25F51C8A425E753C13138E92FB4B3BC1) == 0x000008, "Wrong alignment on GA_Emote_Base_C_OnCompleted_25F51C8A425E753C13138E92FB4B3BC1");
static_assert(sizeof(GA_Emote_Base_C_OnCompleted_25F51C8A425E753C13138E92FB4B3BC1) == 0x000008, "Wrong size on GA_Emote_Base_C_OnCompleted_25F51C8A425E753C13138E92FB4B3BC1");
static_assert(offsetof(GA_Emote_Base_C_OnCompleted_25F51C8A425E753C13138E92FB4B3BC1, NotifyName) == 0x000000, "Member 'GA_Emote_Base_C_OnCompleted_25F51C8A425E753C13138E92FB4B3BC1::NotifyName' has a wrong offset!");

// Function GA_Emote_Base.GA_Emote_Base_C.OnInterrupted_25F51C8A425E753C13138E92FB4B3BC1
// 0x0008 (0x0008 - 0x0000)
struct alignas(0x08) GA_Emote_Base_C_OnInterrupted_25F51C8A425E753C13138E92FB4B3BC1 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_Emote_Base_C_OnInterrupted_25F51C8A425E753C13138E92FB4B3BC1) == 0x000008, "Wrong alignment on GA_Emote_Base_C_OnInterrupted_25F51C8A425E753C13138E92FB4B3BC1");
static_assert(sizeof(GA_Emote_Base_C_OnInterrupted_25F51C8A425E753C13138E92FB4B3BC1) == 0x000008, "Wrong size on GA_Emote_Base_C_OnInterrupted_25F51C8A425E753C13138E92FB4B3BC1");
static_assert(offsetof(GA_Emote_Base_C_OnInterrupted_25F51C8A425E753C13138E92FB4B3BC1, NotifyName) == 0x000000, "Member 'GA_Emote_Base_C_OnInterrupted_25F51C8A425E753C13138E92FB4B3BC1::NotifyName' has a wrong offset!");

// Function GA_Emote_Base.GA_Emote_Base_C.OnNotifyBegin_25F51C8A425E753C13138E92FB4B3BC1
// 0x0008 (0x0008 - 0x0000)
struct alignas(0x08) GA_Emote_Base_C_OnNotifyBegin_25F51C8A425E753C13138E92FB4B3BC1 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_Emote_Base_C_OnNotifyBegin_25F51C8A425E753C13138E92FB4B3BC1) == 0x000008, "Wrong alignment on GA_Emote_Base_C_OnNotifyBegin_25F51C8A425E753C13138E92FB4B3BC1");
static_assert(sizeof(GA_Emote_Base_C_OnNotifyBegin_25F51C8A425E753C13138E92FB4B3BC1) == 0x000008, "Wrong size on GA_Emote_Base_C_OnNotifyBegin_25F51C8A425E753C13138E92FB4B3BC1");
static_assert(offsetof(GA_Emote_Base_C_OnNotifyBegin_25F51C8A425E753C13138E92FB4B3BC1, NotifyName) == 0x000000, "Member 'GA_Emote_Base_C_OnNotifyBegin_25F51C8A425E753C13138E92FB4B3BC1::NotifyName' has a wrong offset!");

// Function GA_Emote_Base.GA_Emote_Base_C.OnNotifyEnd_25F51C8A425E753C13138E92FB4B3BC1
// 0x0008 (0x0008 - 0x0000)
struct alignas(0x08) GA_Emote_Base_C_OnNotifyEnd_25F51C8A425E753C13138E92FB4B3BC1 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_Emote_Base_C_OnNotifyEnd_25F51C8A425E753C13138E92FB4B3BC1) == 0x000008, "Wrong alignment on GA_Emote_Base_C_OnNotifyEnd_25F51C8A425E753C13138E92FB4B3BC1");
static_assert(sizeof(GA_Emote_Base_C_OnNotifyEnd_25F51C8A425E753C13138E92FB4B3BC1) == 0x000008, "Wrong size on GA_Emote_Base_C_OnNotifyEnd_25F51C8A425E753C13138E92FB4B3BC1");
static_assert(offsetof(GA_Emote_Base_C_OnNotifyEnd_25F51C8A425E753C13138E92FB4B3BC1, NotifyName) == 0x000000, "Member 'GA_Emote_Base_C_OnNotifyEnd_25F51C8A425E753C13138E92FB4B3BC1::NotifyName' has a wrong offset!");

}

