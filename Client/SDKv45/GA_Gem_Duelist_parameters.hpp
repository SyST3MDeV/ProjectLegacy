#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GA_Gem_Duelist

#include "Basic.hpp"

#include "GameplayAbilities_structs.hpp"
#include "OrionGame_structs.hpp"


namespace SDK::Params
{

// Function GA_Gem_Duelist.GA_Gem_Duelist_C.ExecuteUbergraph_GA_Gem_Duelist
// 0x0120 (0x0120 - 0x0000)
struct GA_Gem_Duelist_C_ExecuteUbergraph_GA_Gem_Duelist final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FOrionAbilityTargetDataFilter          K2Node_MakeStruct_OrionAbilityTargetDataFilter;    // 0x0008(0x0030)()
	class AActor*                                 K2Node_CustomEvent_Target;                         // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayEffectSpecHandle              K2Node_CustomEvent_SpecHandle;                     // 0x0040(0x0018)()
	struct FActiveGameplayEffectHandle            K2Node_CustomEvent_ActiveHandle;                   // 0x0058(0x0008)(NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class AActor* Target, const struct FGameplayEffectSpecHandle& SpecHandle, const struct FActiveGameplayEffectHandle& ActiveHandle)> K2Node_CreateDelegate_OutputDelegate;              // 0x0060(0x0010)(ZeroConstructor, NoDestructor)
	struct FActiveGameplayEffectHandle            Temp_struct_Variable;                              // 0x0070(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FGameplayEffectSpecHandle              Temp_struct_Variable2;                             // 0x0078(0x0018)()
	class AActor*                                 Temp_object_Variable;                              // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EOrionTeam                                    Temp_byte_Variable;                                // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_99[0x7];                                       // 0x0099(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayAbilityTargetDataHandle       CallFunc_AbilityTargetDataFromActor_ReturnValue;   // 0x00A0(0x0020)()
	int32                                         CallFunc_GetAbilityLevel_ReturnValue;              // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetAbilityLevel_ReturnValue2;             // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FActiveGameplayEffectHandle            CallFunc_BP_ApplyGameplayEffectToOwner_ReturnValue; // 0x00C8(0x0008)(NoDestructor, HasGetValueTypeHash)
	TArray<struct FActiveGameplayEffectHandle>    CallFunc_BP_ApplyGameplayEffectToTarget_ReturnValue; // 0x00D0(0x0010)(ZeroConstructor, ReferenceParm)
	class AActor*                                 CallFunc_GetAvatarActorFromActorInfo_ReturnValue;  // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTargetDataFilterHandle        CallFunc_MakeOrionFilterHandle_ReturnValue;        // 0x00E8(0x0010)()
	TScriptInterface<class IOrionTeamActorInterface> K2Node_DynamicCast_AsOrion_Team_Actor_Interface;   // 0x00F8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_109[0x7];                                      // 0x0109(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAbilityTask_WaitGameplayEffectApplied_Target* CallFunc_WaitGameplayEffectAppliedToTarget_ReturnValue; // 0x0110(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EOrionTeam                                    CallFunc_GetTeamNum_ReturnValue;                   // 0x0118(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0119(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(GA_Gem_Duelist_C_ExecuteUbergraph_GA_Gem_Duelist) == 0x000008, "Wrong alignment on GA_Gem_Duelist_C_ExecuteUbergraph_GA_Gem_Duelist");
static_assert(sizeof(GA_Gem_Duelist_C_ExecuteUbergraph_GA_Gem_Duelist) == 0x000120, "Wrong size on GA_Gem_Duelist_C_ExecuteUbergraph_GA_Gem_Duelist");
static_assert(offsetof(GA_Gem_Duelist_C_ExecuteUbergraph_GA_Gem_Duelist, EntryPoint) == 0x000000, "Member 'GA_Gem_Duelist_C_ExecuteUbergraph_GA_Gem_Duelist::EntryPoint' has a wrong offset!");
static_assert(offsetof(GA_Gem_Duelist_C_ExecuteUbergraph_GA_Gem_Duelist, K2Node_MakeStruct_OrionAbilityTargetDataFilter) == 0x000008, "Member 'GA_Gem_Duelist_C_ExecuteUbergraph_GA_Gem_Duelist::K2Node_MakeStruct_OrionAbilityTargetDataFilter' has a wrong offset!");
static_assert(offsetof(GA_Gem_Duelist_C_ExecuteUbergraph_GA_Gem_Duelist, K2Node_CustomEvent_Target) == 0x000038, "Member 'GA_Gem_Duelist_C_ExecuteUbergraph_GA_Gem_Duelist::K2Node_CustomEvent_Target' has a wrong offset!");
static_assert(offsetof(GA_Gem_Duelist_C_ExecuteUbergraph_GA_Gem_Duelist, K2Node_CustomEvent_SpecHandle) == 0x000040, "Member 'GA_Gem_Duelist_C_ExecuteUbergraph_GA_Gem_Duelist::K2Node_CustomEvent_SpecHandle' has a wrong offset!");
static_assert(offsetof(GA_Gem_Duelist_C_ExecuteUbergraph_GA_Gem_Duelist, K2Node_CustomEvent_ActiveHandle) == 0x000058, "Member 'GA_Gem_Duelist_C_ExecuteUbergraph_GA_Gem_Duelist::K2Node_CustomEvent_ActiveHandle' has a wrong offset!");
static_assert(offsetof(GA_Gem_Duelist_C_ExecuteUbergraph_GA_Gem_Duelist, K2Node_CreateDelegate_OutputDelegate) == 0x000060, "Member 'GA_Gem_Duelist_C_ExecuteUbergraph_GA_Gem_Duelist::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(GA_Gem_Duelist_C_ExecuteUbergraph_GA_Gem_Duelist, Temp_struct_Variable) == 0x000070, "Member 'GA_Gem_Duelist_C_ExecuteUbergraph_GA_Gem_Duelist::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(GA_Gem_Duelist_C_ExecuteUbergraph_GA_Gem_Duelist, Temp_struct_Variable2) == 0x000078, "Member 'GA_Gem_Duelist_C_ExecuteUbergraph_GA_Gem_Duelist::Temp_struct_Variable2' has a wrong offset!");
static_assert(offsetof(GA_Gem_Duelist_C_ExecuteUbergraph_GA_Gem_Duelist, Temp_object_Variable) == 0x000090, "Member 'GA_Gem_Duelist_C_ExecuteUbergraph_GA_Gem_Duelist::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(GA_Gem_Duelist_C_ExecuteUbergraph_GA_Gem_Duelist, Temp_byte_Variable) == 0x000098, "Member 'GA_Gem_Duelist_C_ExecuteUbergraph_GA_Gem_Duelist::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(GA_Gem_Duelist_C_ExecuteUbergraph_GA_Gem_Duelist, CallFunc_AbilityTargetDataFromActor_ReturnValue) == 0x0000A0, "Member 'GA_Gem_Duelist_C_ExecuteUbergraph_GA_Gem_Duelist::CallFunc_AbilityTargetDataFromActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Gem_Duelist_C_ExecuteUbergraph_GA_Gem_Duelist, CallFunc_GetAbilityLevel_ReturnValue) == 0x0000C0, "Member 'GA_Gem_Duelist_C_ExecuteUbergraph_GA_Gem_Duelist::CallFunc_GetAbilityLevel_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Gem_Duelist_C_ExecuteUbergraph_GA_Gem_Duelist, CallFunc_GetAbilityLevel_ReturnValue2) == 0x0000C4, "Member 'GA_Gem_Duelist_C_ExecuteUbergraph_GA_Gem_Duelist::CallFunc_GetAbilityLevel_ReturnValue2' has a wrong offset!");
static_assert(offsetof(GA_Gem_Duelist_C_ExecuteUbergraph_GA_Gem_Duelist, CallFunc_BP_ApplyGameplayEffectToOwner_ReturnValue) == 0x0000C8, "Member 'GA_Gem_Duelist_C_ExecuteUbergraph_GA_Gem_Duelist::CallFunc_BP_ApplyGameplayEffectToOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Gem_Duelist_C_ExecuteUbergraph_GA_Gem_Duelist, CallFunc_BP_ApplyGameplayEffectToTarget_ReturnValue) == 0x0000D0, "Member 'GA_Gem_Duelist_C_ExecuteUbergraph_GA_Gem_Duelist::CallFunc_BP_ApplyGameplayEffectToTarget_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Gem_Duelist_C_ExecuteUbergraph_GA_Gem_Duelist, CallFunc_GetAvatarActorFromActorInfo_ReturnValue) == 0x0000E0, "Member 'GA_Gem_Duelist_C_ExecuteUbergraph_GA_Gem_Duelist::CallFunc_GetAvatarActorFromActorInfo_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Gem_Duelist_C_ExecuteUbergraph_GA_Gem_Duelist, CallFunc_MakeOrionFilterHandle_ReturnValue) == 0x0000E8, "Member 'GA_Gem_Duelist_C_ExecuteUbergraph_GA_Gem_Duelist::CallFunc_MakeOrionFilterHandle_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Gem_Duelist_C_ExecuteUbergraph_GA_Gem_Duelist, K2Node_DynamicCast_AsOrion_Team_Actor_Interface) == 0x0000F8, "Member 'GA_Gem_Duelist_C_ExecuteUbergraph_GA_Gem_Duelist::K2Node_DynamicCast_AsOrion_Team_Actor_Interface' has a wrong offset!");
static_assert(offsetof(GA_Gem_Duelist_C_ExecuteUbergraph_GA_Gem_Duelist, K2Node_DynamicCast_bSuccess) == 0x000108, "Member 'GA_Gem_Duelist_C_ExecuteUbergraph_GA_Gem_Duelist::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(GA_Gem_Duelist_C_ExecuteUbergraph_GA_Gem_Duelist, CallFunc_WaitGameplayEffectAppliedToTarget_ReturnValue) == 0x000110, "Member 'GA_Gem_Duelist_C_ExecuteUbergraph_GA_Gem_Duelist::CallFunc_WaitGameplayEffectAppliedToTarget_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Gem_Duelist_C_ExecuteUbergraph_GA_Gem_Duelist, CallFunc_GetTeamNum_ReturnValue) == 0x000118, "Member 'GA_Gem_Duelist_C_ExecuteUbergraph_GA_Gem_Duelist::CallFunc_GetTeamNum_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Gem_Duelist_C_ExecuteUbergraph_GA_Gem_Duelist, CallFunc_IsValid_ReturnValue) == 0x000119, "Member 'GA_Gem_Duelist_C_ExecuteUbergraph_GA_Gem_Duelist::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function GA_Gem_Duelist.GA_Gem_Duelist_C.OnApplied_3603326A49F0C4D5CC1FD2BA62BA1BA7
// 0x0028 (0x0028 - 0x0000)
struct GA_Gem_Duelist_C_OnApplied_3603326A49F0C4D5CC1FD2BA62BA1BA7 final
{
public:
	class AActor*                                 Target;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayEffectSpecHandle              SpecHandle;                                        // 0x0008(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
	struct FActiveGameplayEffectHandle            ActiveHandle;                                      // 0x0020(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_Gem_Duelist_C_OnApplied_3603326A49F0C4D5CC1FD2BA62BA1BA7) == 0x000008, "Wrong alignment on GA_Gem_Duelist_C_OnApplied_3603326A49F0C4D5CC1FD2BA62BA1BA7");
static_assert(sizeof(GA_Gem_Duelist_C_OnApplied_3603326A49F0C4D5CC1FD2BA62BA1BA7) == 0x000028, "Wrong size on GA_Gem_Duelist_C_OnApplied_3603326A49F0C4D5CC1FD2BA62BA1BA7");
static_assert(offsetof(GA_Gem_Duelist_C_OnApplied_3603326A49F0C4D5CC1FD2BA62BA1BA7, Target) == 0x000000, "Member 'GA_Gem_Duelist_C_OnApplied_3603326A49F0C4D5CC1FD2BA62BA1BA7::Target' has a wrong offset!");
static_assert(offsetof(GA_Gem_Duelist_C_OnApplied_3603326A49F0C4D5CC1FD2BA62BA1BA7, SpecHandle) == 0x000008, "Member 'GA_Gem_Duelist_C_OnApplied_3603326A49F0C4D5CC1FD2BA62BA1BA7::SpecHandle' has a wrong offset!");
static_assert(offsetof(GA_Gem_Duelist_C_OnApplied_3603326A49F0C4D5CC1FD2BA62BA1BA7, ActiveHandle) == 0x000020, "Member 'GA_Gem_Duelist_C_OnApplied_3603326A49F0C4D5CC1FD2BA62BA1BA7::ActiveHandle' has a wrong offset!");

}

