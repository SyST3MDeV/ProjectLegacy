#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_MinionSpawner_Lane

#include "Basic.hpp"

#include "E_MinionSpawner_Lane_WaveType_structs.hpp"


namespace SDK::Params
{

// Function BP_MinionSpawner_Lane.BP_MinionSpawner_Lane_C.ExecuteUbergraph_BP_MinionSpawner_Lane
// 0x0040 (0x0040 - 0x0000)
struct BP_MinionSpawner_Lane_C_ExecuteUbergraph_BP_MinionSpawner_Lane final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AOrionCharAI*                           K2Node_Event_SpawnedAI;                            // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UOrionAIFormation*                      K2Node_Event_NewFormation;                         // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_SentryTurret_C*                     K2Node_CustomEvent_Objective;                      // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class ABP_SentryTurret_C* Objective)> K2Node_CreateDelegate_OutputDelegate;              // 0x0028(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue2;                     // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_MinionSpawner_Lane_C_ExecuteUbergraph_BP_MinionSpawner_Lane) == 0x000008, "Wrong alignment on BP_MinionSpawner_Lane_C_ExecuteUbergraph_BP_MinionSpawner_Lane");
static_assert(sizeof(BP_MinionSpawner_Lane_C_ExecuteUbergraph_BP_MinionSpawner_Lane) == 0x000040, "Wrong size on BP_MinionSpawner_Lane_C_ExecuteUbergraph_BP_MinionSpawner_Lane");
static_assert(offsetof(BP_MinionSpawner_Lane_C_ExecuteUbergraph_BP_MinionSpawner_Lane, EntryPoint) == 0x000000, "Member 'BP_MinionSpawner_Lane_C_ExecuteUbergraph_BP_MinionSpawner_Lane::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_MinionSpawner_Lane_C_ExecuteUbergraph_BP_MinionSpawner_Lane, K2Node_Event_SpawnedAI) == 0x000008, "Member 'BP_MinionSpawner_Lane_C_ExecuteUbergraph_BP_MinionSpawner_Lane::K2Node_Event_SpawnedAI' has a wrong offset!");
static_assert(offsetof(BP_MinionSpawner_Lane_C_ExecuteUbergraph_BP_MinionSpawner_Lane, K2Node_Event_NewFormation) == 0x000010, "Member 'BP_MinionSpawner_Lane_C_ExecuteUbergraph_BP_MinionSpawner_Lane::K2Node_Event_NewFormation' has a wrong offset!");
static_assert(offsetof(BP_MinionSpawner_Lane_C_ExecuteUbergraph_BP_MinionSpawner_Lane, CallFunc_Array_Add_ReturnValue) == 0x000018, "Member 'BP_MinionSpawner_Lane_C_ExecuteUbergraph_BP_MinionSpawner_Lane::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MinionSpawner_Lane_C_ExecuteUbergraph_BP_MinionSpawner_Lane, CallFunc_IsValid_ReturnValue) == 0x00001C, "Member 'BP_MinionSpawner_Lane_C_ExecuteUbergraph_BP_MinionSpawner_Lane::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MinionSpawner_Lane_C_ExecuteUbergraph_BP_MinionSpawner_Lane, K2Node_CustomEvent_Objective) == 0x000020, "Member 'BP_MinionSpawner_Lane_C_ExecuteUbergraph_BP_MinionSpawner_Lane::K2Node_CustomEvent_Objective' has a wrong offset!");
static_assert(offsetof(BP_MinionSpawner_Lane_C_ExecuteUbergraph_BP_MinionSpawner_Lane, K2Node_CreateDelegate_OutputDelegate) == 0x000028, "Member 'BP_MinionSpawner_Lane_C_ExecuteUbergraph_BP_MinionSpawner_Lane::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_MinionSpawner_Lane_C_ExecuteUbergraph_BP_MinionSpawner_Lane, CallFunc_IsValid_ReturnValue2) == 0x000038, "Member 'BP_MinionSpawner_Lane_C_ExecuteUbergraph_BP_MinionSpawner_Lane::CallFunc_IsValid_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_MinionSpawner_Lane_C_ExecuteUbergraph_BP_MinionSpawner_Lane, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000039, "Member 'BP_MinionSpawner_Lane_C_ExecuteUbergraph_BP_MinionSpawner_Lane::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");

// Function BP_MinionSpawner_Lane.BP_MinionSpawner_Lane_C.SentryDestroyed_Bind
// 0x0008 (0x0008 - 0x0000)
struct BP_MinionSpawner_Lane_C_SentryDestroyed_Bind final
{
public:
	class ABP_SentryTurret_C*                     Objective;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MinionSpawner_Lane_C_SentryDestroyed_Bind) == 0x000008, "Wrong alignment on BP_MinionSpawner_Lane_C_SentryDestroyed_Bind");
static_assert(sizeof(BP_MinionSpawner_Lane_C_SentryDestroyed_Bind) == 0x000008, "Wrong size on BP_MinionSpawner_Lane_C_SentryDestroyed_Bind");
static_assert(offsetof(BP_MinionSpawner_Lane_C_SentryDestroyed_Bind, Objective) == 0x000000, "Member 'BP_MinionSpawner_Lane_C_SentryDestroyed_Bind::Objective' has a wrong offset!");

// Function BP_MinionSpawner_Lane.BP_MinionSpawner_Lane_C.OnAIFormationSpawned
// 0x0008 (0x0008 - 0x0000)
struct BP_MinionSpawner_Lane_C_OnAIFormationSpawned final
{
public:
	class UOrionAIFormation*                      NewFormation;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MinionSpawner_Lane_C_OnAIFormationSpawned) == 0x000008, "Wrong alignment on BP_MinionSpawner_Lane_C_OnAIFormationSpawned");
static_assert(sizeof(BP_MinionSpawner_Lane_C_OnAIFormationSpawned) == 0x000008, "Wrong size on BP_MinionSpawner_Lane_C_OnAIFormationSpawned");
static_assert(offsetof(BP_MinionSpawner_Lane_C_OnAIFormationSpawned, NewFormation) == 0x000000, "Member 'BP_MinionSpawner_Lane_C_OnAIFormationSpawned::NewFormation' has a wrong offset!");

// Function BP_MinionSpawner_Lane.BP_MinionSpawner_Lane_C.OnIntroSpawnForAI
// 0x0008 (0x0008 - 0x0000)
struct BP_MinionSpawner_Lane_C_OnIntroSpawnForAI final
{
public:
	class AOrionCharAI*                           SpawnedAI_0;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MinionSpawner_Lane_C_OnIntroSpawnForAI) == 0x000008, "Wrong alignment on BP_MinionSpawner_Lane_C_OnIntroSpawnForAI");
static_assert(sizeof(BP_MinionSpawner_Lane_C_OnIntroSpawnForAI) == 0x000008, "Wrong size on BP_MinionSpawner_Lane_C_OnIntroSpawnForAI");
static_assert(offsetof(BP_MinionSpawner_Lane_C_OnIntroSpawnForAI, SpawnedAI_0) == 0x000000, "Member 'BP_MinionSpawner_Lane_C_OnIntroSpawnForAI::SpawnedAI_0' has a wrong offset!");

// Function BP_MinionSpawner_Lane.BP_MinionSpawner_Lane_C.SetNextWaveFormation
// 0x0030 (0x0030 - 0x0000)
struct BP_MinionSpawner_Lane_C_SetNextWaveFormation final
{
public:
	E_MinionSpawner_Lane_WaveType                 Temp_byte_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_MinionSpawner_Lane_WaveType                 CallFunc_SelectWaveFormation_WaveType;             // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0x2];                                        // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_SelectWaveVariant_WaveVariant;            // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UOrionAIFormationData*>          K2Node_Select_Default;                             // 0x0008(0x0010)(ZeroConstructor, ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Clamp_ReturnValue;                        // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UOrionAIFormationData*                  CallFunc_Array_Get_Item;                           // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MinionSpawner_Lane_C_SetNextWaveFormation) == 0x000008, "Wrong alignment on BP_MinionSpawner_Lane_C_SetNextWaveFormation");
static_assert(sizeof(BP_MinionSpawner_Lane_C_SetNextWaveFormation) == 0x000030, "Wrong size on BP_MinionSpawner_Lane_C_SetNextWaveFormation");
static_assert(offsetof(BP_MinionSpawner_Lane_C_SetNextWaveFormation, Temp_byte_Variable) == 0x000000, "Member 'BP_MinionSpawner_Lane_C_SetNextWaveFormation::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_MinionSpawner_Lane_C_SetNextWaveFormation, CallFunc_SelectWaveFormation_WaveType) == 0x000001, "Member 'BP_MinionSpawner_Lane_C_SetNextWaveFormation::CallFunc_SelectWaveFormation_WaveType' has a wrong offset!");
static_assert(offsetof(BP_MinionSpawner_Lane_C_SetNextWaveFormation, CallFunc_SelectWaveVariant_WaveVariant) == 0x000004, "Member 'BP_MinionSpawner_Lane_C_SetNextWaveFormation::CallFunc_SelectWaveVariant_WaveVariant' has a wrong offset!");
static_assert(offsetof(BP_MinionSpawner_Lane_C_SetNextWaveFormation, K2Node_Select_Default) == 0x000008, "Member 'BP_MinionSpawner_Lane_C_SetNextWaveFormation::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_MinionSpawner_Lane_C_SetNextWaveFormation, CallFunc_Array_Length_ReturnValue) == 0x000018, "Member 'BP_MinionSpawner_Lane_C_SetNextWaveFormation::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MinionSpawner_Lane_C_SetNextWaveFormation, CallFunc_Clamp_ReturnValue) == 0x00001C, "Member 'BP_MinionSpawner_Lane_C_SetNextWaveFormation::CallFunc_Clamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MinionSpawner_Lane_C_SetNextWaveFormation, CallFunc_NotEqual_IntInt_ReturnValue) == 0x000020, "Member 'BP_MinionSpawner_Lane_C_SetNextWaveFormation::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MinionSpawner_Lane_C_SetNextWaveFormation, CallFunc_Array_Get_Item) == 0x000028, "Member 'BP_MinionSpawner_Lane_C_SetNextWaveFormation::CallFunc_Array_Get_Item' has a wrong offset!");

// Function BP_MinionSpawner_Lane.BP_MinionSpawner_Lane_C.WaveCounter
// 0x000C (0x000C - 0x0000)
struct BP_MinionSpawner_Lane_C_WaveCounter final
{
public:
	int32                                         CallFunc_Percent_IntInt_ReturnValue;               // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MinionSpawner_Lane_C_WaveCounter) == 0x000004, "Wrong alignment on BP_MinionSpawner_Lane_C_WaveCounter");
static_assert(sizeof(BP_MinionSpawner_Lane_C_WaveCounter) == 0x00000C, "Wrong size on BP_MinionSpawner_Lane_C_WaveCounter");
static_assert(offsetof(BP_MinionSpawner_Lane_C_WaveCounter, CallFunc_Percent_IntInt_ReturnValue) == 0x000000, "Member 'BP_MinionSpawner_Lane_C_WaveCounter::CallFunc_Percent_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MinionSpawner_Lane_C_WaveCounter, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000004, "Member 'BP_MinionSpawner_Lane_C_WaveCounter::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MinionSpawner_Lane_C_WaveCounter, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'BP_MinionSpawner_Lane_C_WaveCounter::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function BP_MinionSpawner_Lane.BP_MinionSpawner_Lane_C.SelectWaveFormation
// 0x0001 (0x0001 - 0x0000)
struct BP_MinionSpawner_Lane_C_SelectWaveFormation final
{
public:
	E_MinionSpawner_Lane_WaveType                 WaveType_0;                                        // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MinionSpawner_Lane_C_SelectWaveFormation) == 0x000001, "Wrong alignment on BP_MinionSpawner_Lane_C_SelectWaveFormation");
static_assert(sizeof(BP_MinionSpawner_Lane_C_SelectWaveFormation) == 0x000001, "Wrong size on BP_MinionSpawner_Lane_C_SelectWaveFormation");
static_assert(offsetof(BP_MinionSpawner_Lane_C_SelectWaveFormation, WaveType_0) == 0x000000, "Member 'BP_MinionSpawner_Lane_C_SelectWaveFormation::WaveType_0' has a wrong offset!");

// Function BP_MinionSpawner_Lane.BP_MinionSpawner_Lane_C.SelectWaveVariant
// 0x0020 (0x0020 - 0x0000)
struct BP_MinionSpawner_Lane_C_SelectWaveVariant final
{
public:
	int32                                         WaveVariant_0;                                     // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_IntToString_ReturnValue;             // 0x0008(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue2;         // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue3;         // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_MinionSpawner_Lane_C_SelectWaveVariant) == 0x000008, "Wrong alignment on BP_MinionSpawner_Lane_C_SelectWaveVariant");
static_assert(sizeof(BP_MinionSpawner_Lane_C_SelectWaveVariant) == 0x000020, "Wrong size on BP_MinionSpawner_Lane_C_SelectWaveVariant");
static_assert(offsetof(BP_MinionSpawner_Lane_C_SelectWaveVariant, WaveVariant_0) == 0x000000, "Member 'BP_MinionSpawner_Lane_C_SelectWaveVariant::WaveVariant_0' has a wrong offset!");
static_assert(offsetof(BP_MinionSpawner_Lane_C_SelectWaveVariant, CallFunc_Conv_IntToString_ReturnValue) == 0x000008, "Member 'BP_MinionSpawner_Lane_C_SelectWaveVariant::CallFunc_Conv_IntToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MinionSpawner_Lane_C_SelectWaveVariant, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000018, "Member 'BP_MinionSpawner_Lane_C_SelectWaveVariant::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MinionSpawner_Lane_C_SelectWaveVariant, CallFunc_GreaterEqual_IntInt_ReturnValue2) == 0x000019, "Member 'BP_MinionSpawner_Lane_C_SelectWaveVariant::CallFunc_GreaterEqual_IntInt_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_MinionSpawner_Lane_C_SelectWaveVariant, CallFunc_GreaterEqual_IntInt_ReturnValue3) == 0x00001A, "Member 'BP_MinionSpawner_Lane_C_SelectWaveVariant::CallFunc_GreaterEqual_IntInt_ReturnValue3' has a wrong offset!");

// Function BP_MinionSpawner_Lane.BP_MinionSpawner_Lane_C.InitializeWaveFormations
// 0x001C (0x001C - 0x0000)
struct BP_MinionSpawner_Lane_C_InitializeWaveFormations final
{
public:
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue2;                // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_IntInt_ReturnValue2;              // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A[0x2];                                        // 0x000A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue3;                // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue3;              // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue4;                // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue4;              // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_MinionSpawner_Lane_C_InitializeWaveFormations) == 0x000004, "Wrong alignment on BP_MinionSpawner_Lane_C_InitializeWaveFormations");
static_assert(sizeof(BP_MinionSpawner_Lane_C_InitializeWaveFormations) == 0x00001C, "Wrong size on BP_MinionSpawner_Lane_C_InitializeWaveFormations");
static_assert(offsetof(BP_MinionSpawner_Lane_C_InitializeWaveFormations, CallFunc_Array_Length_ReturnValue) == 0x000000, "Member 'BP_MinionSpawner_Lane_C_InitializeWaveFormations::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MinionSpawner_Lane_C_InitializeWaveFormations, CallFunc_Array_Length_ReturnValue2) == 0x000004, "Member 'BP_MinionSpawner_Lane_C_InitializeWaveFormations::CallFunc_Array_Length_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_MinionSpawner_Lane_C_InitializeWaveFormations, CallFunc_Greater_IntInt_ReturnValue) == 0x000008, "Member 'BP_MinionSpawner_Lane_C_InitializeWaveFormations::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MinionSpawner_Lane_C_InitializeWaveFormations, CallFunc_Greater_IntInt_ReturnValue2) == 0x000009, "Member 'BP_MinionSpawner_Lane_C_InitializeWaveFormations::CallFunc_Greater_IntInt_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_MinionSpawner_Lane_C_InitializeWaveFormations, CallFunc_Array_Length_ReturnValue3) == 0x00000C, "Member 'BP_MinionSpawner_Lane_C_InitializeWaveFormations::CallFunc_Array_Length_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_MinionSpawner_Lane_C_InitializeWaveFormations, CallFunc_Greater_IntInt_ReturnValue3) == 0x000010, "Member 'BP_MinionSpawner_Lane_C_InitializeWaveFormations::CallFunc_Greater_IntInt_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_MinionSpawner_Lane_C_InitializeWaveFormations, CallFunc_Array_Length_ReturnValue4) == 0x000014, "Member 'BP_MinionSpawner_Lane_C_InitializeWaveFormations::CallFunc_Array_Length_ReturnValue4' has a wrong offset!");
static_assert(offsetof(BP_MinionSpawner_Lane_C_InitializeWaveFormations, CallFunc_Greater_IntInt_ReturnValue4) == 0x000018, "Member 'BP_MinionSpawner_Lane_C_InitializeWaveFormations::CallFunc_Greater_IntInt_ReturnValue4' has a wrong offset!");

}

