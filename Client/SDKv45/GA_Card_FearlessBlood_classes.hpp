#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GA_Card_FearlessBlood

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "GameplayAbilities_structs.hpp"
#include "OrionGame_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass GA_Card_FearlessBlood.GA_Card_FearlessBlood_C
// 0x0070 (0x0BE0 - 0x0B70)
class UGA_Card_FearlessBlood_C final : public UOrionAbility
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0B70(0x0008)(Transient, DuplicateTransient)
	int32                                         StackCount;                                        // 0x0B78(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B7C[0x4];                                      // 0x0B7C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 GE_LoseHPGainPowerAS;                              // 0x0B80(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         HealthReductionPerStack;                           // 0x0B88(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B8C[0x4];                                      // 0x0B8C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FScalableFloat                         HealthValue;                                       // 0x0B90(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance)
	class UClass*                                 GE_Counter;                                        // 0x0BB8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayEffectSpecHandle              GameplayEffect;                                    // 0x0BC0(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)

public:
	void ExecuteUbergraph_GA_Card_FearlessBlood(int32 EntryPoint);
	void K2_ActivateAbility();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"GA_Card_FearlessBlood_C">();
	}
	static class UGA_Card_FearlessBlood_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGA_Card_FearlessBlood_C>();
	}
};
static_assert(alignof(UGA_Card_FearlessBlood_C) == 0x000010, "Wrong alignment on UGA_Card_FearlessBlood_C");
static_assert(sizeof(UGA_Card_FearlessBlood_C) == 0x000BE0, "Wrong size on UGA_Card_FearlessBlood_C");
static_assert(offsetof(UGA_Card_FearlessBlood_C, UberGraphFrame) == 0x000B70, "Member 'UGA_Card_FearlessBlood_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UGA_Card_FearlessBlood_C, StackCount) == 0x000B78, "Member 'UGA_Card_FearlessBlood_C::StackCount' has a wrong offset!");
static_assert(offsetof(UGA_Card_FearlessBlood_C, GE_LoseHPGainPowerAS) == 0x000B80, "Member 'UGA_Card_FearlessBlood_C::GE_LoseHPGainPowerAS' has a wrong offset!");
static_assert(offsetof(UGA_Card_FearlessBlood_C, HealthReductionPerStack) == 0x000B88, "Member 'UGA_Card_FearlessBlood_C::HealthReductionPerStack' has a wrong offset!");
static_assert(offsetof(UGA_Card_FearlessBlood_C, HealthValue) == 0x000B90, "Member 'UGA_Card_FearlessBlood_C::HealthValue' has a wrong offset!");
static_assert(offsetof(UGA_Card_FearlessBlood_C, GE_Counter) == 0x000BB8, "Member 'UGA_Card_FearlessBlood_C::GE_Counter' has a wrong offset!");
static_assert(offsetof(UGA_Card_FearlessBlood_C, GameplayEffect) == 0x000BC0, "Member 'UGA_Card_FearlessBlood_C::GameplayEffect' has a wrong offset!");

}

