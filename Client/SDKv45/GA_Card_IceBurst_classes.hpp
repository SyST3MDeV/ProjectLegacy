#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GA_Card_IceBurst

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "OrionGame_structs.hpp"
#include "OrionGame_classes.hpp"
#include "GameplayAbilities_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass GA_Card_IceBurst.GA_Card_IceBurst_C
// 0x0110 (0x0C80 - 0x0B70)
class UGA_Card_IceBurst_C final : public UOrionAbility
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0B70(0x0008)(Transient, DuplicateTransient)
	struct FOrionActorFilter                      SlowAndDamageFilter;                               // 0x0B78(0x0060)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FScalableFloat                         RadiusValue;                                       // 0x0BD8(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FDamageQualifierKeywordsWithContext    DamageQualifiers;                                  // 0x0C00(0x0078)(Edit, BlueprintVisible, DisableEditOnInstance)

public:
	void ExecuteUbergraph_GA_Card_IceBurst(int32 EntryPoint);
	void K2_ActivateAbility();
	void OnDamage_23DE6F254332FED4F83A22A3116EEC5E(class UAbilitySystemComponent* AuxillaryASC, const struct FQualifierContextDamage& DamageInfo, const struct FGameplayEffectSpecHandle& SpecHandle);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"GA_Card_IceBurst_C">();
	}
	static class UGA_Card_IceBurst_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGA_Card_IceBurst_C>();
	}
};
static_assert(alignof(UGA_Card_IceBurst_C) == 0x000010, "Wrong alignment on UGA_Card_IceBurst_C");
static_assert(sizeof(UGA_Card_IceBurst_C) == 0x000C80, "Wrong size on UGA_Card_IceBurst_C");
static_assert(offsetof(UGA_Card_IceBurst_C, UberGraphFrame) == 0x000B70, "Member 'UGA_Card_IceBurst_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UGA_Card_IceBurst_C, SlowAndDamageFilter) == 0x000B78, "Member 'UGA_Card_IceBurst_C::SlowAndDamageFilter' has a wrong offset!");
static_assert(offsetof(UGA_Card_IceBurst_C, RadiusValue) == 0x000BD8, "Member 'UGA_Card_IceBurst_C::RadiusValue' has a wrong offset!");
static_assert(offsetof(UGA_Card_IceBurst_C, DamageQualifiers) == 0x000C00, "Member 'UGA_Card_IceBurst_C::DamageQualifiers' has a wrong offset!");

}

