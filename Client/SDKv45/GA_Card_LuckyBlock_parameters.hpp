#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GA_Card_LuckyBlock

#include "Basic.hpp"

#include "GameplayAbilities_structs.hpp"
#include "OrionGame_structs.hpp"


namespace SDK::Params
{

// Function GA_Card_LuckyBlock.GA_Card_LuckyBlock_C.ExecuteUbergraph_GA_Card_LuckyBlock
// 0x01D0 (0x01D0 - 0x0000)
struct GA_Card_LuckyBlock_C_ExecuteUbergraph_GA_Card_LuckyBlock final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_CustomEvent_Source;                         // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayEffectSpecHandle              K2Node_CustomEvent_SpecHandle;                     // 0x0010(0x0018)()
	struct FActiveGameplayEffectHandle            K2Node_CustomEvent_ActiveHandle;                   // 0x0028(0x0008)(NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class AActor* Source, const struct FGameplayEffectSpecHandle& SpecHandle, const struct FActiveGameplayEffectHandle& ActiveHandle)> K2Node_CreateDelegate_OutputDelegate;              // 0x0030(0x0010)(ZeroConstructor, NoDestructor)
	struct FActiveGameplayEffectHandle            Temp_struct_Variable;                              // 0x0040(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FGameplayEffectSpecHandle              Temp_struct_Variable2;                             // 0x0048(0x0018)()
	class AActor*                                 Temp_object_Variable;                              // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_69[0x7];                                       // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate2;             // 0x0070(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate3;             // 0x0080(0x0010)(ZeroConstructor, NoDestructor)
	class UAbilityTask_StartAbilityState*         CallFunc_StartAbilityState_ReturnValue;            // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_CommitAbility_ReturnValue;             // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0099(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9A[0x6];                                       // 0x009A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayAbilityActorInfo              CallFunc_GetActorInfo_ReturnValue;                 // 0x00A0(0x0040)(ContainsInstancedReference)
	class AActor*                                 CallFunc_GetAvatarActorFromActorInfo_ReturnValue;  // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IOrionTeamActorInterface> K2Node_DynamicCast_AsOrion_Team_Actor_Interface;   // 0x00E8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_F9[0x7];                                       // 0x00F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FOrionAbilityTargetDataFilter          K2Node_MakeStruct_OrionAbilityTargetDataFilter;    // 0x0100(0x0030)()
	EOrionTeam                                    CallFunc_GetTeamNum_ReturnValue;                   // 0x0130(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EOrionTeam                                    Temp_byte_Variable;                                // 0x0131(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_132[0x6];                                      // 0x0132(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayAbilityActorInfo              CallFunc_GetActorInfo_ReturnValue2;                // 0x0138(0x0040)(ContainsInstancedReference)
	bool                                          CallFunc_RemoveActiveGameplayEffect_ReturnValue;   // 0x0178(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_179[0x7];                                      // 0x0179(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTargetDataFilterHandle        CallFunc_MakeOrionFilterHandle_ReturnValue;        // 0x0180(0x0010)()
	class UAbilityTask_WaitGameplayEffectApplied_Self* CallFunc_WaitGameplayEffectAppliedToSelf_ReturnValue; // 0x0190(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_RemoveActiveGameplayEffect_ReturnValue2;  // 0x0198(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue2;                     // 0x0199(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19A[0x6];                                      // 0x019A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetAvatarActorFromActorInfo_ReturnValue2; // 0x01A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetAbilityLevel_ReturnValue;              // 0x01A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1AC[0x4];                                      // 0x01AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IGameplayTagAssetInterface> K2Node_DynamicCast_AsGameplay_Tag_Asset_Interface; // 0x01B0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess2;                      // 0x01C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1C1[0x3];                                      // 0x01C1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FActiveGameplayEffectHandle            CallFunc_BP_ApplyGameplayEffectToOwner_ReturnValue; // 0x01C4(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasMatchingGameplayTag_ReturnValue;       // 0x01CC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(GA_Card_LuckyBlock_C_ExecuteUbergraph_GA_Card_LuckyBlock) == 0x000008, "Wrong alignment on GA_Card_LuckyBlock_C_ExecuteUbergraph_GA_Card_LuckyBlock");
static_assert(sizeof(GA_Card_LuckyBlock_C_ExecuteUbergraph_GA_Card_LuckyBlock) == 0x0001D0, "Wrong size on GA_Card_LuckyBlock_C_ExecuteUbergraph_GA_Card_LuckyBlock");
static_assert(offsetof(GA_Card_LuckyBlock_C_ExecuteUbergraph_GA_Card_LuckyBlock, EntryPoint) == 0x000000, "Member 'GA_Card_LuckyBlock_C_ExecuteUbergraph_GA_Card_LuckyBlock::EntryPoint' has a wrong offset!");
static_assert(offsetof(GA_Card_LuckyBlock_C_ExecuteUbergraph_GA_Card_LuckyBlock, K2Node_CustomEvent_Source) == 0x000008, "Member 'GA_Card_LuckyBlock_C_ExecuteUbergraph_GA_Card_LuckyBlock::K2Node_CustomEvent_Source' has a wrong offset!");
static_assert(offsetof(GA_Card_LuckyBlock_C_ExecuteUbergraph_GA_Card_LuckyBlock, K2Node_CustomEvent_SpecHandle) == 0x000010, "Member 'GA_Card_LuckyBlock_C_ExecuteUbergraph_GA_Card_LuckyBlock::K2Node_CustomEvent_SpecHandle' has a wrong offset!");
static_assert(offsetof(GA_Card_LuckyBlock_C_ExecuteUbergraph_GA_Card_LuckyBlock, K2Node_CustomEvent_ActiveHandle) == 0x000028, "Member 'GA_Card_LuckyBlock_C_ExecuteUbergraph_GA_Card_LuckyBlock::K2Node_CustomEvent_ActiveHandle' has a wrong offset!");
static_assert(offsetof(GA_Card_LuckyBlock_C_ExecuteUbergraph_GA_Card_LuckyBlock, K2Node_CreateDelegate_OutputDelegate) == 0x000030, "Member 'GA_Card_LuckyBlock_C_ExecuteUbergraph_GA_Card_LuckyBlock::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(GA_Card_LuckyBlock_C_ExecuteUbergraph_GA_Card_LuckyBlock, Temp_struct_Variable) == 0x000040, "Member 'GA_Card_LuckyBlock_C_ExecuteUbergraph_GA_Card_LuckyBlock::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(GA_Card_LuckyBlock_C_ExecuteUbergraph_GA_Card_LuckyBlock, Temp_struct_Variable2) == 0x000048, "Member 'GA_Card_LuckyBlock_C_ExecuteUbergraph_GA_Card_LuckyBlock::Temp_struct_Variable2' has a wrong offset!");
static_assert(offsetof(GA_Card_LuckyBlock_C_ExecuteUbergraph_GA_Card_LuckyBlock, Temp_object_Variable) == 0x000060, "Member 'GA_Card_LuckyBlock_C_ExecuteUbergraph_GA_Card_LuckyBlock::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(GA_Card_LuckyBlock_C_ExecuteUbergraph_GA_Card_LuckyBlock, Temp_bool_Variable) == 0x000068, "Member 'GA_Card_LuckyBlock_C_ExecuteUbergraph_GA_Card_LuckyBlock::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(GA_Card_LuckyBlock_C_ExecuteUbergraph_GA_Card_LuckyBlock, K2Node_CreateDelegate_OutputDelegate2) == 0x000070, "Member 'GA_Card_LuckyBlock_C_ExecuteUbergraph_GA_Card_LuckyBlock::K2Node_CreateDelegate_OutputDelegate2' has a wrong offset!");
static_assert(offsetof(GA_Card_LuckyBlock_C_ExecuteUbergraph_GA_Card_LuckyBlock, K2Node_CreateDelegate_OutputDelegate3) == 0x000080, "Member 'GA_Card_LuckyBlock_C_ExecuteUbergraph_GA_Card_LuckyBlock::K2Node_CreateDelegate_OutputDelegate3' has a wrong offset!");
static_assert(offsetof(GA_Card_LuckyBlock_C_ExecuteUbergraph_GA_Card_LuckyBlock, CallFunc_StartAbilityState_ReturnValue) == 0x000090, "Member 'GA_Card_LuckyBlock_C_ExecuteUbergraph_GA_Card_LuckyBlock::CallFunc_StartAbilityState_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Card_LuckyBlock_C_ExecuteUbergraph_GA_Card_LuckyBlock, CallFunc_K2_CommitAbility_ReturnValue) == 0x000098, "Member 'GA_Card_LuckyBlock_C_ExecuteUbergraph_GA_Card_LuckyBlock::CallFunc_K2_CommitAbility_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Card_LuckyBlock_C_ExecuteUbergraph_GA_Card_LuckyBlock, CallFunc_IsValid_ReturnValue) == 0x000099, "Member 'GA_Card_LuckyBlock_C_ExecuteUbergraph_GA_Card_LuckyBlock::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Card_LuckyBlock_C_ExecuteUbergraph_GA_Card_LuckyBlock, CallFunc_GetActorInfo_ReturnValue) == 0x0000A0, "Member 'GA_Card_LuckyBlock_C_ExecuteUbergraph_GA_Card_LuckyBlock::CallFunc_GetActorInfo_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Card_LuckyBlock_C_ExecuteUbergraph_GA_Card_LuckyBlock, CallFunc_GetAvatarActorFromActorInfo_ReturnValue) == 0x0000E0, "Member 'GA_Card_LuckyBlock_C_ExecuteUbergraph_GA_Card_LuckyBlock::CallFunc_GetAvatarActorFromActorInfo_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Card_LuckyBlock_C_ExecuteUbergraph_GA_Card_LuckyBlock, K2Node_DynamicCast_AsOrion_Team_Actor_Interface) == 0x0000E8, "Member 'GA_Card_LuckyBlock_C_ExecuteUbergraph_GA_Card_LuckyBlock::K2Node_DynamicCast_AsOrion_Team_Actor_Interface' has a wrong offset!");
static_assert(offsetof(GA_Card_LuckyBlock_C_ExecuteUbergraph_GA_Card_LuckyBlock, K2Node_DynamicCast_bSuccess) == 0x0000F8, "Member 'GA_Card_LuckyBlock_C_ExecuteUbergraph_GA_Card_LuckyBlock::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(GA_Card_LuckyBlock_C_ExecuteUbergraph_GA_Card_LuckyBlock, K2Node_MakeStruct_OrionAbilityTargetDataFilter) == 0x000100, "Member 'GA_Card_LuckyBlock_C_ExecuteUbergraph_GA_Card_LuckyBlock::K2Node_MakeStruct_OrionAbilityTargetDataFilter' has a wrong offset!");
static_assert(offsetof(GA_Card_LuckyBlock_C_ExecuteUbergraph_GA_Card_LuckyBlock, CallFunc_GetTeamNum_ReturnValue) == 0x000130, "Member 'GA_Card_LuckyBlock_C_ExecuteUbergraph_GA_Card_LuckyBlock::CallFunc_GetTeamNum_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Card_LuckyBlock_C_ExecuteUbergraph_GA_Card_LuckyBlock, Temp_byte_Variable) == 0x000131, "Member 'GA_Card_LuckyBlock_C_ExecuteUbergraph_GA_Card_LuckyBlock::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(GA_Card_LuckyBlock_C_ExecuteUbergraph_GA_Card_LuckyBlock, CallFunc_GetActorInfo_ReturnValue2) == 0x000138, "Member 'GA_Card_LuckyBlock_C_ExecuteUbergraph_GA_Card_LuckyBlock::CallFunc_GetActorInfo_ReturnValue2' has a wrong offset!");
static_assert(offsetof(GA_Card_LuckyBlock_C_ExecuteUbergraph_GA_Card_LuckyBlock, CallFunc_RemoveActiveGameplayEffect_ReturnValue) == 0x000178, "Member 'GA_Card_LuckyBlock_C_ExecuteUbergraph_GA_Card_LuckyBlock::CallFunc_RemoveActiveGameplayEffect_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Card_LuckyBlock_C_ExecuteUbergraph_GA_Card_LuckyBlock, CallFunc_MakeOrionFilterHandle_ReturnValue) == 0x000180, "Member 'GA_Card_LuckyBlock_C_ExecuteUbergraph_GA_Card_LuckyBlock::CallFunc_MakeOrionFilterHandle_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Card_LuckyBlock_C_ExecuteUbergraph_GA_Card_LuckyBlock, CallFunc_WaitGameplayEffectAppliedToSelf_ReturnValue) == 0x000190, "Member 'GA_Card_LuckyBlock_C_ExecuteUbergraph_GA_Card_LuckyBlock::CallFunc_WaitGameplayEffectAppliedToSelf_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Card_LuckyBlock_C_ExecuteUbergraph_GA_Card_LuckyBlock, CallFunc_RemoveActiveGameplayEffect_ReturnValue2) == 0x000198, "Member 'GA_Card_LuckyBlock_C_ExecuteUbergraph_GA_Card_LuckyBlock::CallFunc_RemoveActiveGameplayEffect_ReturnValue2' has a wrong offset!");
static_assert(offsetof(GA_Card_LuckyBlock_C_ExecuteUbergraph_GA_Card_LuckyBlock, CallFunc_IsValid_ReturnValue2) == 0x000199, "Member 'GA_Card_LuckyBlock_C_ExecuteUbergraph_GA_Card_LuckyBlock::CallFunc_IsValid_ReturnValue2' has a wrong offset!");
static_assert(offsetof(GA_Card_LuckyBlock_C_ExecuteUbergraph_GA_Card_LuckyBlock, CallFunc_GetAvatarActorFromActorInfo_ReturnValue2) == 0x0001A0, "Member 'GA_Card_LuckyBlock_C_ExecuteUbergraph_GA_Card_LuckyBlock::CallFunc_GetAvatarActorFromActorInfo_ReturnValue2' has a wrong offset!");
static_assert(offsetof(GA_Card_LuckyBlock_C_ExecuteUbergraph_GA_Card_LuckyBlock, CallFunc_GetAbilityLevel_ReturnValue) == 0x0001A8, "Member 'GA_Card_LuckyBlock_C_ExecuteUbergraph_GA_Card_LuckyBlock::CallFunc_GetAbilityLevel_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Card_LuckyBlock_C_ExecuteUbergraph_GA_Card_LuckyBlock, K2Node_DynamicCast_AsGameplay_Tag_Asset_Interface) == 0x0001B0, "Member 'GA_Card_LuckyBlock_C_ExecuteUbergraph_GA_Card_LuckyBlock::K2Node_DynamicCast_AsGameplay_Tag_Asset_Interface' has a wrong offset!");
static_assert(offsetof(GA_Card_LuckyBlock_C_ExecuteUbergraph_GA_Card_LuckyBlock, K2Node_DynamicCast_bSuccess2) == 0x0001C0, "Member 'GA_Card_LuckyBlock_C_ExecuteUbergraph_GA_Card_LuckyBlock::K2Node_DynamicCast_bSuccess2' has a wrong offset!");
static_assert(offsetof(GA_Card_LuckyBlock_C_ExecuteUbergraph_GA_Card_LuckyBlock, CallFunc_BP_ApplyGameplayEffectToOwner_ReturnValue) == 0x0001C4, "Member 'GA_Card_LuckyBlock_C_ExecuteUbergraph_GA_Card_LuckyBlock::CallFunc_BP_ApplyGameplayEffectToOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Card_LuckyBlock_C_ExecuteUbergraph_GA_Card_LuckyBlock, CallFunc_HasMatchingGameplayTag_ReturnValue) == 0x0001CC, "Member 'GA_Card_LuckyBlock_C_ExecuteUbergraph_GA_Card_LuckyBlock::CallFunc_HasMatchingGameplayTag_ReturnValue' has a wrong offset!");

// Function GA_Card_LuckyBlock.GA_Card_LuckyBlock_C.OnApplied_3051101549EE0139759693A5309AFB63
// 0x0028 (0x0028 - 0x0000)
struct GA_Card_LuckyBlock_C_OnApplied_3051101549EE0139759693A5309AFB63 final
{
public:
	class AActor*                                 Source;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayEffectSpecHandle              SpecHandle;                                        // 0x0008(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
	struct FActiveGameplayEffectHandle            ActiveHandle;                                      // 0x0020(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_Card_LuckyBlock_C_OnApplied_3051101549EE0139759693A5309AFB63) == 0x000008, "Wrong alignment on GA_Card_LuckyBlock_C_OnApplied_3051101549EE0139759693A5309AFB63");
static_assert(sizeof(GA_Card_LuckyBlock_C_OnApplied_3051101549EE0139759693A5309AFB63) == 0x000028, "Wrong size on GA_Card_LuckyBlock_C_OnApplied_3051101549EE0139759693A5309AFB63");
static_assert(offsetof(GA_Card_LuckyBlock_C_OnApplied_3051101549EE0139759693A5309AFB63, Source) == 0x000000, "Member 'GA_Card_LuckyBlock_C_OnApplied_3051101549EE0139759693A5309AFB63::Source' has a wrong offset!");
static_assert(offsetof(GA_Card_LuckyBlock_C_OnApplied_3051101549EE0139759693A5309AFB63, SpecHandle) == 0x000008, "Member 'GA_Card_LuckyBlock_C_OnApplied_3051101549EE0139759693A5309AFB63::SpecHandle' has a wrong offset!");
static_assert(offsetof(GA_Card_LuckyBlock_C_OnApplied_3051101549EE0139759693A5309AFB63, ActiveHandle) == 0x000020, "Member 'GA_Card_LuckyBlock_C_OnApplied_3051101549EE0139759693A5309AFB63::ActiveHandle' has a wrong offset!");

}

