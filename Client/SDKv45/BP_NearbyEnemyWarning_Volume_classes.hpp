#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_NearbyEnemyWarning_Volume

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "OrionGame_structs.hpp"
#include "OrionGame_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_NearbyEnemyWarning_Volume.BP_NearbyEnemyWarning_Volume_C
// 0x0030 (0x0520 - 0x04F0)
class ABP_NearbyEnemyWarning_Volume_C final : public AOrionGameplayVolume
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x04F0(0x0008)(Transient, DuplicateTransient)
	class USphereComponent*                       Sphere;                                            // 0x04F8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UOrionGameplayVolumeComponent*          OrionGameplayVolume;                               // 0x0500(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x0508(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	bool                                          OverlappedSomeone;                                 // 0x0510(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          CanPing;                                           // 0x0511(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_512[0x2];                                      // 0x0512(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         PingCooldown;                                      // 0x0514(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           Timer;                                             // 0x0518(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor)

public:
	void ExecuteUbergraph_BP_NearbyEnemyWarning_Volume(int32 EntryPoint);
	void PingTimer();
	void ReceiveActorBeginOverlap(class AActor* OtherActor);
	void ReceiveBeginPlay();
	void ScanArea();
	void UserConstructionScript();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_NearbyEnemyWarning_Volume_C">();
	}
	static class ABP_NearbyEnemyWarning_Volume_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_NearbyEnemyWarning_Volume_C>();
	}
};
static_assert(alignof(ABP_NearbyEnemyWarning_Volume_C) == 0x000008, "Wrong alignment on ABP_NearbyEnemyWarning_Volume_C");
static_assert(sizeof(ABP_NearbyEnemyWarning_Volume_C) == 0x000520, "Wrong size on ABP_NearbyEnemyWarning_Volume_C");
static_assert(offsetof(ABP_NearbyEnemyWarning_Volume_C, UberGraphFrame) == 0x0004F0, "Member 'ABP_NearbyEnemyWarning_Volume_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_NearbyEnemyWarning_Volume_C, Sphere) == 0x0004F8, "Member 'ABP_NearbyEnemyWarning_Volume_C::Sphere' has a wrong offset!");
static_assert(offsetof(ABP_NearbyEnemyWarning_Volume_C, OrionGameplayVolume) == 0x000500, "Member 'ABP_NearbyEnemyWarning_Volume_C::OrionGameplayVolume' has a wrong offset!");
static_assert(offsetof(ABP_NearbyEnemyWarning_Volume_C, DefaultSceneRoot) == 0x000508, "Member 'ABP_NearbyEnemyWarning_Volume_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(ABP_NearbyEnemyWarning_Volume_C, OverlappedSomeone) == 0x000510, "Member 'ABP_NearbyEnemyWarning_Volume_C::OverlappedSomeone' has a wrong offset!");
static_assert(offsetof(ABP_NearbyEnemyWarning_Volume_C, CanPing) == 0x000511, "Member 'ABP_NearbyEnemyWarning_Volume_C::CanPing' has a wrong offset!");
static_assert(offsetof(ABP_NearbyEnemyWarning_Volume_C, PingCooldown) == 0x000514, "Member 'ABP_NearbyEnemyWarning_Volume_C::PingCooldown' has a wrong offset!");
static_assert(offsetof(ABP_NearbyEnemyWarning_Volume_C, Timer) == 0x000518, "Member 'ABP_NearbyEnemyWarning_Volume_C::Timer' has a wrong offset!");

}

