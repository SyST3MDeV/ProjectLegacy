#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: HeroTooltipStat

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function HeroTooltipStat.HeroTooltipStat_C.ExecuteUbergraph_HeroTooltipStat
// 0x003C (0x003C - 0x0000)
struct HeroTooltipStat_C_ExecuteUbergraph_HeroTooltipStat final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           Temp_struct_Variable;                              // 0x0008(0x0010)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable2;                             // 0x0018(0x0010)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bEmphasize;                           // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           K2Node_Select_Default;                             // 0x002C(0x0010)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(HeroTooltipStat_C_ExecuteUbergraph_HeroTooltipStat) == 0x000004, "Wrong alignment on HeroTooltipStat_C_ExecuteUbergraph_HeroTooltipStat");
static_assert(sizeof(HeroTooltipStat_C_ExecuteUbergraph_HeroTooltipStat) == 0x00003C, "Wrong size on HeroTooltipStat_C_ExecuteUbergraph_HeroTooltipStat");
static_assert(offsetof(HeroTooltipStat_C_ExecuteUbergraph_HeroTooltipStat, EntryPoint) == 0x000000, "Member 'HeroTooltipStat_C_ExecuteUbergraph_HeroTooltipStat::EntryPoint' has a wrong offset!");
static_assert(offsetof(HeroTooltipStat_C_ExecuteUbergraph_HeroTooltipStat, Temp_bool_Variable) == 0x000004, "Member 'HeroTooltipStat_C_ExecuteUbergraph_HeroTooltipStat::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(HeroTooltipStat_C_ExecuteUbergraph_HeroTooltipStat, Temp_struct_Variable) == 0x000008, "Member 'HeroTooltipStat_C_ExecuteUbergraph_HeroTooltipStat::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(HeroTooltipStat_C_ExecuteUbergraph_HeroTooltipStat, Temp_struct_Variable2) == 0x000018, "Member 'HeroTooltipStat_C_ExecuteUbergraph_HeroTooltipStat::Temp_struct_Variable2' has a wrong offset!");
static_assert(offsetof(HeroTooltipStat_C_ExecuteUbergraph_HeroTooltipStat, K2Node_Event_bEmphasize) == 0x000028, "Member 'HeroTooltipStat_C_ExecuteUbergraph_HeroTooltipStat::K2Node_Event_bEmphasize' has a wrong offset!");
static_assert(offsetof(HeroTooltipStat_C_ExecuteUbergraph_HeroTooltipStat, K2Node_Select_Default) == 0x00002C, "Member 'HeroTooltipStat_C_ExecuteUbergraph_HeroTooltipStat::K2Node_Select_Default' has a wrong offset!");

// Function HeroTooltipStat.HeroTooltipStat_C.OnStatEmphasized
// 0x0001 (0x0001 - 0x0000)
struct HeroTooltipStat_C_OnStatEmphasized final
{
public:
	bool                                          bEmphasize;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(HeroTooltipStat_C_OnStatEmphasized) == 0x000001, "Wrong alignment on HeroTooltipStat_C_OnStatEmphasized");
static_assert(sizeof(HeroTooltipStat_C_OnStatEmphasized) == 0x000001, "Wrong size on HeroTooltipStat_C_OnStatEmphasized");
static_assert(offsetof(HeroTooltipStat_C_OnStatEmphasized, bEmphasize) == 0x000000, "Member 'HeroTooltipStat_C_OnStatEmphasized::bEmphasize' has a wrong offset!");

}

