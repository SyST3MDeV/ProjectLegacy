#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_PrimeHelix_v2

#include "Basic.hpp"


namespace SDK::Params
{

// Function BP_PrimeHelix_v2.BP_PrimeHelix_v2_C.ExecuteUbergraph_BP_PrimeHelix_v2
// 0x0058 (0x0058 - 0x0000)
struct BP_PrimeHelix_v2_C_ExecuteUbergraph_BP_PrimeHelix_v2 final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AOrionChar*                             K2Node_Event_Pawn;                                 // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AGameModeBase*                          CallFunc_GetGameMode_ReturnValue;                  // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AGameModeBase*                          CallFunc_GetGameMode_ReturnValue2;                 // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_GMM_BaseMOBA_C*                     K2Node_DynamicCast_AsBP_GMM_Base_MOBA;             // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_GMM_BaseMOBA_C*                     K2Node_DynamicCast_AsBP_GMM_Base_MOBA2;            // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess2;                      // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameModeBase*                          CallFunc_GetGameMode_ReturnValue3;                 // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_GMM_BaseMOBA_C*                     K2Node_DynamicCast_AsBP_GMM_Base_MOBA3;            // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess3;                      // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PrimeHelix_v2_C_ExecuteUbergraph_BP_PrimeHelix_v2) == 0x000008, "Wrong alignment on BP_PrimeHelix_v2_C_ExecuteUbergraph_BP_PrimeHelix_v2");
static_assert(sizeof(BP_PrimeHelix_v2_C_ExecuteUbergraph_BP_PrimeHelix_v2) == 0x000058, "Wrong size on BP_PrimeHelix_v2_C_ExecuteUbergraph_BP_PrimeHelix_v2");
static_assert(offsetof(BP_PrimeHelix_v2_C_ExecuteUbergraph_BP_PrimeHelix_v2, EntryPoint) == 0x000000, "Member 'BP_PrimeHelix_v2_C_ExecuteUbergraph_BP_PrimeHelix_v2::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_PrimeHelix_v2_C_ExecuteUbergraph_BP_PrimeHelix_v2, K2Node_Event_Pawn) == 0x000008, "Member 'BP_PrimeHelix_v2_C_ExecuteUbergraph_BP_PrimeHelix_v2::K2Node_Event_Pawn' has a wrong offset!");
static_assert(offsetof(BP_PrimeHelix_v2_C_ExecuteUbergraph_BP_PrimeHelix_v2, CallFunc_GetGameMode_ReturnValue) == 0x000010, "Member 'BP_PrimeHelix_v2_C_ExecuteUbergraph_BP_PrimeHelix_v2::CallFunc_GetGameMode_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PrimeHelix_v2_C_ExecuteUbergraph_BP_PrimeHelix_v2, CallFunc_GetGameMode_ReturnValue2) == 0x000018, "Member 'BP_PrimeHelix_v2_C_ExecuteUbergraph_BP_PrimeHelix_v2::CallFunc_GetGameMode_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_PrimeHelix_v2_C_ExecuteUbergraph_BP_PrimeHelix_v2, K2Node_DynamicCast_AsBP_GMM_Base_MOBA) == 0x000020, "Member 'BP_PrimeHelix_v2_C_ExecuteUbergraph_BP_PrimeHelix_v2::K2Node_DynamicCast_AsBP_GMM_Base_MOBA' has a wrong offset!");
static_assert(offsetof(BP_PrimeHelix_v2_C_ExecuteUbergraph_BP_PrimeHelix_v2, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'BP_PrimeHelix_v2_C_ExecuteUbergraph_BP_PrimeHelix_v2::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_PrimeHelix_v2_C_ExecuteUbergraph_BP_PrimeHelix_v2, K2Node_DynamicCast_AsBP_GMM_Base_MOBA2) == 0x000030, "Member 'BP_PrimeHelix_v2_C_ExecuteUbergraph_BP_PrimeHelix_v2::K2Node_DynamicCast_AsBP_GMM_Base_MOBA2' has a wrong offset!");
static_assert(offsetof(BP_PrimeHelix_v2_C_ExecuteUbergraph_BP_PrimeHelix_v2, K2Node_DynamicCast_bSuccess2) == 0x000038, "Member 'BP_PrimeHelix_v2_C_ExecuteUbergraph_BP_PrimeHelix_v2::K2Node_DynamicCast_bSuccess2' has a wrong offset!");
static_assert(offsetof(BP_PrimeHelix_v2_C_ExecuteUbergraph_BP_PrimeHelix_v2, CallFunc_GetGameMode_ReturnValue3) == 0x000040, "Member 'BP_PrimeHelix_v2_C_ExecuteUbergraph_BP_PrimeHelix_v2::CallFunc_GetGameMode_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_PrimeHelix_v2_C_ExecuteUbergraph_BP_PrimeHelix_v2, K2Node_DynamicCast_AsBP_GMM_Base_MOBA3) == 0x000048, "Member 'BP_PrimeHelix_v2_C_ExecuteUbergraph_BP_PrimeHelix_v2::K2Node_DynamicCast_AsBP_GMM_Base_MOBA3' has a wrong offset!");
static_assert(offsetof(BP_PrimeHelix_v2_C_ExecuteUbergraph_BP_PrimeHelix_v2, K2Node_DynamicCast_bSuccess3) == 0x000050, "Member 'BP_PrimeHelix_v2_C_ExecuteUbergraph_BP_PrimeHelix_v2::K2Node_DynamicCast_bSuccess3' has a wrong offset!");

// Function BP_PrimeHelix_v2.BP_PrimeHelix_v2_C.OnPickedUp
// 0x0008 (0x0008 - 0x0000)
struct BP_PrimeHelix_v2_C_OnPickedUp final
{
public:
	class AOrionChar*                             Pawn;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PrimeHelix_v2_C_OnPickedUp) == 0x000008, "Wrong alignment on BP_PrimeHelix_v2_C_OnPickedUp");
static_assert(sizeof(BP_PrimeHelix_v2_C_OnPickedUp) == 0x000008, "Wrong size on BP_PrimeHelix_v2_C_OnPickedUp");
static_assert(offsetof(BP_PrimeHelix_v2_C_OnPickedUp, Pawn) == 0x000000, "Member 'BP_PrimeHelix_v2_C_OnPickedUp::Pawn' has a wrong offset!");

}

