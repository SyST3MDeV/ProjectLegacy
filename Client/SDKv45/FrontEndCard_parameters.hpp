#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: FrontEndCard

#include "Basic.hpp"

#include "SlateCore_structs.hpp"


namespace SDK::Params
{

// Function FrontEndCard.FrontEndCard_C.ExecuteUbergraph_FrontEndCard
// 0x0148 (0x0148 - 0x0000)
struct FrontEndCard_C_ExecuteUbergraph_FrontEndCard final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPointerEvent                          K2Node_Event_MouseEvent;                           // 0x0008(0x0070)()
	float                                         CallFunc_PauseAnimation_ReturnValue;               // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_FloatFloat_ReturnValue;        // 0x007C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsAnimationPlaying_ReturnValue;           // 0x007D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7E[0x2];                                       // 0x007E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetEndTime_ReturnValue;                   // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetStartTime_ReturnValue;                 // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_PauseAnimation_ReturnValue2;              // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SelectFloat_ReturnValue;                  // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetSelected_ReturnValue;                  // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_99[0x3];                                       // 0x0099(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGeometry                              K2Node_Event_MyGeometry;                           // 0x009C(0x0038)(IsPlainOldData, NoDestructor)
	uint8                                         Pad_D4[0x4];                                       // 0x00D4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPointerEvent                          K2Node_Event_MouseEvent2;                          // 0x00D8(0x0070)()
};
static_assert(alignof(FrontEndCard_C_ExecuteUbergraph_FrontEndCard) == 0x000008, "Wrong alignment on FrontEndCard_C_ExecuteUbergraph_FrontEndCard");
static_assert(sizeof(FrontEndCard_C_ExecuteUbergraph_FrontEndCard) == 0x000148, "Wrong size on FrontEndCard_C_ExecuteUbergraph_FrontEndCard");
static_assert(offsetof(FrontEndCard_C_ExecuteUbergraph_FrontEndCard, EntryPoint) == 0x000000, "Member 'FrontEndCard_C_ExecuteUbergraph_FrontEndCard::EntryPoint' has a wrong offset!");
static_assert(offsetof(FrontEndCard_C_ExecuteUbergraph_FrontEndCard, K2Node_Event_MouseEvent) == 0x000008, "Member 'FrontEndCard_C_ExecuteUbergraph_FrontEndCard::K2Node_Event_MouseEvent' has a wrong offset!");
static_assert(offsetof(FrontEndCard_C_ExecuteUbergraph_FrontEndCard, CallFunc_PauseAnimation_ReturnValue) == 0x000078, "Member 'FrontEndCard_C_ExecuteUbergraph_FrontEndCard::CallFunc_PauseAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(FrontEndCard_C_ExecuteUbergraph_FrontEndCard, CallFunc_EqualEqual_FloatFloat_ReturnValue) == 0x00007C, "Member 'FrontEndCard_C_ExecuteUbergraph_FrontEndCard::CallFunc_EqualEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(FrontEndCard_C_ExecuteUbergraph_FrontEndCard, CallFunc_IsAnimationPlaying_ReturnValue) == 0x00007D, "Member 'FrontEndCard_C_ExecuteUbergraph_FrontEndCard::CallFunc_IsAnimationPlaying_ReturnValue' has a wrong offset!");
static_assert(offsetof(FrontEndCard_C_ExecuteUbergraph_FrontEndCard, CallFunc_GetEndTime_ReturnValue) == 0x000080, "Member 'FrontEndCard_C_ExecuteUbergraph_FrontEndCard::CallFunc_GetEndTime_ReturnValue' has a wrong offset!");
static_assert(offsetof(FrontEndCard_C_ExecuteUbergraph_FrontEndCard, CallFunc_GetStartTime_ReturnValue) == 0x000084, "Member 'FrontEndCard_C_ExecuteUbergraph_FrontEndCard::CallFunc_GetStartTime_ReturnValue' has a wrong offset!");
static_assert(offsetof(FrontEndCard_C_ExecuteUbergraph_FrontEndCard, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000088, "Member 'FrontEndCard_C_ExecuteUbergraph_FrontEndCard::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(FrontEndCard_C_ExecuteUbergraph_FrontEndCard, CallFunc_PauseAnimation_ReturnValue2) == 0x00008C, "Member 'FrontEndCard_C_ExecuteUbergraph_FrontEndCard::CallFunc_PauseAnimation_ReturnValue2' has a wrong offset!");
static_assert(offsetof(FrontEndCard_C_ExecuteUbergraph_FrontEndCard, CallFunc_SelectFloat_ReturnValue) == 0x000090, "Member 'FrontEndCard_C_ExecuteUbergraph_FrontEndCard::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(FrontEndCard_C_ExecuteUbergraph_FrontEndCard, CallFunc_Add_FloatFloat_ReturnValue) == 0x000094, "Member 'FrontEndCard_C_ExecuteUbergraph_FrontEndCard::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(FrontEndCard_C_ExecuteUbergraph_FrontEndCard, CallFunc_GetSelected_ReturnValue) == 0x000098, "Member 'FrontEndCard_C_ExecuteUbergraph_FrontEndCard::CallFunc_GetSelected_ReturnValue' has a wrong offset!");
static_assert(offsetof(FrontEndCard_C_ExecuteUbergraph_FrontEndCard, K2Node_Event_MyGeometry) == 0x00009C, "Member 'FrontEndCard_C_ExecuteUbergraph_FrontEndCard::K2Node_Event_MyGeometry' has a wrong offset!");
static_assert(offsetof(FrontEndCard_C_ExecuteUbergraph_FrontEndCard, K2Node_Event_MouseEvent2) == 0x0000D8, "Member 'FrontEndCard_C_ExecuteUbergraph_FrontEndCard::K2Node_Event_MouseEvent2' has a wrong offset!");

// Function FrontEndCard.FrontEndCard_C.OnMouseEnter
// 0x00A8 (0x00A8 - 0x0000)
struct FrontEndCard_C_OnMouseEnter final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FPointerEvent                          MouseEvent;                                        // 0x0038(0x0070)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(FrontEndCard_C_OnMouseEnter) == 0x000008, "Wrong alignment on FrontEndCard_C_OnMouseEnter");
static_assert(sizeof(FrontEndCard_C_OnMouseEnter) == 0x0000A8, "Wrong size on FrontEndCard_C_OnMouseEnter");
static_assert(offsetof(FrontEndCard_C_OnMouseEnter, MyGeometry) == 0x000000, "Member 'FrontEndCard_C_OnMouseEnter::MyGeometry' has a wrong offset!");
static_assert(offsetof(FrontEndCard_C_OnMouseEnter, MouseEvent) == 0x000038, "Member 'FrontEndCard_C_OnMouseEnter::MouseEvent' has a wrong offset!");

// Function FrontEndCard.FrontEndCard_C.OnMouseLeave
// 0x0070 (0x0070 - 0x0000)
struct FrontEndCard_C_OnMouseLeave final
{
public:
	struct FPointerEvent                          MouseEvent;                                        // 0x0000(0x0070)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(FrontEndCard_C_OnMouseLeave) == 0x000008, "Wrong alignment on FrontEndCard_C_OnMouseLeave");
static_assert(sizeof(FrontEndCard_C_OnMouseLeave) == 0x000070, "Wrong size on FrontEndCard_C_OnMouseLeave");
static_assert(offsetof(FrontEndCard_C_OnMouseLeave, MouseEvent) == 0x000000, "Member 'FrontEndCard_C_OnMouseLeave::MouseEvent' has a wrong offset!");

}

