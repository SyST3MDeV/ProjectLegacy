#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: HeroTooltip

#include "Basic.hpp"

#include "OrionUI_structs.hpp"
#include "UMG_structs.hpp"


namespace SDK::Params
{

// Function HeroTooltip.HeroTooltip_C.ExecuteUbergraph_HeroTooltip
// 0x001C (0x001C - 0x0000)
struct HeroTooltip_C_ExecuteUbergraph_HeroTooltip final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable2;                                // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable3;                                // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EOrionHeroTooltipStatus                       Temp_byte_Variable;                                // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable2;                               // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable3;                               // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable4;                               // 0x0013(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EOrionHeroRankTier                            K2Node_Event_RankTier;                             // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EOrionHeroTooltipStatus                       K2Node_Event_status;                               // 0x0015(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0016(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EOrionHeroTooltipStatus                       Temp_byte_Variable5;                               // 0x0017(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Select2_Default;                            // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(HeroTooltip_C_ExecuteUbergraph_HeroTooltip) == 0x000004, "Wrong alignment on HeroTooltip_C_ExecuteUbergraph_HeroTooltip");
static_assert(sizeof(HeroTooltip_C_ExecuteUbergraph_HeroTooltip) == 0x00001C, "Wrong size on HeroTooltip_C_ExecuteUbergraph_HeroTooltip");
static_assert(offsetof(HeroTooltip_C_ExecuteUbergraph_HeroTooltip, EntryPoint) == 0x000000, "Member 'HeroTooltip_C_ExecuteUbergraph_HeroTooltip::EntryPoint' has a wrong offset!");
static_assert(offsetof(HeroTooltip_C_ExecuteUbergraph_HeroTooltip, Temp_int_Variable) == 0x000004, "Member 'HeroTooltip_C_ExecuteUbergraph_HeroTooltip::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(HeroTooltip_C_ExecuteUbergraph_HeroTooltip, Temp_int_Variable2) == 0x000008, "Member 'HeroTooltip_C_ExecuteUbergraph_HeroTooltip::Temp_int_Variable2' has a wrong offset!");
static_assert(offsetof(HeroTooltip_C_ExecuteUbergraph_HeroTooltip, Temp_int_Variable3) == 0x00000C, "Member 'HeroTooltip_C_ExecuteUbergraph_HeroTooltip::Temp_int_Variable3' has a wrong offset!");
static_assert(offsetof(HeroTooltip_C_ExecuteUbergraph_HeroTooltip, Temp_byte_Variable) == 0x000010, "Member 'HeroTooltip_C_ExecuteUbergraph_HeroTooltip::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(HeroTooltip_C_ExecuteUbergraph_HeroTooltip, Temp_byte_Variable2) == 0x000011, "Member 'HeroTooltip_C_ExecuteUbergraph_HeroTooltip::Temp_byte_Variable2' has a wrong offset!");
static_assert(offsetof(HeroTooltip_C_ExecuteUbergraph_HeroTooltip, Temp_byte_Variable3) == 0x000012, "Member 'HeroTooltip_C_ExecuteUbergraph_HeroTooltip::Temp_byte_Variable3' has a wrong offset!");
static_assert(offsetof(HeroTooltip_C_ExecuteUbergraph_HeroTooltip, Temp_byte_Variable4) == 0x000013, "Member 'HeroTooltip_C_ExecuteUbergraph_HeroTooltip::Temp_byte_Variable4' has a wrong offset!");
static_assert(offsetof(HeroTooltip_C_ExecuteUbergraph_HeroTooltip, K2Node_Event_RankTier) == 0x000014, "Member 'HeroTooltip_C_ExecuteUbergraph_HeroTooltip::K2Node_Event_RankTier' has a wrong offset!");
static_assert(offsetof(HeroTooltip_C_ExecuteUbergraph_HeroTooltip, K2Node_Event_status) == 0x000015, "Member 'HeroTooltip_C_ExecuteUbergraph_HeroTooltip::K2Node_Event_status' has a wrong offset!");
static_assert(offsetof(HeroTooltip_C_ExecuteUbergraph_HeroTooltip, K2Node_Select_Default) == 0x000016, "Member 'HeroTooltip_C_ExecuteUbergraph_HeroTooltip::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(HeroTooltip_C_ExecuteUbergraph_HeroTooltip, Temp_byte_Variable5) == 0x000017, "Member 'HeroTooltip_C_ExecuteUbergraph_HeroTooltip::Temp_byte_Variable5' has a wrong offset!");
static_assert(offsetof(HeroTooltip_C_ExecuteUbergraph_HeroTooltip, K2Node_Select2_Default) == 0x000018, "Member 'HeroTooltip_C_ExecuteUbergraph_HeroTooltip::K2Node_Select2_Default' has a wrong offset!");

// Function HeroTooltip.HeroTooltip_C.OnHeroDataSet
// 0x0002 (0x0002 - 0x0000)
struct HeroTooltip_C_OnHeroDataSet final
{
public:
	EOrionHeroRankTier                            RankTier;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EOrionHeroTooltipStatus                       Status;                                            // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(HeroTooltip_C_OnHeroDataSet) == 0x000001, "Wrong alignment on HeroTooltip_C_OnHeroDataSet");
static_assert(sizeof(HeroTooltip_C_OnHeroDataSet) == 0x000002, "Wrong size on HeroTooltip_C_OnHeroDataSet");
static_assert(offsetof(HeroTooltip_C_OnHeroDataSet, RankTier) == 0x000000, "Member 'HeroTooltip_C_OnHeroDataSet::RankTier' has a wrong offset!");
static_assert(offsetof(HeroTooltip_C_OnHeroDataSet, Status) == 0x000001, "Member 'HeroTooltip_C_OnHeroDataSet::Status' has a wrong offset!");

}

