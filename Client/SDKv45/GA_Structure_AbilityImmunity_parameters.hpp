#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GA_Structure_AbilityImmunity

#include "Basic.hpp"

#include "GameplayAbilities_structs.hpp"


namespace SDK::Params
{

// Function GA_Structure_AbilityImmunity.GA_Structure_AbilityImmunity_C.ExecuteUbergraph_GA_Structure_AbilityImmunity
// 0x0088 (0x0088 - 0x0000)
struct GA_Structure_AbilityImmunity_C_ExecuteUbergraph_GA_Structure_AbilityImmunity final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAbilityTask_WaitGameplayEffectBlockedImmunity* CallFunc_WaitGameplayEffectBlockedByImmunity_ReturnValue; // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(const struct FGameplayEffectSpecHandle& BlockedSpec, const struct FActiveGameplayEffectHandle& ImmunityGameplayEffectHandle)> K2Node_CreateDelegate_OutputDelegate;              // 0x0010(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayEffectSpecHandle              K2Node_CustomEvent_BlockedSpec;                    // 0x0028(0x0018)()
	struct FActiveGameplayEffectHandle            K2Node_CustomEvent_ImmunityGameplayEffectHandle;   // 0x0040(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FActiveGameplayEffectHandle            Temp_struct_Variable;                              // 0x0048(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FGameplayEffectSpecHandle              Temp_struct_Variable2;                             // 0x0050(0x0018)()
	struct FGameplayEffectContextHandle           CallFunc_GetEffectContext_ReturnValue;             // 0x0068(0x0018)()
	struct FActiveGameplayEffectHandle            CallFunc_BP_ApplyGameplayEffectToOwner_ReturnValue; // 0x0080(0x0008)(NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_Structure_AbilityImmunity_C_ExecuteUbergraph_GA_Structure_AbilityImmunity) == 0x000008, "Wrong alignment on GA_Structure_AbilityImmunity_C_ExecuteUbergraph_GA_Structure_AbilityImmunity");
static_assert(sizeof(GA_Structure_AbilityImmunity_C_ExecuteUbergraph_GA_Structure_AbilityImmunity) == 0x000088, "Wrong size on GA_Structure_AbilityImmunity_C_ExecuteUbergraph_GA_Structure_AbilityImmunity");
static_assert(offsetof(GA_Structure_AbilityImmunity_C_ExecuteUbergraph_GA_Structure_AbilityImmunity, EntryPoint) == 0x000000, "Member 'GA_Structure_AbilityImmunity_C_ExecuteUbergraph_GA_Structure_AbilityImmunity::EntryPoint' has a wrong offset!");
static_assert(offsetof(GA_Structure_AbilityImmunity_C_ExecuteUbergraph_GA_Structure_AbilityImmunity, CallFunc_WaitGameplayEffectBlockedByImmunity_ReturnValue) == 0x000008, "Member 'GA_Structure_AbilityImmunity_C_ExecuteUbergraph_GA_Structure_AbilityImmunity::CallFunc_WaitGameplayEffectBlockedByImmunity_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Structure_AbilityImmunity_C_ExecuteUbergraph_GA_Structure_AbilityImmunity, K2Node_CreateDelegate_OutputDelegate) == 0x000010, "Member 'GA_Structure_AbilityImmunity_C_ExecuteUbergraph_GA_Structure_AbilityImmunity::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(GA_Structure_AbilityImmunity_C_ExecuteUbergraph_GA_Structure_AbilityImmunity, CallFunc_IsValid_ReturnValue) == 0x000020, "Member 'GA_Structure_AbilityImmunity_C_ExecuteUbergraph_GA_Structure_AbilityImmunity::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Structure_AbilityImmunity_C_ExecuteUbergraph_GA_Structure_AbilityImmunity, K2Node_CustomEvent_BlockedSpec) == 0x000028, "Member 'GA_Structure_AbilityImmunity_C_ExecuteUbergraph_GA_Structure_AbilityImmunity::K2Node_CustomEvent_BlockedSpec' has a wrong offset!");
static_assert(offsetof(GA_Structure_AbilityImmunity_C_ExecuteUbergraph_GA_Structure_AbilityImmunity, K2Node_CustomEvent_ImmunityGameplayEffectHandle) == 0x000040, "Member 'GA_Structure_AbilityImmunity_C_ExecuteUbergraph_GA_Structure_AbilityImmunity::K2Node_CustomEvent_ImmunityGameplayEffectHandle' has a wrong offset!");
static_assert(offsetof(GA_Structure_AbilityImmunity_C_ExecuteUbergraph_GA_Structure_AbilityImmunity, Temp_struct_Variable) == 0x000048, "Member 'GA_Structure_AbilityImmunity_C_ExecuteUbergraph_GA_Structure_AbilityImmunity::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(GA_Structure_AbilityImmunity_C_ExecuteUbergraph_GA_Structure_AbilityImmunity, Temp_struct_Variable2) == 0x000050, "Member 'GA_Structure_AbilityImmunity_C_ExecuteUbergraph_GA_Structure_AbilityImmunity::Temp_struct_Variable2' has a wrong offset!");
static_assert(offsetof(GA_Structure_AbilityImmunity_C_ExecuteUbergraph_GA_Structure_AbilityImmunity, CallFunc_GetEffectContext_ReturnValue) == 0x000068, "Member 'GA_Structure_AbilityImmunity_C_ExecuteUbergraph_GA_Structure_AbilityImmunity::CallFunc_GetEffectContext_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Structure_AbilityImmunity_C_ExecuteUbergraph_GA_Structure_AbilityImmunity, CallFunc_BP_ApplyGameplayEffectToOwner_ReturnValue) == 0x000080, "Member 'GA_Structure_AbilityImmunity_C_ExecuteUbergraph_GA_Structure_AbilityImmunity::CallFunc_BP_ApplyGameplayEffectToOwner_ReturnValue' has a wrong offset!");

// Function GA_Structure_AbilityImmunity.GA_Structure_AbilityImmunity_C.Blocked_DCCFFEBB4563123EDF225ABCA73E0D1A
// 0x0020 (0x0020 - 0x0000)
struct GA_Structure_AbilityImmunity_C_Blocked_DCCFFEBB4563123EDF225ABCA73E0D1A final
{
public:
	struct FGameplayEffectSpecHandle              BlockedSpec;                                       // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
	struct FActiveGameplayEffectHandle            ImmunityGameplayEffectHandle;                      // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_Structure_AbilityImmunity_C_Blocked_DCCFFEBB4563123EDF225ABCA73E0D1A) == 0x000008, "Wrong alignment on GA_Structure_AbilityImmunity_C_Blocked_DCCFFEBB4563123EDF225ABCA73E0D1A");
static_assert(sizeof(GA_Structure_AbilityImmunity_C_Blocked_DCCFFEBB4563123EDF225ABCA73E0D1A) == 0x000020, "Wrong size on GA_Structure_AbilityImmunity_C_Blocked_DCCFFEBB4563123EDF225ABCA73E0D1A");
static_assert(offsetof(GA_Structure_AbilityImmunity_C_Blocked_DCCFFEBB4563123EDF225ABCA73E0D1A, BlockedSpec) == 0x000000, "Member 'GA_Structure_AbilityImmunity_C_Blocked_DCCFFEBB4563123EDF225ABCA73E0D1A::BlockedSpec' has a wrong offset!");
static_assert(offsetof(GA_Structure_AbilityImmunity_C_Blocked_DCCFFEBB4563123EDF225ABCA73E0D1A, ImmunityGameplayEffectHandle) == 0x000018, "Member 'GA_Structure_AbilityImmunity_C_Blocked_DCCFFEBB4563123EDF225ABCA73E0D1A::ImmunityGameplayEffectHandle' has a wrong offset!");

}

